/**
* DevExpress Analytics (dist\js\dx-analytics-core.js)
* Version:  21.2.8-build-22150-1702
* Build date: May 30, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 185);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = ko;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = jQuery;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var Disposable = (function () {
    function Disposable() {
        this._disposables = [];
        this.isDisposing = false;
    }
    Disposable.prototype.disposeObservableArray = function (array) {
        if (array) {
            array().forEach(function (item) { item.dispose && item.dispose(); });
        }
    };
    Disposable.prototype.resetObservableArray = function (array) {
        if (array)
            array([]);
    };
    Disposable.prototype.disposeArray = function (array) {
        if (array) {
            array.forEach(function (item) { item.dispose && item.dispose(); });
            array.splice(0, array.length);
        }
    };
    Disposable.prototype.dispose = function () {
        if (!this.isDisposing) {
            this.isDisposing = true;
            (this._disposables || []).reverse().forEach(function (x) { return x && x.dispose && x.dispose(); });
            this._disposables = [];
        }
    };
    Disposable.prototype.removeProperties = function () {
        var _this = this;
        Object.keys(this).forEach(function (propertyName) {
            delete _this[propertyName];
        });
    };
    return Disposable;
}());
exports.Disposable = Disposable;
function deserializeArray(model, creator) {
    var result = Object.keys(model || {}).map(function (propertyName) { return creator(model[propertyName]); });
    return ko.observableArray(result);
}
exports.deserializeArray = deserializeArray;
function toStringWithDelimiter(values, delimiter) {
    return (values || []).map(function (value) {
        var str = value !== undefined && value !== null ? value.toString() : '00';
        if (str.length === 1) {
            str = '0' + str;
        }
        return str;
    }).join(delimiter);
}
function serializeDate(date) {
    var datePart = [date.getMonth() + 1, date.getDate(), date.getFullYear()];
    var timePart = toStringWithDelimiter([date.getHours(), date.getMinutes(), date.getSeconds()], ':');
    return timePart === '00:00:00' ? toStringWithDelimiter([datePart[2], datePart[0], datePart[1]], '-')
        : toStringWithDelimiter(datePart, '/') + ' ' + timePart;
}
exports.serializeDate = serializeDate;
function deserializeDate(dateTime) {
    var dateTimeParts = dateTime.split(' ');
    var dateArgs = dateTimeParts[0].split('-');
    var timeArgs = [0, 0, 0];
    if (dateTimeParts.length > 1) {
        dateArgs = dateTimeParts[0].split('/');
        dateArgs.splice(0, 0, dateArgs.splice(2, 1)[0]);
        timeArgs = dateTimeParts[1].split(':').map(function (x) { return parseInt(x); });
        if (timeArgs.length !== 3)
            return null;
    }
    if (dateArgs.length !== 3)
        return null;
    dateArgs = dateArgs.map(function (x) { return parseInt(x); });
    return new Date(dateArgs[0], dateArgs[1] - 1, dateArgs[2], timeArgs[0], timeArgs[1], timeArgs[2]);
}
exports.deserializeDate = deserializeDate;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(5);
var _localization_1 = __webpack_require__(8);
function addCultureInfo(json) {
    _utils_1.extend(_localization_1.messages, json.messages);
}
exports.addCultureInfo = addCultureInfo;
function getLocalization(text, id, _removeWinSymblols) {
    return _localization_1.getLocalization(text, id, _localization_1.removeWinSymbols);
}
exports.getLocalization = getLocalization;
function _stringEndsWith(string, searchString) {
    return string.indexOf(searchString, this.length - searchString.length) !== -1;
}
exports._stringEndsWith = _stringEndsWith;
function updateLocalization(object) {
    _utils_1.extend(_localization_1.custom_localization_values, object);
    var messages = {};
    Object.keys(object).forEach(function (name) {
        messages[name] = object[name];
    });
    addCultureInfo({
        messages: messages
    });
}
exports.updateLocalization = updateLocalization;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
function _defineProperty(legacyObject, realObject, propertyName, newPropertyName) {
    delete legacyObject[propertyName];
    newPropertyName = newPropertyName || propertyName;
    Object.defineProperty(legacyObject, propertyName, {
        get: function () { return realObject[newPropertyName]; },
        set: function (newVal) { realObject[newPropertyName] = newVal; },
        configurable: true
    });
}
exports._defineProperty = _defineProperty;
function _definePropertyByString(rootObject) {
    var objectPathes = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        objectPathes[_i - 1] = arguments[_i];
    }
    var getAndCreateObject = function (path, createNew) {
        if (createNew === void 0) { createNew = true; }
        var pathParts = path.split('.');
        var foundedObject = rootObject;
        for (var i = 0; i < pathParts.length - 1; i++) {
            if (!foundedObject[pathParts[i]] && createNew) {
                foundedObject[pathParts[i]] = {};
            }
            foundedObject = foundedObject[pathParts[i]];
        }
        return {
            object: foundedObject,
            propertyName: pathParts[pathParts.length - 1]
        };
    };
    var realObjectPath = objectPathes[objectPathes.length - 1];
    var realObject = getAndCreateObject(objectPathes[objectPathes.length - 1]);
    for (var i = 0; i < objectPathes.length - 1; i++) {
        (function (legacyObjectPath, legacyObject) {
            Object.defineProperty(legacyObject.object, legacyObject.propertyName, {
                get: function () {
                    console.warn('DevExpress.' + legacyObjectPath + ' is now deprecated and will be removed in future versions. Use DevExpress.' + realObjectPath + ' instead.');
                    return realObject.object[realObject.propertyName];
                },
                set: function (newVal) {
                    console.warn('DevExpress.' + legacyObjectPath + ' is now deprecated and will be removed in future versions. Use DevExpress.' + realObjectPath + ' instead.');
                    realObject.object[realObject.propertyName] = newVal;
                },
                configurable: true
            });
        })(objectPathes[i], getAndCreateObject(objectPathes[i]));
    }
}
exports._definePropertyByString = _definePropertyByString;
function addDisposeCallback(element, callback) {
    var disposeCallback = function () {
        ko.utils.domNodeDisposal.removeDisposeCallback(element, disposeCallback);
        callback && callback();
        disposeCallback = null;
        callback = null;
    };
    ko.utils.domNodeDisposal.addDisposeCallback(element, disposeCallback);
}
exports.addDisposeCallback = addDisposeCallback;
function createGlobalModuleVariableFunc(defaultVal) {
    var currentValue = defaultVal;
    return function (newVal) {
        if (newVal !== undefined)
            currentValue = newVal;
        return currentValue;
    };
}
exports.createGlobalModuleVariableFunc = createGlobalModuleVariableFunc;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
function knockoutArrayWrapper(items) {
    var onChange = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        onChange[_i - 1] = arguments[_i];
    }
    var array = ko.observableArray(items);
    var notifySubscribers = array.notifySubscribers;
    array.notifySubscribers = function (valueToNotify, event) {
        if (onChange) {
            for (var i = 0, len = onChange.length; i < len; i++) {
                onChange[i](valueToNotify, event);
            }
        }
        return notifySubscribers.call(array, valueToNotify, event);
    };
    return array;
}
exports.knockoutArrayWrapper = knockoutArrayWrapper;
function isWindow(obj) {
    return obj != null && obj === obj.window;
}
var class2type = {};
var hasOwn = class2type.hasOwnProperty;
['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Object', 'Error'].forEach(function (name) { return class2type['[object ' + name + ']'] = name.toLowerCase(); });
function type(obj) {
    if (obj == null) {
        return obj + '';
    }
    return typeof obj === 'object' || typeof obj === 'function' ?
        class2type[class2type.toString.call(obj)] || 'object' :
        typeof obj;
}
function isNumeric(obj) {
    return !Array.isArray(obj) && (obj - parseFloat(obj) + 1) >= 0;
}
function isPlainObject(obj) {
    if (type(obj) !== 'object' || obj.nodeType || isWindow(obj)) {
        return false;
    }
    return !(obj.constructor && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf'));
}
exports.isPlainObject = isPlainObject;
function isEmptyObject(obj) {
    if ((typeof obj) === 'string') {
        return false;
    }
    return obj !== null && typeof obj === 'object' && Object.keys(obj).length === 0;
}
exports.isEmptyObject = isEmptyObject;
function isFunction(obj) {
    return type(obj) === 'function';
}
function extend(target, object1) {
    var objectN = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        objectN[_i - 2] = arguments[_i];
    }
    var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;
    if (typeof target === 'boolean') {
        deep = target;
        target = arguments[i] || {};
        i++;
    }
    if (typeof target !== 'object' && !isFunction(target)) {
        target = {};
    }
    if (i === length) {
        target = this;
        i--;
    }
    for (; i < length; i++) {
        if ((options = arguments[i]) != null) {
            for (name in options) {
                src = target[name];
                copy = options[name];
                if (target === copy) {
                    continue;
                }
                if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                    if (copyIsArray) {
                        copyIsArray = false;
                        clone = src && Array.isArray(src) ? src : [];
                    }
                    else {
                        clone = src && isPlainObject(src) ? src : {};
                    }
                    target[name] = extend(deep, clone, copy);
                }
                else if (copy !== undefined) {
                    target[name] = copy;
                }
            }
        }
    }
    return target;
}
exports.extend = extend;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var _utils_1 = __webpack_require__(9);
function getEnumNames(enumType) {
    var result = [];
    Object.keys(enumType).forEach(function (enumValue) {
        if (isNaN(enumValue)) {
            result.push(enumValue);
        }
    });
    return result;
}
var MachineState = (function () {
    function MachineState(tokenName, alphabet, startTerm, endTerm) {
        this.tokenName = tokenName;
        this.alphabet = alphabet;
        this.startTerm = startTerm;
        this.endTerm = endTerm;
        this.tokenLength = 0;
        this.isActiveState = false;
        this.tokens = [];
    }
    MachineState.prototype._isSubline = function (pos, term) {
        var result = (pos + term.length - 1 < this.alphabet.length);
        for (var i = pos; i < (pos + term.length) && result; i++)
            result = this.alphabet[i] == term[i - pos];
        return result;
    };
    MachineState.prototype._getToken = function (pos) {
        var token = {
            type: this.tokenName, start: pos - this.tokenLength + 1, end: pos + this.endTerm.length
        };
        token.val = this.alphabet.substring(token.start, token.end);
        return token;
    };
    MachineState.prototype.processTransitionFunction = function (pos) {
        if (this.isActiveState) {
            this.tokenLength++;
        }
        if (this._isSubline(pos, this.startTerm) && !this.isActiveState) {
            this.isActiveState = true;
            this.tokenLength += this.startTerm.length;
            return this.startTerm.length - 1;
        }
        else if (this.isActiveState && this._isSubline(pos, this.endTerm)) {
            this.isActiveState = false;
            this.tokens.push(this._getToken(pos));
            this.tokenLength = 0;
            return this.endTerm.length - 1;
        }
        return 0;
    };
    return MachineState;
}());
exports.MachineState = MachineState;
var CriteriaOperatorStateMachine = (function () {
    function CriteriaOperatorStateMachine(stringCriteria) {
        this.stringCriteria = stringCriteria;
        this.machineStates = [];
        this.machineStates.push(new MachineState('field', stringCriteria, '[', ']'));
        this.machineStates.push(new MachineState('value', stringCriteria, "'", "'"));
        this.machineStates.push(new MachineState('comment', stringCriteria, '/*', '*/'));
        this._inputStringCriteria = stringCriteria;
    }
    CriteriaOperatorStateMachine.prototype._tokenize = function () {
        var _this = this;
        for (var i = 0; i < this.stringCriteria.length; i++) {
            var step = 0;
            this.machineStates.forEach(function (state) {
                if (step)
                    return;
                var anotherMachines = _this.machineStates.filter(function (a) { return a != state && a.isActiveState; });
                if (!anotherMachines.length)
                    step = state.processTransitionFunction(i);
            });
            i += step;
        }
        var resultTokens = [];
        this.machineStates.forEach(function (state) {
            resultTokens = resultTokens.concat(state.tokens);
            state.tokens = [];
        });
        return resultTokens;
    };
    CriteriaOperatorStateMachine.prototype._replaceTokenToAnotherToken = function (tokens, newTokenChar, tokenName) {
        var tempCriteria = this.stringCriteria;
        tokens = tokens.filter(function (a) { return a.type == tokenName; }).sort(function (a) { return a.start; }).reverse();
        tokens.forEach(function (token) {
            var lines = token.val.split('\n');
            var start = token.start;
            var end = token.end;
            lines.forEach(function (line) {
                if (line.length + start !== token.end) {
                    end = start + line.length;
                }
                else {
                    end = token.end;
                }
                tempCriteria = _utils_1.stringReplace(tempCriteria, start, end - start, newTokenChar);
                start = (line.length * newTokenChar.length) + 1;
            });
        });
        return tempCriteria;
    };
    CriteriaOperatorStateMachine.prototype.replaceCommentsToChar = function (char) {
        if (char === void 0) { char = ''; }
        this._inputStringCriteria = this._replaceTokenToAnotherToken(this._tokenize(), char, 'comment');
        return this;
    };
    CriteriaOperatorStateMachine.prototype.getCriteria = function () {
        return criteriaparser_1.parse(this._inputStringCriteria);
    };
    return CriteriaOperatorStateMachine;
}());
exports.CriteriaOperatorStateMachine = CriteriaOperatorStateMachine;
var CriteriaOperator = (function () {
    function CriteriaOperator() {
        var _this = this;
        this.type = 'Default';
        this.operands = null;
        this.changeValueType = function (type, location) {
            var result = new type();
            if (location.index !== null) {
                _this[location.name][location.index] = result;
            }
            else {
                _this[location.name] = result;
            }
            return result;
        };
        this.changeValue = function (operand, reverse, location) {
            var result = reverse ? new unary_1.UnaryOperator(unary_1.UnaryOperatorType.Minus, operand) : operand;
            if (location.index !== null) {
                _this[location.name][location.index] = result;
            }
            else {
                _this[location.name] = result;
            }
            return result;
        };
        this.assignLeftPart = function (criteriaOperator) { return void 0; };
        this.assignRightPart = function (criteriaOperator) { return void 0; };
        this.assignType = function (type) {
            _this.operatorType = type;
        };
        this.resetrightPart = function (value) { return void 0; };
    }
    CriteriaOperator.operators = function (enums) {
        var result = [].concat.apply([], enums.map(function (enumType) {
            return getEnumNames(enumType).map(function (enumName) {
                return { name: enumName, value: enumType[enumName], type: enumType };
            });
        }));
        return result;
    };
    CriteriaOperator.parse = function (stringCriteria, saveOriginalStringLength) {
        if (saveOriginalStringLength === void 0) { saveOriginalStringLength = false; }
        if (stringCriteria && stringCriteria !== '') {
            if (saveOriginalStringLength)
                return new CriteriaOperatorStateMachine(stringCriteria).replaceCommentsToChar(' ').getCriteria();
            return new CriteriaOperatorStateMachine(stringCriteria).replaceCommentsToChar().getCriteria();
        }
        return null;
    };
    CriteriaOperator.create = function (operatorType) {
        var operator = null;
        switch (operatorType.type) {
            case binary_1.BinaryOperatorType:
                operator = new binary_1.BinaryOperator(new property_1.OperandProperty(), new value_1.OperandValue(), operatorType.value);
                break;
            case group_1.GroupOperatorType:
                operator = new group_1.GroupOperator(operatorType.value, []);
                break;
            case function_1.FunctionOperatorType:
                operator = new function_1.FunctionOperator(operatorType.value, [new property_1.OperandProperty()]);
                break;
            case between_1.BetweenOperator:
                operator = new between_1.BetweenOperator(new property_1.OperandProperty(), new value_1.OperandValue(), new value_1.OperandValue());
                break;
            case in_1.InOperator:
                operator = new in_1.InOperator(new property_1.OperandProperty(), [new value_1.OperandValue()]);
                break;
            case unary_1.UnaryOperatorType:
                operator = new unary_1.UnaryOperator(operatorType.value, new property_1.OperandProperty());
                break;
            case aggregate_1.Aggregate:
                var result = new aggregate_1.AggregateOperand(new property_1.OperandProperty(), null, operatorType.value, new group_1.GroupOperator(group_1.GroupOperatorType.And, []));
                if (operatorType.value === aggregate_1.Aggregate.Exists) {
                    operator = result;
                }
                else {
                    if (operatorType.value !== aggregate_1.Aggregate.Count) {
                        result.aggregatedExpression = new property_1.OperandProperty();
                    }
                    operator = new binary_1.BinaryOperator(result, new value_1.OperandValue(), binary_1.BinaryOperatorType.Equal);
                }
                break;
            default:
                throw Error('Unsupported operator type');
        }
        if (operatorType.reverse) {
            return new unary_1.UnaryOperator(unary_1.UnaryOperatorType.Not, operator);
        }
        return operator;
    };
    CriteriaOperator.and = function (left, right) {
        return group_1.GroupOperator.combine(group_1.GroupOperatorType.Or, [left, right]);
    };
    CriteriaOperator.or = function (left, right) {
        return group_1.GroupOperator.combine(group_1.GroupOperatorType.Or, [left, right]);
    };
    CriteriaOperator.getNotValidRange = function (value, errorMessage) {
        var start = 0;
        var end = 0;
        var parts = errorMessage.split('\n');
        var errorText = parts[1];
        var errorLength = parts[2].length;
        if (errorText.indexOf('...') === 0) {
            errorText = errorText.split('...')[1];
        }
        var start = value.indexOf(errorText);
        var end = start + errorLength;
        return { start: start, end: end };
    };
    Object.defineProperty(CriteriaOperator.prototype, "displayType", {
        get: function () {
            return this.operatorType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CriteriaOperator.prototype, "enumType", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CriteriaOperator.prototype, "leftPart", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CriteriaOperator.prototype, "rightPart", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    CriteriaOperator.prototype.assignFrom = function (criteriaOperator, incorrectSpecificsForAggregate, needAssignRightPart) {
        if (incorrectSpecificsForAggregate === void 0) { incorrectSpecificsForAggregate = false; }
        if (needAssignRightPart === void 0) { needAssignRightPart = true; }
        var operator = criteriaOperator;
        if (criteriaOperator instanceof unary_1.UnaryOperator && !(criteriaOperator.leftPart instanceof property_1.OperandProperty)) {
            operator = criteriaOperator.leftPart;
        }
        if (incorrectSpecificsForAggregate) {
            this.assignLeftPart(operator.leftPart);
        }
        else {
            this.assignLeftPart(operator);
        }
        if (operator.rightPart) {
            needAssignRightPart && this.assignRightPart(operator);
        }
    };
    CriteriaOperator.prototype.children = function () {
        var operands = [];
        if (this.leftPart)
            operands.push.apply(operands, $.isArray(this.leftPart) ? this.leftPart : [this.leftPart]);
        if (this.rightPart)
            operands.push.apply(operands, $.isArray(this.rightPart) ? this.rightPart : [this.rightPart]);
        return operands;
    };
    CriteriaOperator.prototype.accept = function (visitor) { throw 'Not implemented'; };
    return CriteriaOperator;
}());
exports.CriteriaOperator = CriteriaOperator;
var binary_1 = __webpack_require__(23);
var property_1 = __webpack_require__(15);
var value_1 = __webpack_require__(10);
var group_1 = __webpack_require__(14);
var function_1 = __webpack_require__(16);
var between_1 = __webpack_require__(36);
var in_1 = __webpack_require__(35);
var unary_1 = __webpack_require__(12);
var aggregate_1 = __webpack_require__(11);
var criteriaparser_1 = __webpack_require__(86);


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = { default: "" };

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var localization = __webpack_require__(148);
var _utils_1 = __webpack_require__(5);
function loadMessages(_messages) {
    _utils_1.extend(exports.messages, _messages);
}
exports.loadMessages = loadMessages;
function _processLocalization(id, _removeWinSymbols) {
    if (_removeWinSymbols === void 0) { _removeWinSymbols = exports.removeWinSymbols; }
    var text = localize(id);
    if (text && _removeWinSymbols) {
        if (text.indexOf('&') !== -1 ||
            text.indexOf('<u>') !== -1 ||
            text.indexOf('</u>') !== -1) {
            var obj = {};
            obj[id] = text.replace('&', '').replace('<u>', '').replace('</u>', '');
            loadMessages(obj);
            return obj[id];
        }
    }
}
function _getLocalization(text) {
    return localize(text) || text;
}
function getLocalization(text, id, _removeWinSymbols) {
    if (id === void 0) { id = null; }
    if (_removeWinSymbols === void 0) { _removeWinSymbols = exports.removeWinSymbols; }
    var _localizedText = id && localize(id) || _getLocalization(text);
    _localizedText = id && _processLocalization(id, _removeWinSymbols) || _localizedText;
    if (isCustomizedWithUpdateLocalizationMethod(_localizedText)) {
        text = _localizedText;
    }
    if (!isCustomizedWithUpdateLocalizationMethod(text)) {
        return _localizedText;
    }
    return _getLocalization(text);
}
exports.getLocalization = getLocalization;
exports.removeWinSymbols = true;
exports.Globalize = exports.Globalize || window['Globalize'];
exports.messages = {};
exports.custom_localization_values = {};
function selectPlaceholder() {
    return getLocalization('Select...', 'AnalyticsCoreStringId.PropertyGrid_Editor_EmptyText');
}
exports.selectPlaceholder = selectPlaceholder;
function noDataText() {
    return getLocalization('No data to display', 'AnalyticsCoreStringId.DataPreview_Empty');
}
exports.noDataText = noDataText;
function searchPlaceholder() {
    return getLocalization('Enter text to search...', 'AnalyticsCoreStringId.QueryBuilder_SearchBox_EmptyText');
}
exports.searchPlaceholder = searchPlaceholder;
function resolveFromPromises(promises, createModel) {
    var deferred = $.Deferred();
    if (promises.length > 0) {
        $.when.apply($, promises).done(function () {
            var messages = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                messages[_i] = arguments[_i];
            }
            messages.forEach(function (x) { return loadMessages(x[0]); });
        }).always(function () { return deferred.resolve(createModel()); });
    }
    else {
        deferred.resolve(createModel());
    }
    return deferred;
}
exports.resolveFromPromises = resolveFromPromises;
function isCustomizedWithUpdateLocalizationMethod(text) {
    return !!exports.custom_localization_values[text];
}
exports.isCustomizedWithUpdateLocalizationMethod = isCustomizedWithUpdateLocalizationMethod;
function localize(val) {
    return exports.messages[val];
}
exports.localize = localize;
function formatDate(val) {
    return localization.formatDate(val, 'shortDate');
}
exports.formatDate = formatDate;
function parseDate(val, useDefault, format) {
    if (useDefault === void 0) { useDefault = true; }
    if (!useDefault)
        return format ? localization.parseDate(val, format) : localization.parseDate(val, undefined);
    if (val) {
        if (val instanceof Date)
            return val;
        return utils_1.deserializeDate(val);
    }
    return null;
}
exports.parseDate = parseDate;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var SearchMode;
(function (SearchMode) {
    SearchMode[SearchMode["contains"] = 0] = "contains";
    SearchMode[SearchMode["startWith"] = 1] = "startWith";
})(SearchMode = exports.SearchMode || (exports.SearchMode = {}));
function _getFileContent(content, readMode) {
    return readMode !== 'text' ? (content).replace(/(^data:[^,]+,)|(^data:)/, '') : content;
}
exports._getFileContent = _getFileContent;
function _uploadFile(filesHolder, deferred, options) {
    try {
        var files = filesHolder.files;
        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            if (options.type === 'img') {
                var imageType = /image.*/;
                if (!file.type.match(imageType)) {
                    continue;
                }
            }
            var fr = new FileReader();
            var format = file.name.split('.').pop();
            fr.onload = function () {
                try {
                    deferred.resolve({
                        format: format,
                        content: _getFileContent(fr.result, options.readMode)
                    });
                }
                catch (e) {
                    deferred.reject();
                }
            };
            options.readMode === 'text' || format === 'html' || format === 'htm' ? fr.readAsText(file) : fr.readAsDataURL(file);
        }
    }
    catch (e) {
        deferred.reject();
    }
}
var fileUploaderId = 'dxd-fileuploader-input';
function createFileUploaderElement() {
    var input = document.createElement('input');
    input.type = 'file';
    input.id = fileUploaderId;
    input.style.width = '0px';
    input.style.height = '0px';
    input.style.display = 'none';
    document.body.appendChild(input);
    return input;
}
exports.uploadFile = function (options) {
    var deferred = $.Deferred();
    var element = document.getElementById(fileUploaderId);
    if (!element) {
        element = createFileUploaderElement();
    }
    element.accept = options.accept;
    element.onchange = function () {
        _uploadFile(element, deferred, options);
        element.value = '';
    };
    element.click();
    return deferred.promise();
};
function setUploadFile(newFunc) {
    exports.uploadFile = newFunc;
}
exports.setUploadFile = setUploadFile;
function compareEditorInfo(editor1, editor2) {
    return !!editor1 && !!editor2 &&
        editor1.header === editor2.header
        && editor1.content === editor2.content
        && editor1.editorType === editor2.editorType;
}
exports.compareEditorInfo = compareEditorInfo;
function findMatchesInString(stringWhereSearch, searchPattern, options) {
    if (!options) {
        var searchExpr = escapeToRegExp(searchPattern);
        return !!stringWhereSearch && stringWhereSearch.match(new RegExp(searchExpr, 'gi'));
    }
    var searchExpr = !options.canUseRegex ? escapeToRegExp(searchPattern) : searchPattern;
    if (options.searchMode == SearchMode.startWith && !options.canUseRegex)
        searchExpr = '^' + searchExpr;
    var exprRule = '';
    if (!options.caseSensitive)
        exprRule = exprRule + 'i';
    if (options.globalMatch)
        exprRule = exprRule + 'g';
    return !!stringWhereSearch && stringWhereSearch.match(new RegExp(searchExpr, exprRule));
}
exports.findMatchesInString = findMatchesInString;
function escapeToRegExp(string) {
    return string.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}
exports.escapeToRegExp = escapeToRegExp;
function stringRemove(string, start, count) {
    count = count ? count : string.length - start;
    return string.slice(0, start) + string.slice(start + count, string.length);
}
exports.stringRemove = stringRemove;
function stringReplace(string, start, count, newChar) {
    if (newChar === void 0) { newChar = ''; }
    var temp = string;
    temp = stringRemove(temp, start, count);
    temp = stringInsert(temp, start, Array(count + 1).join(newChar));
    return temp;
}
exports.stringReplace = stringReplace;
function stringInsert(string, pos, subStr) {
    return string.substring(0, pos) + subStr + string.substring(pos);
}
exports.stringInsert = stringInsert;
function formatUnicorn(text) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    var str = text.toString();
    if (args.length) {
        var t = typeof args[0];
        var key;
        var argsFinal = ('string' === t || 'number' === t) ?
            Array.prototype.slice.call(args)
            : args[0];
        for (key in argsFinal) {
            str = str.replace(new RegExp('\\{' + key + '\\}', 'gi'), argsFinal[key]);
        }
    }
    return str;
}
exports.formatUnicorn = formatUnicorn;
var KeyboardEnum;
(function (KeyboardEnum) {
    KeyboardEnum["Plus"] = "+";
    KeyboardEnum["Minus"] = "-";
    KeyboardEnum["Equal"] = "=";
    KeyboardEnum["Tab"] = "Tab";
    KeyboardEnum["Delete"] = "Delete";
    KeyboardEnum["Enter"] = "Enter";
    KeyboardEnum["Esc"] = "Escape";
    KeyboardEnum["Space"] = " ";
    KeyboardEnum["End"] = "End";
    KeyboardEnum["Home"] = "Home";
    KeyboardEnum["PageUp"] = "PageUp";
    KeyboardEnum["PageDown"] = "PageDown";
    KeyboardEnum["ArrowLeft"] = "ArrowLeft";
    KeyboardEnum["ArrowUp"] = "ArrowUp";
    KeyboardEnum["ArrowRight"] = "ArrowRight";
    KeyboardEnum["ArrowDown"] = "ArrowDown";
})(KeyboardEnum = exports.KeyboardEnum || (exports.KeyboardEnum = {}));
var KeyboardCodesEnum;
(function (KeyboardCodesEnum) {
    KeyboardCodesEnum[KeyboardCodesEnum["Tab"] = 9] = "Tab";
    KeyboardCodesEnum[KeyboardCodesEnum["Enter"] = 13] = "Enter";
    KeyboardCodesEnum[KeyboardCodesEnum["Esc"] = 27] = "Esc";
    KeyboardCodesEnum[KeyboardCodesEnum["Space"] = 32] = "Space";
    KeyboardCodesEnum[KeyboardCodesEnum["End"] = 35] = "End";
    KeyboardCodesEnum[KeyboardCodesEnum["Home"] = 36] = "Home";
    KeyboardCodesEnum[KeyboardCodesEnum["Left"] = 37] = "Left";
    KeyboardCodesEnum[KeyboardCodesEnum["Up"] = 38] = "Up";
    KeyboardCodesEnum[KeyboardCodesEnum["Right"] = 39] = "Right";
    KeyboardCodesEnum[KeyboardCodesEnum["Down"] = 40] = "Down";
})(KeyboardCodesEnum = exports.KeyboardCodesEnum || (exports.KeyboardCodesEnum = {}));


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var _internal_1 = __webpack_require__(19);
var _localization_1 = __webpack_require__(8);
var OperandValue = (function (_super) {
    __extends(OperandValue, _super);
    function OperandValue(value) {
        var _this = _super.call(this) || this;
        _this.type = 'Value';
        var result = value !== null && value !== undefined ? value : '';
        var isGuid = _internal_1.validateGuid(value);
        if (value && value['length'] && ((value[0] === "'" && value[value.length - 1] === "'") || isGuid)) {
            _this.specifics = 'string';
            if (isGuid && value[0] === '{' && value[value.length - 1] === '}')
                _this.specifics = 'guid';
            result = _this._processStringValue(value);
        }
        else if (value && value['length'] && value[0] === '#' && value[value.length - 1] === '#') {
            result = value.slice(1, value.length - 1);
            result = _localization_1.parseDate(result);
            if (!result) {
                result = _localization_1.parseDate(value.slice(1, value.length - 1));
            }
        }
        else if (String(value).toLowerCase() === 'true' || String(value).toLowerCase() === 'false') {
            result = String(value).toLowerCase() === 'true' ? 'True' : 'False';
        }
        _this.value = result;
        return _this;
    }
    OperandValue.prototype._processStringValue = function (value) {
        var result = value.slice(1, value.length - 1);
        if (result.indexOf("''") !== -1)
            result = result.replace("''", "'");
        return result;
    };
    Object.defineProperty(OperandValue.prototype, "displayType", {
        get: function () {
            return this.value || '?';
        },
        enumerable: true,
        configurable: true
    });
    return OperandValue;
}(criteriaOperator_1.CriteriaOperator));
exports.OperandValue = OperandValue;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var group_1 = __webpack_require__(14);
var unary_1 = __webpack_require__(12);
var Aggregate;
(function (Aggregate) {
    Aggregate[Aggregate["Count"] = 0] = "Count";
    Aggregate[Aggregate["Exists"] = 1] = "Exists";
    Aggregate[Aggregate["Min"] = 2] = "Min";
    Aggregate[Aggregate["Max"] = 3] = "Max";
    Aggregate[Aggregate["Avg"] = 4] = "Avg";
    Aggregate[Aggregate["Sum"] = 5] = "Sum";
    Aggregate[Aggregate["Single"] = 6] = "Single";
})(Aggregate = exports.Aggregate || (exports.Aggregate = {}));
var AggregateOperand = (function (_super) {
    __extends(AggregateOperand, _super);
    function AggregateOperand(property, aggregatedExpression, aggregateType, condition) {
        var _this = _super.call(this) || this;
        _this.change = function (operationType, item) {
            var operator = null;
            if (operationType.type === group_1.GroupOperatorType) {
                operator = criteriaOperator_1.CriteriaOperator.create(operationType);
                if (operationType.type !== operator.enumType) {
                    operator.leftPart.assignFrom(item);
                }
                else {
                    operator.assignFrom(item);
                }
                _this.condition = operator;
            }
            return operator;
        };
        _this.assignLeftPart = function (criteriaOperator) {
            if (criteriaOperator.leftPart instanceof AggregateOperand) {
                _this.assignFrom(criteriaOperator.leftPart);
            }
            else {
                if (criteriaOperator_1.CriteriaOperator instanceof AggregateOperand) {
                    _this.property = criteriaOperator.property;
                    if (_this.aggregatedExpression && criteriaOperator.aggregatedExpression) {
                        _this.aggregatedExpression = criteriaOperator.aggregatedExpression;
                    }
                    _this.condition = criteriaOperator.property;
                }
                else {
                    _this.property = criteriaOperator.leftPart;
                }
            }
        };
        _this.type = 'Aggregate';
        _this.property = property;
        if (condition instanceof group_1.GroupOperator) {
            _this.condition = condition;
        }
        else {
            if (condition instanceof unary_1.UnaryOperator && condition.operatorType === unary_1.UnaryOperatorType.Not) {
                if (condition.operand instanceof group_1.GroupOperator) {
                    _this.condition = new unary_1.UnaryOperator(unary_1.UnaryOperatorType.Not, condition.operand);
                }
                else {
                    _this.condition = new unary_1.UnaryOperator(unary_1.UnaryOperatorType.Not, new group_1.GroupOperator(group_1.GroupOperatorType.And, condition.operand ? [condition.operand] : []));
                }
            }
            else {
                _this.condition = new group_1.GroupOperator(group_1.GroupOperatorType.And, condition ? [condition] : []);
            }
        }
        _this.operatorType = aggregateType;
        _this.aggregatedExpression = aggregatedExpression;
        return _this;
    }
    Object.defineProperty(AggregateOperand.prototype, "displayType", {
        get: function () {
            return Aggregate[this.operatorType];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AggregateOperand.prototype, "enumType", {
        get: function () {
            return Aggregate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AggregateOperand.prototype, "leftPart", {
        get: function () {
            return this.property;
        },
        enumerable: true,
        configurable: true
    });
    AggregateOperand.prototype.children = function () {
        var operands = [];
        this.condition && operands.push(this.condition);
        this.aggregatedExpression && operands.push(this.aggregatedExpression);
        return operands;
    };
    AggregateOperand.prototype.accept = function (visitor) {
        return visitor.visitAggregateOperand
            ? visitor.visitAggregateOperand(this)
            : new AggregateOperand(this.property && this.property.accept(visitor), this.aggregatedExpression && this.aggregatedExpression.accept(visitor), this.operatorType, this.condition && this.condition.accept(visitor));
    };
    return AggregateOperand;
}(criteriaOperator_1.CriteriaOperator));
exports.AggregateOperand = AggregateOperand;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var UnaryOperatorType;
(function (UnaryOperatorType) {
    UnaryOperatorType[UnaryOperatorType["Minus"] = 0] = "Minus";
    UnaryOperatorType[UnaryOperatorType["Plus"] = 1] = "Plus";
    UnaryOperatorType[UnaryOperatorType["BitwiseNot"] = 2] = "BitwiseNot";
    UnaryOperatorType[UnaryOperatorType["Not"] = 3] = "Not";
    UnaryOperatorType[UnaryOperatorType["IsNull"] = 4] = "IsNull";
})(UnaryOperatorType = exports.UnaryOperatorType || (exports.UnaryOperatorType = {}));
var UnaryOperator = (function (_super) {
    __extends(UnaryOperator, _super);
    function UnaryOperator(operatorType, operand) {
        var _this = _super.call(this) || this;
        _this.type = 'Unary';
        _this.operand = operand || new criteriaOperator_1.CriteriaOperator();
        _this.operatorType = operatorType;
        return _this;
    }
    Object.defineProperty(UnaryOperator.prototype, "leftPart", {
        get: function () {
            return this.operand;
        },
        enumerable: true,
        configurable: true
    });
    UnaryOperator.prototype.assignFrom = function (criteriaOperator) {
        if (this.operatorType === UnaryOperatorType.Not) {
            if (criteriaOperator instanceof UnaryOperator) {
                this.operand.assignFrom(criteriaOperator.operand);
            }
            else {
                this.operand.assignFrom(criteriaOperator);
            }
        }
        else {
            if (criteriaOperator instanceof UnaryOperator) {
                this.operand = criteriaOperator.operand.leftPart;
            }
            else {
                this.operand = criteriaOperator.leftPart || criteriaOperator;
            }
        }
    };
    Object.defineProperty(UnaryOperator.prototype, "displayType", {
        get: function () {
            return UnaryOperatorType[this.operatorType];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnaryOperator.prototype, "enumType", {
        get: function () {
            return UnaryOperatorType;
        },
        enumerable: true,
        configurable: true
    });
    UnaryOperator.prototype.accept = function (visitor) {
        return visitor.visitUnaryOperator
            ? visitor.visitUnaryOperator(this)
            : new UnaryOperator(this.operatorType, this.operand && this.operand.accept(visitor));
    };
    return UnaryOperator;
}(criteriaOperator_1.CriteriaOperator));
exports.UnaryOperator = UnaryOperator;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _svgTemplateEngine_1 = __webpack_require__(20);
function addTemplate(templateName, templateMarkup) {
    _svgTemplateEngine_1.SvgTemplatesEngine.addTemplate(templateName, templateMarkup);
}
exports.addTemplate = addTemplate;
function getTemplate(id) {
    var id = id[0] === '#' ? id.substr(1) : id;
    var item = document.querySelector('#' + id);
    return item && item.innerHTML || _svgTemplateEngine_1.SvgTemplatesEngine.templates[id];
}
exports.getTemplate = getTemplate;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var criteriaOperatorPreprocessor_1 = __webpack_require__(43);
var binary_1 = __webpack_require__(23);
var value_1 = __webpack_require__(10);
var aggregate_1 = __webpack_require__(11);
var GroupOperatorType;
(function (GroupOperatorType) {
    GroupOperatorType[GroupOperatorType["And"] = 0] = "And";
    GroupOperatorType[GroupOperatorType["Or"] = 1] = "Or";
})(GroupOperatorType = exports.GroupOperatorType || (exports.GroupOperatorType = {}));
var GroupOperator = (function (_super) {
    __extends(GroupOperator, _super);
    function GroupOperator(operation, operands) {
        var _this = _super.call(this) || this;
        _this.create = function (isGroup, property, specifics) {
            var operator = new binary_1.BinaryOperator(property, new value_1.OperandValue(''), binary_1.BinaryOperatorType.Equal);
            if (isGroup) {
                operator = new GroupOperator(GroupOperatorType.And, []);
            }
            else if (specifics && specifics === 'list') {
                operator = new aggregate_1.AggregateOperand(property, null, aggregate_1.Aggregate.Exists, new GroupOperator(GroupOperatorType.And, []));
            }
            _this.operands.push(operator);
            return _this.operands[_this.operands.indexOf(operator)];
        };
        _this.change = function (operationType, item, incorrectSpecificsForAggregate) {
            if (incorrectSpecificsForAggregate === void 0) { incorrectSpecificsForAggregate = false; }
            var position = _this.operands.indexOf(item);
            if (position !== -1) {
                var operator = criteriaOperator_1.CriteriaOperator.create(operationType);
                if (operationType.type !== operator.enumType) {
                    operator.leftPart.assignFrom(item, incorrectSpecificsForAggregate, !operationType.emptyRightPart);
                }
                else {
                    operator.assignFrom(item, incorrectSpecificsForAggregate, !operationType.emptyRightPart);
                }
                _this.operands[position] = operator;
            }
            else {
                throw Error('dont have this element in operands collection');
            }
            item = null;
            return _this.operands[position];
        };
        _this.remove = function (operator) {
            _this.operands.splice(_this.operands.indexOf(operator), 1);
        };
        _this.assignLeftPart = function (operator) {
            _this.operands = operator.operands;
        };
        _this.operands = [];
        _this.type = 'Group';
        _this.operatorType = operation;
        operands = operands || [new criteriaOperator_1.CriteriaOperator(), new criteriaOperator_1.CriteriaOperator()];
        operands.forEach(function (operand) { return _this.operands.push(operand); });
        return _this;
    }
    GroupOperator.combine = function (operation, operands) {
        var combinedOperands = [];
        (operands || []).forEach(function (operand) {
            if (operand instanceof GroupOperator && operand.operatorType === operation) {
                combinedOperands.push.apply(combinedOperands, operand.operands);
            }
            else {
                combinedOperands.push(operand);
            }
        });
        if (combinedOperands.length === 1) {
            return combinedOperands[0];
        }
        return criteriaOperatorPreprocessor_1.criteriaCreator.process('group', { operands: combinedOperands, operation: operation });
    };
    GroupOperator.prototype.children = function () {
        return this.operands;
    };
    Object.defineProperty(GroupOperator.prototype, "displayType", {
        get: function () {
            return GroupOperatorType[this.operatorType];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GroupOperator.prototype, "enumType", {
        get: function () {
            return GroupOperatorType;
        },
        enumerable: true,
        configurable: true
    });
    GroupOperator.prototype.accept = function (visitor) {
        return visitor.visitGroupOperator
            ? visitor.visitGroupOperator(this)
            : new GroupOperator(this.operatorType, this.operands && this.operands.map(function (op) { return op.accept(visitor); }));
    };
    return GroupOperator;
}(criteriaOperator_1.CriteriaOperator));
exports.GroupOperator = GroupOperator;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var OperandProperty = (function (_super) {
    __extends(OperandProperty, _super);
    function OperandProperty(propertyName, startColumn, startLine, originalPropertyLength, circumflex) {
        if (propertyName === void 0) { propertyName = ''; }
        if (startColumn === void 0) { startColumn = -1; }
        if (startLine === void 0) { startLine = -1; }
        if (originalPropertyLength === void 0) { originalPropertyLength = 0; }
        if (circumflex === void 0) { circumflex = false; }
        var _this = _super.call(this) || this;
        _this.type = 'Property';
        _this.propertyName = propertyName;
        _this.originalPropertyLength = originalPropertyLength;
        _this.startPosition = { column: startColumn, line: startLine };
        _this.circumflex = circumflex;
        return _this;
    }
    Object.defineProperty(OperandProperty.prototype, "displayType", {
        get: function () {
            return '[' + this.propertyName + ']';
        },
        enumerable: true,
        configurable: true
    });
    OperandProperty.prototype.accept = function (visitor) {
        return visitor.visitOperandProperty
            ? visitor.visitOperandProperty(this)
            : new OperandProperty(this.propertyName);
    };
    return OperandProperty;
}(criteriaOperator_1.CriteriaOperator));
exports.OperandProperty = OperandProperty;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var utils_1 = __webpack_require__(28);
var value_1 = __webpack_require__(10);
var FunctionOperatorType;
(function (FunctionOperatorType) {
    FunctionOperatorType[FunctionOperatorType["None"] = 0] = "None";
    FunctionOperatorType[FunctionOperatorType["Custom"] = 1] = "Custom";
    FunctionOperatorType[FunctionOperatorType["CustomNonDeterministic"] = 2] = "CustomNonDeterministic";
    FunctionOperatorType[FunctionOperatorType["Iif"] = 3] = "Iif";
    FunctionOperatorType[FunctionOperatorType["IsNull"] = 4] = "IsNull";
    FunctionOperatorType[FunctionOperatorType["IsNullOrEmpty"] = 5] = "IsNullOrEmpty";
    FunctionOperatorType[FunctionOperatorType["Trim"] = 6] = "Trim";
    FunctionOperatorType[FunctionOperatorType["Len"] = 7] = "Len";
    FunctionOperatorType[FunctionOperatorType["Substring"] = 8] = "Substring";
    FunctionOperatorType[FunctionOperatorType["Upper"] = 9] = "Upper";
    FunctionOperatorType[FunctionOperatorType["Lower"] = 10] = "Lower";
    FunctionOperatorType[FunctionOperatorType["Concat"] = 11] = "Concat";
    FunctionOperatorType[FunctionOperatorType["Ascii"] = 12] = "Ascii";
    FunctionOperatorType[FunctionOperatorType["Char"] = 13] = "Char";
    FunctionOperatorType[FunctionOperatorType["ToStr"] = 14] = "ToStr";
    FunctionOperatorType[FunctionOperatorType["Replace"] = 15] = "Replace";
    FunctionOperatorType[FunctionOperatorType["Reverse"] = 16] = "Reverse";
    FunctionOperatorType[FunctionOperatorType["Insert"] = 17] = "Insert";
    FunctionOperatorType[FunctionOperatorType["CharIndex"] = 18] = "CharIndex";
    FunctionOperatorType[FunctionOperatorType["Remove"] = 19] = "Remove";
    FunctionOperatorType[FunctionOperatorType["Abs"] = 20] = "Abs";
    FunctionOperatorType[FunctionOperatorType["Sqr"] = 21] = "Sqr";
    FunctionOperatorType[FunctionOperatorType["Cos"] = 22] = "Cos";
    FunctionOperatorType[FunctionOperatorType["Sin"] = 23] = "Sin";
    FunctionOperatorType[FunctionOperatorType["Atn"] = 24] = "Atn";
    FunctionOperatorType[FunctionOperatorType["Exp"] = 25] = "Exp";
    FunctionOperatorType[FunctionOperatorType["Log"] = 26] = "Log";
    FunctionOperatorType[FunctionOperatorType["Rnd"] = 27] = "Rnd";
    FunctionOperatorType[FunctionOperatorType["Tan"] = 28] = "Tan";
    FunctionOperatorType[FunctionOperatorType["Power"] = 29] = "Power";
    FunctionOperatorType[FunctionOperatorType["Sign"] = 30] = "Sign";
    FunctionOperatorType[FunctionOperatorType["Round"] = 31] = "Round";
    FunctionOperatorType[FunctionOperatorType["Ceiling"] = 32] = "Ceiling";
    FunctionOperatorType[FunctionOperatorType["Floor"] = 33] = "Floor";
    FunctionOperatorType[FunctionOperatorType["Max"] = 34] = "Max";
    FunctionOperatorType[FunctionOperatorType["Min"] = 35] = "Min";
    FunctionOperatorType[FunctionOperatorType["Acos"] = 36] = "Acos";
    FunctionOperatorType[FunctionOperatorType["Asin"] = 37] = "Asin";
    FunctionOperatorType[FunctionOperatorType["Atn2"] = 38] = "Atn2";
    FunctionOperatorType[FunctionOperatorType["BigMul"] = 39] = "BigMul";
    FunctionOperatorType[FunctionOperatorType["Cosh"] = 40] = "Cosh";
    FunctionOperatorType[FunctionOperatorType["Log10"] = 41] = "Log10";
    FunctionOperatorType[FunctionOperatorType["Sinh"] = 42] = "Sinh";
    FunctionOperatorType[FunctionOperatorType["Tanh"] = 43] = "Tanh";
    FunctionOperatorType[FunctionOperatorType["PadLeft"] = 44] = "PadLeft";
    FunctionOperatorType[FunctionOperatorType["PadRight"] = 45] = "PadRight";
    FunctionOperatorType[FunctionOperatorType["StartsWith"] = 46] = "StartsWith";
    FunctionOperatorType[FunctionOperatorType["EndsWith"] = 47] = "EndsWith";
    FunctionOperatorType[FunctionOperatorType["Contains"] = 48] = "Contains";
    FunctionOperatorType[FunctionOperatorType["ToInt"] = 49] = "ToInt";
    FunctionOperatorType[FunctionOperatorType["ToLong"] = 50] = "ToLong";
    FunctionOperatorType[FunctionOperatorType["ToFloat"] = 51] = "ToFloat";
    FunctionOperatorType[FunctionOperatorType["ToDouble"] = 52] = "ToDouble";
    FunctionOperatorType[FunctionOperatorType["ToDecimal"] = 53] = "ToDecimal";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeThisYear"] = 54] = "LocalDateTimeThisYear";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeThisMonth"] = 55] = "LocalDateTimeThisMonth";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeLastWeek"] = 56] = "LocalDateTimeLastWeek";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeThisWeek"] = 57] = "LocalDateTimeThisWeek";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeYesterday"] = 58] = "LocalDateTimeYesterday";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeToday"] = 59] = "LocalDateTimeToday";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeNow"] = 60] = "LocalDateTimeNow";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeTomorrow"] = 61] = "LocalDateTimeTomorrow";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeDayAfterTomorrow"] = 62] = "LocalDateTimeDayAfterTomorrow";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeNextWeek"] = 63] = "LocalDateTimeNextWeek";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeTwoWeeksAway"] = 64] = "LocalDateTimeTwoWeeksAway";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeNextMonth"] = 65] = "LocalDateTimeNextMonth";
    FunctionOperatorType[FunctionOperatorType["LocalDateTimeNextYear"] = 66] = "LocalDateTimeNextYear";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalBeyondThisYear"] = 67] = "IsOutlookIntervalBeyondThisYear";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalLaterThisYear"] = 68] = "IsOutlookIntervalLaterThisYear";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalLaterThisMonth"] = 69] = "IsOutlookIntervalLaterThisMonth";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalNextWeek"] = 70] = "IsOutlookIntervalNextWeek";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalLaterThisWeek"] = 71] = "IsOutlookIntervalLaterThisWeek";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalTomorrow"] = 72] = "IsOutlookIntervalTomorrow";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalToday"] = 73] = "IsOutlookIntervalToday";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalYesterday"] = 74] = "IsOutlookIntervalYesterday";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalEarlierThisWeek"] = 75] = "IsOutlookIntervalEarlierThisWeek";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalLastWeek"] = 76] = "IsOutlookIntervalLastWeek";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalEarlierThisMonth"] = 77] = "IsOutlookIntervalEarlierThisMonth";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalEarlierThisYear"] = 78] = "IsOutlookIntervalEarlierThisYear";
    FunctionOperatorType[FunctionOperatorType["IsOutlookIntervalPriorThisYear"] = 79] = "IsOutlookIntervalPriorThisYear";
    FunctionOperatorType[FunctionOperatorType["IsLastMonth"] = 80] = "IsLastMonth";
    FunctionOperatorType[FunctionOperatorType["IsLastYear"] = 81] = "IsLastYear";
    FunctionOperatorType[FunctionOperatorType["IsNextMonth"] = 82] = "IsNextMonth";
    FunctionOperatorType[FunctionOperatorType["IsNextYear"] = 83] = "IsNextYear";
    FunctionOperatorType[FunctionOperatorType["IsThisWeek"] = 84] = "IsThisWeek";
    FunctionOperatorType[FunctionOperatorType["IsThisMonth"] = 85] = "IsThisMonth";
    FunctionOperatorType[FunctionOperatorType["IsThisYear"] = 86] = "IsThisYear";
    FunctionOperatorType[FunctionOperatorType["IsJanuary"] = 87] = "IsJanuary";
    FunctionOperatorType[FunctionOperatorType["IsFebruary"] = 88] = "IsFebruary";
    FunctionOperatorType[FunctionOperatorType["IsMarch"] = 89] = "IsMarch";
    FunctionOperatorType[FunctionOperatorType["IsApril"] = 90] = "IsApril";
    FunctionOperatorType[FunctionOperatorType["IsMay"] = 91] = "IsMay";
    FunctionOperatorType[FunctionOperatorType["IsJune"] = 92] = "IsJune";
    FunctionOperatorType[FunctionOperatorType["IsJuly"] = 93] = "IsJuly";
    FunctionOperatorType[FunctionOperatorType["IsAugust"] = 94] = "IsAugust";
    FunctionOperatorType[FunctionOperatorType["IsSeptember"] = 95] = "IsSeptember";
    FunctionOperatorType[FunctionOperatorType["IsOctober"] = 96] = "IsOctober";
    FunctionOperatorType[FunctionOperatorType["IsNovember"] = 97] = "IsNovember";
    FunctionOperatorType[FunctionOperatorType["IsDecember"] = 98] = "IsDecember";
    FunctionOperatorType[FunctionOperatorType["IsSameDay"] = 99] = "IsSameDay";
    FunctionOperatorType[FunctionOperatorType["IsYearToDate"] = 100] = "IsYearToDate";
    FunctionOperatorType[FunctionOperatorType["DateDiffTick"] = 101] = "DateDiffTick";
    FunctionOperatorType[FunctionOperatorType["DateDiffSecond"] = 102] = "DateDiffSecond";
    FunctionOperatorType[FunctionOperatorType["DateDiffMilliSecond"] = 103] = "DateDiffMilliSecond";
    FunctionOperatorType[FunctionOperatorType["DateDiffMinute"] = 104] = "DateDiffMinute";
    FunctionOperatorType[FunctionOperatorType["DateDiffHour"] = 105] = "DateDiffHour";
    FunctionOperatorType[FunctionOperatorType["DateDiffDay"] = 106] = "DateDiffDay";
    FunctionOperatorType[FunctionOperatorType["DateDiffMonth"] = 107] = "DateDiffMonth";
    FunctionOperatorType[FunctionOperatorType["DateDiffYear"] = 108] = "DateDiffYear";
    FunctionOperatorType[FunctionOperatorType["GetDate"] = 109] = "GetDate";
    FunctionOperatorType[FunctionOperatorType["GetMilliSecond"] = 110] = "GetMilliSecond";
    FunctionOperatorType[FunctionOperatorType["GetSecond"] = 111] = "GetSecond";
    FunctionOperatorType[FunctionOperatorType["GetMinute"] = 112] = "GetMinute";
    FunctionOperatorType[FunctionOperatorType["GetHour"] = 113] = "GetHour";
    FunctionOperatorType[FunctionOperatorType["GetDay"] = 114] = "GetDay";
    FunctionOperatorType[FunctionOperatorType["GetMonth"] = 115] = "GetMonth";
    FunctionOperatorType[FunctionOperatorType["GetYear"] = 116] = "GetYear";
    FunctionOperatorType[FunctionOperatorType["GetDayOfWeek"] = 117] = "GetDayOfWeek";
    FunctionOperatorType[FunctionOperatorType["GetDayOfYear"] = 118] = "GetDayOfYear";
    FunctionOperatorType[FunctionOperatorType["GetTimeOfDay"] = 119] = "GetTimeOfDay";
    FunctionOperatorType[FunctionOperatorType["Now"] = 120] = "Now";
    FunctionOperatorType[FunctionOperatorType["UtcNow"] = 121] = "UtcNow";
    FunctionOperatorType[FunctionOperatorType["Today"] = 122] = "Today";
    FunctionOperatorType[FunctionOperatorType["AddTimeSpan"] = 123] = "AddTimeSpan";
    FunctionOperatorType[FunctionOperatorType["AddTicks"] = 124] = "AddTicks";
    FunctionOperatorType[FunctionOperatorType["AddMilliSeconds"] = 125] = "AddMilliSeconds";
    FunctionOperatorType[FunctionOperatorType["AddSeconds"] = 126] = "AddSeconds";
    FunctionOperatorType[FunctionOperatorType["AddMinutes"] = 127] = "AddMinutes";
    FunctionOperatorType[FunctionOperatorType["AddHours"] = 128] = "AddHours";
    FunctionOperatorType[FunctionOperatorType["AddDays"] = 129] = "AddDays";
    FunctionOperatorType[FunctionOperatorType["AddMonths"] = 130] = "AddMonths";
    FunctionOperatorType[FunctionOperatorType["AddYears"] = 131] = "AddYears";
    FunctionOperatorType[FunctionOperatorType["OrderDescToken"] = 132] = "OrderDescToken";
})(FunctionOperatorType = exports.FunctionOperatorType || (exports.FunctionOperatorType = {}));
var FunctionOperator = (function (_super) {
    __extends(FunctionOperator, _super);
    function FunctionOperator(operatorType, operands) {
        var _this = _super.call(this) || this;
        _this.toString = function (reverse) {
            var result = (utils_1.operatorTokens[_this.displayType] || _this.displayType) + '(' + _this.operands.map(function (operand) {
                return operand.toString();
            }).join(', ') + ')';
            return reverse ? 'Not ' + result : result;
        };
        _this.assignLeftPart = function (criteriaOperator) {
            _this.operands = [criteriaOperator.leftPart];
        };
        _this.assignRightPart = function (criteriaOperator) {
            if (criteriaOperator.rightPart.length !== null && criteriaOperator.rightPart.length !== undefined) {
                if (criteriaOperator.rightPart.length) {
                    _this.operands.push(criteriaOperator.rightPart[0]);
                }
                else {
                    _this.operands.push(new value_1.OperandValue());
                }
            }
            else {
                _this.operands.push(criteriaOperator.rightPart);
            }
        };
        _this.operands = [];
        _this.type = 'Function';
        _this.operatorType = operatorType;
        operands = operands || [new criteriaOperator_1.CriteriaOperator()];
        operands.forEach(function (operand) { return _this.operands.push(operand); });
        return _this;
    }
    Object.defineProperty(FunctionOperator.prototype, "leftPart", {
        get: function () {
            return this.operands[0];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionOperator.prototype, "rightPart", {
        get: function () {
            return this.operands.filter(function (_, index) { return index !== 0; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionOperator.prototype, "displayType", {
        get: function () {
            return FunctionOperatorType[this.operatorType] || this.operatorType.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionOperator.prototype, "enumType", {
        get: function () {
            return FunctionOperatorType;
        },
        enumerable: true,
        configurable: true
    });
    FunctionOperator.prototype.accept = function (visitor) {
        return visitor.visitFunctionOperator
            ? visitor.visitFunctionOperator(this)
            : new FunctionOperator(this.operatorType, this.operands && this.operands.map(function (op) { return op.accept(visitor); }));
    };
    return FunctionOperator;
}(criteriaOperator_1.CriteriaOperator));
exports.FunctionOperator = FunctionOperator;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(5);
var EditorTemplates = (function () {
    function EditorTemplates(_useDeferredRegistration) {
        if (_useDeferredRegistration === void 0) { _useDeferredRegistration = true; }
        this._useDeferredRegistration = _useDeferredRegistration;
        this._editorTemplates = {};
    }
    EditorTemplates.prototype.register = function (name, editorInfo) {
        if (!!this._editorTemplates[name] && !this._editorTemplates[name]._deferred) {
            throw Error("Editor with name " + name + " is already exists");
        }
        else if (!this._editorTemplates[name]) {
            this._editorTemplates[name] = editorInfo;
        }
        else {
            delete this._editorTemplates[name]._deferred;
            _utils_1.extend(this._editorTemplates[name], editorInfo);
        }
    };
    EditorTemplates.prototype.unregister = function (name) {
        delete this._editorTemplates[name];
    };
    EditorTemplates.prototype.registerEditors = function (editors) {
        for (var name in editors)
            this.register(name, editors[name]);
    };
    EditorTemplates.prototype.getEditor = function (name) {
        if (!this._editorTemplates[name] && this._useDeferredRegistration) {
            this._editorTemplates[name] = { _deferred: true };
        }
        return this._editorTemplates[name];
    };
    return EditorTemplates;
}());
exports.EditorTemplates = EditorTemplates;
exports.editorTemplates = new EditorTemplates();


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var property_1 = __webpack_require__(15);
var localization_utils_1 = __webpack_require__(3);
var function_1 = __webpack_require__(16);
var CriteriaOperatorSurface = (function (_super) {
    __extends(CriteriaOperatorSurface, _super);
    function CriteriaOperatorSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this) || this;
        _this.isUpdated = ko.observable(false);
        _this.canRemove = true;
        _this.operatorType = ko.observable(null);
        _this.templateName = 'dx-filtereditor-common';
        _this.isSelected = ko.observable(false);
        _this.operatorClass = 'criteria-operator-item-operator dxd-filter-editor-operator-back-color dxd-filter-editor-text-color';
        _this.popupService = parent.popupService || { visible: ko.observable(false) };
        _this.model = operator;
        _this.helper = parent.helper;
        _this.fieldListProvider = fieldListProvider;
        _this.path = path;
        _this.parent = parent;
        _this.operatorType(operator.operatorType);
        _this._disposables.push(_this.operatorType.subscribe(function (newVal) {
            _this.model.assignType(newVal);
        }));
        return _this;
    }
    CriteriaOperatorSurface.prototype._createLeftPartProperty = function (value) {
        var _this = this;
        if (value instanceof property_1.OperandProperty) {
            var surface = this.createChildSurface(value);
        }
        else {
            var surface = this.createChildSurface(value);
            var specifics = Object.keys(this.helper.filterEditorOperators).reduce(function (key, value) {
                if (value !== '_common' && key === 'integer'
                    && !!_this.helper._getFilterEditorOperator(_this.model, _this.helper.filterEditorOperators[value], _this.reverse)) {
                    key = value;
                }
                return key;
            }, 'integer');
            surface.specifics = surface.specifics || ko.observable(specifics);
        }
        surface['canChange'] = false;
        surface.canRemove = false;
        if (surface instanceof aggregateOperandSurface_1.AggregateOperandSurface) {
            this.specifics = ko.computed(function () {
                return surface['aggregatedExpression']() && surface['aggregatedExpression']().specifics() || 'integer';
            });
            this.dataType = ko.computed(function () {
                return surface['aggregatedExpression']() && surface['aggregatedExpression']().dataType() || 'integer';
            });
            this._disposables.push(this.specifics);
            this._disposables.push(this.dataType);
        }
        else {
            this.specifics = surface.specifics;
            this.dataType = surface.dataType;
        }
        this.isUpdated = surface.isUpdated;
        return surface;
    };
    CriteriaOperatorSurface.prototype.createChildSurface = function (item, path, actions) {
        return new this.helper.mapper[item.type](item, this, this.fieldListProvider, path || this.path);
    };
    CriteriaOperatorSurface.prototype.getDisplayType = function () {
        var type = this.operatorType && this.operatorType() || '';
        var item = this.helper._getFilterEditorOperator(this.model, this.items, this.reverse);
        return item && item.name && (item.displayText || localization_utils_1.getLocalization(item.name, item.localizationId)) || this.model.displayType || type;
    };
    Object.defineProperty(CriteriaOperatorSurface.prototype, "items", {
        get: function () {
            return this.helper.filterEditorOperators[this.specifics()] || this.helper.filterEditorOperators._common;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CriteriaOperatorSurface.prototype, "displayType", {
        get: function () {
            return this.getDisplayType();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CriteriaOperatorSurface.prototype, "leftPart", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CriteriaOperatorSurface.prototype, "rightPart", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CriteriaOperatorSurface.prototype, "css", {
        get: function () {
            return this.operatorClass + (this.isSelected() ? ' selected' : '');
        },
        enumerable: true,
        configurable: true
    });
    CriteriaOperatorSurface.prototype.change = function (type, surface) {
        if (!surface && type && this.model.enumType === type.type && this.reverse === type.reverse && type.type !== function_1.FunctionOperatorType) {
            this.operatorType(type.value);
        }
        else {
            this.parent.change(type, this);
        }
        this.helper.onChange();
    };
    CriteriaOperatorSurface.prototype.remove = function (surface) {
        this.parent.remove(this);
        this.helper.onChange();
    };
    return CriteriaOperatorSurface;
}(utils_1.Disposable));
exports.CriteriaOperatorSurface = CriteriaOperatorSurface;
var aggregateOperandSurface_1 = __webpack_require__(56);


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _internal_1 = __webpack_require__(4);
var localization_utils_1 = __webpack_require__(3);
exports.propertiesGridEditorsPaddingLeft = _internal_1.createGlobalModuleVariableFunc(19);
exports.defaultFontSerialization = _internal_1.createGlobalModuleVariableFunc('Times New Roman, 9pt');
function RegexGuid(guid) {
    return (/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(guid)
        || /^\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\}$/.test(guid)
        || /^\([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\)$/.test(guid)
        || /^[0-9a-fA-F]{32}$/.test(guid));
}
function validateGuid(guid) {
    return guid && RegexGuid(guid);
}
exports.validateGuid = validateGuid;
function validateNullableGuid(guid) {
    return !guid || RegexGuid(guid);
}
exports.validateNullableGuid = validateNullableGuid;
var guidValidationMessage = function () { return localization_utils_1.getLocalization('Guid is required and should have a valid format.', 'AnalyticsCoreStringId.GuidIsRequired_Error'); };
exports.guidValidationRules = [{
        type: 'custom',
        validationCallback: function (options) { return validateNullableGuid(options.value); },
        get message() {
            return guidValidationMessage();
        }
    }];
exports.guidRequiredValidationRules = [{
        type: 'required',
        get message() {
            return guidValidationMessage();
        }
    }];
var requiredValidationRule = {
    type: 'required',
    get message() {
        return localization_utils_1.getLocalization('The value cannot be empty', 'AnalyticsCoreStringId.ParametersPanel_DateTimeValueValidationError');
    }
};
exports.requiredValidationRules = [requiredValidationRule];


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _extendedSvgTemplates_1 = __webpack_require__(91);
var SvgTemplateSource = (function () {
    function SvgTemplateSource(template, _data, _templates) {
        this._data = _data;
        this._templates = _templates;
        this.templateName = template;
    }
    SvgTemplateSource.prototype.data = function (key, value) {
        this._data[this.templateName] = this._data[this.templateName] || {};
        if (arguments.length === 1) {
            return this._data[this.templateName][key];
        }
        this._data[this.templateName][key] = value;
    };
    SvgTemplateSource.prototype.text = function (value) {
        if (arguments.length === 0) {
            var template = this._templates[this.templateName];
            if (!template)
                throw new Error('Cannot find template with ID ' + this.templateName);
            return template;
        }
        this._templates[this.templateName] = value;
    };
    return SvgTemplateSource;
}());
var SvgTemplatesEngine = (function () {
    function SvgTemplatesEngine() {
        var _this = this;
        this._hasTemplate = function (name, findEverywhere) {
            return findEverywhere && !!document.getElementById(name) || _this._templates.hasOwnProperty(name);
        };
        this._data = {};
        this._templates = {};
    }
    Object.defineProperty(SvgTemplatesEngine, "Instance", {
        get: function () {
            return this._instance || (this._instance = new this());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SvgTemplatesEngine, "templates", {
        get: function () {
            return SvgTemplatesEngine.Instance._templates;
        },
        enumerable: true,
        configurable: true
    });
    SvgTemplatesEngine.addTemplate = function (templateName, templateMarkup) {
        SvgTemplatesEngine.templates[templateName] = templateMarkup;
    };
    SvgTemplatesEngine.addTemplates = function (templates) {
        ko.utils.extend(SvgTemplatesEngine.templates, templates);
    };
    SvgTemplatesEngine.getExistingTemplate = function (name, findEverywhere) {
        if (findEverywhere === void 0) { findEverywhere = true; }
        return SvgTemplatesEngine.Instance._hasTemplate(name, findEverywhere) ? name : undefined;
    };
    return SvgTemplatesEngine;
}());
exports.SvgTemplatesEngine = SvgTemplatesEngine;
var makeTemplateSource = ko.templateEngine.prototype['makeTemplateSource'];
ko.templateEngine.prototype['makeTemplateSource'] = function (template, doc) {
    if (typeof template === 'string' && SvgTemplatesEngine.getExistingTemplate(template, false) && !document.getElementById(template)) {
        return new SvgTemplateSource(template, SvgTemplatesEngine['_instance']['_data'], SvgTemplatesEngine.templates);
    }
    else {
        return makeTemplateSource.apply(this, [template, doc]);
    }
};
__webpack_require__(153);
SvgTemplatesEngine.addTemplates(_extendedSvgTemplates_1.extendedTemplates(SvgTemplatesEngine.templates));


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var _propertiesAccessibilityProvider_1 = __webpack_require__(60);
var editor_1 = __webpack_require__(34);
var _utils_1 = __webpack_require__(9);
var _addon_1 = __webpack_require__(85);
var config_1 = __webpack_require__(165);
var _utils_2 = __webpack_require__(5);
var ObjectProperties = (function (_super) {
    __extends(ObjectProperties, _super);
    function ObjectProperties(viewModel, editorsInfo, level, parentDisabled, recreateEditors, textToSearch, popupService) {
        if (level === void 0) { level = 0; }
        if (parentDisabled === void 0) { parentDisabled = ko.observable(false); }
        if (recreateEditors === void 0) { recreateEditors = false; }
        var _this = _super.call(this) || this;
        _this._viewModelSubscription = null;
        _this._infoSubscription = null;
        _this._getInfoComputed = null;
        _this._accessibilityProvider = _propertiesAccessibilityProvider_1.defaultAccessibilityProvider;
        _this.level = 0;
        _this.rtl = config_1.default()['rtlEnabled'];
        if (popupService) {
            _this.createEditorAddOn = function (editor) {
                var editorAddOn = new _addon_1.EditorAddOn(editor, _this.popupService);
                editor._disposables.push(editorAddOn);
                return {
                    templateName: editorAddOn.templateName,
                    data: [editorAddOn]
                };
            };
            _this.popupService = popupService;
        }
        _this._editors = ko.observableArray([]).extend({ deferred: true });
        _this.level = level;
        _this._parentDisabled = parentDisabled;
        _this._textToSearch = textToSearch;
        _this._disposables.push(_this.visible = ko.computed(function () {
            return _this._editors().some(function (editor) { return editor.visible(); });
        }));
        _this._viewModelSubscription = viewModel.subscribe(function (newVal) {
            _this._infoSubscription && _this._infoSubscription.dispose();
            _this._getInfoComputed && _this._getInfoComputed.dispose();
            _this._update(newVal, editorsInfo, recreateEditors);
        });
        _this._update(viewModel(), editorsInfo, recreateEditors);
        return _this;
    }
    ObjectProperties.prototype.update = function (viewModel) {
        if (viewModel) {
            this._editors().forEach(function (editor) {
                editor.update(viewModel);
            });
        }
    };
    ObjectProperties.prototype._cleanEditorsSubscriptions = function () {
        this._editors().forEach(function (editor) {
            editor.dispose();
            Object.keys(editor).forEach(function (name) {
                if (ko.isComputed(editor[name])) {
                    editor[name].dispose();
                }
            });
        });
    };
    ObjectProperties.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this._editors);
        this.resetObservableArray(this._editors);
        this.cleanSubscriptions();
    };
    ObjectProperties.prototype.cleanSubscriptions = function () {
        this._infoSubscription && this._infoSubscription.dispose();
        this._getInfoComputed && this._getInfoComputed.dispose();
        this._viewModelSubscription && this._viewModelSubscription.dispose();
        this._cleanEditorsSubscriptions();
    };
    ObjectProperties.prototype.cleanEditors = function () {
        this._cleanEditorsSubscriptions();
        this.resetObservableArray(this._editors);
    };
    ObjectProperties.prototype.findEditorByInfo = function (serializationInfo) {
        return this._editors().filter(function (editor) { return editor.name === serializationInfo.propertyName && _utils_1.compareEditorInfo(editor.info().editor, serializationInfo.editor); })[0];
    };
    ObjectProperties.prototype.createEditor = function (modelPropertyInfo) {
        var editorType = modelPropertyInfo.editor && modelPropertyInfo.editor.editorType || editor_1.Editor;
        var editor = new editorType(modelPropertyInfo, this.level, this._parentDisabled, this._textToSearch, this.popupService);
        editor.assingParent(this._parent);
        editor.registerAccessibilityProvider(this._accessibilityProvider);
        return editor;
    };
    ObjectProperties.prototype.createEditors = function (serializationInfo) {
        var _this = this;
        var self = this;
        return (serializationInfo || [])
            .filter(function (info) { return !!info.editor && !_this.findEditorByInfo(info); })
            .map(function (info) { return _this.createEditor(info); });
    };
    ObjectProperties.prototype.registerAccessibilityProvider = function (accessibilityProvider) {
        this._accessibilityProvider = accessibilityProvider;
        this._editors().forEach(function (editor) {
            editor.registerAccessibilityProvider(accessibilityProvider);
        });
    };
    ObjectProperties.prototype.assignParent = function (parent) {
        this._parent = parent;
        this._editors().forEach(function (editor) {
            editor.assingParent(parent);
        });
    };
    ObjectProperties.prototype._createEditors = function (serializationInfo) {
        if (!serializationInfo || serializationInfo.length === 0)
            return false;
        var newEditors = this.createEditors(serializationInfo);
        if (!newEditors.length)
            return;
        var currentEditors = this._editors();
        if (currentEditors.length === 0) {
            currentEditors = newEditors;
        }
        else {
            newEditors.forEach(function (editor) {
                var existEditorIndex = currentEditors.map(function (_editor) { return _editor.name; }).indexOf(editor.name);
                if (existEditorIndex !== -1)
                    currentEditors.splice(existEditorIndex, 0, editor);
                else
                    currentEditors.push(editor);
            });
        }
        this._editors(currentEditors);
    };
    ObjectProperties.prototype._update = function (viewModel, editorsInfo, recreateEditors) {
        var _this = this;
        if (recreateEditors) {
            this.cleanEditors();
        }
        this._getInfoComputed = ko.computed(function () {
            return (editorsInfo && editorsInfo.editors && ko.unwrap(editorsInfo.editors))
                || (viewModel && viewModel['getInfo'] && viewModel['getInfo']());
        });
        this._infoSubscription = this._getInfoComputed.subscribe(function (newInfo) {
            if (recreateEditors) {
                _this.cleanEditors();
            }
            _this._recreateEditors(viewModel, newInfo);
        });
        this._recreateEditors(viewModel, this._getInfoComputed());
    };
    ObjectProperties.prototype._recreateEditors = function (viewModel, serializationInfo) {
        this._createEditors(serializationInfo);
        this.update(viewModel);
    };
    ObjectProperties.prototype.getEditors = function () {
        return this._editors();
    };
    return ObjectProperties;
}(utils_1.Disposable));
exports.ObjectProperties = ObjectProperties;
var PropertyGridEditor = (function (_super) {
    __extends(PropertyGridEditor, _super);
    function PropertyGridEditor(info, level, parentDisabled, textToSearch, _popupService) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this._popupService = _popupService;
        _this.editorCreated = ko.observable(false);
        _this.viewmodel = _this.createObjectProperties();
        if (!_utils_2.isEmptyObject(_this.viewmodel)) {
            _this.viewmodel.assignParent(_this);
        }
        _this._disposables.push(_this.viewmodel);
        var subscription = _this.collapsed.subscribe(function (newVal) {
            if (!newVal) {
                subscription.dispose();
                _this.editorCreated(true);
            }
        });
        _this._disposables.push(subscription);
        if (textToSearch) {
            _this._disposables.push(_this.visibleByName = ko.computed(function () {
                var visible = !!_utils_1.findMatchesInString(_this.displayName(), textToSearch());
                if (!_utils_2.isEmptyObject(_this.viewmodel)) {
                    _this.viewmodel._editors().forEach(function (editor) { return editor.isParentSearched(visible); });
                }
                return visible;
            }));
            _this.isSearchedProperty['dispose'] && _this.isSearchedProperty['dispose']();
            _this._disposables.push(_this.isSearchedProperty = ko.computed(function () {
                if (_this.visibleByName())
                    return true;
                var visibleByEditors = _this.viewmodel.visible();
                visibleByEditors && _this.collapsed(false);
                return visibleByEditors;
            }));
        }
        return _this;
    }
    PropertyGridEditor.prototype.createObjectProperties = function () {
        var _this = this;
        return new ObjectProperties(this.value, { editors: ko.computed(function () { return _this.value() && _this.value().getInfo && _this.value().getInfo() || _this.info().info; }) }, this.level + 1, this.disabled, undefined, this.textToSearch, this._popupService);
    };
    PropertyGridEditor.prototype.registerAccessibilityProvider = function (accessibilityProvider) {
        _super.prototype.registerAccessibilityProvider.call(this, accessibilityProvider);
        this.viewmodel.registerAccessibilityProvider(accessibilityProvider);
    };
    return PropertyGridEditor;
}(editor_1.Editor));
exports.PropertyGridEditor = PropertyGridEditor;
var PropertyGridEditorFlat = (function (_super) {
    __extends(PropertyGridEditorFlat, _super);
    function PropertyGridEditorFlat() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PropertyGridEditorFlat.prototype.createObjectProperties = function () {
        this.collapsed(false);
        this.editorCreated(true);
        this.level = -1;
        return _super.prototype.createObjectProperties.call(this);
    };
    return PropertyGridEditorFlat;
}(PropertyGridEditor));
exports.PropertyGridEditorFlat = PropertyGridEditorFlat;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var themes_1 = __webpack_require__(192);
var $ = __webpack_require__(1);
var localization_utils_1 = __webpack_require__(3);
var _utils_1 = __webpack_require__(9);
var pathRequest_1 = __webpack_require__(27);
var criteriaOperator_1 = __webpack_require__(6);
var parameter_1 = __webpack_require__(29);
var property_1 = __webpack_require__(15);
var utils_1 = __webpack_require__(28);
var _valueEditorHelper_1 = __webpack_require__(45);
function integerValueConverter(val, defaultValue, type) {
    var stringValue = '' + val;
    return _valueEditorHelper_1.ValueEditorHelper.isValid(type, 'integer', stringValue) ? stringValue : defaultValue;
}
exports.integerValueConverter = integerValueConverter;
function validateExpression(options) {
    var deferred = $.Deferred();
    try {
        var requests = [];
        var _pushRequest = function (path, propertyName, isParameter) {
            if (isParameter === void 0) { isParameter = false; }
            var message = _utils_1.formatUnicorn(localization_utils_1.getLocalization('{0} is not found', 'AnalyticsCoreStringId.WarningMessage_FieldNotFound'), isParameter ? ('?' + propertyName) : ('[' + propertyName + ']'));
            var propertyDeferred = $.Deferred();
            options.fieldListProvider.getItemByPath(new pathRequest_1.PathRequest(path))
                .done(function (_) { return propertyDeferred.resolve({ success: true }); })
                .fail(function (_) {
                path === propertyName
                    ? propertyDeferred.resolve({ success: false, message: message })
                    : options.fieldListProvider.getItemByPath(new pathRequest_1.PathRequest([path.split('.')[0], propertyName].join('.')))
                        .done(function (_) { return propertyDeferred.resolve({ success: true }); })
                        .fail(function (_) { return propertyDeferred.resolve({ success: false, message: message }); });
            });
            requests.push(propertyDeferred);
        };
        var expression = criteriaOperator_1.CriteriaOperator.parse(options.expression);
        utils_1.criteriaForEach(expression, function (operator, innerPath) {
            if (operator instanceof property_1.OperandProperty) {
                var propertyName = operator.propertyName.indexOf('^.') === 0 ? operator.propertyName.substring(2) : operator.propertyName;
                var path = propertyName;
                if ((options.rootItems || []).indexOf(propertyName.split('.')[0]) === -1 && innerPath) {
                    path = propertyName ? [innerPath, propertyName].join('.') : innerPath;
                }
                _pushRequest(path, propertyName);
            }
            else if (operator instanceof parameter_1.OperandParameter) {
                var parameterName = operator.parameterName;
                var parameterPath = 'Parameters.' + parameterName;
                _pushRequest(parameterPath, parameterName, true);
            }
        }, options.path);
        $.when.apply($, requests).done(function () {
            var responses = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                responses[_i] = arguments[_i];
            }
            return deferred.resolve(responses.reduce(function (result, value) {
                if (!value.success)
                    result = result ? [result, value.message].join('\n') : value.message;
                return result;
            }, ''));
        });
    }
    catch (e) {
        deferred.reject();
    }
    return deferred.promise();
}
exports.validateExpression = validateExpression;
function floatValueConverter(val, defaultValue, type) {
    var stringValue = '' + val;
    return _valueEditorHelper_1.ValueEditorHelper.isValid(type, 'float', stringValue) ? stringValue : defaultValue;
}
exports.floatValueConverter = floatValueConverter;
var _lightThemes = ['generic.light', 'generic.carmine', 'generic.greenmist', 'generic.softblue', 'generic.light.compact', 'generic.carmine.compact', 'generic.greenmist.compact', 'generic.softblue.compact'];
var _darkThemes = ['generic.dark', 'generic.contrast', 'generic.dark.compact', 'generic.darkmoon', 'generic.darkviolet', 'generic.contras.compact', 'generic.darkmoon.compact', 'generic.darkviolet.compact'];
function getCurrentTheme() {
    return themes_1.default.current();
}
exports.isDarkTheme = function (theme) {
    theme = theme || getCurrentTheme();
    if ($.inArray(theme, _darkThemes) !== -1)
        return true;
    if ($.inArray(theme, _lightThemes) !== -1)
        return false;
    return false;
};
function _setIsDarkTheme(callback) {
    exports.isDarkTheme = callback;
}
exports._setIsDarkTheme = _setIsDarkTheme;
function setCursorInFunctionParameter(paramCount, editor, insertValue) {
    if (!paramCount || paramCount <= 0)
        return;
    var cursorPosition = editor.getCursorPosition(), lastIndexOpeningBracket = insertValue.lastIndexOf('(');
    if (insertValue.charAt(lastIndexOpeningBracket + 1) === "'")
        lastIndexOpeningBracket++;
    editor.gotoLine(cursorPosition.row + 1, cursorPosition.column - (insertValue.length - 1 - lastIndexOpeningBracket));
}
exports.setCursorInFunctionParameter = setCursorInFunctionParameter;
function isList(data) {
    return data.isList === true || data.specifics === 'List' || data.specifics === 'ListSource';
}
exports.isList = isList;
function getParentContainer(el, container) {
    if (container === void 0) { container = '.dx-designer-viewport'; }
    return $(el).closest(container);
}
exports.getParentContainer = getParentContainer;
function isNullOrEmptyString(str) {
    return str == null || str === '';
}
exports.isNullOrEmptyString = isNullOrEmptyString;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var utils_1 = __webpack_require__(28);
var BinaryOperatorType;
(function (BinaryOperatorType) {
    BinaryOperatorType[BinaryOperatorType["Equal"] = 0] = "Equal";
    BinaryOperatorType[BinaryOperatorType["NotEqual"] = 1] = "NotEqual";
    BinaryOperatorType[BinaryOperatorType["Greater"] = 2] = "Greater";
    BinaryOperatorType[BinaryOperatorType["Less"] = 3] = "Less";
    BinaryOperatorType[BinaryOperatorType["LessOrEqual"] = 4] = "LessOrEqual";
    BinaryOperatorType[BinaryOperatorType["GreaterOrEqual"] = 5] = "GreaterOrEqual";
    BinaryOperatorType[BinaryOperatorType["Like"] = 6] = "Like";
    BinaryOperatorType[BinaryOperatorType["BitwiseAnd"] = 7] = "BitwiseAnd";
    BinaryOperatorType[BinaryOperatorType["BitwiseOr"] = 8] = "BitwiseOr";
    BinaryOperatorType[BinaryOperatorType["BitwiseXor"] = 9] = "BitwiseXor";
    BinaryOperatorType[BinaryOperatorType["Divide"] = 10] = "Divide";
    BinaryOperatorType[BinaryOperatorType["Modulo"] = 11] = "Modulo";
    BinaryOperatorType[BinaryOperatorType["Multiply"] = 12] = "Multiply";
    BinaryOperatorType[BinaryOperatorType["Plus"] = 13] = "Plus";
    BinaryOperatorType[BinaryOperatorType["Minus"] = 14] = "Minus";
})(BinaryOperatorType = exports.BinaryOperatorType || (exports.BinaryOperatorType = {}));
var BinaryOperator = (function (_super) {
    __extends(BinaryOperator, _super);
    function BinaryOperator(left, right, operatorType) {
        var _this = _super.call(this) || this;
        _this.assignLeftPart = function (criteriaOperator) {
            _this.leftOperand = criteriaOperator.leftPart;
        };
        _this.assignRightPart = function (criteriaOperator) {
            if (criteriaOperator.rightPart.length !== null && criteriaOperator.rightPart.length !== undefined) {
                if (criteriaOperator.rightPart.length) {
                    _this.rightOperand = criteriaOperator.rightPart[0];
                }
            }
            else {
                _this.rightOperand = criteriaOperator.rightPart;
            }
        };
        _this.type = 'Binary';
        _this.leftOperand = left || new criteriaOperator_1.CriteriaOperator();
        _this.rightOperand = right || new criteriaOperator_1.CriteriaOperator();
        _this.operatorType = operatorType;
        return _this;
    }
    Object.defineProperty(BinaryOperator.prototype, "leftPart", {
        get: function () {
            return this.leftOperand;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BinaryOperator.prototype, "rightPart", {
        get: function () {
            return this.rightOperand;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BinaryOperator.prototype, "displayType", {
        get: function () {
            return utils_1.operatorTokens[BinaryOperatorType[this.operatorType]] || BinaryOperatorType[this.operatorType];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BinaryOperator.prototype, "enumType", {
        get: function () {
            return BinaryOperatorType;
        },
        enumerable: true,
        configurable: true
    });
    BinaryOperator.prototype.accept = function (visitor) {
        return visitor.visitBinaryOperator
            ? visitor.visitBinaryOperator(this)
            : new BinaryOperator(this.leftOperand && this.leftOperand.accept(visitor), this.rightOperand && this.rightOperand.accept(visitor), this.operatorType);
    };
    return BinaryOperator;
}(criteriaOperator_1.CriteriaOperator));
exports.BinaryOperator = BinaryOperator;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var _internal_1 = __webpack_require__(68);
var $ = __webpack_require__(1);
var ko = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(3);
var _localization_1 = __webpack_require__(8);
var _internal_2 = __webpack_require__(4);
var _utils_1 = __webpack_require__(5);
var _utils_2 = __webpack_require__(22);
var ajaxSetup_1 = __webpack_require__(88);
var _processError_1 = __webpack_require__(66);
var _infoMessageHelpers_1 = __webpack_require__(67);
var _visitors_1 = __webpack_require__(69);
var editorsInfo_1 = __webpack_require__(17);
var dx_versions_1 = __webpack_require__(90);
function copyObservables(from, to) {
    Object.keys(from || {}).forEach(function (name) {
        if (ko.isObservable(from[name])) {
            to[name](from[name]());
        }
        else if (!$.isFunction(from[name])) {
            copyObservables(from[name], to[name]);
        }
    });
}
exports.copyObservables = copyObservables;
function _wrapModelInObservable(model) {
    return ko.isWritableObservable(model) ? model : ko.observable(null);
}
exports._wrapModelInObservable = _wrapModelInObservable;
function collectGroupsFromFlatList(list, getGroupId) {
    var temp = {};
    return list.reduce(function (res, val) {
        var groupId = getGroupId(val);
        if (groupId) {
            if (temp[groupId])
                temp[groupId].push(val);
            else {
                var group = { group: groupId, items: [val] };
                res.push(group);
                temp[groupId] = group.items;
            }
        }
        return res;
    }, []);
}
exports.collectGroupsFromFlatList = collectGroupsFromFlatList;
function compareObjects(a, b) {
    var result = a && b && !(a instanceof Array) && !(b instanceof Array);
    result = result && (Object.getOwnPropertyNames(a).length === Object.getOwnPropertyNames(b).length);
    if (result) {
        Object.keys(a || {}).some(function (name) {
            if (name.indexOf('_') !== 0 && (typeof a[name] !== 'function' || ko.isObservable(a[name]))) {
                if (ko.isObservable(a[name])) {
                    result = ko.unwrap(a[name]) === ko.unwrap(b[name]);
                }
                else if (a[name] instanceof Array) {
                    if ((b[name] instanceof Array) && a[name].length === b[name].length) {
                        for (var i = 0; i < a[name].length; i++) {
                            result = compareObjects(a[name][i], b[name][i]);
                            if (result === false)
                                break;
                        }
                    }
                    else {
                        result = false;
                    }
                }
                else if (a[name] instanceof Object) {
                    result = compareObjects(a[name], b[name]);
                }
                else {
                    result = a[name] === b[name];
                }
                return !result;
            }
        });
    }
    return result;
}
exports.compareObjects = compareObjects;
exports.cssTransform = ['-webkit-transform', '-moz-transform', '-ms-transform', '-o-transform', 'transform'];
exports.DEBUG = false;
function getFullPath(path, dataMember) {
    return path + (dataMember ? '.' + dataMember : '');
}
exports.getFullPath = getFullPath;
function loadTemplates() {
    var promises = $("script[type='text/html']").map(function (_, script) {
        if (script.src) {
            var deffered = $.Deferred();
            $.get(script.src)
                .done(function (tmpl) {
                script.text = tmpl;
                if (tmpl.indexOf('type="text/html"') !== -1 || tmpl.indexOf("type='text/html'") !== -1) {
                    $(document.body).append(tmpl);
                }
                deffered.resolve();
            })
                .fail(function (jqXHR, textStatus, errorThrown) {
                deffered.reject();
            });
            return deffered.promise();
        }
    });
    return $.when.apply($.when, promises);
}
exports.loadTemplates = loadTemplates;
function getSizeFactor(width) {
    if (width < 768) {
        return 'xs';
    }
    else if (width < 992) {
        return 'sm';
    }
    else if (width < 1200) {
        return 'md';
    }
    else if (width < 1380) {
        return 'lg';
    }
    else {
        return 'xl';
    }
}
exports.getSizeFactor = getSizeFactor;
exports.staticContext = {
    _static: {
        searchPlaceholder: function () { return _localization_1.searchPlaceholder(); },
        selectPlaceholder: function () { return _localization_1.selectPlaceholder(); },
        noDataText: function () { return _localization_1.noDataText(); },
        ajaxSetup: ajaxSetup_1.ajaxSetup
    }
};
exports._defaultStaticContext = _internal_2.createGlobalModuleVariableFunc({});
function appendStaticContextToRootViewModel(root, dx, className) {
    if (dx === void 0) { dx = exports.staticContext; }
    if (dx)
        root.dx = __assign({}, dx, exports._defaultStaticContext());
    root.getLocalization = function () {
        return localization_utils_1.getLocalization.apply(root, arguments);
    };
    root.getPopupContainer = _utils_2.getParentContainer;
    root.calculateWithZoomFactor = _internal_1.calculateWithZoomFactor;
    root.surfaceClass = function (el) {
        return 'dx-designer-viewport dx-designer-viewport-' + getSizeFactor(el.clientWidth) +
            ' ' + (!_utils_2.getParentContainer(el, '.dx-theme-generic').length ? ' dx-theme-generic' : '') +
            (className ? ' ' + className : '');
    };
}
exports.appendStaticContextToRootViewModel = appendStaticContextToRootViewModel;
function _ajax(uri, action, arg, processErrorCallback, ignoreError, customOptions, isError, getErrorMessage) {
    if (isError === void 0) { isError = function (data) { return !data.success; }; }
    if (getErrorMessage === void 0) { getErrorMessage = _infoMessageHelpers_1.getErrorMessage; }
    var deferred = $.Deferred();
    var requestData;
    if (action !== undefined && arg !== undefined) {
        requestData = {
            actionKey: action,
            arg: arg,
            dxversions: JSON.stringify(dx_versions_1.dxversions)
        };
    }
    ajaxSetup_1.ajaxSetup.sendRequest(_utils_1.extend({}, {
        type: 'POST',
        data: requestData,
        url: uri
    }, customOptions)).fail(function (jqXHR, textStatus, errorThrown) {
        if (ignoreError && ignoreError()) {
            deferred.reject();
            return;
        }
        _processError_1._errorProcessor.call({ jqXHR: jqXHR, textStatus: textStatus, errorThrown: errorThrown, getRequestDetails: function () { return requestData || uri; } });
        _processError_1._processError(errorThrown, deferred, jqXHR, textStatus, processErrorCallback);
    })
        .done(function (data, textStatus, jqXHR) {
        if (!data) {
            deferred.reject();
            return;
        }
        if (!isError(data)) {
            deferred.resolve(data.result);
        }
        else {
            if (ignoreError && ignoreError()) {
                deferred.reject();
                return;
            }
            _processError_1._errorProcessor.call({ jqXHR: jqXHR, textStatus: textStatus, data: data, errorThrown: getErrorMessage(jqXHR), getRequestDetails: function () { return requestData || uri; } });
            _processError_1._processError('Internal Server Error', deferred, jqXHR, textStatus, processErrorCallback);
        }
    });
    return deferred.promise();
}
exports._ajax = _ajax;
function _ajaxWithOptions(options) {
    return _ajax(options.uri, options.action, options.arg, options.processErrorCallback, options.ignoreError, options.customOptions, options.isError, options.getErrorMessage);
}
exports._ajaxWithOptions = _ajaxWithOptions;
exports.ajax = function () {
    var params = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        params[_i] = arguments[_i];
    }
    if (params.length > 1) {
        return _ajax.apply(_this, params);
    }
    else {
        return _ajaxWithOptions(params[0]);
    }
};
function setAjax(newFunc) {
    exports.ajax = newFunc;
}
exports.setAjax = setAjax;
function cutRefs(model) {
    _visitors_1.objectsVisitor(model, function (target) {
        delete target['@Ref'];
    });
    return model;
}
exports.cutRefs = cutRefs;
exports.DesignerBaseElements = {
    MenuButton: 'dxrd-menubutton-template-base',
    Toolbar: 'dxrd-toolbar-template-base',
    Toolbox: 'dxrd-toolbox-template-base',
    GroupedToolbox: 'dxrd-grouped-toolbox-template-base',
    Surface: 'dxrd-surface-template-base',
    RightPanel: 'dxrd-right-panel-template-base'
};
function generateDefaultParts(model) {
    return [
        { id: exports.DesignerBaseElements.MenuButton, templateName: exports.DesignerBaseElements.MenuButton, model: model },
        { id: exports.DesignerBaseElements.Toolbar, templateName: exports.DesignerBaseElements.Toolbar, model: model },
        { id: exports.DesignerBaseElements.Toolbox, templateName: exports.DesignerBaseElements.Toolbox, model: model },
        { id: exports.DesignerBaseElements.Surface, templateName: exports.DesignerBaseElements.Surface, model: model },
        { id: exports.DesignerBaseElements.RightPanel, templateName: exports.DesignerBaseElements.RightPanel, model: model }
    ];
}
exports.generateDefaultParts = generateDefaultParts;
function createActionWrappingFunction(wrapperName, func) {
    return function (actions) {
        actions.forEach(function (action) {
            if (!action['wrappedWith'] || action['wrappedWith'].indexOf(wrapperName) === -1) {
                var oldClickHandler = action.clickAction;
                action.clickAction = function (model) {
                    return func(model, oldClickHandler);
                };
                action['wrappedWith'] = action['wrappedWith'] || [];
                action['wrappedWith'].push(wrapperName);
            }
        });
    };
}
exports.createActionWrappingFunction = createActionWrappingFunction;
function localizeNoneString(noneValue) {
    var value = ko.unwrap(noneValue);
    if (value === 'none') {
        return localization_utils_1.getLocalization('none', 'DataAccessStringId.ParameterListEmpty');
    }
    else if (value === '(none)') {
        return (localization_utils_1.getLocalization('(none)', 'DxDesignerStringId.None') !== '(none)') ? localization_utils_1.getLocalization('(none)', 'DxDesignerStringId.None') : ('(' + localization_utils_1.getLocalization('none', 'DataAccessStringId.ParameterListEmpty') + ')');
    }
    return value;
}
exports.localizeNoneString = localizeNoneString;
function parseZoom(val) {
    var _value = Math.round(parseInt(val.replace('%', ''))) / 100;
    if (!_value)
        return 1;
    if (_value >= 5)
        return 5;
    if (_value <= 0.1)
        return 0.1;
    return _value;
}
exports.parseZoom = parseZoom;
function getResizableOptions($element, panelOffset, minWidth, position, startPosition, width, disabled) {
    return {
        starting: function () {
            $($element).css(position === startPosition ? 'right' : 'left', '');
        },
        handles: position === startPosition ? 'e' : 'w',
        stopped: $.noop,
        stop: $.noop,
        resize: function () {
            $($element).css({ left: position === startPosition ? panelOffset + 'px' : '', right: position === startPosition ? '' : panelOffset + 'px' });
            width && ko.isObservable(width) && width($($element).width());
        },
        disabled: disabled || false,
        zoom: 1,
        minimumWidth: minWidth,
        maximumWidth: 1000,
        $element: $element
    };
}
exports.getResizableOptions = getResizableOptions;
function createPasswordSerializationInfo(info, isNew) {
    if (isNew === void 0) { isNew = true; }
    info.editor = editorsInfo_1.editorTemplates.getEditor('text');
    info.editorOptions = { mode: 'password' };
    if (isNew)
        info.editorOptions.inputAttr = { autocomplete: 'new-password' };
    return info;
}
exports.createPasswordSerializationInfo = createPasswordSerializationInfo;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
function findSurface(viewModel) {
    return !!viewModel ? viewModel['surface'] : null;
}
exports.findSurface = findSurface;
function getControlNewAbsolutePositionOnResize(snapHelper, absolutePosition, ui, delta) {
    var newAbsolutePosition = {
        top: absolutePosition.top + delta.y,
        left: absolutePosition.left + delta.x,
        bottom: absolutePosition.top + ui.originalSize.height,
        right: absolutePosition.left + ui.originalSize.width
    };
    if (delta.x !== 0) {
        newAbsolutePosition.left = snapHelper.snapPosition(newAbsolutePosition.left, false);
    }
    else if (delta.width !== 0) {
        newAbsolutePosition.right = snapHelper.snapPosition(absolutePosition.left + ui.size.width, false);
    }
    if (delta.y !== 0) {
        newAbsolutePosition.top = snapHelper.snapPosition(newAbsolutePosition.top, true);
    }
    else if (delta.height !== 0) {
        newAbsolutePosition.bottom = snapHelper.snapPosition(absolutePosition.top + ui.size.height, true);
    }
    return newAbsolutePosition;
}
exports.getControlNewAbsolutePositionOnResize = getControlNewAbsolutePositionOnResize;
function num(v) {
    return parseInt(v, 10) || 0;
}
function getControlRect(element, control, surface) {
    var curleft = num(element.css('left')), curtop = num(element.css('top'));
    if (surface.rtl()) {
        var posLeft = surface.pageWidth() - surface.margins.left() - element.width();
        if (curleft > posLeft) {
            curleft = posLeft;
        }
    }
    var bounds = element[0].getBoundingClientRect();
    return { top: curtop, left: curleft, width: bounds.width, height: bounds.height };
}
exports.getControlRect = getControlRect;
function minHeightWithoutScroll(element) {
    return Math.min(element.scrollHeight, element.offsetHeight, element.clientHeight) + element.offsetTop;
}
exports.minHeightWithoutScroll = minHeightWithoutScroll;
function chooseBetterPositionOf(html, designer) {
    return designer && (minHeightWithoutScroll(html) < minHeightWithoutScroll(designer) ? window : designer) || window;
}
exports.chooseBetterPositionOf = chooseBetterPositionOf;
function updateSurfaceContentSize(surfaceSize, root, rtl) {
    if (rtl === void 0) { rtl = false; }
    return function () {
        var $root = $(root).find('.dxrd-designer').eq(0);
        var toolboxWidth = $root.find('.dxrd-toolbox-wrapper:visible').outerWidth() || 0;
        var rightAreaWidth = ($root.find('.dxrd-right-panel:visible').outerWidth() || 0) + ($root.find('.dxrd-right-tabs:visible').outerWidth() || 0);
        var otherWidth = rightAreaWidth + toolboxWidth, surfaceWidth = $root.width() - (otherWidth);
        $root.find('.dxrd-surface-wrapper').eq(0).css({
            'left': rtl ? rightAreaWidth : toolboxWidth,
            'right': !rtl ? rightAreaWidth : toolboxWidth,
            'width': surfaceWidth,
            'bottom': $root.find('.dxrd-navigation-panel-wrapper:visible').outerHeight() || 0
        });
        surfaceSize(surfaceWidth);
    };
}
exports.updateSurfaceContentSize = updateSurfaceContentSize;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var criteriaOperatorSurface_1 = __webpack_require__(18);
var unary_1 = __webpack_require__(12);
var group_1 = __webpack_require__(14);
var UnaryOperandSurface = (function (_super) {
    __extends(UnaryOperandSurface, _super);
    function UnaryOperandSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.contentTemplateName = 'dx-filtereditor-unary';
        _this.operand = ko.observable(null);
        var operand = _this.createChildSurface(operator.operand);
        if (operator.operatorType === unary_1.UnaryOperatorType.Not) {
            _this.templateName = 'dx-filtereditor-not';
            operand.reverse = true;
            _this.specifics = operand.specifics;
        }
        else {
            operand.dispose();
            operand = _this._createLeftPartProperty(operator.operand);
        }
        _this.operand(operand);
        return _this;
    }
    Object.defineProperty(UnaryOperandSurface.prototype, "leftPart", {
        get: function () {
            var leftPart = this.operand();
            if (this.operand() && this.operand().reverse && this.operand().leftPart) {
                leftPart = this.operand().leftPart;
            }
            return leftPart;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnaryOperandSurface.prototype, "rightPart", {
        get: function () {
            return this.operand() && this.operand().reverse ? this.operand().rightPart : null;
        },
        enumerable: true,
        configurable: true
    });
    UnaryOperandSurface.prototype.createChildSurface = function (item, path, actions) {
        if (this.operatorType() === unary_1.UnaryOperatorType.Not && !this.helper._getFilterEditorOperator(item, this.helper._allFilterEditorOperators, true)) {
            this.model.operand = new group_1.GroupOperator(group_1.GroupOperatorType.And, [item]);
        }
        return _super.prototype.createChildSurface.call(this, this.model.operand, path, actions);
    };
    UnaryOperandSurface.prototype.dispose = function () {
        this.operand().dispose();
        _super.prototype.dispose.call(this);
    };
    return UnaryOperandSurface;
}(criteriaOperatorSurface_1.CriteriaOperatorSurface));
exports.UnaryOperandSurface = UnaryOperandSurface;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PathRequest = (function () {
    function PathRequest(fullPath, pathParts) {
        if (pathParts === void 0) { pathParts = []; }
        this.pathParts = pathParts;
        this.path = '';
        this.fullPath = fullPath;
        if (fullPath) {
            if (fullPath.indexOf('.') !== -1) {
                var pathComponents = fullPath.split('.');
                this.id = this.ref = pathComponents[0];
                pathComponents.splice(0, 1);
                this.path = pathComponents.join('.');
            }
            else {
                this.id = this.ref = fullPath;
            }
        }
    }
    return PathRequest;
}());
exports.PathRequest = PathRequest;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var aggregate_1 = __webpack_require__(11);
exports.operatorTokens = {
    'Plus': '+',
    'Minus': '-',
    'Equal': '=',
    'NotEqual': '<>',
    'Greater': '>',
    'Less': '<',
    'LessOrEqual': '<=',
    'GreaterOrEqual': '>='
};
function criteriaForEach(operator, callback, path) {
    if (path === void 0) { path = ''; }
    callback(operator, path);
    if (operator instanceof aggregate_1.AggregateOperand) {
        operator.leftPart && criteriaForEach(operator.leftPart, callback, path);
        if (operator.leftPart && operator.leftPart['propertyName']) {
            path = path ? [path, operator.leftPart['propertyName']].join('.') : operator.leftPart['propertyName'];
        }
    }
    operator.children().forEach(function (item) { return criteriaForEach(item, callback, path); });
}
exports.criteriaForEach = criteriaForEach;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var value_1 = __webpack_require__(10);
var OperandParameter = (function (_super) {
    __extends(OperandParameter, _super);
    function OperandParameter(parameterName, value) {
        var _this = _super.call(this, value) || this;
        _this.type = 'Parameter';
        _this.parameterName = parameterName || '';
        return _this;
    }
    Object.defineProperty(OperandParameter.prototype, "displayType", {
        get: function () {
            return '?' + this.parameterName;
        },
        enumerable: true,
        configurable: true
    });
    OperandParameter.prototype.accept = function (visitor) {
        return visitor.visitOperandParameter
            ? visitor.visitOperandParameter(this)
            : new OperandParameter(this.parameterName, this.value);
    };
    return OperandParameter;
}(value_1.OperandValue));
exports.OperandParameter = OperandParameter;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var skipProperties = [
    'ctor',
    'constructor',
    'getComponentName',
    '_createProxyMehtod',
    '$element',
    '_options',
    '_isInitialized',
    'bind',
    '_disposableObj',
    'updateOptions'
];
var _superName = '__dxa__superProxy';
function _createSuper(object) {
    object[_superName] = {};
}
function _registerSuperMethod(object, methodName) {
    object[_superName][methodName] = object[methodName];
}
function _getSuper(object) {
    return object[_superName];
}
exports._getSuper = _getSuper;
var _dxtInherit = (function () {
    function _dxtInherit($element, _accessor) {
        this.$element = $element;
        this._isInitialized = false;
        this._disposableObj = new utils_1.Disposable();
        var self = this;
        this._options = ko.computed(function () {
            var _options = _accessor();
            self.updateOptions(_options);
            _options.onInitializing = function () {
                if (!self._isInitialized) {
                    _createSuper(this);
                    self._isInitialized = true;
                    for (var name in self) {
                        if (skipProperties.indexOf(name) === -1) {
                            _registerSuperMethod(this, name);
                            this[name] = self[name];
                        }
                    }
                    _registerSuperMethod(this, '_initOptions');
                    this._initOptions = function (options) {
                        _getSuper(this)._initOptions.apply(this, arguments);
                        var func = function () {
                            this.constructor._includedPostCtors.splice(this.constructor._includedPostCtors.indexOf(func), 1);
                            self.ctor.apply(this, [$($element), options]);
                        };
                        this.constructor._includedPostCtors.push(func);
                    };
                }
            };
            return _options;
        }, undefined, {
            disposeWhenNodeIsRemoved: $element
        });
    }
    _dxtInherit.prototype.ctor = function ($element, _options) { };
    _dxtInherit.prototype.updateOptions = function (_options) { };
    _dxtInherit.prototype.getComponentName = function () {
        return null;
    };
    _dxtInherit.prototype.bind = function () {
        var _this = this;
        return ko.bindingHandlers[this.getComponentName()].init(this.$element, function () { return _this._options(); });
    };
    return _dxtInherit;
}());
exports._dxtInherit = _dxtInherit;
function _registerDxtComponent(bindingName, type) {
    ko.bindingHandlers[bindingName] = {
        init: function (element, valueAccessor) {
            var component = (new type(element, valueAccessor));
            return component.bind();
        }
    };
}
exports._registerDxtComponent = _registerDxtComponent;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
__webpack_require__(7);
__webpack_require__(7);
__webpack_require__(7);
__webpack_require__(7);
var utils_1 = __webpack_require__(2);
var size_1 = __webpack_require__(47);
var _surfaceHelpers_1 = __webpack_require__(25);
var _units_1 = __webpack_require__(38);
var DragDropHandler = (function (_super) {
    __extends(DragDropHandler, _super);
    function DragDropHandler(surface, selection, undoEngine, snapHelper, dragHelperContent) {
        var _this = _super.call(this) || this;
        _this._size = new size_1.Size(0, 0);
        _this.alwaysAlt = false;
        _this.surface = surface;
        _this.selection = selection;
        _this.snapHelper = snapHelper;
        _this.dragHelperContent = dragHelperContent;
        _this.stopDrag = function (ui, draggable, event) {
            undoEngine() && undoEngine().start();
            _this.doStopDrag(ui, draggable, event);
            undoEngine() && undoEngine().end();
            snapHelper && snapHelper.deactivateSnapLines();
        };
        return _this;
    }
    DragDropHandler.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.surface = null;
        this.selection = null;
        this.snapHelper = null;
        this.dragHelperContent = null;
    };
    DragDropHandler.prototype.getTarget = function (event) {
        return event['toElement'] || (ko.dataFor(event.relatedTarget) && event.relatedTarget) || (event.originalEvent && event.originalEvent.target) || null;
    };
    DragDropHandler.prototype._getAbsoluteSurfacePosition = function (ui) {
        return { left: ui.position.left - ui['delta'].left, top: ui.position.top - ui['delta'].top };
    };
    DragDropHandler.prototype.addControl = function (control, dropTargetSurface, size) {
        var targetWidth = (dropTargetSurface['width'] && dropTargetSurface['width']()) || (dropTargetSurface['_width'] && dropTargetSurface['_width']());
        var underCursor = dropTargetSurface.underCursor();
        if (underCursor.x < targetWidth) {
            dropTargetSurface.getControlModel().addChild(control);
            var controlSurface = _surfaceHelpers_1.findSurface(control);
            if (!controlSurface)
                return;
            var width = size.width(), height = size.height();
            var left = (underCursor.x + width > targetWidth) ? (targetWidth - width - 1) : underCursor.x;
            controlSurface.rect({ left: left, top: Math.max(underCursor.y, 0), width: width, height: height });
            this.selection.initialize(controlSurface);
        }
    };
    DragDropHandler.prototype.recalculateSize = function (size) {
        var surface = ko.unwrap(this.surface);
        this._size.width(_units_1.unitsToPixel(ko.unwrap(size.width) * surface.dpi() / 100, surface.measureUnit(), surface.zoom()));
        this._size.height(_units_1.unitsToPixel(ko.unwrap(size.height) * surface.dpi() / 100, surface.measureUnit(), surface.zoom()));
    };
    DragDropHandler.prototype.helper = function (draggable, event) {
        this.snapHelper && this.snapHelper.updateSnapLines(draggable || null);
    };
    DragDropHandler.prototype.canDrop = function (dropTarget, controlModel, metaData) {
        var locked = dropTarget.locked;
        if (metaData && metaData.canDrop) {
            locked = locked || !metaData.canDrop(dropTarget, controlModel);
        }
        return !locked;
    };
    DragDropHandler.prototype.startDrag = function (draggable) { };
    DragDropHandler.prototype.drag = function (event, ui) {
        var needToActivateSnapLines = event.altKey !== true;
        if (this.selection.dropTarget) {
            var dropTarget = this.selection.dropTarget.getControlModel().getMetaData().isContainer ? this.selection.dropTarget : (this.selection.dropTarget.parent || this.selection.dropTarget), controlModel = ko.dataFor(event.target).getControlModel && ko.dataFor(event.target).getControlModel(), metaData = controlModel && controlModel.getMetaData() || ko.dataFor(event.target).info;
            if (this.canDrop(dropTarget, controlModel, metaData)) {
                this.dragHelperContent && this.dragHelperContent.isLocked(false);
            }
            else {
                this.snapHelper && this.snapHelper.deactivateSnapLines();
                needToActivateSnapLines = false;
                this.dragHelperContent && this.dragHelperContent.isLocked(true);
            }
        }
        if (needToActivateSnapLines) {
            var position = this._getAbsoluteSurfacePosition(ui);
            var snapDelta = this.snapHelper && this.snapHelper.activateSnapLines({
                left: position.left,
                top: position.top,
                right: position.left + this._size.width(),
                bottom: position.top + this._size.height()
            });
            ui.position.left -= snapDelta.left;
            ui.position.top -= snapDelta.top;
        }
    };
    DragDropHandler.prototype.doStopDrag = function (ui, draggable, event) { };
    DragDropHandler.started = ko.observable(false);
    return DragDropHandler;
}(utils_1.Disposable));
exports.DragDropHandler = DragDropHandler;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _utils_1 = __webpack_require__(5);
function createObservableReverseArrayMapCollection(elementModels, target, createItem) {
    var array = target();
    elementModels.peek().forEach(function (item) {
        var surface = createItem(item);
        array.splice(0, 0, surface);
    });
    target.valueHasMutated();
    return elementModels.subscribe(function (args) {
        var unwrapedTarget = target();
        var targetLength = unwrapedTarget.length;
        args.forEach(function (changeSet) {
            if (changeSet.status === 'deleted') {
                unwrapedTarget.splice(unwrapedTarget.indexOf(changeSet.value.surface), 1);
                targetLength--;
            }
        });
        args.forEach(function (changeSet) {
            if (changeSet.status === 'added') {
                unwrapedTarget.splice(targetLength - changeSet.index, 0, createItem(changeSet.value));
                targetLength++;
            }
        });
        target.valueHasMutated();
    }, null, 'arrayChange');
}
exports.createObservableReverseArrayMapCollection = createObservableReverseArrayMapCollection;
function createObservableArrayMapCollection(elementModels, target, createItem) {
    var array = target();
    elementModels.peek().forEach(function (item) {
        var surface = createItem(item);
        array.push(surface);
    });
    target.valueHasMutated();
    return elementModels.subscribe(function (args) {
        var startIndex = target().length, deleteCount = 0, valuesToAdd = [];
        args.forEach(function (changeSet) {
            if (changeSet.status === 'deleted') {
                deleteCount++;
                if (changeSet.index < startIndex) {
                    startIndex = changeSet.index;
                }
            }
        });
        args.forEach(function (changeSet) {
            if (changeSet.status === 'added') {
                if (changeSet.index < startIndex) {
                    startIndex = changeSet.index;
                }
                valuesToAdd.push(createItem(changeSet.value));
            }
        });
        target.splice.apply(target, [startIndex, deleteCount].concat(valuesToAdd));
    }, null, 'arrayChange');
}
exports.createObservableArrayMapCollection = createObservableArrayMapCollection;
function deserializeChildArray(model, parent, creator) {
    var result = Object.keys(model || {}).map(function (propertyName) { return creator(model[propertyName]); });
    return _utils_1.knockoutArrayWrapper(result, function (array, event) {
        if (event === 'beforeChange') {
            return;
        }
        if (event === 'arrayChange') {
            for (var i = 0; i < array.length; i++) {
                parent !== array[i].value.parentModel() && array[i].value.parentModel(parent);
            }
        }
        else {
            for (var i = 0; i < array.length; i++) {
                parent !== array[i].parentModel() && array[i].parentModel(parent);
            }
        }
    });
}
exports.deserializeChildArray = deserializeChildArray;
function getFirstItemByPropertyValue(array, propertyName, propertyValue, fromIndex) {
    var fromIndex = fromIndex || 0;
    for (var i = fromIndex; i < array.length; i++) {
        var value = ko.isObservable(array[i][propertyName]) ? array[i][propertyName].peek() : array[i][propertyName];
        if (value === propertyValue) {
            return array[i];
        }
    }
    return null;
}
exports.getFirstItemByPropertyValue = getFirstItemByPropertyValue;
function findFirstItemMatchesCondition(array, predicate) {
    for (var i = 0; i < array.length; i++) {
        if (predicate(array[i])) {
            return array[i];
        }
    }
    return null;
}
exports.findFirstItemMatchesCondition = findFirstItemMatchesCondition;
exports.find = findFirstItemMatchesCondition;
function binaryIndexOf(ar, el, compare) {
    var m = 0;
    var n = ar.length - 1;
    while (m <= n) {
        var k = (n + m) >> 1;
        var cmp = compare(el, ar[k]);
        if (cmp > 0) {
            m = k + 1;
        }
        else if (cmp < 0) {
            n = k - 1;
        }
        else {
            return k;
        }
    }
    return ~m;
}
exports.binaryIndexOf = binaryIndexOf;
function compareArrays(array1, array2) {
    if (!array1 || !array2)
        return false;
    if (array1.length !== array2.length)
        return false;
    for (var i = 0; i < array1.length; i++) {
        if (array1[i] !== array2[i])
            return false;
    }
    return true;
}
exports.compareArrays = compareArrays;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(3);
function getTypeNameFromFullName(controlType) {
    return controlType.split(',')[0].trim();
}
exports.getTypeNameFromFullName = getTypeNameFromFullName;
function getShortTypeName(controlType) {
    var fullTypeName = getTypeNameFromFullName(controlType), typeNameParts = fullTypeName.split('.');
    return typeNameParts[typeNameParts.length - 1];
}
exports.getShortTypeName = getShortTypeName;
function getControlTypeName(value) {
    var controlType = value.displayType && value.displayType() || value.controlType;
    if (value.getControlFactory) {
        var info = value.getControlFactory().getControlInfo(controlType);
        if (info.displayName)
            controlType = info.displayName;
    }
    return controlType && localization_utils_1.getLocalization(getShortTypeName(controlType));
}
exports.getControlTypeName = getControlTypeName;
function getControlFullName(value) {
    if (!value)
        return '';
    var displayName = ko.unwrap(value.name) || ko.unwrap(value.displayName), controlType = getControlTypeName(value);
    return displayName + (controlType ? (' (' + controlType + ')') : '');
}
exports.getControlFullName = getControlFullName;
function getImageClassName(controlType, isTemplate) {
    if (isTemplate === void 0) { isTemplate = false; }
    var controlType = getTypeNameFromFullName(controlType || '').split('.').join('_'), name;
    if (controlType.indexOf('XR') === 0) {
        name = controlType.slice(2).toLowerCase();
    }
    else if (controlType === 'DevExpress_XtraReports_UI_XtraReport') {
        name = 'master_report';
    }
    return (isTemplate ? 'dxrd-svg-toolbox-' : 'dxrd-image-') + (name ? name : controlType.toLowerCase());
}
exports.getImageClassName = getImageClassName;
function getUniqueNameForNamedObjectsArray(objects, prefix, names) {
    if (prefix.indexOf('XR') === 0) {
        prefix = prefix[2].toLowerCase() + prefix.slice(3);
    }
    else {
        var indexBand = prefix.indexOf('Band');
        if (indexBand !== -1 && prefix !== 'SubBand') {
            prefix = prefix.slice(0, indexBand) + prefix.slice(indexBand + 4);
        }
    }
    return getUniqueName(names || objects.map(function (item) { return ko.unwrap(item.name); }), prefix);
}
exports.getUniqueNameForNamedObjectsArray = getUniqueNameForNamedObjectsArray;
function getUniqueName(names, prefix) {
    var i = 1, result = prefix + i;
    while (names.filter(function (item) { return item === result; }).length > 0) {
        i++;
        result = prefix + i;
    }
    return result;
}
exports.getUniqueName = getUniqueName;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var _utils_1 = __webpack_require__(9);
var _propertiesAccessibilityProvider_1 = __webpack_require__(60);
var editorValidator_1 = __webpack_require__(114);
var localization_utils_1 = __webpack_require__(3);
var _internal_1 = __webpack_require__(19);
var editorsInfo_1 = __webpack_require__(17);
var config_1 = __webpack_require__(165);
var _utils_2 = __webpack_require__(5);
var _validation_1 = __webpack_require__(103);
var _units_1 = __webpack_require__(38);
var Editor = (function (_super) {
    __extends(Editor, _super);
    function Editor(modelPropertyInfo, level, parentDisabled, textToSearch) {
        if (parentDisabled === void 0) { parentDisabled = ko.observable(false); }
        if (textToSearch === void 0) { textToSearch = undefined; }
        var _this = _super.call(this) || this;
        _this._model = ko.observable();
        _this._parent = ko.observable(null);
        _this.isSearchedProperty = ko.observable(true);
        _this.isParentSearched = ko.observable(false);
        _this.rtl = config_1.default().rtlEnabled;
        _this._accessibilityProvider = ko.observable(_propertiesAccessibilityProvider_1.defaultAccessibilityProvider);
        _this._validator = new editorValidator_1.EditorValidator(_this);
        _this._cachedValue = undefined;
        _this.isEditorSelected = ko.observable(false);
        _this.isRequired = false;
        _this.isRendered = ko.observable(false);
        _this.collapsed = ko.observable(true);
        _this.info = ko.observable(modelPropertyInfo);
        _this._disposables.push(_this.displayName = ko.computed(function () {
            var info = _this.info();
            return info && localization_utils_1.getLocalization(info.displayName, info['localizationId']);
        }));
        if (textToSearch) {
            _this.textToSearch = textToSearch;
            _this._disposables.push(_this.isSearchedProperty = ko.computed(function () {
                return _this.isParentSearched() || !!_utils_1.findMatchesInString(_this.displayName(), textToSearch());
            }));
        }
        _this.padding = _this._setPadding(_this.rtl ? 'right' : 'left', level * _internal_1.propertiesGridEditorsPaddingLeft());
        var defaultValue = ko.observable(null), propertyName = modelPropertyInfo.propertyName;
        _this.editorOptions = modelPropertyInfo.editorOptions;
        _this.validatorOptions = modelPropertyInfo.validatorOptions;
        _this.isRequired = modelPropertyInfo.isRequired;
        if (modelPropertyInfo.defaultVal !== undefined) {
            defaultValue = ko.observable(modelPropertyInfo.defaultVal);
        }
        if (modelPropertyInfo.from) {
            defaultValue = modelPropertyInfo.from(modelPropertyInfo.defaultVal);
        }
        if (modelPropertyInfo.array) {
            defaultValue = ko.observableArray();
        }
        _this._disposables.push(_this.values = ko.computed(function () {
            var _values = _this.info().valueStore || _this.info().valuesArray;
            if (_values) {
                return _values;
            }
            _values = ko.unwrap(_this.info().values);
            if (_values) {
                return $.map(_values, function (displayValue, value) {
                    return { value: value, displayValue: displayValue };
                });
            }
        }));
        _this.level = level;
        _this._init(modelPropertyInfo.editor, defaultValue, propertyName);
        _this._disposables.push(_this.disabled = ko.computed(function () {
            return parentDisabled() || _this._accessibilityProvider() && _this._accessibilityProvider().isPropertyDisabled(_this);
        }));
        _this._disposables.push(_this.visible = ko.computed(function () {
            return _this.isSearchedProperty() && _this._accessibilityProvider() && _this._accessibilityProvider().isPropertyVisible(_this);
        }));
        _this._disposables.push(_this.isPropertyModified = ko.computed(function () {
            return !!(_this._model() && _this._model().isPropertyModified && _this._model().isPropertyModified(_this.name));
        }));
        _this._disposables.push(_this.isPropertyHighlighted = ko.pureComputed(function () {
            if (_this._shouldSkipHighlighting(_this.name))
                return false;
            var controlModel = _this._model();
            return !!(controlModel && controlModel.isPropertyHighlighted && controlModel.isPropertyHighlighted(_this.name));
        }));
        return _this;
    }
    Editor.prototype._setPadding = function (position, value) {
        var obj = {};
        obj['padding-' + position] = value;
        return obj;
    };
    Editor.prototype.dispose = function () {
        this._validator && this._validator.dispose();
        this._validator = null;
        _super.prototype.dispose.call(this);
        this._cachedValue = null;
        this._model(null);
    };
    Editor.prototype._shouldSkipHighlighting = function (propertyName) {
        return this.isComplexEditor;
    };
    Editor.prototype._assignValue = function (modelValue, model, newValue, name) {
        if (ko.isObservable(modelValue)) {
            modelValue(newValue);
        }
        else {
            model[name] = newValue;
        }
    };
    Editor.prototype._roundTwoDesemialsForUnitProperties = function (value, model, propertyName) {
        var properties = model && model['constructor'] && model['constructor'].unitProperties;
        if (!properties || properties.indexOf(propertyName) === -1)
            return value;
        return _units_1.roundingXDecimals(value);
    };
    Editor.prototype._init = function (editorTemplate, value, name) {
        var _this = this;
        editorTemplate = editorTemplate || editorsInfo_1.editorTemplates.getEditor('text');
        this.templateName = editorTemplate.header;
        this.contentTemplateName = editorTemplate.content;
        this._cachedValue = undefined;
        this._disposables.push(this.value = ko.computed({
            read: function () {
                var model = _this._model();
                if (!model && _this._cachedValue) {
                    return _this._cachedValue;
                }
                var modelValue = model && model[name] !== undefined ? model[name] : value;
                if (ko.isObservable(modelValue) && !modelValue['push']) {
                    var hasValueInModel = modelValue() !== undefined && modelValue() !== null;
                    _this._cachedValue = hasValueInModel ? _this._roundTwoDesemialsForUnitProperties(modelValue(), model, name) : _this.defaultValue;
                    return _this._cachedValue;
                }
                else {
                    _this._cachedValue = modelValue;
                    return _this._cachedValue;
                }
            },
            write: function (newValue) {
                var model = _this._model();
                if (!model) {
                    return;
                }
                var modelValue = model[name];
                _this._validator.assignWithValidation(newValue, function () {
                    _this._assignValue(modelValue, model, newValue, name);
                });
            }
        }));
        this.name = name;
        this.editorTemplate = editorTemplate && editorTemplate.custom || 'dx-property-editor';
    };
    Editor.prototype._getInfoFromModel = function (viewModel) {
        var _this = this;
        if (!viewModel)
            return null;
        var modelInfo = viewModel['getInfo'] && viewModel['getInfo']();
        if (modelInfo) {
            return modelInfo.filter(function (property) { return property.propertyName === _this.name; })[0];
        }
        return null;
    };
    Editor.prototype.update = function (viewModel) {
        if (!!viewModel) {
            var propertyInfo = this._getInfoFromModel(viewModel);
            var isSameEditorType = propertyInfo && _utils_1.compareEditorInfo(propertyInfo.editor, this.info().editor);
            if (isSameEditorType && this.info() !== propertyInfo) {
                this.info(propertyInfo);
            }
            this._model(this.name in viewModel && (isSameEditorType || !propertyInfo) ? viewModel : null);
        }
        else {
            this._model(null);
        }
    };
    Editor.prototype.getOptions = function (templateOptions) {
        var extendedOptions = this.info.peek().editor.extendedOptions;
        return _utils_2.extend(true, {}, templateOptions, this.editorOptions, extendedOptions);
    };
    Editor.prototype.getValidatorOptions = function (templateValidatorOptions) {
        return this._validator && this._validator.getValidatorOptions(templateValidatorOptions);
    };
    Editor.prototype.registerAccessibilityProvider = function (accessibilityProvider) {
        if (this._accessibilityProvider() != accessibilityProvider)
            this._accessibilityProvider(accessibilityProvider);
    };
    Editor.prototype.assingParent = function (parent) {
        if (this._parent() != parent)
            this._parent(parent);
    };
    Editor.prototype._getEditorValidationRules = function () {
        var info = ko.unwrap(this.info);
        if (!info)
            return;
        var validationRules = info.validationRules;
        return validationRules || (validationRules === null ? null : []);
    };
    Editor.prototype.getValidationRules = function () {
        return this._validator && this._validator.getValidationRules();
    };
    Object.defineProperty(Editor.prototype, "validationRules", {
        get: function () {
            return this.getValidationRules();
        },
        enumerable: true,
        configurable: true
    });
    Editor.prototype.getIdByDisplayName = function (preffix) {
        return preffix + '-' + _validation_1.replaceInvalidSymbols(this.displayName());
    };
    Editor.prototype.getPopupServiceActions = function () {
        var _this = this;
        if (!this._model()) {
            return;
        }
        var actions = (this._model().actions || []).concat();
        (this._model().actionProviders || [])
            .forEach(function (provider) {
            var additionalActions = provider && provider.getActions(_this.name) || [];
            additionalActions.forEach(function (action) { return actions.push(action); });
        });
        return actions;
    };
    Object.defineProperty(Editor.prototype, "isComplexEditor", {
        get: function () { return !!this.contentTemplateName; },
        enumerable: true,
        configurable: true
    });
    return Editor;
}(utils_1.Disposable));
exports.Editor = Editor;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var InOperator = (function (_super) {
    __extends(InOperator, _super);
    function InOperator(criteriaOperator, operands) {
        var _this = _super.call(this) || this;
        _this.assignLeftPart = function (criteriaOperator) {
            _this.criteriaOperator = criteriaOperator.leftPart;
        };
        _this.assignRightPart = function (criteriaOperator) {
            _this.operands = [].concat(criteriaOperator.rightPart);
        };
        _this.operatorType = 'In';
        _this.type = 'In';
        _this.operands = [];
        _this.criteriaOperator = criteriaOperator || new criteriaOperator_1.CriteriaOperator();
        (operands || []).forEach(function (operand) { return _this.operands.push(operand); });
        return _this;
    }
    Object.defineProperty(InOperator.prototype, "leftPart", {
        get: function () {
            return this.criteriaOperator;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InOperator.prototype, "rightPart", {
        get: function () {
            return this.operands;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InOperator.prototype, "displayType", {
        get: function () {
            return 'In';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InOperator.prototype, "enumType", {
        get: function () {
            return InOperator;
        },
        enumerable: true,
        configurable: true
    });
    InOperator.prototype.accept = function (visitor) {
        return visitor.visitInOperator
            ? visitor.visitInOperator(this)
            : new InOperator(this.criteriaOperator && this.criteriaOperator.accept(visitor), this.operands && this.operands.map(function (op) { return op.accept(visitor); }));
    };
    return InOperator;
}(criteriaOperator_1.CriteriaOperator));
exports.InOperator = InOperator;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var value_1 = __webpack_require__(10);
var BetweenOperator = (function (_super) {
    __extends(BetweenOperator, _super);
    function BetweenOperator(property, begin, end) {
        var _this = _super.call(this) || this;
        _this.resetRightPart = function (newVal) {
            _this.begin = new value_1.OperandValue(newVal);
            _this.end = new value_1.OperandValue(newVal);
        };
        _this.assignLeftPart = function (criteriaOperator) {
            _this.property = criteriaOperator.leftPart;
        };
        _this.assignRightPart = function (criteriaOperator) {
            if (criteriaOperator.rightPart.length !== null && criteriaOperator.rightPart.length !== undefined) {
                if (criteriaOperator.rightPart.length) {
                    _this.begin = criteriaOperator.rightPart[0];
                    _this.end = criteriaOperator.rightPart.length > 1 ? criteriaOperator.rightPart[1] : new value_1.OperandValue();
                }
                else {
                    _this.begin = new value_1.OperandValue();
                    _this.end = new value_1.OperandValue();
                }
            }
            else {
                _this.begin = criteriaOperator.rightPart;
                _this.end = new value_1.OperandValue();
            }
        };
        _this.operatorType = 'Between';
        _this.type = 'Between';
        _this.property = property;
        _this.begin = begin || new value_1.OperandValue();
        _this.end = end || new value_1.OperandValue();
        return _this;
    }
    Object.defineProperty(BetweenOperator.prototype, "leftPart", {
        get: function () {
            return this.property;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BetweenOperator.prototype, "rightPart", {
        get: function () {
            return [this.begin, this.end];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BetweenOperator.prototype, "displayType", {
        get: function () {
            return 'Between';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BetweenOperator.prototype, "enumType", {
        get: function () {
            return BetweenOperator;
        },
        enumerable: true,
        configurable: true
    });
    BetweenOperator.prototype.accept = function (visitor) {
        return visitor.visitBetweenOperator
            ? visitor.visitBetweenOperator(this)
            : new BetweenOperator(this.property && this.property.accept(visitor), this.begin && this.begin.accept(visitor), this.end && this.end.accept(visitor));
    };
    return BetweenOperator;
}(criteriaOperator_1.CriteriaOperator));
exports.BetweenOperator = BetweenOperator;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(3);
exports.RangeSpecific = 'range';
function createExpressionEditorCollectionToolOptions(collectionItems, toolName, displayToolName, showDescription) {
    return {
        displayName: localization_utils_1.getLocalization(toolName, displayToolName),
        content: {
            showDescription: showDescription,
            isSelected: ko.observable(false),
            data: {
                items: collectionItems,
                selectedItem: ko.observable(null)
            },
            name: 'dx-expressioneditor-collection'
        },
        dispose: function () { return void 0; }
    };
}
exports.createExpressionEditorCollectionToolOptions = createExpressionEditorCollectionToolOptions;
function wrapExpressionValue(path, value, converter, subscriptions) {
    if (!(converter && path))
        return value;
    var _displayValue = ko.observable(value());
    converter.toDisplayExpression(path(), value()).done(function (result) {
        _displayValue(result);
    }).fail(function () {
        _displayValue(value());
    });
    var valueSubscription = value.subscribe(function (newValue) {
        converter.toDisplayExpression(path(), newValue).done(function (result) {
            _displayValue(result);
        }).fail(function () {
            _displayValue(newValue);
        });
    });
    var pathSubscription = path.subscribe(function (newPath) {
        converter.toDisplayExpression(newPath, value())
            .done(function (result) { _displayValue(result); })
            .fail(function (_) { _displayValue(value()); });
    });
    var displayValue = ko.pureComputed({
        read: function () { return _displayValue(); },
        write: function (newValue) {
            _displayValue(newValue);
            converter.toRealExpression(path(), newValue).done(function (result) {
                value(result);
            }).fail(function () {
                value(newValue);
            });
        }
    });
    if (subscriptions)
        [displayValue, valueSubscription, pathSubscription].forEach(function (x) { return subscriptions.push(x); });
    return displayValue;
}
exports.wrapExpressionValue = wrapExpressionValue;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
function roundingXDecimals(value, useFloor, x) {
    if (useFloor === void 0) { useFloor = false; }
    if (x === void 0) { x = 3; }
    return (useFloor ? Math.floor : Math.round)(value * Math.pow(10, x)) / Math.pow(10, x);
}
exports.roundingXDecimals = roundingXDecimals;
function unitsToPixel(val, measureUnit, zoom) {
    if (zoom === void 0) { zoom = 1; }
    var result;
    if (measureUnit === 'Test' || measureUnit === 'Pixels') {
        result = 1 * val;
    }
    else if (measureUnit === 'TenthsOfAMillimeter') {
        result = val * 3.78 / 10;
    }
    else {
        result = val * 96 / 100;
    }
    result = result * (zoom);
    return roundingXDecimals(result, true);
}
exports.unitsToPixel = unitsToPixel;
function pixelToUnits(val, measureUnit, zoom) {
    var result;
    if (measureUnit === 'Test' || measureUnit === 'Pixels') {
        result = 1 * val;
    }
    else if (measureUnit === 'TenthsOfAMillimeter') {
        result = val / 3.78 * 10;
    }
    else {
        result = val / 96 * 100;
    }
    result = result / (zoom);
    return roundingXDecimals(result);
}
exports.pixelToUnits = pixelToUnits;
function createUnitProperty(model, target, propertyName, property, measureUnit, zoom, afterCreation) {
    var lastVal = 0;
    target[propertyName] = ko.pureComputed({
        read: function () {
            var val = property(model)(), newVal = unitsToPixel(val, measureUnit.peek(), zoom());
            if (Math.abs(newVal - lastVal) > 0.2) {
                lastVal = newVal;
                return lastVal;
            }
            return lastVal;
        },
        write: function (val) {
            if (Math.abs(val - lastVal) <= 0.2)
                return;
            lastVal = val;
            var result = pixelToUnits(val, measureUnit.peek(), zoom());
            property(model)(result);
        }
    });
    afterCreation(target[propertyName]);
}
exports.createUnitProperty = createUnitProperty;
function createUnitProperties(model, target, properties, measureUnit, zoom, afterCreation) {
    if (!properties)
        return;
    Object.keys(properties).forEach(function (propertyName) {
        createUnitProperty(model, target, propertyName, properties[propertyName], measureUnit, zoom, afterCreation);
    });
}
exports.createUnitProperties = createUnitProperties;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(2);
var _internal_1 = __webpack_require__(4);
var AccessibilityControlElementBase = (function (_super) {
    __extends(AccessibilityControlElementBase, _super);
    function AccessibilityControlElementBase(element) {
        var _this = _super.call(this) || this;
        _this.element = element;
        _this._eventListeners = [];
        return _this;
    }
    AccessibilityControlElementBase.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._eventListeners.forEach(function (item) { item.element.removeEventListener(item.eventType, item.listener); });
        this._eventListeners.length = 0;
        this.element = null;
    };
    AccessibilityControlElementBase.prototype.addListener = function (element, eventType, handler) {
        var _this = this;
        var listener = function (e) {
            handler.call(_this, e);
        };
        element.addEventListener(eventType, listener);
        _internal_1.addDisposeCallback(element, function () {
            element.removeEventListener(eventType, listener);
        });
        this._eventListeners.push({ element: element, eventType: eventType, listener: listener });
    };
    AccessibilityControlElementBase.prototype.setTabIndex = function (index) {
        this.element.setAttribute('tabindex', index);
    };
    AccessibilityControlElementBase.prototype.setFocus = function () {
        this.element.focus();
    };
    return AccessibilityControlElementBase;
}(utils_1.Disposable));
exports.AccessibilityControlElementBase = AccessibilityControlElementBase;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TreeListController = (function () {
    function TreeListController() {
        this.selectedItem = null;
    }
    TreeListController.prototype.dispose = function () {
        this.selectedItem = null;
    };
    TreeListController.prototype.itemsFilter = function (item) {
        return true;
    };
    TreeListController.prototype.hasItems = function (item) {
        return item.specifics !== 'none' && (item.specifics === 'List' || item.specifics === 'ListSource' || item.isList === true);
    };
    TreeListController.prototype.canSelect = function (value) {
        return !value.hasItems;
    };
    TreeListController.prototype.select = function (value) {
        if (this.canSelect(value)) {
            this.selectedItem && this.selectedItem.isSelected(false);
            this.selectedItem = value;
            value.isSelected(true);
        }
    };
    return TreeListController;
}());
exports.TreeListController = TreeListController;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var criteriaOperatorSurface_1 = __webpack_require__(18);
var unaryOperandSurface_1 = __webpack_require__(26);
var value_1 = __webpack_require__(10);
var property_1 = __webpack_require__(15);
var parameter_1 = __webpack_require__(29);
var _helper_1 = __webpack_require__(55);
var OperandSurfaceBase = (function (_super) {
    __extends(OperandSurfaceBase, _super);
    function OperandSurfaceBase(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.canChange = true;
        _this.canRemove = false;
        _this.changeValueType = function (type) {
            var parent = _this.getRealParent(_this.parent);
            var property = _this.getRealProperty(_this);
            var propertyLocation = _this.getPropertyName(parent, property);
            var model = parent.model.changeValueType(type.instance, propertyLocation);
            if (propertyLocation.index !== null) {
                parent[propertyLocation.name]()[propertyLocation.index].dispose();
                parent[propertyLocation.name].splice(propertyLocation.index, 1, parent.createChildSurface(model));
            }
            else {
                parent[propertyLocation.name]().dispose();
                parent[propertyLocation.name](parent.createChildSurface(model));
            }
            _this.helper.onChange();
        };
        return _this;
    }
    OperandSurfaceBase.prototype.getRealParent = function (parent) {
        if (parent instanceof unaryOperandSurface_1.UnaryOperandSurface) {
            return this.getRealParent(parent.parent);
        }
        else {
            return parent;
        }
    };
    OperandSurfaceBase.prototype.getRealProperty = function (property) {
        if (property.parent instanceof unaryOperandSurface_1.UnaryOperandSurface) {
            return this.getRealProperty(property.parent);
        }
        else {
            return property;
        }
    };
    OperandSurfaceBase.prototype.getPropertyName = function (parent, searchProperty) {
        var position = null;
        var name = null;
        $.each(parent, function (propertyName, property) {
            if (Array.isArray(ko.unwrap(property)) && ko.isObservable(property)) {
                var index = ko.unwrap(property).indexOf(searchProperty);
                if (index > -1) {
                    position = index;
                    name = propertyName;
                    return;
                }
            }
            else if (searchProperty === ko.unwrap(property) && ko.isObservable(property)) {
                name = propertyName;
                return;
            }
        });
        return { index: position, name: name };
    };
    OperandSurfaceBase.prototype.getConvertableParameters = function (destinationSpecifics) {
        if (!this.helper.parameters())
            return [];
        return this.helper.parameters().filter(function (item) {
            var sourceSpecifics = item.specifics && item.specifics.toLocaleLowerCase();
            if (sourceSpecifics == null || destinationSpecifics == null)
                return false;
            if (sourceSpecifics === destinationSpecifics)
                return true;
            if (destinationSpecifics === 'default')
                return true;
            if (destinationSpecifics === 'string')
                return true;
            if (destinationSpecifics === 'float')
                return sourceSpecifics === 'integer';
            return false;
        });
    };
    Object.defineProperty(OperandSurfaceBase.prototype, "changeTypeItems", {
        get: function () {
            var items = [{ name: 'Value', instance: value_1.OperandValue, localizationId: 'AnalyticsCoreStringId.FilterEditor_Operand_Type_Value' }];
            if (this.helper.canChoiceProperty) {
                items.push({ name: 'Property', instance: property_1.OperandProperty, localizationId: 'AnalyticsCoreStringId.FilterEditor_Operand_Type_Property' });
            }
            if (this.helper.canChoiceParameters && (this.getConvertableParameters(this.parent.specifics()).length > 0 || this.helper.canCreateParameters)) {
                items.push({ name: 'Parameter', instance: parameter_1.OperandParameter, localizationId: 'AnalyticsCoreStringId.FilterEditor_Operand_Type_Parameter' });
            }
            items.forEach(_helper_1.initDisplayText);
            return items;
        },
        enumerable: true,
        configurable: true
    });
    return OperandSurfaceBase;
}(criteriaOperatorSurface_1.CriteriaOperatorSurface));
exports.OperandSurfaceBase = OperandSurfaceBase;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var PopupService = (function () {
    function PopupService() {
        this.data = ko.observable();
        this.title = ko.observable();
        this.visible = ko.observable(false);
        this.disabled = ko.observable(false);
        this.actions = ko.observableArray([]);
        this.target = ko.observable();
    }
    return PopupService;
}());
exports.PopupService = PopupService;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var binary_1 = __webpack_require__(23);
var function_1 = __webpack_require__(16);
var aggregate_1 = __webpack_require__(11);
var group_1 = __webpack_require__(14);
var in_1 = __webpack_require__(35);
var value_1 = __webpack_require__(10);
var constant_1 = __webpack_require__(44);
var parameter_1 = __webpack_require__(29);
var property_1 = __webpack_require__(15);
var unary_1 = __webpack_require__(12);
var between_1 = __webpack_require__(36);
var join_1 = __webpack_require__(61);
var CriteriaOperatorPreprocessor = (function () {
    function CriteriaOperatorPreprocessor() {
        this._func = [];
    }
    CriteriaOperatorPreprocessor.prototype.CriteriaOperator = function () {
        return new criteriaOperator_1.CriteriaOperator();
    };
    CriteriaOperatorPreprocessor.prototype.BinaryOperator = function (options) {
        return new binary_1.BinaryOperator(options.left, options.right, options.operatorType);
    };
    CriteriaOperatorPreprocessor.prototype.FunctionOperator = function (options) {
        return new function_1.FunctionOperator(options.operatorType, options.operands);
    };
    CriteriaOperatorPreprocessor.prototype.AggregateOperand = function (options) {
        return new aggregate_1.AggregateOperand(options.property, options.aggregatedExpression, options.aggregateType, options.condition);
    };
    CriteriaOperatorPreprocessor.prototype.GroupOperator = function (options) {
        return new group_1.GroupOperator(options.operation, options.operands);
    };
    CriteriaOperatorPreprocessor.prototype.InOperator = function (options) {
        return new in_1.InOperator(options.criteriaOperator, options.operands);
    };
    CriteriaOperatorPreprocessor.prototype.ConstantValue = function (options) {
        return new constant_1.ConstantValue(options.value);
    };
    CriteriaOperatorPreprocessor.prototype.OperandValue = function (options) {
        return new value_1.OperandValue(options.value);
    };
    CriteriaOperatorPreprocessor.prototype.OperandParameter = function (options) {
        return new parameter_1.OperandParameter(options.parameterName, options.value);
    };
    CriteriaOperatorPreprocessor.prototype.OperandProperty = function (options) {
        return new property_1.OperandProperty(options.propertyName, options.startColumn, options.startLine, options.originalPropertyLength, options.circumflex);
    };
    CriteriaOperatorPreprocessor.prototype.UnaryOperator = function (options) {
        return new unary_1.UnaryOperator(options.operatorType, options.operator);
    };
    CriteriaOperatorPreprocessor.prototype.BetweenOperator = function (options) {
        return new between_1.BetweenOperator(options.property, options.begin, options.end);
    };
    CriteriaOperatorPreprocessor.prototype.JoinOperator = function (options) {
        return new join_1.JoinOperand(options.joinTypeName, options.condition, options.type, options.aggregated);
    };
    CriteriaOperatorPreprocessor.prototype.addListener = function (func) {
        var index = this._func.indexOf(func);
        if (index === -1) {
            this._func.push(func);
        }
    };
    CriteriaOperatorPreprocessor.prototype.removeListener = function (func) {
        var index = this._func.indexOf(func);
        if (index !== -1) {
            this._func.splice(index, 1);
        }
    };
    CriteriaOperatorPreprocessor.prototype.process = function (operatorType, options) {
        var operand = this.CriteriaOperator();
        switch (operatorType) {
            case 'join':
                operand = this.JoinOperator(options);
                break;
            case 'between':
                operand = this.BetweenOperator(options);
                break;
            case 'property':
                operand = this.OperandProperty(options);
                break;
            case 'parameter':
                operand = this.OperandParameter(options);
                break;
            case 'value':
                operand = this.OperandValue(options);
                break;
            case 'in':
                operand = this.InOperator(options);
                break;
            case 'function':
                operand = this.FunctionOperator(options);
                break;
            case 'unary':
                operand = this.UnaryOperator(options);
                break;
            case 'group':
                operand = this.GroupOperator(options);
                break;
            case 'binary':
                operand = this.BinaryOperator(options);
                break;
            case 'const':
                operand = this.ConstantValue(options);
                break;
            case 'aggregate':
                operand = this.AggregateOperand(options);
                break;
        }
        this._func.forEach(function (func) { operand = func(operand, { operatorType: operatorType, options: options }); });
        return operand;
    };
    return CriteriaOperatorPreprocessor;
}());
exports.CriteriaOperatorPreprocessor = CriteriaOperatorPreprocessor;
exports.criteriaCreator = new CriteriaOperatorPreprocessor();


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var value_1 = __webpack_require__(10);
var ConstantValue = (function (_super) {
    __extends(ConstantValue, _super);
    function ConstantValue(value) {
        return _super.call(this, value) || this;
    }
    ConstantValue.prototype.accept = function (visitor) {
        return visitor.visitConstantValue
            ? visitor.visitConstantValue(this)
            : new ConstantValue(this.value);
    };
    return ConstantValue;
}(value_1.OperandValue));
exports.ConstantValue = ConstantValue;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var _utils_1 = __webpack_require__(5);
var ValueEditorHelper = (function () {
    function ValueEditorHelper() {
    }
    ValueEditorHelper._getCharFromKeyCode = function (e) {
        if (e.ctrlKey === false && e.key.length === 1)
            return e.key;
        return null;
    };
    ValueEditorHelper._getCaretPosition = function (el) {
        var start = -1, end = -1, normalizedValue, range, textInputRange, len, endRange;
        try {
            if (typeof el.selectionStart == 'number' && typeof el.selectionEnd == 'number') {
                start = el.selectionStart;
                end = el.selectionEnd;
            }
            else if (document['selection']) {
                range = document['selection'].createRange();
                if (range && range.parentElement() == el) {
                    len = el.value.length;
                    normalizedValue = el.value.replace(/\r\n/g, '\n');
                    textInputRange = el.createTextRange();
                    textInputRange.moveToBookmark(range.getBookmark());
                    endRange = el.createTextRange();
                    endRange.collapse(false);
                    if (textInputRange.compareEndPoints('StartToEnd', endRange) > -1) {
                        start = end = len;
                    }
                    else {
                        start = -textInputRange.moveStart('character', -len);
                        start += normalizedValue.slice(0, start).split('\n').length - 1;
                        if (textInputRange.compareEndPoints('EndToEnd', endRange) > -1) {
                            end = len;
                        }
                        else {
                            end = -textInputRange.moveEnd('character', -len);
                            end += normalizedValue.slice(0, end).split('\n').length - 1;
                        }
                    }
                }
            }
        }
        catch (e) {
        }
        return {
            start: start,
            end: end
        };
    };
    ValueEditorHelper._validate = function (value, minValue, maxValue) {
        var _a, _b, _c, _d;
        if (!/^(0|(-?(([1-9]\d*)|(0\.\d+)|([1-9]\d*\.\d+)|(\d*\.\d+[eE][+\-]?\d+))))$/.test(value))
            return false;
        if (!maxValue)
            return true;
        var negative = value[0] === '-';
        var valModulo = negative ? value.substring(1) : value;
        if (negative && !minValue)
            return false;
        var boundModulo = negative ? minValue.substring(1) : maxValue;
        var valMantissa, valExp, boundMantissa, boundExp;
        _a = valModulo.toLowerCase().split('e'), valMantissa = _a[0], valExp = _a[1];
        _b = boundModulo.toLowerCase().split('e'), boundMantissa = _b[0], boundExp = _b[1];
        var valIntPart, valFracPart, boundIntPart, boundFracPart;
        _c = valMantissa.split('.'), valIntPart = _c[0], valFracPart = _c[1];
        _d = boundMantissa.split('.'), boundIntPart = _d[0], boundFracPart = _d[1];
        valIntPart = (valIntPart || '').replace(/^0+/, '');
        boundIntPart = (boundIntPart || '').replace(/^0+/, '');
        var valOrder = valIntPart.length;
        if (valExp)
            valOrder += parseInt(valExp);
        var boundOrder = boundIntPart.length;
        if (boundExp)
            boundOrder += parseInt(boundExp);
        if (valOrder < boundOrder)
            return true;
        if (valOrder > boundOrder)
            return false;
        valFracPart = valFracPart || '0';
        boundFracPart = boundFracPart || '0';
        if (valIntPart + valFracPart > boundIntPart + boundFracPart)
            return false;
        return true;
    };
    ValueEditorHelper.validateWidgetValue = function (e, validate, defaultVal) {
        var currentValue = e.component.option('value');
        if (!validate(currentValue)) {
            e.component.option('value', defaultVal);
        }
    };
    ValueEditorHelper.getNumberEditorOptions = function (id, specifics, extendOptions) {
        if (extendOptions === void 0) { extendOptions = {}; }
        var editorOptions = ValueEditorHelper.editors[id] || ValueEditorHelper.editors[specifics];
        return editorOptions ? ValueEditorHelper.getValueEditorOptions(editorOptions.regExpEditing, function (value) {
            return ValueEditorHelper._validate(value, editorOptions.minValue, editorOptions.maxValue);
        }, '', extendOptions) : extendOptions;
    };
    ValueEditorHelper.getValueEditorOptions = function (regExpEditing, validate, defaultVal, extendOptions) {
        var _this = this;
        if (extendOptions === void 0) { extendOptions = {}; }
        var options = {
            onFocusIn: function (e) {
                ValueEditorHelper.validateWidgetValue(e, validate, defaultVal);
                ValueEditorHelper._invokeStandardHandler(extendOptions, 'onFocusIn', e);
            },
            onKeyDown: function (e) {
                var char = ValueEditorHelper._getCharFromKeyCode(e.event);
                if (!char)
                    return;
                var $input = $(e.element).find('input').eq(0);
                var caretPosition = ValueEditorHelper._getCaretPosition($input.get(0));
                var currentValue = $input.val();
                if (caretPosition.start < 0) {
                    caretPosition = currentValue ? currentValue.length : 0;
                }
                var result = [currentValue.slice(0, caretPosition.start), char, currentValue.slice(caretPosition.end)].join('');
                if (!regExpEditing.test(result))
                    e.event.preventDefault();
                $input = null;
                ValueEditorHelper._invokeStandardHandler(extendOptions, 'onKeyDown', e);
            },
            onPaste: function (e) {
                var clipboardData = e.event.originalEvent.clipboardData || window['clipboardData'] || {};
                var pastedData = clipboardData.getData && clipboardData.getData('Text');
                if (typeof pastedData !== 'string')
                    return;
                var $input = $(e.element).find('input').eq(0);
                var caretPosition = ValueEditorHelper._getCaretPosition($input.get(0));
                var currentValue = $input.val();
                if (caretPosition.start < 0) {
                    caretPosition.end = caretPosition.start = currentValue ? currentValue.length : 0;
                }
                var result = [
                    currentValue.slice(0, caretPosition.start), pastedData, currentValue.slice(caretPosition.end)
                ].join('');
                if (!regExpEditing.test(result))
                    e.event.preventDefault();
                $input = null;
                ValueEditorHelper._invokeStandardHandler(extendOptions, 'onPaste', e);
            },
            onValueChanged: function (e) {
                if (e.value !== defaultVal)
                    _this.validateWidgetValue(e, validate, e.previousValue);
                ValueEditorHelper._invokeStandardHandler(extendOptions, 'onValueChanged', e);
            }
        };
        return _utils_1.extend({}, extendOptions, options);
    };
    ValueEditorHelper.isValid = function (id, specifics, value) {
        var editorOptions = ValueEditorHelper.editors[id] || ValueEditorHelper.editors[specifics];
        return editorOptions.regExpEditing.test(value) && ValueEditorHelper._validate(value, editorOptions.minValue, editorOptions.maxValue);
    };
    ValueEditorHelper._invokeStandardHandler = function (extendOptions, name, e) {
        if ($.isFunction(extendOptions[name]))
            extendOptions[name](e);
    };
    ValueEditorHelper.editors = {
        'integer': {
            regExpEditing: /^-?\d*$/
        },
        'float': {
            regExpEditing: /^-?(\d+\.?\d*)?([eE][+\-]?\d+)?$/
        },
        'System.Byte': {
            regExpEditing: /^\d*$/,
            minValue: null,
            maxValue: '255'
        },
        'System.SByte': {
            regExpEditing: /^-?\d*$/,
            minValue: '-128',
            maxValue: '127'
        },
        'System.Int16': {
            regExpEditing: /^-?\d*$/,
            minValue: '-32768',
            maxValue: '32767'
        },
        'System.UInt16': {
            regExpEditing: /^\d*$/,
            minValue: null,
            maxValue: '65535'
        },
        'System.Int32': {
            regExpEditing: /^-?\d*$/,
            minValue: '-2147483648',
            maxValue: '2147483647'
        },
        'System.UInt32': {
            regExpEditing: /^\d*$/,
            minValue: null,
            maxValue: '4294967295'
        },
        'System.Int64': {
            regExpEditing: /^-?\d*$/,
            minValue: '-9223372036854775808',
            maxValue: '9223372036854775807'
        },
        'System.UInt64': {
            regExpEditing: /^\d*$/,
            minValue: null,
            maxValue: '18446744073709551615'
        },
        'System.Single': {
            regExpEditing: /^-?(\d+\.?\d*)?([eE][+\-]?\d*)?$/,
            minValue: '-3.40282347e+38',
            maxValue: '3.40282347e+38'
        },
        'System.Double': {
            regExpEditing: /^-?(\d+\.?\d*)?([eE][+\-]?\d*)?$/,
            minValue: '-1.7976931348623157e+308',
            maxValue: '1.7976931348623157e+308'
        },
        'System.Decimal': {
            regExpEditing: /^-?(\d+\.?\d*)?([eE][+\-]?\d*)?$/,
            minValue: '-79228162514264337593543950335',
            maxValue: '79228162514264337593543950335'
        }
    };
    return ValueEditorHelper;
}());
exports.ValueEditorHelper = ValueEditorHelper;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _functions_1 = __webpack_require__(64);
var utils_1 = __webpack_require__(2);
var _utils_1 = __webpack_require__(22);
var localization_utils_1 = __webpack_require__(3);
var pathRequest_1 = __webpack_require__(27);
var _expressioneditor_1 = __webpack_require__(37);
var _operatorNames_1 = __webpack_require__(65);
var criteriaOperator_1 = __webpack_require__(6);
var CodeCompletor = (function (_super) {
    __extends(CodeCompletor, _super);
    function CodeCompletor(_options) {
        var _this = _super.call(this) || this;
        _this._options = _options;
        _this._contextPath = null;
        _this._isInContext = function () { return _this._contextPath !== null; };
        _this._getPath = function () { return _this._contextPath ? _this._path() + '.' + _this._contextPath : _this._path(); };
        _this.identifierRegexps = [/\./, /\[/];
        _this._fieldListProvider = _options.fieldListProvider;
        _this._path = _options.path;
        _this._editor = _options.editor;
        _this._functions = ko.computed(function () { return ko.unwrap(_options.functions) || _functions_1.functionDisplay(); });
        _this._rootItems = _options.rootItems || [{ name: 'Parameters', needPrefix: true }];
        _this._disposables.push(_this._functions);
        return _this;
    }
    CodeCompletor.prototype._previousSymbol = function () {
        var cursorPosition = this._editor.getCursorPosition();
        return this._editor.session.getLine(cursorPosition.row)[cursorPosition.column - 1];
    };
    CodeCompletor.prototype.beforeInsertMatch = function (editor, token, parentPrefix) {
        var cursorPosition = editor.getCursorPosition();
        if (parentPrefix === 'Parameters.') {
            token = token || !this['_isInContext']() && editor.session.getTokenAt(cursorPosition.row, cursorPosition.column);
            if (token) {
                if ((token.type === 'support.variable.other' || token.type === 'support.function')) {
                    editor.session.remove({
                        start: { column: token.start - 1 || 0, row: cursorPosition.row },
                        end: { column: Math.max(token.start + token.value.length || 0, cursorPosition.column), row: cursorPosition.row }
                    });
                }
                else if (token.type === 'support.variable.parameter') {
                    editor.session.remove({
                        start: { column: token.start || 0, row: cursorPosition.row },
                        end: { column: Math.max(token.start + token.value.length + 1 || 0, cursorPosition.column), row: cursorPosition.row }
                    });
                }
                else if (token.type === 'text' && token.value[token.value.length - 1] === '?') {
                    editor.session.remove({
                        start: { column: token.start + token.value.length - 1 || 0, row: cursorPosition.row },
                        end: { column: token.start + token.value.length || 0, row: cursorPosition.row },
                    });
                }
            }
        }
        else {
            token = token || editor.session.getTokenAt(cursorPosition.row, cursorPosition.column);
            if (!token)
                return;
            var endColumn = null;
            if (token.type === 'support.variable.other' || token.type === 'support.function') {
                endColumn = Math.max(token.start + token.value.length || 0, cursorPosition.column);
            }
            else if (token.type === 'support.context.start' && cursorPosition.column < token.start + token.value.length) {
                endColumn = token.start + token.value.length - 1 || 0;
            }
            if (endColumn !== null)
                editor.session.remove({
                    start: { column: token.start || 0, row: cursorPosition.row },
                    end: { column: endColumn, row: cursorPosition.row }
                });
        }
    };
    CodeCompletor.prototype.insertMatch = function (editor, parentPrefix, fieldName) {
        if (parentPrefix === 'Parameters.') {
            editor.insert('?' + fieldName);
        }
        else {
            editor.insert('[' + (parentPrefix || '') + fieldName + ']');
        }
    };
    CodeCompletor.prototype.generateFieldDisplayName = function (parentPrefix, displayName) {
        if (parentPrefix === 'Parameters.') {
            return '?' + displayName;
        }
        return '[' + displayName + ']';
    };
    CodeCompletor.prototype._convertDataMemberInfoToCompletions = function (fields, token, parentPrefix) {
        var _this = this;
        if (parentPrefix === void 0) { parentPrefix = ''; }
        return (fields || []).map(function (field) {
            var displayName = _this.generateFieldDisplayName(parentPrefix, field.displayName);
            return {
                caption: field.displayName || field.name,
                snippet: displayName,
                meta: _utils_1.isList(field) && localization_utils_1.getLocalization('list', 'DxDesignerStringId.CodeCompletion_List') || localization_utils_1.getLocalization('field', 'DxDesignerStringId.CodeCompletion_Field'),
                score: _utils_1.isList(field) && 200 || 100,
                completer: {
                    insertMatch: function (editor, data) {
                        _this.beforeInsertMatch(editor, token, parentPrefix);
                        _this.insertMatch(editor, parentPrefix, _this._options.getRealExpression ? (field.displayName || field.name) : field.name);
                    }
                }
            };
        });
    };
    CodeCompletor.prototype._combinePath = function (parentPrefix) {
        var path = this._getPath();
        if (parentPrefix) {
            var rootItem = this._rootItems.filter(function (item) { return parentPrefix.indexOf(item.name) === 0; })[0];
            if (rootItem && rootItem.rootPath)
                path = [rootItem.rootPath, parentPrefix].join('.');
            else
                path = [path, parentPrefix].join('.');
        }
        return path;
    };
    CodeCompletor.prototype._getParentPrefix = function (token) {
        var position = this._editor.getCursorPosition().column - token.start - 1;
        var dotIndex = token.value.lastIndexOf('.', position);
        var closeIndex = token.value.lastIndexOf(']', position);
        dotIndex = Math.max(closeIndex, dotIndex);
        var startIndex = token.type === 'support.variable.other' || token.type === 'support.context.start' ? 1 : 0;
        var parentPrefix = token.value.substring(startIndex, dotIndex);
        if (parentPrefix[0] === '[')
            parentPrefix = parentPrefix.substr(1);
        if (parentPrefix[parentPrefix.length - 1] === ']')
            parentPrefix = parentPrefix.substring(0, parentPrefix.length - 1);
        return parentPrefix;
    };
    CodeCompletor.prototype._getRealPath = function (path) {
        var pathArray = path.split('.');
        var $deferred = $.Deferred();
        if (this._options.getRealExpression) {
            this._options.getRealExpression(pathArray[0], this.generateFieldDisplayName(null, pathArray.splice(1).join('.'))).done(function (result) {
                result = result.slice(1, result.length - 1);
                $deferred.resolve(result && [pathArray[0], result].join('.') || pathArray[0]);
            }).fail(function () { $deferred.resolve(path); });
        }
        else {
            $deferred.resolve(path);
        }
        return $deferred.promise();
    };
    CodeCompletor.prototype._getFields = function (token, completions, ignorePrefix) {
        var _this = this;
        if (token === void 0) { token = null; }
        if (completions === void 0) { completions = []; }
        if (ignorePrefix === void 0) { ignorePrefix = false; }
        var $deferred = $.Deferred();
        var parentPrefix = undefined;
        if (token && (token.type === 'support.variable.other' || token.type === 'support.function' || token.type === 'support.context.start')) {
            parentPrefix = this._getParentPrefix(token);
        }
        this._getRealPath(this._combinePath(parentPrefix)).done(function (path) {
            var $fields = ko.unwrap(_this._fieldListProvider).getItems(new pathRequest_1.PathRequest(path))
                .done(function (fields) {
                completions.push.apply(completions, _this._convertDataMemberInfoToCompletions(CodeCompletor._cleanupFields(fields), token, ignorePrefix ? null : parentPrefix && parentPrefix + '.'));
            });
            var $deferreds = [$fields];
            var rootPathRequests = [];
            if (!parentPrefix) {
                _this._rootItems.forEach(function (item) {
                    var path = item.rootPath || item.name;
                    if (rootPathRequests.indexOf(path) === -1) {
                        rootPathRequests.push(path);
                        $deferreds.push(ko.unwrap(_this._fieldListProvider).getItems(new pathRequest_1.PathRequest(path))
                            .done(function (fields) {
                            _this._processFields($deferreds, fields, completions, path, token, item.needPrefix ? item.name + '.' : '', true);
                        }));
                    }
                });
            }
            $.when($deferreds).always(function () { $deferred.resolve(completions); });
        });
        return $deferred.promise();
    };
    CodeCompletor._cleanupFields = function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter(function (x) { return x.specifics !== 'parameters' && x.specifics !== 'none'; });
    };
    CodeCompletor.prototype._processFields = function ($deferreds, fields, completions, path, token, parentPrefix, needCleanup) {
        var _this = this;
        if (parentPrefix === void 0) { parentPrefix = ''; }
        if (needCleanup === void 0) { needCleanup = false; }
        var pushToCompletions = function (fields) {
            completions.push.apply(completions, _this._convertDataMemberInfoToCompletions(needCleanup ? CodeCompletor._cleanupFields(fields) : fields, token, parentPrefix));
        };
        fields.forEach(function (item) {
            if (item.specifics === _expressioneditor_1.RangeSpecific && _utils_1.isList(item)) {
                $deferreds.push(ko.unwrap(_this._fieldListProvider).getItems(new pathRequest_1.PathRequest(path + '.' + item.name))
                    .done(function (subFields) {
                    pushToCompletions(subFields);
                })
                    .fail(function () {
                    pushToCompletions([item]);
                }));
            }
            else {
                pushToCompletions([item]);
            }
        });
    };
    CodeCompletor.prototype.getFunctionsCompletions = function () {
        var functions = [];
        var functionsWithoutAggregates = ko.unwrap(this._functions).filter(function (fnDisplay) { return fnDisplay.category !== 'Aggregate'; });
        functionsWithoutAggregates.forEach(function (fnDisplay) {
            Object.keys(fnDisplay.items).forEach(function (fnKey) {
                if (fnDisplay.items[fnKey]) {
                    functions.push(createFunctionCompletion(fnDisplay.items[fnKey][0], fnKey));
                }
            });
        });
        return functions;
    };
    CodeCompletor.prototype.getAggregateCompletions = function () {
        var functions = [];
        var aggregates = ko.unwrap(this._functions).filter(function (fnDisplay) { return fnDisplay.category === 'Aggregate'; })[0];
        if (aggregates)
            Object.keys(aggregates.items).forEach(function (fnKey) {
                if (aggregates.items[fnKey]) {
                    functions.push(createFunctionCompletion(aggregates.items[fnKey][0], fnKey, fnKey + '()'));
                }
            });
        return functions;
    };
    CodeCompletor.prototype.getOperatorCompletions = function (prefix) {
        return _operatorNames_1.operatorNames.map(function (operator) {
            return { caption: operator.text, snippet: prefix + operator.text, meta: localization_utils_1.getLocalization('operator', 'DxDesignerStringId.CodeCompletion_Operator') };
        });
    };
    CodeCompletor.prototype._addFunctions = function (completions) {
        completions.push.apply(completions, this.getFunctionsCompletions());
    };
    CodeCompletor.prototype._addAggregates = function (completions) {
        completions.push.apply(completions, this.getAggregateCompletions());
    };
    CodeCompletor.prototype._addOperators = function (completions, text) {
        var prefix = /\s/.test(text[text.length - 1]) ? '' : ' ';
        completions.push.apply(completions, this.getOperatorCompletions(prefix));
    };
    CodeCompletor.prototype._addParameterOperators = function (completions, token) {
        var _this = this;
        var $deferred = $.Deferred();
        var $parametersPromises = [];
        var paramPath = 'Parameters';
        $parametersPromises.push(ko.unwrap(this['_fieldListProvider']).getItems(new pathRequest_1.PathRequest(paramPath))
            .done(function (fields) {
            _this._processFields($parametersPromises, fields, completions, paramPath, token, paramPath + '.');
        }));
        $.when($parametersPromises).always(function () { $deferred.resolve(completions); });
        return $deferred.promise();
    };
    CodeCompletor.prototype._getOperands = function (token) {
        if (token === void 0) { token = null; }
        var result = [];
        this._addFunctions(result);
        return this._getFields(token, result);
    };
    CodeCompletor.prototype._getOperandsOrOperators = function (token, text, completions) {
        var exceptionInfo;
        try {
            criteriaOperator_1.CriteriaOperator.parse(text);
        }
        catch (exception) {
            exceptionInfo = exception.hash;
        }
        var trimmedText = text.trim();
        var lastNonSpaceSymbol = trimmedText[trimmedText.length - 1];
        if (lastNonSpaceSymbol === '?' && text[text.length - 1] !== ' ') {
            this._addParameterOperators(completions, token);
        }
        else if (!exceptionInfo && trimmedText || (lastNonSpaceSymbol === ']' || lastNonSpaceSymbol === ')')) {
            this._addOperators(completions, text);
        }
        else {
            return this._getOperands();
        }
    };
    CodeCompletor.prototype._findStartContextTokenPosition = function (tokens, index) {
        var blocks = 0;
        var path = [];
        for (var i = index; i > -1; i--) {
            if (tokens[i].type === 'support.context.end') {
                blocks++;
            }
            else if (tokens[i].type === 'support.context.start') {
                if (blocks > 0)
                    blocks--;
                else
                    return i;
            }
        }
    };
    CodeCompletor.prototype._findOpenedStartContext = function (tokens, index) {
        var openedContextIndexes = [];
        var contextItems = tokens.filter(function (token, tokenIndex) { return (token.type === 'support.context.start' || token.type === 'support.context.end') && tokenIndex < index; });
        for (var i = 0; i < contextItems.length; i++) {
            if (contextItems[i].type === 'support.context.start') {
                openedContextIndexes.push(tokens.indexOf(contextItems[i]));
            }
            else {
                openedContextIndexes.pop();
            }
        }
        return openedContextIndexes;
    };
    CodeCompletor.prototype._findOpenedAggregates = function (tokens, index) {
        var openedAggregatesIndexes = [];
        var aggregates = tokens.filter(function (token, tokenIndex) { return token.type === 'support.other.aggregate' && tokenIndex < index; });
        if (aggregates.length > 0) {
            var currentToken = tokens[index];
            var currentCursorPosition = this._editor.getCursorPosition().column - (currentToken && currentToken.start || 0);
            for (var i = aggregates.length - 1; i > -1; i--) {
                var aggregateIndex = tokens.indexOf(aggregates[i]);
                var openBrace = 0;
                var closeBrace = 0;
                var isClosedAggregate = false;
                if (aggregateIndex + 1 === index && tokens[aggregateIndex + 1].value.substr(0, currentCursorPosition).indexOf('()') !== -1 ||
                    aggregateIndex + 1 < index && tokens[aggregateIndex + 1].value.indexOf('()') !== -1) {
                    isClosedAggregate = true;
                    index = aggregateIndex;
                    continue;
                }
                for (var j = aggregateIndex; j < index; j++) {
                    if (tokens[j].value.trim() === '(') {
                        openBrace++;
                    }
                    else if (tokens[j].value.trim() === ')') {
                        closeBrace++;
                    }
                    if (openBrace === closeBrace && openBrace !== 0) {
                        isClosedAggregate = true;
                        break;
                    }
                }
                if (!isClosedAggregate)
                    openedAggregatesIndexes.splice(0, 0, aggregateIndex);
                index = aggregateIndex;
            }
        }
        return openedAggregatesIndexes;
    };
    CodeCompletor.prototype._getContextPath = function (tokens, currentPosition) {
        var path = [];
        var openedAggregatePositions = this._findOpenedAggregates(tokens, currentPosition);
        var openedContextPositions = this._findOpenedStartContext(tokens, currentPosition);
        var contextPath = openedContextPositions.concat.apply(openedContextPositions, openedAggregatePositions).sort(function (a, b) { return a - b; });
        if (contextPath.length > 0) {
            for (var i = 0; i < contextPath.length; i++) {
                if (tokens[contextPath[i]].type === 'support.other.aggregate') {
                    if (tokens[contextPath[i] - 1].type === 'support.context.end') {
                        var startContextToken = this._findStartContextTokenPosition(tokens, contextPath[i] - 2);
                        var member = trimBrackets(tokens[startContextToken].value.match(/^\[(?:[^\]\)])*\]/)[0]);
                        path.push(member);
                    }
                    else if (tokens[contextPath[i] - 1].type === 'support.variable.other') {
                        path.push(trimBrackets(tokens[contextPath[i] - 1].value));
                    }
                }
                else {
                    var member = trimBrackets(tokens[contextPath[i]].value.match(/^\[(?:[^\]\)])*\]/)[0]);
                    path.push(member);
                }
            }
        }
        return path.filter(function (x) { return !!x; }).join('.');
    };
    CodeCompletor.prototype._getCompletions = function (editor, session, pos, prefix) {
        var $deferred;
        var completions = [];
        var currentToken = session.getTokenAt(pos.row, pos.column);
        var text = editor.session.getLine(pos.row).substring(0, pos.column);
        var tokens = session.getTokens(pos.row);
        var currentTokenIndex = currentToken ? currentToken.index : -1;
        this._contextPath = this._getContextPath(tokens, currentTokenIndex);
        if (!currentToken) {
            $deferred = this._getOperands();
        }
        else if (currentToken.type === 'support.context.start') {
            var ignorePrefix = this._editor.getCursorPosition().column - currentToken.start === currentToken.value.length;
            if (ignorePrefix) {
                var functions = [];
                this._addFunctions(functions);
            }
            $deferred = this._getFields(currentToken, functions, ignorePrefix);
        }
        else if (currentToken.type === 'string.quoted.single') {
        }
        else if (currentToken.type.indexOf('support.variable') === 0) {
            $deferred = this._getFields(currentToken);
        }
        else if (currentToken.type === 'support.function') {
            $deferred = this.defaultProcess(currentToken, text.substring(0, currentToken.start), completions);
        }
        else if (currentToken.type === 'support.other.aggregate') {
            var previousToken = tokens[currentTokenIndex - 1];
            this._addAggregates(completions);
            if (previousToken && trimBrackets(previousToken.value).trim()) {
                $deferred = this._getFields({
                    start: (currentToken.start - (previousToken.value || '').length) || 0,
                    value: previousToken.value + currentToken.value,
                    type: 'support.function'
                }, completions);
            }
        }
        else {
            if (!(currentToken.type.indexOf('comment') === 0)) {
                $deferred = this.defaultProcess(currentToken, text, completions);
            }
        }
        return $deferred ? $deferred.promise() : $.Deferred().resolve(completions).promise();
    };
    CodeCompletor.prototype.defaultProcess = function (token, text, completions) {
        return this._getOperandsOrOperators(token, text, completions);
    };
    CodeCompletor.prototype.getCompletions = function (aceEditor, session, pos, prefix, callback) {
        this._getCompletions(aceEditor, session, pos, prefix).done(function (completions) {
            callback(null, completions);
        });
    };
    CodeCompletor.prototype.getDocTooltip = function (item) {
        if (item.tooltip && !item.docHTML) {
            item.docHTML = [
                item.tooltip
            ].join('');
        }
    };
    return CodeCompletor;
}(utils_1.Disposable));
exports.CodeCompletor = CodeCompletor;
function createFunctionCompletion(fnInfo, name, insertValue) {
    if (insertValue === void 0) { insertValue = null; }
    var insertValue = insertValue || fnInfo.text;
    return {
        caption: name,
        snippet: insertValue,
        meta: localization_utils_1.getLocalization('function', 'DxDesignerStringId.CodeCompletion_Function'),
        tooltip: fnInfo.description || localization_utils_1.getLocalization(fnInfo.text, fnInfo.descriptionStringId) || null,
        score: 10,
        completer: {
            insertMatch: function (editor, data) {
                var completions = editor.completer.completions;
                if (completions.filterText) {
                    var ranges = editor.selection.getAllRanges();
                    for (var i = 0, range; range = ranges[i]; i++) {
                        range.start.column -= completions.filterText.length;
                        editor.session.remove(range);
                    }
                }
                if (insertValue.substr(0, 3) === '[].') {
                    var ranges = editor.selection.getAllRanges();
                    for (var i = 0, range; range = ranges[i]; i++) {
                        range.start.column -= 2;
                        if (editor.session.getTextRange(range) === '].')
                            insertValue = insertValue.substr(3);
                    }
                }
                editor.insert(insertValue);
                _utils_1.setCursorInFunctionParameter(fnInfo.paramCount, editor, insertValue);
            }
        }
    };
}
exports.createFunctionCompletion = createFunctionCompletion;
function trimBrackets(value) {
    return value.substring(value[0] === '[' ? 1 : 0, value[value.length - 1] === ']' ? value.length - 1 : value.length);
}
exports.trimBrackets = trimBrackets;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _metadata_1 = __webpack_require__(70);
var Size = (function () {
    function Size(width, height) {
        this.isPropertyDisabled = function (name) { return void 0; };
        this.height = ko.observable(height).extend({ 'dxdnum': { min: 2 } });
        this.width = ko.observable(width).extend({ 'dxdnum': { min: 2 } });
    }
    Size.prototype.getInfo = function () {
        return _metadata_1.sizeFake;
    };
    Size.fromString = function (value) {
        if (value === void 0) { value = '0, 0'; }
        var components = value.split(',');
        return new Size(parseFloat(components[0]), parseFloat(components[1]));
    };
    Size.prototype.toString = function () {
        return this.width() + ', ' + this.height();
    };
    Size.unitProperties = ['width', 'height'];
    return Size;
}());
exports.Size = Size;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var _internal_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(2);
var _utils_1 = __webpack_require__(9);
var KeyboardHelperBase = (function (_super) {
    __extends(KeyboardHelperBase, _super);
    function KeyboardHelperBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KeyboardHelperBase.prototype._processShortcut = function (map, e, index) {
        var method = map[_utils_1.KeyboardCodesEnum[e.keyCode]];
        if (method) {
            return method(e, index);
        }
        return false;
    };
    KeyboardHelperBase.prototype.processShortcut = function (e, index) {
        return this._processShortcut(this.shortcutMap, e, index);
    };
    KeyboardHelperBase.prototype.processChildrenShortcut = function (e, index) {
        return this._processShortcut(this.childrenShortcutMap, e, index);
    };
    return KeyboardHelperBase;
}(utils_1.Disposable));
exports.KeyboardHelperBase = KeyboardHelperBase;
var KeyboardHelper = (function (_super) {
    __extends(KeyboardHelper, _super);
    function KeyboardHelper(selection, undoEngine) {
        var _this = _super.call(this) || this;
        _this._selection = selection;
        _this._undoEngine = undoEngine;
        _this.shortcutMap = {
            Esc: function (e) { _this.processEsc(); return true; },
            Left: function (e) { _this.moveSelectedControls(true, true, -1); return true; },
            Up: function (e) { _this.moveSelectedControls(true, false, -1); return true; },
            Right: function (e) { _this.moveSelectedControls(false, true, 1); return true; },
            Down: function (e) { _this.moveSelectedControls(false, false, 1); return true; }
        };
        return _this;
    }
    KeyboardHelper.prototype.processEsc = function () {
        var parent = this._selection.focused() && this._selection.focused().parent;
        parent && this._selection.focused(parent);
    };
    KeyboardHelper.prototype.moveSelectedControls = function (leftUp, isHoriz, sign) {
        var focusedControl = this._selection.focused();
        if (!focusedControl || focusedControl && focusedControl.getControlModel().getMetaData().isCopyDeny) {
            return;
        }
        this._undoEngine && this._undoEngine().start();
        var distance = 1, axisProperty = isHoriz ? 'left' : 'top', lengthProperty = isHoriz ? 'width' : 'height', minAxis, maxSide, newAxis;
        if (focusedControl.rect) {
            minAxis = focusedControl.rect()[axisProperty];
            maxSide = focusedControl.rect()[axisProperty] + focusedControl.rect()[lengthProperty];
        }
        else {
            return;
        }
        this._selection.selectedItems.filter(function (item) { return !item.locked; }).forEach(function (item) {
            var axis = item.rect()[axisProperty];
            if (axis < minAxis) {
                minAxis = axis;
            }
        });
        this._selection.selectedItems.filter(function (item) { return !item.locked; }).forEach(function (item) {
            var side = item.rect()[axisProperty] + item.rect()[lengthProperty];
            if (side > maxSide) {
                maxSide = side;
            }
        });
        if ((leftUp && minAxis <= 0) || (!focusedControl.parent.rect || (!leftUp && maxSide.toFixed(5) >= focusedControl.parent.rect()[lengthProperty]))) {
            return;
        }
        else {
            this._selection.selectedItems.filter(function (item) { return !item.locked; })
                .filter(function (item) { return !!item.rect; })
                .forEach(function (item) {
                var newVal = {}, itemAxisProperty = item.rect()[axisProperty], itemLengthProperty = item.rect()[lengthProperty], parentLengthProperty = item.parent.rect()[lengthProperty];
                newAxis = itemAxisProperty + sign * distance;
                if ((leftUp && newAxis >= 0) || (!leftUp && (newAxis + itemLengthProperty) <= parentLengthProperty)) {
                    newVal[axisProperty] = newAxis;
                }
                if (!leftUp && (newAxis + itemLengthProperty) > parentLengthProperty) {
                    newVal[axisProperty] = parentLengthProperty - itemLengthProperty;
                }
                if (leftUp && newAxis < 0 && itemAxisProperty > 0) {
                    newVal[axisProperty] = 0;
                }
                item.rect(newVal);
            });
        }
        this._undoEngine && this._undoEngine().end();
    };
    return KeyboardHelper;
}(KeyboardHelperBase));
exports.KeyboardHelper = KeyboardHelper;
var KeyDownHandlersManager = (function () {
    function KeyDownHandlersManager(targetElement) {
        this._handlers = [];
        this._targetElement = targetElement;
    }
    Object.defineProperty(KeyDownHandlersManager.prototype, "_activeHandler", {
        get: function () {
            return this._handlers.length > 0 ? this._handlers[this._handlers.length - 1] : null;
        },
        enumerable: true,
        configurable: true
    });
    KeyDownHandlersManager.prototype._removeHandler = function (handler, eventName) {
        var index = this._handlers.indexOf(handler);
        if (index < 0)
            return;
        this._handlers.splice(index, 1);
        if (index === this._handlers.length) {
            this._targetElement.removeEventListener(eventName, handler);
            if (this._activeHandler)
                this._targetElement.addEventListener(eventName, this._activeHandler);
        }
    };
    KeyDownHandlersManager.prototype.bindHandler = function (element, handler, eventName) {
        var _this = this;
        if (eventName === void 0) { eventName = 'keydown'; }
        if (this._activeHandler)
            this._targetElement.removeEventListener(eventName, this._activeHandler);
        var _handler = function (e) {
            if ($(_this._targetElement).closest('.dx-designer').length > 0 ||
                $(e.target).closest('.dx-designer').length > 0 ||
                e.target === document.body)
                handler(e);
        };
        this._handlers.push(_handler);
        this._targetElement.addEventListener(eventName, _handler);
        _internal_1.addDisposeCallback(element, function () { _this._removeHandler(_handler, eventName); });
    };
    return KeyDownHandlersManager;
}());
exports.KeyDownHandlersManager = KeyDownHandlersManager;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _keyboardHelper_1 = __webpack_require__(48);
var _arrayutils_1 = __webpack_require__(32);
var _internal_1 = __webpack_require__(4);
var _controlElementBase_1 = __webpack_require__(39);
var AccessibilityKeyboardHelperBase = (function (_super) {
    __extends(AccessibilityKeyboardHelperBase, _super);
    function AccessibilityKeyboardHelperBase() {
        var _this = _super.call(this) || this;
        _this.childrenInitialized = false;
        _this.accessibilityCompliantEnabled = false;
        _this.focusFirstFocusableDescendant = false;
        _this.controlElements = [];
        _this._eventListeners = [];
        _this.setTabIndexes = function (index) {
            _this.controlElements.forEach(function (button) { return button.setTabIndex(index); });
        };
        _this.liveRegion = function () {
            if (!_this.liveRegionId)
                return null;
            if (!_this._liveRegion || !_this._liveRegion.element) {
                _this._liveRegion = {
                    element: document.getElementById(_this.liveRegionId),
                    changeText: function (text, timeout) {
                        if (timeout === void 0) { timeout = 200; }
                        return setTimeout(function () {
                            if (_this._liveRegion.element)
                                _this._liveRegion.element.textContent = text;
                        }, timeout);
                    }
                };
            }
            return _this._liveRegion;
        };
        _this.shortcutMap = {
            Esc: function (e) { return _this.handleEscKey(e); },
            Tab: function (e) {
                var shiftKey = !!(e && e.shiftKey);
                return shiftKey ? _this.handleShiftTabKey(e) : _this.handleTabKey(e);
            },
            Enter: function (e) { return _this.handleEnterKey(e); },
            Space: function (e) { return _this.handleSpaceKey(e); },
            End: function (e) { return _this.handleEndKey(e); },
            Home: function (e) { return _this.handleHomeKey(e); },
            Up: function (e) { return _this.handleUpArrowKey(e); },
            Down: function (e) { return _this.handleDownArrowKey(e); },
            Left: function (e) { return _this.handleLeftArrowKey(e); },
            Right: function (e) { return _this.handleRightArrowKey(e); },
        };
        _this.childrenShortcutMap = {
            Tab: function (e, index) {
                var shiftKey = !!(e && e.shiftKey);
                return shiftKey ? _this.itemHandleShiftTabKey(e, index) : _this.itemHandleTabKey(e, index);
            },
            Enter: function (e, index) { return _this.itemHandleEnterKey(e, index); },
            Space: function (e, index) { return _this.itemHandleSpaceKey(e, index); },
            End: function (e, index) { return _this.itemHandleEndKey(e, index); },
            Home: function (e, index) { return _this.itemHandleHomeKey(e, index); },
            Up: function (e, index) { return _this.itemHandleUpArrowKey(e, index); },
            Down: function (e, index) { return _this.itemHandleDownArrowKey(e, index); },
            Left: function (e, index) { return _this.itemHandleLeftArrowKey(e, index); },
            Right: function (e, index) { return _this.itemHandleRightArrowKey(e, index); },
            Esc: function (e, index) { return _this.itemHandleEscKey(e, index); },
        };
        return _this;
    }
    AccessibilityKeyboardHelperBase.prototype._disposeItems = function () {
        this._eventListeners.forEach(function (item) { item.element.removeEventListener(item.eventType, item.listener); });
        this._eventListeners.length = 0;
        this.disposeArray(this.controlElements);
        this.controlElements.length = 0;
    };
    AccessibilityKeyboardHelperBase.prototype.initialize = function () {
        var _this = this;
        this._disposeItems();
        if (!this._elementContainer)
            return;
        var htmlElements = Array.prototype.slice.call(this._elementContainer.querySelectorAll('.' + this.controlElementClassName));
        if (!htmlElements.length)
            return;
        htmlElements.forEach(function (element, index) {
            var newItem = _this.createControlElement(element, index);
            if (newItem) {
                _this.controlElements.push(newItem);
            }
        });
        this.controlElements.forEach(function (item, index) {
            _this.addListener(item.element, index, 'click', _this.clickHandler);
        });
        this.childrenInitialized = true;
    };
    AccessibilityKeyboardHelperBase.prototype.getIndexByElement = function (htmlElement) {
        return this.controlElements.map(function (element) { return element.element; }).indexOf(htmlElement);
    };
    AccessibilityKeyboardHelperBase.prototype.createControlElement = function (element, index) {
        return new _controlElementBase_1.AccessibilityControlElementBase(element);
    };
    AccessibilityKeyboardHelperBase.prototype.getContainer = function () {
        return this._elementContainer;
    };
    AccessibilityKeyboardHelperBase.prototype.changeFocus = function (index, roundTrip) {
        if (roundTrip === void 0) { roundTrip = true; }
        var elCount = this.controlElements.length - 1;
        if (index < 0)
            index = roundTrip ? elCount : 0;
        if (index > elCount)
            index = roundTrip ? 0 : elCount;
        this.controlElements[index].setFocus();
        return index;
    };
    AccessibilityKeyboardHelperBase.prototype.bindHandler = function (elementContainer) {
        var _this = this;
        this._elementContainer = elementContainer;
        var handlersManager = new _keyboardHelper_1.KeyDownHandlersManager(this._elementContainer);
        this.initialize();
        var handler = function (e) {
            var target = e.target;
            if (_arrayutils_1.findFirstItemMatchesCondition(Object.keys(target.classList), function (key) { return target.classList[key] === _this.controlElementClassName; }) && _this.processChildrenShortcut(e, _this.getIndexByElement(target))
                || _this.processShortcut(e)) {
                e.stopPropagation();
                e.preventDefault();
            }
        };
        handlersManager.bindHandler(this._elementContainer, handler);
    };
    AccessibilityKeyboardHelperBase.prototype.handleEscKey = function (e, index) {
        if (this._prevActiveElement) {
            this._prevActiveElement.focus();
            return true;
        }
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleTabKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleShiftTabKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleEnterKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleSpaceKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleEndKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleHomeKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleUpArrowKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleDownArrowKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleLeftArrowKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.handleRightArrowKey = function (e) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleHomeKey = function (e, index) {
        this.changeFocus(0);
        return true;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleEndKey = function (e, index) {
        this.changeFocus(this.controlElements.length - 1);
        return true;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleLeftArrowKey = function (e, index) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleRightArrowKey = function (e, index) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleEnterKey = function (e, index) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleSpaceKey = function (e, index) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleUpArrowKey = function (e, index) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleDownArrowKey = function (e, index) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleTabKey = function (e, index) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleShiftTabKey = function (e, index) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.itemHandleEscKey = function (e, index) {
        return false;
    };
    AccessibilityKeyboardHelperBase.prototype.setFocusToPrevious = function (currentIndex, roundTrip) {
        if (roundTrip === void 0) { roundTrip = true; }
        return this.changeFocus(currentIndex - 1, roundTrip);
    };
    AccessibilityKeyboardHelperBase.prototype.setFocusToNext = function (currentIndex, roundTrip) {
        if (roundTrip === void 0) { roundTrip = true; }
        return this.changeFocus(currentIndex + 1, roundTrip);
    };
    AccessibilityKeyboardHelperBase.prototype.clickHandler = function (e, index) {
        this.changeFocus(index);
    };
    AccessibilityKeyboardHelperBase.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._disposeItems();
        this._elementContainer = null;
        this._prevActiveElement = null;
    };
    AccessibilityKeyboardHelperBase.prototype.addListener = function (element, index, eventType, handler) {
        var _this = this;
        var listener = function (e) {
            handler.call(_this, e, index);
        };
        element.addEventListener(eventType, listener);
        _internal_1.addDisposeCallback(element, function () {
            element.removeEventListener(eventType, listener);
        });
        this._eventListeners.push({ element: element, eventType: eventType, listener: listener });
    };
    AccessibilityKeyboardHelperBase.prototype.focus = function (prevActiveElement) {
        if (!this.childrenInitialized && !this._elementContainer)
            return;
        this._prevActiveElement = (prevActiveElement || document.activeElement);
        if (this.childrenInitialized && !this.focusFirstFocusableDescendant) {
            this.changeFocus(this.startIndex || 0);
        }
        else {
            var focusable = this._elementContainer.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
            focusable.length && focusable[0].focus();
        }
    };
    AccessibilityKeyboardHelperBase.prototype.lastFocusItem = function () {
        return document.getElementById('dxrd-designer-last-focus-item-blank');
    };
    return AccessibilityKeyboardHelperBase;
}(_keyboardHelper_1.KeyboardHelperBase));
exports.AccessibilityKeyboardHelperBase = AccessibilityKeyboardHelperBase;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var Rectangle = (function () {
    function Rectangle(left, top, width, height) {
        if (left === void 0) { left = 0; }
        if (top === void 0) { top = 0; }
        if (width === void 0) { width = 0; }
        if (height === void 0) { height = 0; }
        this.left = ko.observable(0);
        this.top = ko.observable(0);
        this.width = ko.observable(0);
        this.height = ko.observable(0);
        this.className = 'dxrd-drag-helper-item';
        this.left(left);
        this.top(top);
        this.width(width);
        this.height(height);
    }
    return Rectangle;
}());
exports.Rectangle = Rectangle;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _utils_1 = __webpack_require__(5);
var utils_1 = __webpack_require__(2);
var ModelSerializer = (function () {
    function ModelSerializer(options) {
        this._refTable = {};
        this._linkTable = {};
        this._options = _utils_1.extend({
            useRefs: true,
            serializeDate: utils_1.serializeDate
        }, options);
    }
    ModelSerializer.prototype.linkObjects = function () {
        var _this = this;
        Object.keys(this._linkTable).forEach(function (index) {
            var val = _this._refTable[index];
            if (val) {
                _this._linkTable[index].splice(0).forEach(function (property) { return property(val); });
            }
        });
    };
    ModelSerializer.prototype._getModel = function (model, propertyPath) {
        var currentModel = model;
        propertyPath.forEach(function (name) {
            currentModel = currentModel[name];
        });
        return currentModel;
    };
    ModelSerializer.prototype._collectLinks = function (model, internalModel, propertyPath, propertyName) {
        var _this = this;
        var refVal = model[propertyName].slice('#Ref-'.length);
        var value = ko.observable();
        this._linkTable[refVal] = this._linkTable[refVal] || [];
        this._linkTable[refVal].push(value);
        if (!internalModel._restoreLinks)
            internalModel._restoreLinks = [];
        internalModel._restoreLinks.push(function (model) {
            var currentModel = _this._getModel(model, propertyPath);
            return {
                setRef: function (ref) {
                    if (ref === -1)
                        delete currentModel[propertyName];
                    else
                        currentModel[propertyName] = '#Ref-' + ref;
                },
                obj: value()
            };
        });
    };
    ModelSerializer.prototype._enumRefs = function (internalModel, propertyPath, propertyName) {
        var _this = this;
        if (!internalModel._refs)
            internalModel._refs = [];
        internalModel._refs.push(function (model, ref) {
            _this._getModel(model, propertyPath)[propertyName] = ref;
        });
    };
    ModelSerializer.prototype._collectLinksAndEnumRefs = function (model, internalModel, propertyPath) {
        var _this = this;
        if (internalModel === void 0) { internalModel = null; }
        if (propertyPath === void 0) { propertyPath = []; }
        var start = internalModel === null;
        internalModel = internalModel || model;
        Object.keys(model).forEach(function (propertyName) {
            if (model[propertyName] instanceof Object) {
                _this._collectLinksAndEnumRefs(model[propertyName], internalModel, [].concat(propertyPath, [propertyName]));
            }
            else if (model[propertyName].indexOf && model[propertyName].indexOf('#Ref-') === 0) {
                _this._collectLinks(model, internalModel, propertyPath, propertyName);
            }
            else if (!start && propertyName === '@Ref') {
                _this._enumRefs(internalModel, propertyPath, propertyName);
            }
        });
        if (start)
            this.linkObjects();
    };
    ModelSerializer.prototype.setLinks = function (refs) {
        refs.linkObjTable.forEach(function (item) {
            var refValue = refs.objects.indexOf(item.obj);
            item.setRef(refValue);
        });
    };
    ModelSerializer.prototype.deserializeProperty = function (modelPropertyInfo, model) {
        var propName = modelPropertyInfo.modelName;
        if (!propName) {
            return;
        }
        var modelValue = model[propName] !== undefined ? model[propName] : modelPropertyInfo.defaultVal;
        return this.deserializePropertyValue(modelPropertyInfo, modelValue);
    };
    ModelSerializer.prototype.deserializeDefaultValue = function (modelPropertyInfo) {
        var value = this.deserializePropertyValue(modelPropertyInfo, modelPropertyInfo.defaultVal, false);
        return value || modelPropertyInfo.defaultVal;
    };
    ModelSerializer.prototype.deserializePropertyValue = function (modelPropertyInfo, modelValue, strict) {
        var _this = this;
        if (strict === void 0) { strict = true; }
        if (typeof modelPropertyInfo === 'string') {
            return ko.observable(modelValue);
        }
        else if (modelPropertyInfo.link) {
            var value = ko.observable(null);
            if (modelValue) {
                var refVal = modelValue && modelValue.slice('#Ref-'.length);
                this._linkTable[refVal] = this._linkTable[refVal] || [];
                this._linkTable[refVal].push(value);
            }
            return value;
        }
        else if (modelPropertyInfo.array) {
            if (modelPropertyInfo.from) {
                return modelPropertyInfo.from(modelValue, this);
            }
            else if (modelPropertyInfo.info) {
                var result = Object.keys(modelValue || {}).map(function (propertyName) {
                    var object = { getInfo: function () { return modelPropertyInfo.info; } };
                    _this.deserialize(object, modelValue[propertyName] || {});
                    return object;
                });
                return ko.observableArray(result);
            }
            return;
        }
        else if (modelPropertyInfo.from) {
            return modelPropertyInfo.from(modelValue, this);
        }
        else if (modelPropertyInfo.type) {
            var ctorResult = new modelPropertyInfo.type(modelValue, this, modelPropertyInfo.info);
            if (!ctorResult._model) {
                this.deserialize(ctorResult, modelValue || {}, modelPropertyInfo.info);
            }
            return ctorResult;
        }
        else if (modelPropertyInfo.info) {
            var object = { getInfo: function () { return modelPropertyInfo.info; } };
            this.deserialize(object, modelValue || {});
            return object;
        }
        else if (modelPropertyInfo.modelName) {
            return ko.observable(modelValue);
        }
        if (strict) {
            throw new Error("Invalid info '" + JSON.stringify(modelPropertyInfo) + "'");
        }
        return;
    };
    ModelSerializer.prototype.deserialize = function (viewModel, model, serializationsInfo) {
        var _this = this;
        if (serializationsInfo === void 0) { serializationsInfo = null; }
        if (!model) {
            return;
        }
        viewModel._model = _utils_1.extend({}, model);
        var serializationsInfo = viewModel.getInfo ? viewModel.getInfo() : serializationsInfo;
        var refValue = model['@Ref'];
        var proto = Object.getPrototypeOf(viewModel);
        serializationsInfo.forEach(function (modelPropertyInfo) {
            var propertyName = modelPropertyInfo.propertyName, propName = modelPropertyInfo.modelName;
            if (model[propName] !== undefined) {
                delete viewModel._model[propName];
            }
            var property = _this.deserializeProperty(modelPropertyInfo, model);
            var descriptor = Object.getOwnPropertyDescriptor(proto, propertyName);
            if (property !== undefined && (!descriptor || !!descriptor.set))
                viewModel[propertyName] = property;
            if (!(propertyName in viewModel) && property === undefined && modelPropertyInfo.array) {
                var currentArray = ko.observable(undefined);
                Object.defineProperty(viewModel, propertyName, {
                    get: function () {
                        return currentArray();
                    },
                    set: function (val) {
                        currentArray(val);
                    },
                    enumerable: true
                });
            }
        });
        if (refValue) {
            this._refTable[refValue] = viewModel;
        }
        this.linkObjects();
    };
    ModelSerializer.prototype.serialize = function (viewModel, serializationsInfo, refs) {
        if (refs === void 0) { refs = null; }
        if (!serializationsInfo && !refs) {
            return this._serialize(viewModel, null, null);
        }
        return this._serialize(viewModel, serializationsInfo, refs);
    };
    ModelSerializer.prototype._isSerializableValue = function (resultValue) {
        return (_utils_1.isPlainObject(resultValue) && !_utils_1.isEmptyObject(resultValue)) || (Array.isArray(resultValue) && resultValue['length'] > 0) || (!Array.isArray(resultValue) && !_utils_1.isPlainObject(resultValue));
    };
    ModelSerializer.prototype.serializeProperty = function (modelPropertyInfo, viewModel, serializationsInfo, refs, result) {
        var _this = this;
        var propertyName = modelPropertyInfo.propertyName, value = ko.unwrap(viewModel['_' + propertyName] || viewModel[propertyName]), defaultVal = modelPropertyInfo.defaultVal;
        if (modelPropertyInfo.beforeSerialize)
            value = modelPropertyInfo.beforeSerialize(value);
        if (!!modelPropertyInfo.from) {
            defaultVal = ko.unwrap(modelPropertyInfo.from(defaultVal, this));
        }
        var resultValue = {};
        if (!modelPropertyInfo.modelName) {
            return;
        }
        if (modelPropertyInfo.alwaysSerialize || ((value !== undefined && value !== null) && ((_utils_1.isPlainObject(value) || !_utils_1.isEmptyObject(value)) || (Array.isArray(value) && value.length > 0) || (!Array.isArray(value) && !_utils_1.isPlainObject(value))) && (value !== defaultVal))) {
            if (modelPropertyInfo.link) {
                refs.linkObjTable.push({
                    obj: value,
                    setRef: function (index) {
                        if (index < 0) {
                            delete result[modelPropertyInfo.modelName];
                        }
                        else {
                            result[modelPropertyInfo.modelName] = '#Ref-' + index;
                        }
                    }
                });
                resultValue = undefined;
            }
            else if (modelPropertyInfo.array) {
                resultValue = {};
                var index = 1;
                value.forEach(function (item) {
                    var info = modelPropertyInfo.info || null;
                    var item_ = _this._serialize(item, info, refs);
                    if (_this._isSerializableValue(item_) || modelPropertyInfo.alwaysSerialize) {
                        resultValue['Item' + index] = item_;
                        if (_this._options.useRefs) {
                            item_['@Ref'] = (refs.objects.push(item) - 1).toString();
                        }
                        index++;
                    }
                });
            }
            else if (modelPropertyInfo.from) {
                if (value['isEmpty'] && value['isEmpty']()) {
                    resultValue = {};
                }
                else {
                    resultValue = modelPropertyInfo.toJsonObject ? modelPropertyInfo.toJsonObject(value, this, refs) : value.toString();
                }
            }
            else if (modelPropertyInfo.info || value['getInfo']) {
                resultValue = this._serialize(value, modelPropertyInfo.info, refs);
            }
            else if (modelPropertyInfo.modelName) {
                if (value instanceof Date) {
                    resultValue = this._options.serializeDate(value);
                }
                else {
                    resultValue = value;
                }
            }
            else {
                throw new Error("Invalid info '" + serializationsInfo.stringify() + "'");
            }
            if (modelPropertyInfo.alwaysSerialize || this._isSerializableValue(resultValue)) {
                if (modelPropertyInfo.asRef) {
                    resultValue['@Ref'] = (refs.objects.push(value) - 1).toString();
                }
                result[modelPropertyInfo.modelName] = resultValue;
            }
        }
    };
    ModelSerializer.prototype._serialize = function (viewModel, serializationsInfo, refs) {
        var _this = this;
        var result = _utils_1.extend(true, {}, viewModel._model), isInitial = refs === null;
        refs = refs || { linkObjTable: [], objects: [] };
        if (result._restoreLinks) {
            refs.linkObjTable.push.apply(refs.linkObjTable, result._restoreLinks.map(function (x) { return x(result); }));
            delete result._restoreLinks;
        }
        if (result._refs) {
            result._refs.forEach(function (x) { return x(result, (refs.objects.push('0') - 1).toString()); });
            delete result._refs;
        }
        serializationsInfo = viewModel.getInfo ? viewModel.getInfo() : serializationsInfo;
        delete result['@Ref'];
        if (viewModel['isEmpty'] && viewModel['isEmpty']())
            return {};
        serializationsInfo.forEach(function (modelPropertyInfo) {
            _this.serializeProperty(modelPropertyInfo, viewModel, serializationsInfo, refs, result);
        });
        if (isInitial)
            this.setLinks(refs);
        return result;
    };
    return ModelSerializer;
}());
exports.ModelSerializer = ModelSerializer;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var _utils_1 = __webpack_require__(24);
var localization_utils_1 = __webpack_require__(3);
var _utils_2 = __webpack_require__(5);
var _svgTemplateEngine_1 = __webpack_require__(20);
var _internal_1 = __webpack_require__(68);
var _rightPanelKeyboardHelper_1 = __webpack_require__(92);
var TabPanel = (function (_super) {
    __extends(TabPanel, _super);
    function TabPanel(options) {
        var _this = _super.call(this) || this;
        _this.tabs = [];
        _this.collapsed = ko.observable(false);
        _this.position = ko.observable(TabPanel.Position.Right);
        _this.toggleCollapsedText = ko.pureComputed(function () {
            var actionString = _this.collapsed() ? 'Open' : 'Collapse';
            return localization_utils_1.getLocalization(actionString, 'ASPxReportsStringId.SidePanel_' + actionString);
        });
        _this.cssClasses = function (extendOptions) {
            return _utils_2.extend({
                'dxrd-tab-panel-left': _this.position() === TabPanel.Position.Left,
                'dxrd-tab-panel-right': _this.position() === TabPanel.Position.Right,
                'dxrd-tab-panel-empty': _this.isEmpty()
            }, extendOptions);
        };
        var tabs = options.tabs;
        var autoSelectTab = options.autoSelectTab;
        if (options.rtl)
            _this.position(TabPanel.Position.Left);
        var zoomFactor = _internal_1.accessibilityFontSizeZoomFactor();
        var _self = _this;
        _this.tabs = tabs;
        if (tabs && tabs.length) {
            _this._disposables.push(_this.isEmpty = ko.computed(function () { return _this.tabs.every(function (tab) { return !tab.visible(); }); }));
            _this.tabs.forEach(function (tab) {
                tab.collapsed = _this.collapsed;
            });
        }
        else
            _this.isEmpty = ko.observable(true);
        _this._disposables.push(ko.computed(function () {
            var visibleTabs = tabs.filter(function (tab) { return tab.visible(); });
            if (visibleTabs.length !== 0) {
                if (visibleTabs.filter(function (tab) { return tab.active.peek(); }).length === 0) {
                    visibleTabs[0].active(true);
                    if (autoSelectTab) {
                        _this.collapsed(true);
                    }
                }
            }
            else {
                _this.collapsed(true);
            }
        }));
        _this._disposables.push(ko.computed(function () {
            var disabledTabs = tabs.filter(function (tab) { return tab.disabled(); });
            if (disabledTabs.length !== 0) {
                if (disabledTabs.filter(function (tab) { return tab.active.peek(); }).length !== 0) {
                    disabledTabs.forEach(function (t) { return t.active(false); });
                    var nextSelectedTab = tabs.filter(function (tab) { return !tab.disabled.peek() && tab.visible.peek(); })[0];
                    if (nextSelectedTab) {
                        _this.selectTab({ model: nextSelectedTab });
                    }
                }
            }
        }));
        if (autoSelectTab) {
            _this.tabs.forEach(function (tab) {
                _this._disposables.push(tab.active.subscribe(function (newVal) {
                    if (newVal) {
                        _this.selectTab({ model: tab });
                    }
                }));
            });
        }
        _this.toggleTabVisibility = function (e) {
            var selectedTab = e.model;
            var activeTab = _this.tabs.filter(function (tab) { return tab.active(); })[0];
            if (selectedTab === activeTab) {
                _this.collapsed(!_this.collapsed());
            }
            else {
                _this.selectTab(e);
            }
        };
        _this.selectTab = function (e) {
            var selectedTab = e.model;
            if (!selectedTab.disabled()) {
                _this.tabs.forEach(function (tab) {
                    tab.active(tab === selectedTab);
                });
                _this.collapsed(false);
            }
        };
        var _width = ko.observable((options.width || 370) * zoomFactor);
        _this._disposables.push(_this.width = ko.pureComputed({
            read: function () { return _this.collapsed() ? 0 : _width(); },
            write: function (newWidth) { _width(newWidth); }
        }));
        _this._disposables.push(_this.headerWidth = ko.pureComputed(function () { return _this.isEmpty() ? 0 : (50 * zoomFactor + (_this.collapsed() ? 0 : _this.width())); }));
        _this.getResizableOptions = function ($element, panelOffset, minWidth) {
            if (!_this._resizableOptions || _this._resizableOptions.$element !== $element) {
                _this._resizableOptions = _utils_1.getResizableOptions($element, zoomFactor * panelOffset, minWidth, _self.position(), TabPanel.Position.Left, _self.width, _self.collapsed);
                _self._disposables.push(_self.position.subscribe(function (newVal) {
                    $($element)['resizable']('option', 'handles', newVal === TabPanel.Position.Left ? 'e' : 'w');
                }));
            }
            return _this._resizableOptions;
        };
        _this._disposables.push({
            dispose: function () {
                _this._resizableOptions = null;
                _this.getResizableOptions = null;
            }
        });
        _this._disposables.push(_this.toggleCollapsedImage = ko.pureComputed(function () {
            var postfix = _this.collapsed() ? '-expand' : '-collapse';
            return { class: 'dxrd-image-propertygrid' + postfix, template: 'dxrd-svg-tabs' + postfix };
        }));
        _this.keyboardHelper = new _rightPanelKeyboardHelper_1.RightPanelKeyboardHelper(_this);
        _this._disposables.push(_this.toggleCollapsedText, _this.keyboardHelper);
        return _this;
    }
    TabPanel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeArray(this.tabs);
    };
    TabPanel.Position = {
        Left: 'Left',
        Right: 'Right'
    };
    return TabPanel;
}(utils_1.Disposable));
exports.TabPanel = TabPanel;
var TabInfo = (function (_super) {
    __extends(TabInfo, _super);
    function TabInfo(options) {
        var _this = _super.call(this) || this;
        _this.active = ko.observable(false);
        _this.visible = ko.observable();
        _this.disabled = ko.observable();
        var imageBaseName = options.imageClassName || options.text.toLowerCase();
        _this._text = options.text;
        _this._localizationId = options.localizationId;
        _this._disposables.push(_this.imageClassName = ko.pureComputed(function () {
            return 'dxrd-image-' + imageBaseName;
        }));
        _this.imageTemplateName = options.imageTemplateName || _svgTemplateEngine_1.SvgTemplatesEngine.getExistingTemplate('dxrd-svg-tabs-' + options.text.toLowerCase());
        _this.template = options.template;
        _this._disposables.push(options.model, options.keyboardHelper);
        var computedVisible = options.visible;
        var computedDisabled = options.disabled;
        _this._disposables.push(_this.visible = ko.pureComputed(function () { return computedVisible !== undefined ? computedVisible() : true; }));
        _this._disposables.push(_this.disabled = ko.pureComputed(function () { return computedDisabled !== undefined ? computedDisabled() : false; }));
        _this._disposables.push(_this.visible.subscribe(function (visibility) {
            if (!visibility) {
                _this.active(false);
            }
        }));
        computedVisible && _this._disposables.push(computedVisible);
        computedDisabled && _this._disposables.push(computedDisabled);
        _this.model = options.model;
        _this.keyboardHelper = options.keyboardHelper;
        if (_this.keyboardHelper)
            _this._disposables.push(ko.computed(function () {
                if (_this.active() && _this.collapsed && !_this.collapsed())
                    _this.focus();
            }).extend({ rateLimit: 0 }));
        return _this;
    }
    TabInfo.prototype.focus = function () {
        this.keyboardHelper && this.keyboardHelper.focus(document.getElementsByClassName('dxrd-tab-item dxd-state-active')[0]);
    };
    Object.defineProperty(TabInfo.prototype, "text", {
        get: function () {
            return localization_utils_1.getLocalization(this._text, this._localizationId);
        },
        enumerable: true,
        configurable: true
    });
    return TabInfo;
}(utils_1.Disposable));
exports.TabInfo = TabInfo;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _internal_1 = __webpack_require__(4);
exports.aceAvailable = _internal_1.createGlobalModuleVariableFunc(false);


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var _treelistController_1 = __webpack_require__(40);
var ExpressionEditorTreeListController = (function (_super) {
    __extends(ExpressionEditorTreeListController, _super);
    function ExpressionEditorTreeListController(fieldName, putSelectionHandler, selectionHandler) {
        var _this = _super.call(this) || this;
        _this.fieldName = fieldName;
        _this.putSelectionHandler = putSelectionHandler;
        _this.selectionHandler = selectionHandler;
        return _this;
    }
    ExpressionEditorTreeListController.prototype.itemsFilter = function (item) {
        return item.specifics !== 'none' && item.name !== 'ReportItems';
    };
    ExpressionEditorTreeListController.prototype.select = function (value) {
        if (this.selectionHandler)
            this.selectionHandler(value);
        else
            _super.prototype.select.call(this, value);
    };
    ExpressionEditorTreeListController.prototype.getActions = function (item) {
        var _this = this;
        return [{ clickAction: function (element) { return _this.putSelectionHandler(item, $(element)); } }];
    };
    ExpressionEditorTreeListController.prototype.canSelect = function (value) {
        return true;
    };
    return ExpressionEditorTreeListController;
}(_treelistController_1.TreeListController));
exports.ExpressionEditorTreeListController = ExpressionEditorTreeListController;
var ExpressionEditorParametersTreeListController = (function (_super) {
    __extends(ExpressionEditorParametersTreeListController, _super);
    function ExpressionEditorParametersTreeListController(customFilter, putSelectionHandler, selectionHandler) {
        var _this = _super.call(this) || this;
        _this.customFilter = customFilter;
        _this.putSelectionHandler = putSelectionHandler;
        _this.selectionHandler = selectionHandler;
        return _this;
    }
    ExpressionEditorParametersTreeListController.prototype.itemsFilter = function (item) {
        return item.specifics !== 'none' && (!this.customFilter || this.customFilter(item));
    };
    ExpressionEditorParametersTreeListController.prototype.select = function (value) {
        this.selectionHandler(value);
    };
    ExpressionEditorParametersTreeListController.prototype.getActions = function (item) {
        var _this = this;
        return [{
                clickAction: function (element) {
                    if (item && !item.hasItems)
                        _this.putSelectionHandler(item.path, $(element));
                }
            }];
    };
    ExpressionEditorParametersTreeListController.prototype.canSelect = function (value) {
        return true;
    };
    return ExpressionEditorParametersTreeListController;
}(_treelistController_1.TreeListController));
exports.ExpressionEditorParametersTreeListController = ExpressionEditorParametersTreeListController;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var localization_utils_1 = __webpack_require__(3);
function initDisplayText(object) {
    object.displayText = localization_utils_1.getLocalization(object.name, object.localizationId);
}
exports.initDisplayText = initDisplayText;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var criteriaOperatorSurface_1 = __webpack_require__(18);
var aggregate_1 = __webpack_require__(11);
var unaryOperandSurface_1 = __webpack_require__(26);
var AggregateOperandSurface = (function (_super) {
    __extends(AggregateOperandSurface, _super);
    function AggregateOperandSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.contentTemplateName = 'dx-filtereditor-aggregate';
        _this.property = ko.observable(null);
        _this.aggregatedExpression = ko.observable(null);
        _this.condition = ko.observable(null);
        _this.property(_this._createLeftPartProperty(operator.property));
        var childPath = ko.computed(function () {
            return _this.path() + '.' + _this.property().propertyName();
        });
        _this._disposables.push(childPath);
        if (operator.aggregatedExpression) {
            _this.aggregatedExpression(_this.createChildSurface(operator.aggregatedExpression, childPath));
            _this.templateName = 'dx-filtereditor-aggregate-common';
        }
        if (operator.operatorType === aggregate_1.Aggregate.Count) {
            _this.templateName = 'dx-filtereditor-aggregate-common';
        }
        var surface = _this.createChildSurface(operator.condition, childPath);
        surface.canRemove = false;
        if (surface instanceof unaryOperandSurface_1.UnaryOperandSurface) {
            surface.operand().canRemove = false;
        }
        _this.condition(surface);
        _this.change = function (type, surface) {
            if (surface) {
                var newModel = _this.model.change(type, surface.model);
                var condition = _this.createChildSurface(newModel, childPath);
                condition.canRemove = false;
                if (condition instanceof unaryOperandSurface_1.UnaryOperandSurface) {
                    condition.operand().canRemove = false;
                }
                _this.condition(condition);
            }
            else {
                if (_this.operatorType() === aggregate_1.Aggregate.Exists || _this.operatorType() === aggregate_1.Aggregate.Count) {
                    _this.parent.change(type, _this);
                }
                else {
                    if (type && (type.value === aggregate_1.Aggregate.Exists || type.value === aggregate_1.Aggregate.Count)) {
                        _this.parent.change(type, _this);
                    }
                    else {
                        _super.prototype.change.call(_this, type, surface);
                    }
                }
            }
            _this.helper.onChange();
        };
        return _this;
    }
    Object.defineProperty(AggregateOperandSurface.prototype, "leftPart", {
        get: function () {
            return this.property && this.property();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AggregateOperandSurface.prototype, "rightPart", {
        get: function () {
            return this.aggregatedExpression();
        },
        enumerable: true,
        configurable: true
    });
    AggregateOperandSurface.prototype.dispose = function () {
        this.property().dispose();
        this.condition().dispose();
        this.aggregatedExpression() && this.aggregatedExpression().dispose();
        _super.prototype.dispose.call(this);
    };
    return AggregateOperandSurface;
}(criteriaOperatorSurface_1.CriteriaOperatorSurface));
exports.AggregateOperandSurface = AggregateOperandSurface;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
function propertiesVisitor(target, visitor, visited, skip) {
    if (visited === void 0) { visited = []; }
    if (skip === void 0) { skip = ['surface']; }
    if (target && target !== undefined) {
        var properties = [];
        Object.keys(target).forEach(function (propertyName) {
            if (propertyName.indexOf('_') !== 0 && skip.indexOf(propertyName) === -1) {
                var realPropertyName = propertyName;
                if (ko.isComputed(target[propertyName]) && ko.isWritableObservable(target['_' + propertyName])) {
                    realPropertyName = '_' + realPropertyName;
                }
                if (visited.indexOf(target[realPropertyName]) === -1 && !ko.isComputed(target[realPropertyName])) {
                    properties.push(target[realPropertyName]);
                }
            }
        });
        visitor(properties);
        visited.push.apply(visited, properties);
        properties.forEach(function (property) {
            property = ko.unwrap(property);
            if (typeof property === 'object') {
                propertiesVisitor(property, visitor, visited, skip);
            }
        });
    }
}
exports.propertiesVisitor = propertiesVisitor;
function checkModelReady(model) {
    return model.isModelReady ? model.isModelReady() : true;
}
exports.checkModelReady = checkModelReady;
function guid() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    });
}
exports.guid = guid;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.StringId = {
    MasterDetailRelationsEditor: 'DataAccessUIStringId.MasterDetailEditorForm_Title',
    DataAccessBtnOK: 'DataAccessUIStringId.Button_OK',
    DataAccessBtnCancel: 'DataAccessUIStringId.Button_Cancel',
    DataSourceWizardTitle: 'DataAccessUIStringId.WizardTitleDatasource',
    WizardPageConfigureQuery: 'DataAccessUIStringId.WizardPageConfigureQuery'
};


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var _utils_1 = __webpack_require__(57);
var CodeResolver = (function () {
    function CodeResolver() {
        this._queue = [];
        this._queueObj = {};
        this._done = [];
        this._doneOnce = [];
    }
    CodeResolver.prototype.clear = function () {
        this._queue = [];
        this._queueObj = {};
    };
    CodeResolver.prototype.done = function (callback) {
        this._done.push(callback);
    };
    CodeResolver.prototype.doneOnce = function (callback) {
        this._doneOnce.push(callback);
    };
    CodeResolver.prototype._executeNext = function (id) {
        if (id === void 0) { id = this._queue[0]; }
        delete this._queueObj[id];
        while (this._queue.length > 0 && !this._queueObj[this._queue[0]]) {
            this._queue.splice(0, 1);
        }
        if (this._queue.length !== 0) {
            this._queueObj[this._queue[0]]();
        }
        else {
            for (var i = 0; i < this._done.length; i++) {
                this._done[i]();
            }
            do {
                var doOnceCallback = this._doneOnce.pop();
                doOnceCallback && doOnceCallback();
            } while (this._doneOnce.length);
        }
    };
    CodeResolver.prototype.execute = function (func, time) {
        var _this = this;
        if (time === void 0) { time = 0; }
        var id = _utils_1.guid();
        var $deferred = $.Deferred();
        if (time) {
            this._queue.push(id);
            this._queueObj[id] = function () {
                if (!_this._queueObj[id])
                    return _this._executeNext(id);
                setTimeout(function () {
                    _this._queueObj[id] && $deferred.resolve(func());
                    _this._executeNext(id);
                }, time);
            };
            if (this._queue.length === 1) {
                this._queueObj[this._queue[0]]();
            }
        }
        else {
            $deferred.resolve(func());
        }
        return {
            dispose: function () { return (delete _this._queueObj[id], $deferred.reject()); },
            force: function () { return (delete _this._queueObj[id], $deferred.resolve(func())); },
            doNext: function () { return (_this._queue.splice(0, 0, id)); },
            $promise: $deferred.promise()
        };
    };
    return CodeResolver;
}());
exports.CodeResolver = CodeResolver;
exports.globalResolver = new CodeResolver();


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var PropertiesAccessibilityProvider = (function () {
    function PropertiesAccessibilityProvider() {
    }
    PropertiesAccessibilityProvider.prototype.isPropertyVisible = function (editor) {
        if (!editor._model())
            return false;
        var model = editor._model();
        var visible = model.isPropertyVisible ? model.isPropertyVisible(editor.name) : true;
        if (visible) {
            visible = this._calculateAccessibilityByPropertyInfo(model, editor.info().visible, true);
        }
        return visible;
    };
    PropertiesAccessibilityProvider.prototype.isPropertyDisabled = function (editor) {
        if (!editor._model())
            return true;
        var model = editor._model();
        return model.isPropertyDisabled && model.isPropertyDisabled(editor.name) || this._calculateAccessibilityByPropertyInfo(model, editor.info().disabled, false);
    };
    PropertiesAccessibilityProvider.prototype._calculateAccessibilityByPropertyInfo = function (model, propertyInfo, defaultValue) {
        var result;
        if (ko.isObservable(propertyInfo)) {
            result = propertyInfo();
        }
        else if (typeof propertyInfo === 'function') {
            result = propertyInfo(model);
        }
        else {
            result = propertyInfo !== undefined ? propertyInfo : defaultValue;
        }
        return result;
    };
    return PropertiesAccessibilityProvider;
}());
exports.PropertiesAccessibilityProvider = PropertiesAccessibilityProvider;
exports.defaultAccessibilityProvider = new PropertiesAccessibilityProvider();


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var criteriaOperator_1 = __webpack_require__(6);
var criteriaOperatorPreprocessor_1 = __webpack_require__(43);
var JoinOperand = (function (_super) {
    __extends(JoinOperand, _super);
    function JoinOperand(joinTypeName, condition, type, aggregated) {
        var _this = _super.call(this) || this;
        _this.type = 'Join';
        _this.joinTypeName = joinTypeName;
        _this.condition = condition;
        _this.operatorType = type;
        _this.aggregatedExpression = aggregated;
        return _this;
    }
    JoinOperand.joinOrAggregate = function (collectionProperty, condition, type, aggregated) {
        if (collectionProperty === null || collectionProperty.propertyName.length < 2 || collectionProperty.propertyName[0] != '<' || collectionProperty.propertyName[collectionProperty.propertyName.length - 1] != '>') {
            return criteriaOperatorPreprocessor_1.criteriaCreator.process('aggregate', {
                property: collectionProperty,
                aggregatedExpression: aggregated,
                aggregateType: type,
                condition: condition
            });
        }
        else {
            return criteriaOperatorPreprocessor_1.criteriaCreator.process('join', {
                joinTypeName: collectionProperty.propertyName.substring(1, collectionProperty.propertyName.length - 2),
                condition: condition,
                type: type,
                aggregated: aggregated
            });
        }
    };
    JoinOperand.prototype.accept = function (visitor) {
        return visitor.visitJoinOperand
            ? visitor.visitJoinOperand(this)
            : new JoinOperand(this.joinTypeName, this.condition && this.condition.accept(visitor), this.operatorType, this.aggregatedExpression && this.aggregatedExpression.accept(visitor));
    };
    return JoinOperand;
}(criteriaOperator_1.CriteriaOperator));
exports.JoinOperand = JoinOperand;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var criteriaOperator_1 = __webpack_require__(6);
var property_1 = __webpack_require__(15);
var _serializer_1 = __webpack_require__(63);
var utils_1 = __webpack_require__(28);
var DisplayExpressionConverter = (function () {
    function DisplayExpressionConverter(displayNameProvider) {
        this.displayNameProvider = displayNameProvider;
    }
    DisplayExpressionConverter.prototype._replaceNames = function (path, expression, getDisplayExpression) {
        var _this = this;
        var def = $.Deferred();
        if (!expression)
            return def.resolve('').promise();
        try {
            var expressionCriteria = criteriaOperator_1.CriteriaOperator.parse(expression, true);
        }
        catch (e) {
            return def.reject().promise();
        }
        var requests = [];
        var result = [];
        var serializer = new _serializer_1.FilterEditorSerializer();
        utils_1.criteriaForEach(expressionCriteria, function (operator, innerPath) {
            if (operator instanceof property_1.OperandProperty) {
                var isContainsParentRelationshipTraversalOperator = operator.propertyName.indexOf('^.') === 0;
                var propertyName = isContainsParentRelationshipTraversalOperator ? operator.propertyName.substring(2) : operator.propertyName;
                propertyName = innerPath ? [innerPath, propertyName].join('.') : propertyName;
                var request = getDisplayExpression ? _this.displayNameProvider.getDisplayNameByPath(path, propertyName) :
                    _this.displayNameProvider.getRealName(path, propertyName);
                requests.push(request.done(function (data) {
                    var convertedName = isContainsParentRelationshipTraversalOperator ? '^.' + data : data;
                    convertedName = innerPath ? convertedName.split('.').slice(innerPath.split('.').length).join('.') : convertedName;
                    result.push({
                        operand: operator,
                        convertedName: convertedName
                    });
                }));
            }
        });
        if (requests.length === 0) {
            def.resolve(expression);
        }
        else {
            var processedRequestsCount = 0;
            var onAlways = function () {
                if (++processedRequestsCount < requests.length)
                    return;
                var lines = expression.split('\n');
                for (var i = 0; i < lines.length; i++) {
                    var operands = result.filter(function (value) { return value.operand.startPosition.line === i; }).sort(function (a, b) {
                        return a.operand.startPosition.column - b.operand.startPosition.column;
                    });
                    for (var j = 0, delta = 0; j < operands.length; j++) {
                        var column = operands[j].operand.startPosition.column;
                        var propertyName = operands[j].operand.propertyName;
                        var deltaName = 0;
                        if (operands[j].operand.originalPropertyLength !== propertyName.length) {
                            deltaName = Math.max(0, operands[j].operand.originalPropertyLength - serializer.serialize(operands[j].operand, false).length);
                        }
                        var convertedName = operands[j].convertedName;
                        if (!propertyName || column < 0)
                            continue;
                        lines[i] = lines[i].substring(0, column + delta) + convertedName + lines[i].substring(column + propertyName.length + deltaName + delta);
                        delta += convertedName.length - propertyName.length - deltaName;
                    }
                }
                def.resolve(lines.join('\n'));
            };
            requests.forEach(function (r) { return r.always(onAlways); });
        }
        return def.promise();
    };
    DisplayExpressionConverter.prototype.toDisplayExpression = function (path, expression) {
        return this._replaceNames(path, expression, true);
    };
    DisplayExpressionConverter.prototype.toRealExpression = function (path, expression) {
        return this._replaceNames(path, expression, false);
    };
    return DisplayExpressionConverter;
}());
exports.DisplayExpressionConverter = DisplayExpressionConverter;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var group_1 = __webpack_require__(14);
var criteriaOperator_1 = __webpack_require__(6);
var aggregate_1 = __webpack_require__(11);
var property_1 = __webpack_require__(15);
var _codeCompletor_1 = __webpack_require__(46);
var value_1 = __webpack_require__(10);
var _internal_1 = __webpack_require__(19);
var utils_1 = __webpack_require__(2);
var parameter_1 = __webpack_require__(29);
var between_1 = __webpack_require__(36);
var in_1 = __webpack_require__(35);
var binary_1 = __webpack_require__(23);
var unary_1 = __webpack_require__(12);
var function_1 = __webpack_require__(16);
var utils_2 = __webpack_require__(28);
var constant_1 = __webpack_require__(44);
var FilterEditorSerializer = (function () {
    function FilterEditorSerializer(operatorTokens, custom) {
        if (operatorTokens === void 0) { operatorTokens = utils_2.operatorTokens; }
        this.operatorTokens = operatorTokens;
        this.custom = custom;
    }
    FilterEditorSerializer.prototype.serializeGroupOperand = function (groupOperator, reverse) {
        var _this = this;
        var result = groupOperator.operands.map(function (operand) {
            if (operand instanceof group_1.GroupOperator) {
                return '(' + _this.serialize(operand) + ')';
            }
            else {
                return _this.serialize(operand);
            }
        }).filter(function (serialize) { return serialize !== '' && serialize !== '()'; }).join(' ' + (this.operatorTokens[groupOperator.displayType] || groupOperator.displayType) + ' ');
        return reverse && result ? 'Not(' + result + ')' : result;
    };
    FilterEditorSerializer.prototype.serializeAggregateOperand = function (aggregateOperand, reverse) {
        var operatorTypeSuffix = aggregateOperand.operatorType === aggregate_1.Aggregate.Exists ? '' : '.' + aggregate_1.Aggregate[aggregateOperand.operatorType];
        var condition = aggregateOperand.condition ? this.serialize(aggregateOperand.condition) : '';
        var propertyResult = this.serialize(aggregateOperand.property);
        var conditionResult = '[' + condition + ']';
        var aggregateSuffix = aggregateOperand.operatorType !== aggregate_1.Aggregate.Exists ?
            '(' + (aggregateOperand.aggregatedExpression && this.serialize(aggregateOperand.aggregatedExpression) || '') + ')' : '';
        var result = propertyResult;
        if (!condition && !aggregateSuffix || condition) {
            result += conditionResult;
        }
        return result + operatorTypeSuffix + aggregateSuffix;
    };
    FilterEditorSerializer.prototype.serializeOperandProperty = function (operandProperty) {
        if (!operandProperty.propertyName) {
            return operandProperty.circumflex ? '^' : '[]';
        }
        var value = operandProperty.displayType;
        if (value.length - _codeCompletor_1.trimBrackets(value).length === 2) {
            value = '[' + _codeCompletor_1.trimBrackets(value).replace(/\\/g, '\\').replace(/\]/g, '\\]') + ']';
        }
        return operandProperty.circumflex ? '^.' + value : value;
    };
    FilterEditorSerializer.prototype.serializeOperandValue = function (operandValue) {
        var result = operandValue.value;
        if (result !== null && result !== undefined && ($.isNumeric(result) || String(result).toLowerCase() === 'true' || String(result).toLowerCase() === 'false')) {
            if (operandValue.specifics === 'string')
                return "'" + result + "'";
            if (operandValue.specifics === 'guid' && _internal_1.validateGuid(result))
                return '{' + result + '}';
            return result;
        }
        else if (result && operandValue.value instanceof Date) {
            return '#' + utils_1.serializeDate(result) + '#';
        }
        else if (operandValue.specifics === 'integer' || operandValue.specifics === 'integer') {
            return result || '?';
        }
        else if (operandValue.specifics === 'guid' && _internal_1.validateGuid(result)) {
            return '{' + result + '}';
        }
        if (result.indexOf("'") !== -1) {
            result = result.replace("'", "''");
        }
        return result ? "'" + result + "'" : '?';
    };
    FilterEditorSerializer.prototype.serializeOperandParameter = function (operandParameter) {
        return operandParameter.displayType;
    };
    FilterEditorSerializer.prototype.serializeBetweenOperator = function (betweenOperator, reverse) {
        var result = this.serialize(betweenOperator.property) + ' ' + betweenOperator.displayType +
            '(' + this.serialize(betweenOperator.begin) + ', ' + this.serialize(betweenOperator.end) + ')';
        return reverse ? 'Not ' + result : result;
    };
    FilterEditorSerializer.prototype.serializeInOperator = function (inOperator, reverse) {
        var _this = this;
        var result = this.serialize(inOperator.criteriaOperator) + ' ' + inOperator.displayType + '(' +
            inOperator.operands.map(function (operand) { return _this.serialize(operand); }).join(', ') + ')';
        return reverse ? 'Not ' + result : result;
    };
    FilterEditorSerializer.prototype.serializeBinaryOperator = function (binaryOperator, reverse) {
        if (binaryOperator.operatorType === binary_1.BinaryOperatorType.Like) {
            var separator = reverse ? ' Not ' : ' ';
            return this.serialize(binaryOperator.leftOperand) + separator + (this.operatorTokens[binaryOperator.displayType] || binaryOperator.displayType) + ' ' + this.serialize(binaryOperator.rightOperand);
        }
        return (reverse ? 'Not ' : '') + this.serialize(binaryOperator.leftOperand) + ' ' + (this.operatorTokens[binaryOperator.displayType] || binaryOperator.displayType) + ' ' + this.serialize(binaryOperator.rightOperand);
    };
    FilterEditorSerializer.prototype.serializeUnaryOperator = function (unaryOperator, reverse) {
        if (unaryOperator.operatorType === unary_1.UnaryOperatorType.IsNull) {
            var separator = reverse ? ' Not ' : ' ';
            return this.serialize(unaryOperator.operand) + ' Is' + separator + 'Null';
        }
        else if (unaryOperator.operatorType === unary_1.UnaryOperatorType.Not) {
            return this.serialize(unaryOperator.operand, true);
        }
        var result = (this.operatorTokens[unaryOperator.displayType] || unaryOperator.displayType) + this.serialize(unaryOperator.operand);
        return reverse ? 'Not ' + result : result;
    };
    FilterEditorSerializer.prototype.serializeFunctionOperator = function (functionOperator, reverse) {
        var _this = this;
        var result = (this.operatorTokens[functionOperator.displayType] || functionOperator.displayType) + '(' + functionOperator.operands.map(function (operand) {
            return _this.serialize(operand);
        }).join(', ') + ')';
        return reverse ? 'Not ' + result : result;
    };
    FilterEditorSerializer.prototype.serialize = function (criteriaOperator, reverse) {
        if (reverse === void 0) { reverse = false; }
        if (criteriaOperator instanceof aggregate_1.AggregateOperand) {
            return this.serializeAggregateOperand(criteriaOperator, reverse);
        }
        if (criteriaOperator instanceof between_1.BetweenOperator) {
            return this.serializeBetweenOperator(criteriaOperator, reverse);
        }
        if (criteriaOperator instanceof binary_1.BinaryOperator) {
            return this.serializeBinaryOperator(criteriaOperator, reverse);
        }
        if (criteriaOperator instanceof constant_1.ConstantValue) {
            return this.serializeOperandValue(criteriaOperator);
        }
        if (criteriaOperator instanceof function_1.FunctionOperator) {
            return this.serializeFunctionOperator(criteriaOperator, reverse);
        }
        if (criteriaOperator instanceof group_1.GroupOperator) {
            return this.serializeGroupOperand(criteriaOperator, reverse);
        }
        if (criteriaOperator instanceof in_1.InOperator) {
            return this.serializeInOperator(criteriaOperator, reverse);
        }
        if (criteriaOperator instanceof parameter_1.OperandParameter) {
            return this.serializeOperandParameter(criteriaOperator);
        }
        if (criteriaOperator instanceof property_1.OperandProperty) {
            return this.serializeOperandProperty(criteriaOperator);
        }
        if (criteriaOperator instanceof value_1.OperandValue) {
            return this.serializeOperandValue(criteriaOperator);
        }
        if (criteriaOperator instanceof unary_1.UnaryOperator) {
            return this.serializeUnaryOperator(criteriaOperator, reverse);
        }
        if (this.custom) {
            return this.custom(criteriaOperator, reverse);
        }
        throw Error('Undefined type criteria operator');
    };
    FilterEditorSerializer.prototype.deserialize = function (stringCriteria) {
        return this.deserializeOperand(criteriaOperator_1.CriteriaOperator.parse(stringCriteria));
    };
    FilterEditorSerializer.prototype.deserializeOperand = function (operand) {
        if (operand instanceof group_1.GroupOperator) {
            return operand;
        }
        else if (operand instanceof unary_1.UnaryOperator && operand.operatorType === unary_1.UnaryOperatorType.Not) {
            var child = operand['operand'];
            if (child instanceof group_1.GroupOperator || child instanceof function_1.FunctionOperator) {
                return operand;
            }
            else if (child instanceof unary_1.UnaryOperator && operand.operatorType === unary_1.UnaryOperatorType.Not
                && !(child.operand instanceof property_1.OperandProperty)) {
                return this.deserializeOperand(child.operand);
            }
            return new unary_1.UnaryOperator(unary_1.UnaryOperatorType.Not, new group_1.GroupOperator(group_1.GroupOperatorType.And, child ? [child] : []));
        }
        return new group_1.GroupOperator(group_1.GroupOperatorType.And, operand ? [operand] : []);
    };
    return FilterEditorSerializer;
}());
exports.FilterEditorSerializer = FilterEditorSerializer;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(5);
var _internal_1 = __webpack_require__(4);
var defaultFunctionDisplay = [
    {
        display: 'Aggregate',
        localizationId: 'DataAccessStringId.ExpressionEditor_FunctionCategory_Aggregate',
        category: 'Aggregate',
        items: {
            Avg: [{ paramCount: 1, text: '[].Avg()', displayName: 'Avg()', descriptionStringId: 'ExpressionEditorStringId.Function_AvgAggregate' }],
            Count: [{ paramCount: 1, text: '[].Count()', displayName: 'Count()', descriptionStringId: 'ExpressionEditorStringId.Function_CountAggregate' }],
            Exists: [{ paramCount: 1, text: '[].Exists()', displayName: 'Exists()', descriptionStringId: 'ExpressionEditorStringId.Function_ExistsAggregate' }],
            Max: [{ paramCount: 1, text: '[].Max()', displayName: 'Max()', descriptionStringId: 'ExpressionEditorStringId.Function_MaxAggregate' }],
            Min: [{ paramCount: 1, text: '[].Min()', displayName: 'Min()', descriptionStringId: 'ExpressionEditorStringId.Function_MinAggregate' }],
            Single: [{ paramCount: 1, text: '[].Single()', displayName: 'Single()', descriptionStringId: 'ExpressionEditorStringId.Function_SingleAggregate' }],
            Sum: [{ paramCount: 1, text: '[].Sum()', displayName: 'Sum()', descriptionStringId: 'ExpressionEditorStringId.Function_SumAggregate' }],
        }
    }, {
        display: 'Date-Time',
        localizationId: 'DataAccessStringId.ExpressionEditor_FunctionCategory_DateTime',
        items: {
            LocalDateTimeThisYear: [{ paramCount: 0, text: 'LocalDateTimeThisYear()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeThisYear' }],
            LocalDateTimeThisMonth: [{ paramCount: 0, text: 'LocalDateTimeThisMonth()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeThisMonth' }],
            LocalDateTimeLastMonth: [{ paramCount: 0, text: 'LocalDateTimeLastMonth()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeLastMonth' }],
            LocalDateTimeLastWeek: [{ paramCount: 0, text: 'LocalDateTimeLastWeek()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeLastWeek' }],
            LocalDateTimeLastYear: [{ paramCount: 0, text: 'LocalDateTimeLastYear()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeLastYear' }],
            LocalDateTimeThisWeek: [{ paramCount: 0, text: 'LocalDateTimeThisWeek()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeThisWeek' }],
            LocalDateTimeYesterday: [{ paramCount: 0, text: 'LocalDateTimeYesterday()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeYesterday' }],
            LocalDateTimeToday: [{ paramCount: 0, text: 'LocalDateTimeToday()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeToday' }],
            LocalDateTimeNow: [{ paramCount: 0, text: 'LocalDateTimeNow()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeNow' }],
            LocalDateTimeTomorrow: [{ paramCount: 0, text: 'LocalDateTimeTomorrow()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeTomorrow' }],
            LocalDateTimeDayAfterTomorrow: [{ paramCount: 0, text: 'LocalDateTimeDayAfterTomorrow()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeDayAfterTomorrow' }],
            LocalDateTimeNextWeek: [{ paramCount: 0, text: 'LocalDateTimeNextWeek()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeNextWeek' }],
            LocalDateTimeTwoMonthsAway: [{ paramCount: 0, text: 'LocalDateTimeTwoMonthsAway()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeTwoMonthsAway' }],
            LocalDateTimeTwoYearsAway: [{ paramCount: 0, text: 'LocalDateTimeTwoYearsAway()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeTwoYearsAway' }],
            LocalDateTimeTwoWeeksAway: [{ paramCount: 0, text: 'LocalDateTimeTwoWeeksAway()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeTwoWeeksAway' }],
            LocalDateTimeNextMonth: [{ paramCount: 0, text: 'LocalDateTimeNextMonth()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeNextMonth' }],
            LocalDateTimeNextYear: [{ paramCount: 0, text: 'LocalDateTimeNextYear()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeNextYear' }],
            LocalDateTimeYearBeforeToday: [{ paramCount: 0, text: 'LocalDateTimeYearBeforeToday()', descriptionStringId: 'ExpressionEditorStringId.Function_LocalDateTimeYearBeforeToday' }],
            IsOutlookIntervalBeyondThisYear: null,
            IsOutlookIntervalNextWeek: null,
            IsOutlookIntervalTomorrow: null,
            IsOutlookIntervalToday: null,
            IsOutlookIntervalYesterday: null,
            IsOutlookIntervalLastWeek: null,
            IsOutlookIntervalPriorThisYear: null,
            IsLastMonth: [{ paramCount: 1, text: 'IsLastMonth()', descriptionStringId: 'ExpressionEditorStringId.Function_IsLastMonth' }],
            IsLastYear: [{ paramCount: 1, text: 'IsLastYear()', descriptionStringId: 'ExpressionEditorStringId.Function_IsLastYear' }],
            IsNextMonth: [{ paramCount: 1, text: 'IsNextMonth()', descriptionStringId: 'ExpressionEditorStringId.Function_IsNextMonth' }],
            IsNextYear: [{ paramCount: 1, text: 'IsNextYear()', descriptionStringId: 'ExpressionEditorStringId.Function_IsNextYear' }],
            IsThisWeek: [{ paramCount: 1, text: 'IsThisWeek()', descriptionStringId: 'ExpressionEditorStringId.Function_IsThisWeek' }],
            IsThisMonth: [{ paramCount: 1, text: 'IsThisMonth()', descriptionStringId: 'ExpressionEditorStringId.Function_IsThisMonth' }],
            IsThisYear: [{ paramCount: 1, text: 'IsThisYear()', descriptionStringId: 'ExpressionEditorStringId.Function_IsThisYear' }],
            IsJanuary: [{ paramCount: 1, text: 'IsJanuary()', descriptionStringId: 'ExpressionEditorStringId.Function_IsJanuary' }],
            IsFebruary: [{ paramCount: 1, text: 'IsFebruary()', descriptionStringId: 'ExpressionEditorStringId.Function_IsFebruary' }],
            IsMarch: [{ paramCount: 1, text: 'IsMarch()', descriptionStringId: 'ExpressionEditorStringId.Function_IsMarch' }],
            IsApril: [{ paramCount: 1, text: 'IsApril()', descriptionStringId: 'ExpressionEditorStringId.Function_IsApril' }],
            IsMay: [{ paramCount: 1, text: 'IsMay()', descriptionStringId: 'ExpressionEditorStringId.Function_IsMay' }],
            IsJune: [{ paramCount: 1, text: 'IsJune()', descriptionStringId: 'ExpressionEditorStringId.Function_IsJune' }],
            IsJuly: [{ paramCount: 1, text: 'IsJuly()', descriptionStringId: 'ExpressionEditorStringId.Function_IsJuly' }],
            IsAugust: [{ paramCount: 1, text: 'IsAugust()', descriptionStringId: 'ExpressionEditorStringId.Function_IsAugust' }],
            IsSeptember: [{ paramCount: 1, text: 'IsSeptember()', descriptionStringId: 'ExpressionEditorStringId.Function_IsSeptember' }],
            IsOctober: [{ paramCount: 1, text: 'IsOctober()', descriptionStringId: 'ExpressionEditorStringId.Function_IsOctober' }],
            IsNovember: [{ paramCount: 1, text: 'IsNovember()', descriptionStringId: 'ExpressionEditorStringId.Function_IsNovember' }],
            IsDecember: [{ paramCount: 1, text: 'IsDecember()', descriptionStringId: 'ExpressionEditorStringId.Function_IsDecember' }],
            IsSameDay: [{ paramCount: 2, text: 'IsSameDay(, )', descriptionStringId: 'ExpressionEditorStringId.Function_IsSameDay' }],
            IsYearToDate: [{ paramCount: 1, text: 'IsYearToDate()', descriptionStringId: 'ExpressionEditorStringId.Function_IsYearToDate' }],
            DateDiffTick: [{ paramCount: 2, text: 'DateDiffTick(, )', descriptionStringId: 'ExpressionEditorStringId.Function_DateDiffTick' }],
            DateDiffSecond: [{ paramCount: 2, text: 'DateDiffSecond(, )', descriptionStringId: 'ExpressionEditorStringId.Function_DateDiffSecond' }],
            DateDiffMilliSecond: [{ paramCount: 2, text: 'DateDiffMilliSecond(, )', descriptionStringId: 'ExpressionEditorStringId.Function_DateDiffMilliSecond' }],
            DateDiffMinute: [{ paramCount: 2, text: 'DateDiffMinute(, )', descriptionStringId: 'ExpressionEditorStringId.Function_DateDiffMinute' }],
            DateDiffHour: [{ paramCount: 2, text: 'DateDiffHour(, )', descriptionStringId: 'ExpressionEditorStringId.Function_DateDiffHour' }],
            DateDiffDay: [{ paramCount: 2, text: 'DateDiffDay(, )', descriptionStringId: 'ExpressionEditorStringId.Function_DateDiffDay' }],
            DateDiffMonth: [{ paramCount: 2, text: 'DateDiffMonth(, )', descriptionStringId: 'ExpressionEditorStringId.Function_DateDiffMonth' }],
            DateDiffYear: [{ paramCount: 2, text: 'DateDiffYear(, )', descriptionStringId: 'ExpressionEditorStringId.Function_DateDiffYear' }],
            GetDate: [{ paramCount: 1, text: 'GetDate()', descriptionStringId: 'ExpressionEditorStringId.Function_GetDate' }],
            GetMilliSecond: [{ paramCount: 1, text: 'GetMilliSecond()', descriptionStringId: 'ExpressionEditorStringId.Function_GetMilliSecond' }],
            GetSecond: [{ paramCount: 1, text: 'GetSecond()', descriptionStringId: 'ExpressionEditorStringId.Function_GetSecond' }],
            GetMinute: [{ paramCount: 1, text: 'GetMinute()', descriptionStringId: 'ExpressionEditorStringId.Function_GetMinute' }],
            GetHour: [{ paramCount: 1, text: 'GetHour()', descriptionStringId: 'ExpressionEditorStringId.Function_GetHour' }],
            GetDay: [{ paramCount: 1, text: 'GetDay()', descriptionStringId: 'ExpressionEditorStringId.Function_GetDay' }],
            GetMonth: [{ paramCount: 1, text: 'GetMonth()', descriptionStringId: 'ExpressionEditorStringId.Function_GetMonth' }],
            GetYear: [{ paramCount: 1, text: 'GetYear()', descriptionStringId: 'ExpressionEditorStringId.Function_GetYear' }],
            GetDayOfWeek: [{ paramCount: 1, text: 'GetDayOfWeek()', descriptionStringId: 'ExpressionEditorStringId.Function_GetDayOfWeek' }],
            GetDayOfYear: [{ paramCount: 1, text: 'GetDayOfYear()', descriptionStringId: 'ExpressionEditorStringId.Function_GetDayOfYear' }],
            GetTimeOfDay: [{ paramCount: 1, text: 'GetTimeOfDay()', descriptionStringId: 'ExpressionEditorStringId.Function_GetTimeOfDay' }],
            Now: [{ paramCount: 0, text: 'Now()', descriptionStringId: 'ExpressionEditorStringId.Function_Now' }],
            UtcNow: [{ paramCount: 0, text: 'UtcNow()', descriptionStringId: 'ExpressionEditorStringId.Function_UtcNow' }],
            Today: [{ paramCount: 0, text: 'Today()', descriptionStringId: 'ExpressionEditorStringId.Function_Today' }],
            AddTimeSpan: [{ paramCount: 2, text: 'AddTimeSpan(, )', descriptionStringId: 'ExpressionEditorStringId.Function_AddTimeSpan' }],
            AddTicks: [{ paramCount: 2, text: 'AddTicks(, )', descriptionStringId: 'ExpressionEditorStringId.Function_AddTicks' }],
            AddMilliSeconds: [{ paramCount: 2, text: 'AddMilliSeconds(, )', descriptionStringId: 'ExpressionEditorStringId.Function_AddMilliSeconds' }],
            AddSeconds: [{ paramCount: 2, text: 'AddSeconds(, )', descriptionStringId: 'ExpressionEditorStringId.Function_AddSeconds' }],
            AddMinutes: [{ paramCount: 2, text: 'AddMinutes(, )', descriptionStringId: 'ExpressionEditorStringId.Function_AddMinutes' }],
            AddHours: [{ paramCount: 2, text: 'AddHours(, )', descriptionStringId: 'ExpressionEditorStringId.Function_AddHours' }],
            AddDays: [{ paramCount: 2, text: 'AddDays(, )', descriptionStringId: 'ExpressionEditorStringId.Function_AddDays' }],
            AddMonths: [{ paramCount: 2, text: 'AddMonths(, )', descriptionStringId: 'ExpressionEditorStringId.Function_AddMonths' }],
            AddYears: [{ paramCount: 2, text: 'AddYears(, )', descriptionStringId: 'ExpressionEditorStringId.Function_AddYears' }],
        },
    }, {
        display: 'Logical',
        localizationId: 'DataAccessStringId.ExpressionEditor_FunctionCategory_Logical',
        items: {
            Iif: [{ paramCount: 3, text: 'Iif(, , )', descriptionStringId: 'ExpressionEditorStringId.Function_Iif' }],
            IsNull: [{ paramCount: 1, text: 'IsNull()', descriptionStringId: 'ExpressionEditorStringId.Function_IsNull' }],
            IsNullOrEmpty: [{ paramCount: 1, text: 'IsNullOrEmpty()', descriptionStringId: 'ExpressionEditorStringId.Function_IsNullOrEmpty' }],
        }
    }, {
        display: 'Math',
        localizationId: 'DataAccessStringId.ExpressionEditor_FunctionCategory_Math',
        items: {
            Abs: [{ paramCount: 1, text: 'Abs()', descriptionStringId: 'ExpressionEditorStringId.Function_Abs' }],
            Sqr: [{ paramCount: 1, text: 'Sqr()', descriptionStringId: 'ExpressionEditorStringId.Function_Sqr' }],
            Cos: [{ paramCount: 1, text: 'Cos()', descriptionStringId: 'ExpressionEditorStringId.Function_Cos' }],
            Sin: [{ paramCount: 1, text: 'Sin()', descriptionStringId: 'ExpressionEditorStringId.Function_Sin' }],
            Atn: [{ paramCount: 1, text: 'Atn()', descriptionStringId: 'ExpressionEditorStringId.Function_Atn' }],
            Exp: [{ paramCount: 1, text: 'Exp()', descriptionStringId: 'ExpressionEditorStringId.Function_Exp' }],
            Log: [
                { paramCount: 1, text: 'Log()', descriptionStringId: 'ExpressionEditorStringId.Function_Log' },
                { paramCount: 2, text: 'Log(, )', descriptionStringId: 'ExpressionEditorStringId.Function_Log_2' },
            ],
            Rnd: [{ paramCount: 0, text: 'Rnd()', descriptionStringId: 'ExpressionEditorStringId.Function_Rnd' }],
            Tan: [{ paramCount: 1, text: 'Tan()', descriptionStringId: 'ExpressionEditorStringId.Function_Tan' }],
            Power: [{ paramCount: 2, text: 'Power(, )', descriptionStringId: 'ExpressionEditorStringId.Function_Power' }],
            Sign: [{ paramCount: 1, text: 'Sign()', descriptionStringId: 'ExpressionEditorStringId.Function_Sign' }],
            Round: [
                { paramCount: 1, text: 'Round()', descriptionStringId: 'ExpressionEditorStringId.Function_Round' },
                { paramCount: 2, text: 'Round(, )', descriptionStringId: 'ExpressionEditorStringId.Function_Round_2' },
            ],
            Ceiling: [{ paramCount: 1, text: 'Ceiling()', descriptionStringId: 'ExpressionEditorStringId.Function_Ceiling' }],
            Floor: [{ paramCount: 1, text: 'Floor()', descriptionStringId: 'ExpressionEditorStringId.Function_Floor' }],
            Max: [{ paramCount: 2, text: 'Max(, )', descriptionStringId: 'ExpressionEditorStringId.Function_Max' }],
            Min: [{ paramCount: 2, text: 'Min(, )', descriptionStringId: 'ExpressionEditorStringId.Function_Min' }],
            Acos: [{ paramCount: 1, text: 'Acos()', descriptionStringId: 'ExpressionEditorStringId.Function_Acos' }],
            Asin: [{ paramCount: 1, text: 'Asin()', descriptionStringId: 'ExpressionEditorStringId.Function_Asin' }],
            Atn2: [{ paramCount: 2, text: 'Atn2(, )', descriptionStringId: 'ExpressionEditorStringId.Function_Atn2' }],
            BigMul: [{ paramCount: 2, text: 'BigMul(, )', descriptionStringId: 'ExpressionEditorStringId.Function_BigMul' }],
            Cosh: [{ paramCount: 1, text: 'Cosh()', descriptionStringId: 'ExpressionEditorStringId.Function_Cosh' }],
            Log10: [{ paramCount: 1, text: 'Log10()', descriptionStringId: 'ExpressionEditorStringId.Function_Log10' }],
            Sinh: [{ paramCount: 1, text: 'Sinh()', descriptionStringId: 'ExpressionEditorStringId.Function_Sinh' }],
            Tanh: [{ paramCount: 1, text: 'Tanh()', descriptionStringId: 'ExpressionEditorStringId.Function_Tanh' }],
            ToInt: [{ paramCount: 1, text: 'ToInt()', descriptionStringId: 'ExpressionEditorStringId.Function_ToInt' }],
            ToLong: [{ paramCount: 1, text: 'ToLong()', descriptionStringId: 'ExpressionEditorStringId.Function_ToLong' }],
            ToFloat: [{ paramCount: 1, text: 'ToFloat()', descriptionStringId: 'ExpressionEditorStringId.Function_ToFloat' }],
            ToDouble: [{ paramCount: 1, text: 'ToDouble()', descriptionStringId: 'ExpressionEditorStringId.Function_ToDouble' }],
            ToDecimal: [{ paramCount: 1, text: 'ToDecimal()', descriptionStringId: 'ExpressionEditorStringId.Function_ToDecimal' }],
        }
    }, {
        display: 'String',
        localizationId: 'DataAccessStringId.ExpressionEditor_FunctionCategory_Text',
        items: {
            Trim: [{ paramCount: 1, text: 'Trim()', descriptionStringId: 'ExpressionEditorStringId.Function_Trim' }],
            Len: [{ paramCount: 1, text: 'Len()', descriptionStringId: 'ExpressionEditorStringId.Function_Len' }],
            Substring: [
                { paramCount: 3, text: "Substring('', , )", descriptionStringId: 'ExpressionEditorStringId.Function_Substring_3' },
                { paramCount: 2, text: "Substring('', )", descriptionStringId: 'ExpressionEditorStringId.Function_Substring' }
            ],
            Upper: [{ paramCount: 1, text: 'Upper()', descriptionStringId: 'ExpressionEditorStringId.Function_Upper' }],
            Lower: [{ paramCount: 1, text: 'Lower()', descriptionStringId: 'ExpressionEditorStringId.Function_Lower' }],
            Concat: [{ paramCount: Infinity, text: 'Concat(, )', descriptionStringId: 'ExpressionEditorStringId.Function_Concat' }],
            Ascii: [{ paramCount: 1, text: "Ascii('')", descriptionStringId: 'ExpressionEditorStringId.Function_Ascii' }],
            Char: [{ paramCount: 1, text: 'Char()', descriptionStringId: 'ExpressionEditorStringId.Function_Char' }],
            ToStr: [{ paramCount: 1, text: 'ToStr()', descriptionStringId: 'ExpressionEditorStringId.Function_ToStr' }],
            Replace: [{ paramCount: 3, text: "Replace('','', '')", descriptionStringId: 'ExpressionEditorStringId.Function_Replace' }],
            Reverse: [{ paramCount: 1, text: "Reverse('')", descriptionStringId: 'ExpressionEditorStringId.Function_Reverse' }],
            Insert: [{ paramCount: 3, text: "Insert('', , '')", descriptionStringId: 'ExpressionEditorStringId.Function_Insert' }],
            CharIndex: [
                { paramCount: 2, text: "CharIndex('','')", descriptionStringId: 'ExpressionEditorStringId.Function_CharIndex' },
                { paramCount: 3, text: "CharIndex('','', )", descriptionStringId: 'ExpressionEditorStringId.Function_CharIndex_3' }
            ],
            Remove: [
                { paramCount: 2, text: "Remove('', )", descriptionStringId: 'ExpressionEditorStringId.Function_Remove' },
                { paramCount: 3, text: "Remove('', , )", descriptionStringId: 'ExpressionEditorStringId.Function_Remove_3' }
            ],
            PadLeft: [
                { paramCount: 2, text: 'PadLeft(, )', descriptionStringId: 'ExpressionEditorStringId.Function_PadLeft' },
                { paramCount: 3, text: "PadLeft(, , '')", descriptionStringId: 'ExpressionEditorStringId.Function_PadLeft_3' }
            ],
            PadRight: [
                { paramCount: 2, text: 'PadRight(, )', descriptionStringId: 'ExpressionEditorStringId.Function_PadRight' },
                { paramCount: 3, text: "PadRight(, , '')", descriptionStringId: 'ExpressionEditorStringId.Function_PadRight_3' }
            ],
            StartsWith: [{ paramCount: 2, text: "StartsWith('', '')", descriptionStringId: 'ExpressionEditorStringId.Function_StartsWith' }],
            EndsWith: [{ paramCount: 2, text: "EndsWith('', '')", descriptionStringId: 'ExpressionEditorStringId.Function_EndsWith' }],
            Contains: [{ paramCount: 0, text: "Contains('', '')", descriptionStringId: 'ExpressionEditorStringId.Function_Contains' }],
            Join: [
                { paramCount: 1, text: 'Join()', descriptionStringId: 'ExpressionEditorStringId.Function_Join' },
                { paramCount: 2, text: "Join(, '')", descriptionStringId: 'ExpressionEditorStringId.Function_Join_2' }
            ],
        }
    }
];
exports.functionDisplay = _internal_1.createGlobalModuleVariableFunc(defaultFunctionDisplay);
exports.resetFunctionDisplay = function () { return exports.functionDisplay(defaultFunctionDisplay); };
function insertInFunctionDisplay(addins) {
    var functions = [];
    if (Array.isArray(addins)) {
        functions = exports.functionDisplay().slice();
        addins.forEach(function (addin) {
            var func = functions.filter(function (x) { return x.display === addin.display; })[0];
            if (!!func) {
                func.items = __assign({}, func.items, addin.items);
            }
            else {
                functions.push(addin);
            }
        });
    }
    else {
        exports.functionDisplay().forEach(function (cat) {
            var ext = addins[cat.display];
            var items = _utils_1.extend({}, cat.items, ext);
            if (!Object.keys(items).length)
                return;
            functions.push(ext ? {
                display: cat.display, category: cat.category, localizationId: cat.localizationId,
                items: items
            } : cat);
        });
    }
    return functions;
}
exports.insertInFunctionDisplay = insertInFunctionDisplay;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.operatorNames = [
    { text: '+', image: 'addition', descriptionStringId: 'ExpressionEditorStringId.Operator_Plus' },
    { text: '-', image: 'subtraction', descriptionStringId: 'ExpressionEditorStringId.Operator_Minus' },
    { text: '*', image: 'multiplication', descriptionStringId: 'ExpressionEditorStringId.Operator_Multiply' },
    { text: '/', image: 'division', descriptionStringId: 'ExpressionEditorStringId.Operator_Divide' },
    { text: '%', image: 'modulus', hasSeparator: true, descriptionStringId: 'ExpressionEditorStringId.Operator_Modulo' },
    { text: '()', image: 'parenthesis', hasSeparator: true },
    { text: '|', descriptionStringId: 'ExpressionEditorStringId.Operator_BitwiseOr' },
    { text: '&', descriptionStringId: 'ExpressionEditorStringId.Operator_BitwiseAnd' },
    { text: '^', descriptionStringId: 'ExpressionEditorStringId.Operator_BitwiseXor' },
    { text: '==', image: 'equal', descriptionStringId: 'ExpressionEditorStringId.Operator_Equal' },
    { text: '!=', image: 'not_equal', descriptionStringId: 'ExpressionEditorStringId.Operator_NotEqual' },
    { text: '<', image: 'less', descriptionStringId: 'ExpressionEditorStringId.Operator_Less' },
    { text: '<=', image: 'less_or_equal', descriptionStringId: 'ExpressionEditorStringId.Operator_LessOrEqual' },
    { text: '>=', image: 'greater_or_equal', descriptionStringId: 'ExpressionEditorStringId.Operator_GreaterOrEqual' },
    { text: '>', hasSeparator: true, image: 'greater', descriptionStringId: 'ExpressionEditorStringId.Operator_Greater' },
    { text: 'In', descriptionStringId: 'ExpressionEditorStringId.Operator_In' },
    { text: 'Like', descriptionStringId: 'ExpressionEditorStringId.Operator_Like' },
    { text: 'Between', descriptionStringId: 'ExpressionEditorStringId.Operator_Between' },
    { text: 'And', image: 'and', descriptionStringId: 'ExpressionEditorStringId.Operator_And' },
    { text: 'Or', image: 'or', descriptionStringId: 'ExpressionEditorStringId.Operator_Or' },
    { text: 'Not', image: 'not', descriptionStringId: 'ExpressionEditorStringId.Operator_Not' }
];


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _infoMessageHelpers_1 = __webpack_require__(67);
exports._addErrorPrefix = true;
function _processError(errorThrown, deferred, jqXHR, textStatus, processErrorCallback) {
    var message = errorThrown;
    var error = _infoMessageHelpers_1.getErrorMessage(jqXHR);
    if (error && error !== message) {
        if (!exports._addErrorPrefix)
            message = error;
        else
            message += ': ' + error;
    }
    try {
        processErrorCallback ? processErrorCallback(message, jqXHR, textStatus) : _infoMessageHelpers_1.NotifyAboutWarning(message);
    }
    finally {
        deferred.reject(jqXHR, textStatus, errorThrown);
    }
}
exports._processError = _processError;
exports._errorProcessor = {
    handlers: [],
    call: function (e) {
        for (var i = 0; i < exports._errorProcessor.handlers.length; i++) {
            exports._errorProcessor.handlers[i](e);
        }
    }
};
function processErrorEvent(func) {
    if (func) {
        exports._errorProcessor.handlers.push(func);
    }
    return {
        dispose: function () {
            func && _removeErrorEvent(func);
        }
    };
}
exports.processErrorEvent = processErrorEvent;
function _removeErrorEvent(func) {
    exports._errorProcessor.handlers.splice(exports._errorProcessor.handlers.indexOf(func), 1);
}


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var _utils_1 = __webpack_require__(24);
var _surfaceHelpers_1 = __webpack_require__(25);
var notify_1 = __webpack_require__(195);
exports.NotifyType = {
    info: 'info',
    warning: 'warning',
    error: 'error',
    success: 'success'
};
var wrappedConsole = (function (console) {
    var getWrappedMethod = function (methodName) { return (function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (console && $.isFunction(console[methodName])) {
            console[methodName].apply(console, arguments);
        }
    }); };
    return {
        info: getWrappedMethod('info'),
        warn: getWrappedMethod('warn'),
        error: getWrappedMethod('error')
    };
})(window.console);
function NotifyAboutWarning(msg, showForUser) {
    if (showForUser === void 0) { showForUser = false; }
    if (showForUser) {
        exports.ShowMessage(msg);
    }
    if (_utils_1.DEBUG) {
        throw new Error(msg);
    }
    else {
        wrappedConsole.warn(msg);
    }
}
exports.NotifyAboutWarning = NotifyAboutWarning;
function getErrorMessage(jqXHR) {
    return jqXHR && jqXHR.responseJSON && jqXHR.responseJSON.error ? jqXHR.responseJSON.error : '';
}
exports.getErrorMessage = getErrorMessage;
var _showMessage = function (msg, type, displayTime, debugInfo, contentTemplate) {
    if (type === void 0) { type = 'error'; }
    var containerElement = $('.dx-designer-viewport')[0];
    notify_1.default({
        message: msg,
        type: type,
        maxWidth: containerElement ? containerElement.clientWidth : undefined,
        position: { boundary: containerElement, collision: 'fit', of: _surfaceHelpers_1.chooseBetterPositionOf(document.documentElement, containerElement), my: 'bottom', at: 'bottom', offset: '0 -10' },
        container: containerElement,
        closeOnOutsideClick: true,
        closeOnSwipe: false,
        displayTime: displayTime || (type === 'error' ? 60000 : 3000),
        contentTemplate: contentTemplate
    });
};
exports.ShowMessage = _showMessage;
exports._setShowMessageFunc = function (func) { return exports.ShowMessage = func; };
exports._resetShowMessageFunc = function () { return exports.ShowMessage = _showMessage; };


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _internal_1 = __webpack_require__(4);
exports.accessibilityFontSizeZoomFactor = _internal_1.createGlobalModuleVariableFunc(1);
exports.calculateWithZoomFactor = function (value) {
    return value * exports.accessibilityFontSizeZoomFactor();
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
function objectsVisitor(target, visitor, visited, skip) {
    if (visited === void 0) { visited = []; }
    if (skip === void 0) { skip = ['surface', 'reportSource']; }
    if (visited.indexOf(target) !== -1) {
        return;
    }
    if (target && target !== undefined) {
        var properties = [];
        Object.keys(target).forEach(function (propertyName) {
            if (visited.indexOf(target[propertyName]) === -1 && propertyName.indexOf('_') !== 0 && skip.indexOf(propertyName) === -1) {
                properties.push(target[propertyName]);
            }
        });
        visitor(target);
        visited.push(target);
        for (var i = 0; i < properties.length; i++) {
            properties[i] = ko.unwrap(properties[i]);
            if (typeof properties[i] === 'object') {
                objectsVisitor(properties[i], visitor, visited, skip);
            }
        }
    }
}
exports.objectsVisitor = objectsVisitor;
function collectionsVisitor(target, visitor, collectionsToProcess, visited) {
    if (collectionsToProcess === void 0) { collectionsToProcess = ['controls', 'bands', 'subBands', 'crossBandControls', 'rows', 'cells', 'fields']; }
    if (visited === void 0) { visited = []; }
    if (target && target !== undefined) {
        visited.push(target);
        for (var i = 0, len = collectionsToProcess.length; i < len; i++) {
            if (target[collectionsToProcess[i]]) {
                visitor(target[collectionsToProcess[i]], target);
                (target[collectionsToProcess[i]]() || []).forEach(function (item) { return collectionsVisitor(item, visitor, collectionsToProcess, visited); });
            }
        }
    }
}
exports.collectionsVisitor = collectionsVisitor;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorsInfo_1 = __webpack_require__(17);
exports.sizeFake = [
    { propertyName: 'height', displayName: 'Height', localizationId: 'AnalyticsCoreStringId.SizeF.Height', editor: editorsInfo_1.editorTemplates.getEditor('numeric'), editorOptions: { min: 2 } },
    { propertyName: 'width', displayName: 'Width', localizationId: 'AnalyticsCoreStringId.SizeF.Width', editor: editorsInfo_1.editorTemplates.getEditor('numeric'), editorOptions: { min: 2 } }
];
exports.locationFake = [
    { propertyName: 'x', displayName: 'X', editor: editorsInfo_1.editorTemplates.getEditor('numeric') },
    { propertyName: 'y', displayName: 'Y', editor: editorsInfo_1.editorTemplates.getEditor('numeric') }
];


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _controlElementBase_1 = __webpack_require__(39);
var ControlElementWithParentHighlight = (function (_super) {
    __extends(ControlElementWithParentHighlight, _super);
    function ControlElementWithParentHighlight(element, _parentElement) {
        var _this = _super.call(this, element) || this;
        _this.element = element;
        _this._parentElement = _parentElement;
        _this._borderCssClassName = ['dxd-border-accented', 'dx-accessibility-container-highlight'];
        _this.toolbarItemHandleFocus = function () {
            var _a;
            (_a = _this._parentElement.classList).add.apply(_a, _this._borderCssClassName);
        };
        _this.toolbarItemHandleBlur = function () {
            var _a;
            (_a = _this._parentElement.classList).remove.apply(_a, _this._borderCssClassName);
        };
        element.addEventListener('focus', _this.toolbarItemHandleFocus);
        element.addEventListener('blur', _this.toolbarItemHandleBlur);
        return _this;
    }
    ControlElementWithParentHighlight.prototype.dispose = function () {
        this.element.removeEventListener('focus', this.toolbarItemHandleFocus);
        this.element.removeEventListener('blur', this.toolbarItemHandleBlur);
        _super.prototype.dispose.call(this);
    };
    return ControlElementWithParentHighlight;
}(_controlElementBase_1.AccessibilityControlElementBase));
exports.ControlElementWithParentHighlight = ControlElementWithParentHighlight;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _keyboardHelperBase_1 = __webpack_require__(49);
var KeyboardHelperWithArrowButtonBase = (function (_super) {
    __extends(KeyboardHelperWithArrowButtonBase, _super);
    function KeyboardHelperWithArrowButtonBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.startIndex = 0;
        return _this;
    }
    KeyboardHelperWithArrowButtonBase.prototype.resetTabIndexes = function () {
        this.setTabIndexes('-1');
    };
    KeyboardHelperWithArrowButtonBase.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.resetTabIndexes();
        this.controlElements[this.startIndex] && this.controlElements[this.startIndex].element.setAttribute('tabindex', '0');
    };
    KeyboardHelperWithArrowButtonBase.prototype.changeFocus = function (index, roundTrip) {
        if (roundTrip === void 0) { roundTrip = true; }
        this.resetTabIndexes();
        var nextIndex = _super.prototype.changeFocus.call(this, index, roundTrip);
        this.controlElements[nextIndex].setTabIndex('0');
        this.controlElements[nextIndex].setFocus();
        this.startIndex = nextIndex;
        return nextIndex;
    };
    return KeyboardHelperWithArrowButtonBase;
}(_keyboardHelperBase_1.AccessibilityKeyboardHelperBase));
exports.KeyboardHelperWithArrowButtonBase = KeyboardHelperWithArrowButtonBase;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _controlElementWithParentHighlight_1 = __webpack_require__(71);
var _keyboardHelperWithArrowButtonBase_1 = __webpack_require__(72);
var ListKeyboardHelper = (function (_super) {
    __extends(ListKeyboardHelper, _super);
    function ListKeyboardHelper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.controlElementClassName = 'dx-accessibility-list-item';
        return _this;
    }
    ListKeyboardHelper.prototype.createControlElement = function (element, index) {
        return new _controlElementWithParentHighlight_1.ControlElementWithParentHighlight(element, this.getContainer());
    };
    ListKeyboardHelper.prototype.itemHandleUpArrowKey = function (e, index) {
        this.startIndex = this.setFocusToPrevious(index, false);
        return true;
    };
    ListKeyboardHelper.prototype.itemHandleDownArrowKey = function (e, index) {
        this.startIndex = this.setFocusToNext(index, false);
        return true;
    };
    return ListKeyboardHelper;
}(_keyboardHelperWithArrowButtonBase_1.KeyboardHelperWithArrowButtonBase));
exports.ListKeyboardHelper = ListKeyboardHelper;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var toolbox_1 = __webpack_require__(96);
function getToolboxItems(controlsMap, defaultGroup) {
    if (defaultGroup === void 0) { defaultGroup = ''; }
    var toolboxItems = [];
    Object.keys(controlsMap).forEach(function (controlType) {
        if (!controlsMap[controlType].nonToolboxItem) {
            var item = {
                '@ControlType': controlType,
                displayName: controlsMap[controlType].displayName,
                index: controlsMap[controlType].toolboxIndex || 0,
                canDrop: controlsMap[controlType].canDrop,
                group: controlsMap[controlType].group || defaultGroup
            };
            if (controlsMap[controlType].size) {
                item['size'] = controlsMap[controlType].size;
            }
            if (controlsMap[controlType].defaultVal) {
                Object.keys(controlsMap[controlType].defaultVal).forEach(function (name) {
                    item[name] = controlsMap[controlType].defaultVal[name];
                });
            }
            toolboxItems.push(new toolbox_1.ToolboxItem(item));
        }
    });
    return toolboxItems.sort(function (item1, item2) { return item1.index - item2.index; });
}
exports.getToolboxItems = getToolboxItems;
function blur(element) {
    try {
        element['blur'] && element['blur']();
    }
    catch (e) {
        document.body.blur();
    }
}
exports.blur = blur;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorsInfo_1 = __webpack_require__(17);
exports.left = {
    propertyName: 'left', modelName: '@Left', localizationId: 'AnalyticsCoreStringId.PaddingInfo.Left', displayName: 'Left', editor: editorsInfo_1.editorTemplates.getEditor('numeric')
}, exports.right = { propertyName: 'right', localizationId: 'AnalyticsCoreStringId.PaddingInfo.Right', modelName: '@Right', displayName: 'Right', editor: editorsInfo_1.editorTemplates.getEditor('numeric') }, exports.top = { propertyName: 'top', localizationId: 'AnalyticsCoreStringId.PaddingInfo.Top', modelName: '@Top', displayName: 'Top', editor: editorsInfo_1.editorTemplates.getEditor('numeric') }, exports.bottom = { propertyName: 'bottom', localizationId: 'AnalyticsCoreStringId.PaddingInfo.Bottom', modelName: '@Bottom', displayName: 'Bottom', editor: editorsInfo_1.editorTemplates.getEditor('numeric') }, exports.all = { propertyName: 'all', localizationId: 'AnalyticsCoreStringId.PaddingInfo.All', displayName: 'All', editor: editorsInfo_1.editorTemplates.getEditor('numeric') };
exports.paddingSerializationsInfo = [exports.all, exports.left, exports.right, exports.top, exports.bottom];


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var _utils_1 = __webpack_require__(57);
var _LatestChangeSet = (function () {
    function _LatestChangeSet(changes, position) {
        this.changes = changes;
        this.position = position;
    }
    _LatestChangeSet.Empty = function () {
        return new _LatestChangeSet(null, null);
    };
    _LatestChangeSet.prototype.equal = function (changeSet) {
        return this.changes === changeSet.changes && this.position === changeSet.position;
    };
    return _LatestChangeSet;
}());
exports._LatestChangeSet = _LatestChangeSet;
var activeEngines = [];
var UndoEngine = (function (_super) {
    __extends(UndoEngine, _super);
    function UndoEngine(target, _ignoredProperties, _getInfoMethodName, _alwaysSubscribeProperties) {
        if (_ignoredProperties === void 0) { _ignoredProperties = ['surface']; }
        if (_alwaysSubscribeProperties === void 0) { _alwaysSubscribeProperties = []; }
        var _this = _super.call(this) || this;
        _this._ignoredProperties = _ignoredProperties;
        _this._getInfoMethodName = _getInfoMethodName;
        _this._alwaysSubscribeProperties = _alwaysSubscribeProperties;
        _this._groupObservers = [];
        _this._groupPosition = -1;
        _this._observers = [];
        _this._subscriptions = [];
        _this._visited = [];
        _this._position = ko.observable(-1);
        _this._lockedPosition = ko.observable(-1);
        _this._inUndoRedo = false;
        _this._currentEngineName = UndoEngine._disposeUndoEngineSubscriptionsName + _utils_1.guid();
        _this.redoEnabled = ko.observable(false);
        _this.undoEnabled = ko.observable(false);
        _this.isIngroup = -1;
        _this.isDirty = ko.computed({
            read: function () { return _this._position() !== _this._lockedPosition(); },
            write: function (value) { value ? _this._lockedPosition('forcibly marked as dirty') : _this._lockedPosition(_this._position()); }
        });
        activeEngines.push(_this._currentEngineName);
        _this._model = ko.unwrap(target);
        if (_this._getInfoMethodName) {
            if (ko.isSubscribable(target)) {
                _this._targetSubscription = _this.subscribeProperty(target, true);
            }
            else {
                _this._createDisposeFunction(target);
            }
        }
        else {
            var innerSubscriptions = _this.subscribe(_this._model);
            if (ko.isSubscribable(target)) {
                var prevVal = target();
                _this._targetSubscription = target.subscribe(function (newTargetValue) {
                    _this._removePropertiesSubscriptions();
                    if (!_this._inUndoRedo) {
                        _this.properyChanged({
                            observable: target, propertyChanged: { oldVal: prevVal, val: newTargetValue }
                        });
                        prevVal = newTargetValue;
                    }
                    _this._cleanSubscribtions(innerSubscriptions);
                    _this._model = newTargetValue;
                    innerSubscriptions = _this.subscribe(_this._model);
                });
            }
        }
        _this._disposables.push(_this.isDirty);
        return _this;
    }
    UndoEngine.tryGetUndoEngine = function (object) {
        var undo = null;
        activeEngines.some(function (x) {
            undo = object[x] && object[x].instance;
            return !!undo;
        });
        return undo;
    };
    Object.defineProperty(UndoEngine.prototype, "_modelReady", {
        get: function () {
            return _utils_1.checkModelReady(this._model);
        },
        enumerable: true,
        configurable: true
    });
    UndoEngine.prototype._disposeObserver = function (record) {
        var _this = this;
        if (record.propertyChanged) {
            var value = record.propertyChanged.val;
            if (value && !value[this._currentEngineName]) {
                value.dispose && value.dispose();
            }
        }
        else if (record.arrayChanges) {
            record.arrayChanges.forEach(function (change) {
                if (change.status === 'added') {
                    var value = change.value;
                    if (value && !value[_this._currentEngineName])
                        value.dispose && value.dispose();
                }
            });
        }
    };
    UndoEngine.prototype.properyChanged = function (undoRecord) {
        var _this = this;
        if (this._inUndoRedo) {
            return;
        }
        var currentPosition = this._position() + 1;
        if (currentPosition < this._observers.length) {
            var removedItems = this._observers.splice(currentPosition, this._observers.length);
            removedItems.forEach(function (changeSet) {
                if (Array.isArray(changeSet)) {
                    changeSet.reverse().forEach(function (item) { return _this._disposeObserver(item); });
                }
                else {
                    _this._disposeObserver(changeSet);
                }
            });
        }
        this._observers.push(undoRecord);
        this._position(currentPosition);
        this.undoEnabled(true);
        this.redoEnabled(false);
    };
    UndoEngine.prototype.visitProperties = function (target, info) {
        var subscribtions = [];
        if (target && info) {
            for (var i = 0; i < info.length; i++) {
                var alwaysSubscribeProperty = this._alwaysSubscribeProperties.some(function (x) { return x === info[i].propertyName; });
                if (info[i].modelName || info[i].editor || info[i].info || alwaysSubscribeProperty) {
                    var realPropertyName = alwaysSubscribeProperty ? info[i].propertyName : this.validatePropertyName(target, info[i].propertyName);
                    if (realPropertyName) {
                        if (!ko.isComputed(target[realPropertyName])) {
                            if (!ko.isObservable(target[realPropertyName])) {
                                subscribtions.push.apply([], this._createDisposeFunction(target[realPropertyName], info[i].info));
                            }
                            else {
                                subscribtions.push(this.subscribeProperty(target[realPropertyName], !info[i].link));
                            }
                        }
                    }
                }
            }
        }
        return subscribtions;
    };
    UndoEngine.prototype.undoChangeSet = function (changeSet) {
        if (changeSet.propertyChanged) {
            changeSet.observable(changeSet.propertyChanged.oldVal);
        }
        else {
            var array = changeSet.observable();
            for (var i = 0; i < changeSet.arrayChanges.length; i++) {
                if (changeSet.arrayChanges[i].status === 'added') {
                    array.splice(array.indexOf(changeSet.arrayChanges[i].value), 1);
                }
            }
            for (var i = 0; i < changeSet.arrayChanges.length; i++) {
                if (changeSet.arrayChanges[i].status === 'deleted') {
                    array.splice(changeSet.arrayChanges[i].index, 0, changeSet.arrayChanges[i].value);
                }
            }
            if (ko.isObservable(changeSet.observable)) {
                changeSet.observable.valueHasMutated();
            }
        }
    };
    UndoEngine.prototype.redoChangeSet = function (changeSet) {
        if (changeSet.propertyChanged) {
            changeSet.observable(changeSet.propertyChanged.val);
        }
        else {
            var array = changeSet.observable();
            for (var i = 0; i < changeSet.arrayChanges.length; i++) {
                if (changeSet.arrayChanges[i].status === 'deleted') {
                    array.splice(array.indexOf(changeSet.arrayChanges[i].value), 1);
                }
            }
            for (var i = 0; i < changeSet.arrayChanges.length; i++) {
                if (changeSet.arrayChanges[i].status === 'added') {
                    array.splice(changeSet.arrayChanges[i].index, 0, changeSet.arrayChanges[i].value);
                }
            }
            if (ko.isObservable(changeSet.observable)) {
                changeSet.observable.valueHasMutated();
            }
        }
    };
    UndoEngine.prototype._disposeChilds = function (target, info) {
        if (target && info) {
            for (var i = 0; i < info.length; i++) {
                if (info[i].modelName || info[i].editor || info[i].info) {
                    var propertyName = info[i].propertyName;
                    if (propertyName.indexOf('_') !== 0) {
                        var realPropertyName = propertyName;
                        if (ko.isWritableObservable(target['_' + propertyName])) {
                            realPropertyName = '_' + realPropertyName;
                        }
                        if (!ko.isComputed(target[realPropertyName])) {
                            var val = ko.unwrap(target[realPropertyName]);
                            if (!!val && typeof val === 'object') {
                                if (!info[i].link) {
                                    this._callDisposeFunction(val);
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    UndoEngine.prototype._createDisposeFunction = function (val, info) {
        var _this = this;
        var subscriptions = [];
        if (val && typeof val === 'object') {
            var objectInfo = info || (val[this._getInfoMethodName] && val[this._getInfoMethodName]());
            if (!!objectInfo) {
                if (val[this._currentEngineName]) {
                    val[this._currentEngineName].inc++;
                }
                else {
                    val[this._currentEngineName] = { inc: 1, instance: this };
                    subscriptions = this.subscribe(val, objectInfo);
                    val[this._currentEngineName]['func'] = function () {
                        val[_this._currentEngineName].inc--;
                        _this._disposeChilds(val, objectInfo);
                        if (val[_this._currentEngineName].inc === 0) {
                            _this._cleanSubscribtions(subscriptions);
                            delete val[_this._currentEngineName];
                        }
                    };
                }
            }
        }
        return subscriptions;
    };
    UndoEngine.prototype._callDisposeFunction = function (val) {
        if (val) {
            if (Array.isArray(val)) {
                for (var i = 0; i < val.length; i++) {
                    val[i][this._currentEngineName] && val[i][this._currentEngineName].func();
                }
            }
            else {
                val[this._currentEngineName] && val[this._currentEngineName].func();
            }
        }
    };
    UndoEngine.prototype._cleanSubscribtions = function (subscribtionArray) {
        if (subscribtionArray) {
            if (subscribtionArray.length) {
                for (var i = 0; i < subscribtionArray.length; i++) {
                    this._cleanSubscribtions(subscribtionArray[i]);
                }
            }
            else {
                subscribtionArray.dispose && subscribtionArray.dispose();
            }
        }
    };
    UndoEngine.prototype.validatePropertyName = function (target, propertyName) {
        if ((!this._ignoredProperties || (this._ignoredProperties && this._ignoredProperties.every(function (x) { return x !== propertyName; }))) && propertyName[0] !== '_') {
            if (ko.isWritableObservable(target['_' + propertyName])) {
                return '_' + propertyName;
            }
            return propertyName;
        }
        return null;
    };
    UndoEngine.prototype.subscribeProperty = function (property, subscribeChilds) {
        var _this = this;
        if (ko.isObservable(property)) {
            var prevVal = property();
            if (Array.isArray(prevVal)) {
                for (var i = 0; i < property().length; i++) {
                    this._createDisposeFunction(property()[i]);
                }
                return property.subscribe(function (args) {
                    if (_this._modelReady) {
                        var addedItems = args.filter(function (x) { return x.status === 'added'; });
                        var removedItems = args.filter(function (x) { return x.status === 'deleted'; });
                        for (var i = 0; i < removedItems.length; i++) {
                            _this._callDisposeFunction(removedItems[i].value);
                        }
                        for (var i = 0; i < addedItems.length; i++) {
                            _this._createDisposeFunction(addedItems[i].value);
                        }
                        _this.properyChanged({ observable: property, arrayChanges: args });
                    }
                }, null, 'arrayChange');
            }
            else {
                if (ko.isWritableObservable(property)) {
                    if (subscribeChilds) {
                        this._createDisposeFunction(property());
                    }
                    return property.subscribe(function (val) {
                        if (_this._modelReady) {
                            if (subscribeChilds) {
                                _this._callDisposeFunction(prevVal);
                            }
                            _this.properyChanged({
                                observable: property, propertyChanged: { oldVal: prevVal, val: val }
                            });
                            prevVal = val;
                            if (subscribeChilds) {
                                _this._createDisposeFunction(val);
                            }
                        }
                    });
                }
            }
        }
    };
    UndoEngine.prototype.subscribeProperties = function (properties) {
        var _this = this;
        properties.forEach(function (property) {
            if (ko.isObservable(property)) {
                var prevVal = property();
                if (property['push']) {
                    _this._subscriptions.push(property.subscribe(function (args) {
                        if (_this._modelReady) {
                            if (!_this._inUndoRedo) {
                                _this.properyChanged({ observable: property, arrayChanges: args });
                                _this.subscribe(args.map(function (item) { return item.value; }));
                            }
                        }
                    }, null, 'arrayChange'));
                }
                else {
                    if (ko.isWritableObservable(property)) {
                        _this._subscriptions.push(property.subscribe(function (val) {
                            if (_this._modelReady) {
                                _this.properyChanged({
                                    observable: property, propertyChanged: { oldVal: prevVal, val: val }
                                });
                                prevVal = property();
                            }
                        }));
                    }
                }
            }
        });
    };
    UndoEngine.prototype.subscribe = function (target, info) {
        var _this = this;
        if (this._getInfoMethodName) {
            return this.visitProperties(target, info || (target && target[this._getInfoMethodName] && target[this._getInfoMethodName]()));
        }
        else {
            _utils_1.propertiesVisitor(target, function (properties) { _this.subscribeProperties(properties); }, this._visited, this._ignoredProperties);
        }
    };
    UndoEngine.prototype.getCurrentChangeSet = function () {
        return new _LatestChangeSet(this._observers[this._position()], this._position());
    };
    UndoEngine.prototype._removePropertiesSubscriptions = function () {
        this._subscriptions.forEach(function (subscription) { return subscription.dispose(); });
        this._subscriptions = [];
        this._visited = [];
    };
    UndoEngine.prototype.dispose = function () {
        var _this = this;
        _super.prototype.dispose.call(this);
        this.removeTargetSubscription();
        var position = 0;
        activeEngines.some(function (x, index) {
            if (x === _this._currentEngineName) {
                position = index;
                return true;
            }
            return false;
        });
        activeEngines.splice(position, 1);
    };
    UndoEngine.prototype.removeTargetSubscription = function () {
        this._targetSubscription && this._targetSubscription.dispose();
        this.reset();
    };
    UndoEngine.prototype.undoAll = function () {
        if (this.undoEnabled()) {
            this.undo();
            this.undoAll();
        }
    };
    UndoEngine.prototype.reset = function () {
        this._removePropertiesSubscriptions();
        this.clearHistory();
    };
    UndoEngine.prototype.clearHistory = function () {
        this._groupObservers = [];
        this._observers = [];
        this.redoEnabled(false);
        this.undoEnabled(false);
        this._inUndoRedo = false;
        this._groupPosition = -1;
        this._position(-1);
        this._lockedPosition(this._position());
    };
    UndoEngine.prototype.undo = function (removeNode) {
        var _this = this;
        if (removeNode === void 0) { removeNode = false; }
        try {
            this._inUndoRedo = true;
            if (this.undoEnabled()) {
                var changeSet = this._observers[this._position()];
                if (changeSet) {
                    if (Array.isArray(changeSet)) {
                        changeSet.reverse().forEach(function (item) { return _this.undoChangeSet(item); });
                    }
                    else {
                        this.undoChangeSet(changeSet);
                    }
                    if (removeNode) {
                        this._observers.splice(this._position(), 1);
                    }
                    this._position(this._position() - 1);
                    this.undoEnabled(this._observers.length !== 0 && this._position() >= 0);
                    this.redoEnabled(this._position() < this._observers.length - 1);
                }
            }
        }
        finally {
            this._inUndoRedo = false;
        }
    };
    UndoEngine.prototype.redo = function () {
        var _this = this;
        try {
            this._inUndoRedo = true;
            if (this.redoEnabled()) {
                var changeSet = this._observers[this._position() + 1];
                if (changeSet) {
                    if (Array.isArray(changeSet)) {
                        changeSet.reverse().forEach(function (item) { return _this.redoChangeSet(item); });
                    }
                    else {
                        this.redoChangeSet(changeSet);
                    }
                    this._position(this._position() + 1);
                    this.undoEnabled(this._observers.length !== 0 && this._position() >= 0);
                    this.redoEnabled(this._position() + 1 < this._observers.length);
                }
            }
        }
        finally {
            this._inUndoRedo = false;
        }
    };
    UndoEngine.prototype._hasSessionChanges = function () {
        return this.isIngroup === 0 && this._observers.length > 0;
    };
    UndoEngine.prototype.start = function () {
        this.isIngroup++;
        if (this.isIngroup !== 0)
            return;
        this._groupObservers = this._observers;
        this._observers = [];
        this._groupPosition = this._position();
        this._position(-1);
        this._lockedPosition(this._position());
    };
    UndoEngine.prototype.end = function () {
        var _this = this;
        this.isIngroup--;
        if (this.isIngroup !== -1) {
            return;
        }
        if (this._observers.length > 0) {
            this._position(this._groupPosition + 1);
            var removedItems = this._groupObservers.splice(this._position(), this._groupObservers.length - this._position(), this._observers);
            removedItems.forEach(function (changeSet) {
                if (Array.isArray(changeSet)) {
                    changeSet.reverse().forEach(function (item) { return _this._disposeObserver(item); });
                }
                else {
                    _this._disposeObserver(changeSet);
                }
            });
        }
        else {
            this._position(this._groupPosition);
        }
        this._observers = this._groupObservers;
    };
    UndoEngine._disposeUndoEngineSubscriptionsName = '___dispose___UndoEngine___Subscriptions___';
    return UndoEngine;
}(utils_1.Disposable));
exports.UndoEngine = UndoEngine;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _arrayutils_1 = __webpack_require__(32);
var SnapLinesCollector = (function () {
    function SnapLinesCollector() {
        this._verticalSnapLines = [];
        this._horizontalSnapLines = [];
        this._snapTargetToIgnore = null;
    }
    SnapLinesCollector.prototype._appendSnapLine = function (position, limitInf, limitSup, snapLines) {
        var line = {
            position: position,
            limitInf: limitInf,
            limSup: limitSup
        };
        var index = _arrayutils_1.binaryIndexOf(snapLines, line, function (a, b) { return a.position - b.position; });
        if (index > -1) {
            snapLines[index].limitInf = Math.min(snapLines[index].limitInf, limitInf);
            snapLines[index].limSup = Math.max(snapLines[index].limSup, limitSup);
        }
        else {
            snapLines.splice(~index, 0, line);
        }
    };
    SnapLinesCollector.prototype._collectSnaplines = function (parent, parentAbsoluteProsition) {
        var _this = this;
        this._enumerateCollection(parent, parentAbsoluteProsition, function (item, itemAbsoluteRect) {
            if (item !== _this._snapTargetToIgnore) {
                _this._appendSnapLine(itemAbsoluteRect.left, itemAbsoluteRect.top, itemAbsoluteRect.bottom, _this._verticalSnapLines);
                _this._appendSnapLine(itemAbsoluteRect.right, itemAbsoluteRect.top, itemAbsoluteRect.bottom, _this._verticalSnapLines);
                _this._appendSnapLine(itemAbsoluteRect.top, itemAbsoluteRect.left, itemAbsoluteRect.right, _this._horizontalSnapLines);
                _this._appendSnapLine(itemAbsoluteRect.bottom, itemAbsoluteRect.left, itemAbsoluteRect.right, _this._horizontalSnapLines);
                _this._collectSnaplines(item, itemAbsoluteRect);
            }
        });
    };
    SnapLinesCollector.prototype._getCollection = function (parent) {
        return parent['controls'] && parent['controls']();
    };
    SnapLinesCollector.prototype._enumerateCollection = function (parent, parentAbsoluteProsition, callback) {
        var collection = this._getCollection(parent);
        if (!collection)
            return;
        for (var i = 0; i < collection.length; i++) {
            var itemRect = collection[i].rect && collection[i].rect();
            if (itemRect) {
                callback(collection[i], {
                    top: itemRect.top + parentAbsoluteProsition.top,
                    bottom: itemRect.bottom + parentAbsoluteProsition.top,
                    left: itemRect.left + parentAbsoluteProsition.left,
                    right: itemRect.right + parentAbsoluteProsition.left
                });
            }
        }
    };
    SnapLinesCollector.prototype.collectSnaplines = function (root, snapTargetToIgnore) {
        this._snapTargetToIgnore = snapTargetToIgnore;
        this._verticalSnapLines.splice(0);
        this._horizontalSnapLines.splice(0);
        this._collectSnaplines(root, { top: 0, left: 0 });
        return {
            vertical: this._verticalSnapLines,
            horizontal: this._horizontalSnapLines
        };
    };
    return SnapLinesCollector;
}());
exports.SnapLinesCollector = SnapLinesCollector;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _metadata_1 = __webpack_require__(70);
var Point = (function () {
    function Point(x, y) {
        this.x = ko.observable(x);
        this.y = ko.observable(y);
    }
    Point.prototype.getInfo = function () {
        return _metadata_1.locationFake;
    };
    Point.fromString = function (value) {
        if (value === void 0) { value = '0, 0'; }
        var components = value.split(',');
        return new Point(parseFloat(components[0]), parseFloat(components[1]));
    };
    Point.prototype.toString = function () {
        return this.x() + ', ' + this.y();
    };
    Point.unitProperties = ['x', 'y'];
    return Point;
}());
exports.Point = Point;


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
exports.availableFonts = ko.observable({});


/***/ }),
/* 80 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxScrollView };

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var _internal_1 = __webpack_require__(19);
exports.availableUnits = [
    { value: 'pt', displayValue: 'Point', localizationId: 'DevExpress.ReportDesigner_FontOptions_Unit_Point' },
    { value: 'world', displayValue: 'World', localizationId: 'AnalyticsCoreStringId.FontOptions_Unit_World' },
    { value: 'px', displayValue: 'Pixel', localizationId: 'AnalyticsCoreStringId.FontOptions_Unit_Pixel' },
    { value: 'in', displayValue: 'Inch', localizationId: 'AnalyticsCoreStringId.Wizard_Inch' },
    { value: 'doc', displayValue: 'Document', localizationId: 'PreviewStringId.ReportDesigner_FontOptions_Unit_Document' },
    { value: 'mm', displayValue: 'Millimetr', localizationId: 'AnalyticsCoreStringId.Wizard_Millimeter' }
];
var FontModel = (function (_super) {
    __extends(FontModel, _super);
    function FontModel(value) {
        var _this = _super.call(this) || this;
        _this.family = ko.observable(null);
        _this.unit = ko.observable(null);
        _this.isUpdateModel = false;
        _this.size = ko.observable(null);
        _this.modificators = {
            bold: ko.observable(false),
            italic: ko.observable(false),
            strikeout: ko.observable(false),
            underline: ko.observable(false)
        };
        _this.updateModel(value());
        _this._disposables.push(value.subscribe(function (newVal) {
            _this.isUpdateModel = true;
            _this.updateModel(newVal);
            _this.isUpdateModel = false;
        }));
        _this._disposables.push(_this.modificators.bold.subscribe(function (newVal) { return _this.updateValue(value); }));
        _this._disposables.push(_this.modificators.italic.subscribe(function (newVal) { return _this.updateValue(value); }));
        _this._disposables.push(_this.modificators.strikeout.subscribe(function (newVal) { return _this.updateValue(value); }));
        _this._disposables.push(_this.modificators.underline.subscribe(function (newVal) { return _this.updateValue(value); }));
        _this._disposables.push(_this.family.subscribe(function (newVal) { return _this.updateValue(value); }));
        _this._disposables.push(_this.size.subscribe(function (newVal) { return _this.updateValue(value); }));
        _this._disposables.push(_this.unit.subscribe(function (newVal) { return _this.updateValue(value); }));
        return _this;
    }
    FontModel.prototype._toString = function () {
        var leftPart = [this.family(), this.size() + this.unit()].join(', ');
        var modificators = [];
        if (this.modificators.bold())
            modificators.push('Bold');
        if (this.modificators.italic())
            modificators.push('Italic');
        if (this.modificators.underline())
            modificators.push('Underline');
        if (this.modificators.strikeout())
            modificators.push('Strikeout');
        var rightPart = modificators.join(', ');
        return !!rightPart ? [leftPart, rightPart].join(', style=') : leftPart;
    };
    FontModel.prototype.updateModel = function (value) {
        if (!value)
            value = _internal_1.defaultFontSerialization();
        var components = value.split(',');
        this.family(components[0]);
        var self = this;
        exports.availableUnits.forEach(function (element) {
            if (components[1].trim().indexOf(element.value) != -1) {
                self.size(parseFloat(components[1].split(element.value)[0]));
                self.unit(element.value);
            }
        });
        this.modificators.bold(value.indexOf('Bold') !== -1);
        this.modificators.italic(value.indexOf('Italic') !== -1);
        this.modificators.underline(value.indexOf('Underline') !== -1);
        this.modificators.strikeout(value.indexOf('Strikeout') !== -1);
    };
    FontModel.prototype.updateValue = function (value) {
        if (!this.isUpdateModel) {
            value(this._toString());
        }
    };
    return FontModel;
}(utils_1.Disposable));
exports.FontModel = FontModel;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _helper_1 = __webpack_require__(55);
var _serializer_1 = __webpack_require__(63);
var function_1 = __webpack_require__(16);
var binary_1 = __webpack_require__(23);
var in_1 = __webpack_require__(35);
var unary_1 = __webpack_require__(12);
var aggregate_1 = __webpack_require__(11);
var group_1 = __webpack_require__(14);
var localization_utils_1 = __webpack_require__(3);
var _validator_1 = __webpack_require__(125);
var between_1 = __webpack_require__(36);
var _addon_1 = __webpack_require__(124);
var _treelistController_1 = __webpack_require__(126);
var aggregateOperandSurface_1 = __webpack_require__(56);
var operandPropertySurface_1 = __webpack_require__(83);
var operandParameterSurface_1 = __webpack_require__(128);
var operandValueSurface_1 = __webpack_require__(129);
var groupOperandSurface_1 = __webpack_require__(130);
var betweenOperandSurface_1 = __webpack_require__(131);
var binaryOperandSurface_1 = __webpack_require__(132);
var functionOperandSurface_1 = __webpack_require__(133);
var inOperandSurface_1 = __webpack_require__(134);
var unaryOperandSurface_1 = __webpack_require__(26);
var criteriaOperatorSurface_1 = __webpack_require__(18);
var _internal_1 = __webpack_require__(4);
var FilterEditorHelper = (function () {
    function FilterEditorHelper(serializer) {
        this.rtl = false;
        this.parameters = ko.observable([]);
        this.canSelectLists = true;
        this.canCreateParameters = false;
        this.canChoiceParameters = true;
        this.canChoiceProperty = true;
        this.criteriaTreeValidator = new _validator_1.CriteriaSurfaceValidator();
        this.filterEditorOperators = {
            _common: [
                { name: 'Equals', insertVal: '==', value: binary_1.BinaryOperatorType.Equal, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseEquals' },
                { name: 'Does not equal', hidden: true, reverse: true, value: binary_1.BinaryOperatorType.Equal, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseDoesNotEqual' },
                { name: 'Does not equal', insertVal: '!=', value: binary_1.BinaryOperatorType.NotEqual, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseDoesNotEqual' },
                { name: 'Equals', reverse: true, hidden: true, value: binary_1.BinaryOperatorType.NotEqual, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseEquals' },
                { name: 'Is greater than', insertVal: '>', value: binary_1.BinaryOperatorType.Greater, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseGreater' },
                { name: 'Is less than or equal to', hidden: true, reverse: true, value: binary_1.BinaryOperatorType.Greater, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseGreater' },
                { name: 'Is greater than or equal to', insertVal: '>=', value: binary_1.BinaryOperatorType.GreaterOrEqual, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseGreaterOrEqual' },
                { name: 'Is less than', hidden: true, reverse: true, value: binary_1.BinaryOperatorType.GreaterOrEqual, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseLess' },
                { name: 'Is less than', insertVal: '<', value: binary_1.BinaryOperatorType.Less, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseLess' },
                { name: 'Is greater than or equal to', reverse: true, hidden: true, value: binary_1.BinaryOperatorType.Less, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseGreaterOrEqual' },
                { name: 'Is less than or equal to', insertVal: '<=', value: binary_1.BinaryOperatorType.LessOrEqual, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseLessOrEqual' },
                { name: 'Is greater than', reverse: true, hidden: true, value: binary_1.BinaryOperatorType.LessOrEqual, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseGreater' },
                { name: 'Is between', value: 'Between', insertVal: 'Between(, )', paramCount: 1, type: between_1.BetweenOperator, localizationId: 'StringId.FilterClauseBetween' },
                { name: 'Is not between', value: 'Between', insertVal: 'Between(, )', paramCount: 1, type: between_1.BetweenOperator, reverse: true, localizationId: 'StringId.FilterClauseNotBetween' }
            ],
            string: [],
            guid: [],
            integer: [],
            float: [],
            date: [],
            list: [],
            group: [],
            bool: []
        };
        this.onChange = function () { };
        this.onEditorFocusOut = function (criteria) { };
        this.onSave = function (criteria) { };
        this.onClosing = function () { };
        this.handlers = {
            create: function (criteria, popupService) {
                return {
                    data: new _addon_1.FilterEditorAddOn(criteria, popupService, 'create', 'createItems'),
                    templateName: 'dx-filtereditor-create'
                };
            },
            change: function (criteria, popupService) {
                return {
                    data: new _addon_1.FilterEditorAddOn(criteria, popupService, 'change', 'items'),
                    templateName: 'dx-filtereditor-change'
                };
            },
            changeProperty: function (criteria, popupService) {
                return {
                    data: new _addon_1.FilterEditorAddOn(criteria, popupService, 'changeProperty', 'items', 'dx-filtereditor-popup-treelist'),
                    templateName: 'dx-filtereditor-changeProperty'
                };
            },
            changeValueType: function (criteria, popupService) {
                return {
                    data: new _addon_1.FilterEditorAddOn(criteria, popupService, 'changeValueType', 'changeTypeItems'),
                    templateName: 'dx-filtereditor-changeValueType'
                };
            },
            changeParameter: function (criteria, popupService) {
                return {
                    data: new _addon_1.FilterEditorAddOn(criteria, popupService, 'changeParameter', 'items'),
                    templateName: 'dx-filtereditor-changeParameter'
                };
            }
        };
        this.mapper = {
            Aggregate: aggregateOperandSurface_1.AggregateOperandSurface,
            Property: operandPropertySurface_1.OperandPropertySurface,
            Parameter: operandParameterSurface_1.OperandParameterSurface,
            Value: operandValueSurface_1.OperandValueSurface,
            Group: groupOperandSurface_1.GroupOperandSurface,
            Between: betweenOperandSurface_1.BetweenOperandSurface,
            Binary: binaryOperandSurface_1.BinaryOperandSurface,
            Function: functionOperandSurface_1.FunctionOperandSurface,
            In: inOperandSurface_1.InOperandSurface,
            Unary: unaryOperandSurface_1.UnaryOperandSurface,
            Default: criteriaOperatorSurface_1.CriteriaOperatorSurface
        };
        this.serializer = serializer || new _serializer_1.FilterEditorSerializer();
        this.filterEditorOperators.string = [].concat(this.filterEditorOperators._common, [
            { name: 'Contains', insertVal: 'Contains(, )', value: function_1.FunctionOperatorType.Contains, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterClauseContains' },
            { name: 'Does not contain', value: function_1.FunctionOperatorType.Contains, type: function_1.FunctionOperatorType, reverse: true, localizationId: 'StringId.FilterClauseDoesNotContain' },
            { name: 'Begins with', insertVal: 'StartsWith(, )', value: function_1.FunctionOperatorType.StartsWith, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterClauseBeginsWith' },
            { name: 'Ends with', insertVal: 'StartsWith(, )', value: function_1.FunctionOperatorType.EndsWith, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterClauseEndsWith' },
            { name: 'Is like', insertVal: 'Like', value: binary_1.BinaryOperatorType.Like, type: binary_1.BinaryOperatorType, localizationId: 'StringId.FilterClauseLike' },
            { name: 'Is not like', insertVal: 'Not Like', value: binary_1.BinaryOperatorType.Like, type: binary_1.BinaryOperatorType, reverse: true, localizationId: 'StringId.FilterClauseNotLike' },
            { name: 'Is any of', value: 'In', insertVal: 'In()', paramCount: 1, type: in_1.InOperator, localizationId: 'StringId.FilterClauseAnyOf' },
            { name: 'Is none of', value: 'In', type: in_1.InOperator, reverse: true, localizationId: 'StringId.FilterClauseNoneOf' },
            { name: 'Is blank', insertVal: 'IsNullOrEmpty()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsNullOrEmpty, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterClauseIsNullOrEmpty' },
            { name: 'Is not blank', insertVal: 'Not IsNullOrEmpty()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsNullOrEmpty, type: function_1.FunctionOperatorType, reverse: true, localizationId: 'StringId.FilterClauseIsNotNullOrEmpty' }
        ]);
        this.filterEditorOperators.guid = this.filterEditorOperators.string;
        this.filterEditorOperators.integer = [].concat(this.filterEditorOperators._common, [
            { name: 'Is null', insertVal: 'Is Null', value: unary_1.UnaryOperatorType.IsNull, type: unary_1.UnaryOperatorType, localizationId: 'StringId.FilterClauseIsNull' },
            { name: 'Is not null', insertVal: 'Is Not Null', value: unary_1.UnaryOperatorType.IsNull, type: unary_1.UnaryOperatorType, reverse: true, localizationId: 'StringId.FilterClauseIsNotNull' },
            { name: 'Is any of', value: 'In', insertVal: 'In()', paramCount: 1, type: in_1.InOperator, localizationId: 'StringId.FilterClauseAnyOf' },
            { name: 'Is none of', value: 'In', type: in_1.InOperator, reverse: true, localizationId: 'StringId.FilterClauseNoneOf' },
        ]);
        this.filterEditorOperators.float = this.filterEditorOperators.integer;
        this.filterEditorOperators.bool = this.filterEditorOperators.integer;
        this.filterEditorOperators.date = [].concat(this.filterEditorOperators._common, [
            { name: 'Is null', insertVal: 'Is Null', value: unary_1.UnaryOperatorType.IsNull, type: unary_1.UnaryOperatorType, localizationId: 'StringId.FilterClauseIsNull' },
            { name: 'Is not null', insertVal: 'Is Not Null', value: unary_1.UnaryOperatorType.IsNull, type: unary_1.UnaryOperatorType, reverse: true, localizationId: 'StringId.FilterClauseIsNotNull' },
            { name: 'Is any of', value: 'In', insertVal: 'In()', type: in_1.InOperator, localizationId: 'StringId.FilterClauseAnyOf' },
            { name: 'Is none of', value: 'In', type: in_1.InOperator, reverse: true, localizationId: 'StringId.FilterClauseNoneOf' },
            { name: 'Is beyond this year', insertVal: 'IsOutlookIntervalBeyondThisYear()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsOutlookIntervalBeyondThisYear, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsOutlookIntervalBeyondThisYear' },
            { name: 'Is next week', insertVal: 'IsOutlookIntervalNextWeek()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsOutlookIntervalNextWeek, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsOutlookIntervalNextWeek' },
            { name: 'Is tomorrow', insertVal: 'IsOutlookIntervalTomorrow()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsOutlookIntervalTomorrow, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsOutlookIntervalTomorrow' },
            { name: 'Is today', insertVal: 'IsOutlookIntervalToday()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsOutlookIntervalToday, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsOutlookIntervalToday' },
            { name: 'Is yesterday', insertVal: 'IsOutlookIntervalYesterday()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsOutlookIntervalYesterday, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsOutlookIntervalYesterday' },
            { name: 'Is last week', insertVal: 'IsOutlookIntervalLastWeek()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsOutlookIntervalLastWeek, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLastWeek' },
            { name: 'Is prior this year', insertVal: 'IsOutlookIntervalPriorThisYear()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsOutlookIntervalPriorThisYear, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsOutlookIntervalPriorThisYear' },
            { name: 'Is same day', insertVal: 'IsSameDay(, )', value: function_1.FunctionOperatorType.IsSameDay, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsSameDay' },
            { name: 'Is this month', insertVal: 'IsThisMonth()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsThisMonth, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsThisMonth' },
            { name: 'Is this week', insertVal: 'IsThisWeek()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsThisWeek, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsThisWeek' },
            { name: 'Is this year', insertVal: 'IsThisYear()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsThisYear, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsThisYear' },
            { name: 'Is next month', insertVal: 'IsNextMonth', emptyRightPart: true, value: function_1.FunctionOperatorType.IsNextMonth, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsNextMonth' },
            { name: 'Is next year', insertVal: 'IsNextYear()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsNextYear, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsNextYear' },
            { name: 'Is last month', insertVal: 'IsLastMonth()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsLastMonth, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsLastMonth' },
            { name: 'Is last year', insertVal: 'IsLastYear()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsLastYear, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsLastYear' },
            { name: 'Is the year-to-date period', insertVal: 'IsYearToDate()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsYearToDate, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsYearToDate' },
            { name: 'Is January', insertVal: 'IsJanuary()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsJanuary, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsJanuary' },
            { name: 'Is February', insertVal: 'IsFebruary()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsFebruary, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsFebruary' },
            { name: 'Is March', insertVal: 'IsMarch()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsMarch, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsMarch' },
            { name: 'Is April', insertVal: 'IsApril()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsApril, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsApril' },
            { name: 'Is May', insertVal: 'IsMay()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsMay, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsMay' },
            { name: 'Is June', insertVal: 'IsJune()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsJune, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsJune' },
            { name: 'Is July', insertVal: 'IsJuly()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsJuly, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsJuly' },
            { name: 'Is August', insertVal: 'IsAugust()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsAugust, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsAugust' },
            { name: 'Is September', insertVal: 'IsSeptember()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsSeptember, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsSeptember' },
            { name: 'Is October', insertVal: 'IsOctober()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsOctober, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsOctober' },
            { name: 'Is November', insertVal: 'IsNovember()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsNovember, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsNovember' },
            { name: 'Is December', insertVal: 'IsDecember()', emptyRightPart: true, value: function_1.FunctionOperatorType.IsDecember, type: function_1.FunctionOperatorType, localizationId: 'StringId.FilterCriteriaToStringFunctionIsDecember' },
        ]);
        this.filterEditorOperators.list = [
            { name: 'Exists', value: aggregate_1.Aggregate.Exists, insertVal: 'Exists()', type: aggregate_1.Aggregate, localizationId: 'StringId.FilterAggregateExists' },
            { name: 'Count', value: aggregate_1.Aggregate.Count, insertVal: 'Count()', type: aggregate_1.Aggregate, localizationId: 'StringId.FilterAggregateCount' },
            { name: 'Max', value: aggregate_1.Aggregate.Max, insertVal: 'Max()', type: aggregate_1.Aggregate, localizationId: 'StringId.FilterAggregateMax' },
            { name: 'Min', value: aggregate_1.Aggregate.Min, insertVal: 'Min()', type: aggregate_1.Aggregate, localizationId: 'StringId.FilterAggregateMin' },
            { name: 'Sum', value: aggregate_1.Aggregate.Sum, insertVal: 'Sum()', type: aggregate_1.Aggregate, localizationId: 'StringId.FilterAggregateSum' },
            { name: 'Avg', value: aggregate_1.Aggregate.Avg, insertVal: 'Avg()', type: aggregate_1.Aggregate, localizationId: 'StringId.FilterAggregateAvg' }
        ];
        this.filterEditorOperators.group = [
            { name: 'And', insertVal: 'And', value: group_1.GroupOperatorType.And, type: group_1.GroupOperatorType, localizationId: 'StringId.FilterGroupAnd' },
            { name: 'Or', insertVal: 'Or', value: group_1.GroupOperatorType.Or, type: group_1.GroupOperatorType, localizationId: 'StringId.FilterGroupOr' },
            { name: 'Not And', value: group_1.GroupOperatorType.And, reverse: true, type: group_1.GroupOperatorType, localizationId: 'StringId.FilterGroupNotAnd' },
            { name: 'Not Or', value: group_1.GroupOperatorType.Or, reverse: true, type: group_1.GroupOperatorType, localizationId: 'StringId.FilterGroupNotOr' },
        ];
        this._initDisplayText();
    }
    Object.defineProperty(FilterEditorHelper.prototype, "_allFilterEditorOperators", {
        get: function () {
            var _this = this;
            var operators = [];
            Object.keys(this.filterEditorOperators).forEach(function (propertyName) {
                operators.push.apply(operators, _this.filterEditorOperators[propertyName]);
            });
            return operators;
        },
        enumerable: true,
        configurable: true
    });
    FilterEditorHelper.prototype._getFilterEditorOperator = function (item, items, reverse) {
        return items.filter(function (x) { return x.value === item.operatorType && x.type === item.enumType && x.reverse === reverse; })[0];
    };
    FilterEditorHelper.prototype._initDisplayText = function () {
        var _this = this;
        Object.keys(this.filterEditorOperators).forEach(function (specific) {
            _this.filterEditorOperators[specific].forEach(_helper_1.initDisplayText);
        });
    };
    FilterEditorHelper.prototype.registrateOperator = function (specific, targetEnum, value, name, reverse, localizationId) {
        if (reverse === void 0) { reverse = false; }
        if (this.filterEditorOperators[specific]) {
            if (!targetEnum[value]) {
                var maxNumber = 0;
                var index = 0;
                $.each(targetEnum, function (name, _) {
                    index = parseInt(name);
                    if (!isNaN(index) && maxNumber < index) {
                        maxNumber = index;
                    }
                });
                maxNumber++;
                targetEnum[maxNumber] = value;
                targetEnum[value] = maxNumber;
            }
            var newOperator = { name: name, value: targetEnum[value], type: targetEnum, reverse: reverse, displayText: localization_utils_1.getLocalization(name, localizationId) };
            this.filterEditorOperators[specific].push(newOperator);
        }
    };
    FilterEditorHelper.prototype.generateTreelistOptions = function (fieldListProvider, path) {
        var _this = this;
        var treeListOptions = ko.observable(null);
        var selected = ko.observable(null);
        return {
            subscription: ko.computed(function () {
                treeListOptions({
                    itemsProvider: ko.unwrap(fieldListProvider),
                    selectedPath: ko.observable(''),
                    selected: selected,
                    path: ko.unwrap(path),
                    treeListController: new _treelistController_1.FilterEditorTreeListController(selected),
                    rtl: _this.rtl
                });
            }),
            options: treeListOptions
        };
    };
    return FilterEditorHelper;
}());
exports.FilterEditorHelper = FilterEditorHelper;
exports.DefaultFilterEditorHelper = _internal_1.createGlobalModuleVariableFunc(FilterEditorHelper);
function _setDefaultFilterEditorHelper(helperType) {
    exports.DefaultFilterEditorHelper(helperType);
}
exports._setDefaultFilterEditorHelper = _setDefaultFilterEditorHelper;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var operandSurfaceBase_1 = __webpack_require__(41);
var pathRequest_1 = __webpack_require__(27);
var OperandPropertySurface = (function (_super) {
    __extends(OperandPropertySurface, _super);
    function OperandPropertySurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this._displayName = ko.observable('');
        _this.propertyName = ko.observable('');
        _this.specifics = ko.observable('integer');
        _this.dataType = ko.observable('');
        _this.valueType = ko.observable('');
        _this.changeProperty = function (item) {
            _this.fieldsOptions().selected(item);
        };
        _this.templateName = 'dx-filtereditor-property';
        _this.operatorClass = 'criteria-operator-item-field dxd-filter-editor-field-back-color dxd-filter-editor-field-back-color dxd-filter-editor-text-color';
        _this.propertyName(operator.propertyName);
        var options = _this.helper.generateTreelistOptions(fieldListProvider, path);
        if (options.options && options.subscription) {
            _this.fieldsOptions = options.options;
            _this._disposables.push(options.subscription);
        }
        else {
            _this.fieldsOptions = options;
        }
        _this._disposables.push(_this.fieldsOptions().selectedPath.subscribe(function (newVal) {
            var realName = _this.fieldsOptions().selectedPath().substr(_this.path && _this.path().length > 0 ? _this.path().length + 1 : 0);
            _this.propertyName(realName);
            _this.model.propertyName = realName;
            _this.popupService.visible(false);
        }));
        _this._disposables.push(_this.fieldsOptions().selected.subscribe(function (newVal) {
            _this._updateDisplayName(path, _this.propertyName(), newVal.displayName);
            var specifics = newVal.specifics.toLowerCase();
            if (specifics.indexOf('calc') === 0) {
                specifics = specifics.split('calc')[1];
            }
            if (_this.specifics() !== specifics || _this.dataType() !== newVal.dataType) {
                _this.specifics(specifics);
                _this.dataType(newVal.dataType);
                _this.parent.change();
            }
            _this.helper.onChange();
        }));
        _this.fieldsOptions().selectedPath(_this.path && !!ko.unwrap(_this.path) ? [ko.unwrap(_this.path), _this.propertyName()].join('.') : _this.propertyName());
        _this._updateSpecifics();
        _this._disposables.push(_this.displayName = ko.computed(function () {
            return _this._displayName() || _this.propertyName();
        }));
        return _this;
    }
    OperandPropertySurface.prototype._updateDisplayName = function (path, propertyName, displayName) {
        var _this = this;
        if (!!this.helper.getDisplayPropertyName) {
            this.helper.getDisplayPropertyName(ko.unwrap(path), propertyName).done(function (newVal) {
                _this._displayName(newVal);
            });
        }
        else {
            this._displayName(displayName);
        }
    };
    OperandPropertySurface.prototype._updateSpecifics = function () {
        var _this = this;
        var self = this;
        var propertyPath = this.propertyName().split('.');
        var realPropertyName = propertyPath.pop();
        if (ko.unwrap(this.fieldsOptions).itemsProvider) {
            this.isUpdated(true);
            ko.unwrap(this.fieldsOptions).itemsProvider.getItems(new pathRequest_1.PathRequest([this.path()].concat(propertyPath).join('.'))).done(function (result) {
                var notListProperties = result.filter(function (item) { return item.specifics !== 'List' && !item.isList; });
                if (!_this.propertyName() && notListProperties.length > 0) {
                    _this.model.propertyName = notListProperties[0].name;
                    _this.propertyName(notListProperties[0].name);
                    realPropertyName = notListProperties[0].name;
                }
                var item = result.filter(function (item) { return item.name === realPropertyName; })[0];
                if (item) {
                    var specifics = item.specifics.toLowerCase();
                    if (specifics.indexOf('calc') === 0) {
                        specifics = specifics.split('calc')[1];
                    }
                    _this.specifics(specifics);
                    _this.dataType(item.dataType);
                    _this._updateDisplayName(_this.path, _this.propertyName(), item.displayName);
                }
            }).always(function () {
                _this.isUpdated(false);
            });
        }
    };
    Object.defineProperty(OperandPropertySurface.prototype, "items", {
        get: function () {
            return this.fieldsOptions;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OperandPropertySurface.prototype, "displayType", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    return OperandPropertySurface;
}(operandSurfaceBase_1.OperandSurfaceBase));
exports.OperandPropertySurface = OperandPropertySurface;


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var editor_1 = __webpack_require__(34);
var _treelistController_1 = __webpack_require__(40);
var FieldListEditor = (function (_super) {
    __extends(FieldListEditor, _super);
    function FieldListEditor(modelPropertyInfo, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, modelPropertyInfo, level, parentDisabled, textToSearch) || this;
        _this.path = ko.pureComputed(function () {
            return _this._model() && _this._model()['getPath'] && _this._model()['getPath'](_this.name) || '';
        });
        _this.treeListController = new _treelistController_1.TreeListController();
        _this._disposables.push(_this.path);
        _this._disposables.push(_this.treeListController);
        return _this;
    }
    return FieldListEditor;
}(editor_1.Editor));
exports.FieldListEditor = FieldListEditor;


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var EditorAddOn = (function (_super) {
    __extends(EditorAddOn, _super);
    function EditorAddOn(editor, popupService) {
        var _this = _super.call(this) || this;
        _this.templateName = 'dx-editor-addons';
        _this._editor = editor;
        _this._popupService = popupService;
        _this._disposables.push(_this._actions = ko.pureComputed(function () {
            return (editor.getPopupServiceActions() || []).filter(function (x) { return _this.actionFilter(x); });
        }));
        _this._disposables.push(_this.visible = ko.pureComputed(function () {
            return _this._actions().length > 0;
        }));
        _this._disposables.push(_this.hint = ko.pureComputed(function () {
            var acc = [];
            _this._actions().forEach(function (x) { return _this._getTitles(x, [], acc); });
            return acc.join('\n');
        }));
        _this._disposables.push(_this.editorMenuButtonCss = ko.pureComputed(function () {
            var editorModel = editor._model();
            return editorModel && editorModel['getActionClassName'] && editorModel['getActionClassName'](editor.name) || '';
        }));
        _this._disposables.push(_this.imageTemplateName = ko.pureComputed(function () {
            var editorModel = editor._model();
            return editorModel && editorModel['getMenuBoxTemplate'] && editorModel['getMenuBoxTemplate'](editor.name) || '';
        }));
        return _this;
    }
    EditorAddOn.prototype._updateActions = function (actions) {
        var _this = this;
        this._popupService.actions([]);
        if (!actions || !actions.length)
            return;
        actions
            .sort(function (x, y) { return (x.title < y.title ? -1 : x.title > y.title ? 1 : 0); })
            .sort(function (x, y) { return (x.weight || 0) - (y.weight || 0); });
        this._wrapVisibleItems(actions, this._editor.name).forEach(function (visibleItem) {
            _this._popupService.actions.push(visibleItem);
        });
    };
    EditorAddOn.prototype._getTitles = function (item, currentItemPath, acc) {
        var _this = this;
        if (currentItemPath === void 0) { currentItemPath = []; }
        if (acc === void 0) { acc = []; }
        var title = ko.unwrap(item.title);
        (item.items || []).forEach(function (x) {
            var nextPath = title ? currentItemPath.concat([title]) : currentItemPath;
            _this._getTitles(x, nextPath, acc);
        });
        var hint = ko.unwrap(item.hint);
        if (!hint || !title)
            return;
        var resultTitle = currentItemPath.concat([title]).join('. ');
        acc.push(resultTitle + ':\n' + hint + '\n');
        return acc;
    };
    EditorAddOn.prototype._wrapVisibleItems = function (actions, editorName) {
        var _this = this;
        if (!actions)
            return undefined;
        return actions.map(function (modelAction) { return _this._wrapActionClick(modelAction, editorName); }).filter(function (x) { return !!x; });
    };
    EditorAddOn.prototype._wrapActionClick = function (modelAction, editorName) {
        var _this = this;
        if (this.actionFilter(modelAction)) {
            return {
                id: modelAction.id,
                items: this._wrapVisibleItems(modelAction.items, editorName),
                customTemplate: modelAction.customTemplate,
                action: function () {
                    modelAction.action(editorName);
                    _this._popupService.visible(false);
                },
                title: modelAction.title,
                hint: modelAction.hint,
                visible: function () { return true; }
            };
        }
        else {
            return null;
        }
    };
    EditorAddOn.prototype.showPopup = function (_, element) {
        this._popupService.title(this._editor.displayName());
        this._updateActions(this._editor.getPopupServiceActions());
        this._popupService.target(element);
        this._popupService.visible(true);
    };
    EditorAddOn.prototype.actionFilter = function (action) {
        return action.visible(this._editor.name);
    };
    return EditorAddOn;
}(utils_1.Disposable));
exports.EditorAddOn = EditorAddOn;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var criteriaCreator = __webpack_require__(43).criteriaCreator;
var BinaryOperatorType = __webpack_require__(23).BinaryOperatorType;
var UnaryOperatorType = __webpack_require__(12).UnaryOperatorType;
var group = __webpack_require__(14);
var GroupOperatorType = group.GroupOperatorType;
var GroupOperator = group.GroupOperator;
var FunctionOperatorType = __webpack_require__(16).FunctionOperatorType;
var JoinOperand = __webpack_require__(61).JoinOperand;
var Aggregate = __webpack_require__(11).Aggregate;
/* parser generated by jison 0.4.18 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var criteriaparser = (function(){
var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,6],$V2=[1,30],$V3=[1,8],$V4=[1,9],$V5=[1,10],$V6=[1,11],$V7=[1,25],$V8=[1,12],$V9=[1,13],$Va=[1,14],$Vb=[1,15],$Vc=[1,16],$Vd=[1,17],$Ve=[1,18],$Vf=[1,19],$Vg=[1,20],$Vh=[1,21],$Vi=[1,22],$Vj=[1,23],$Vk=[1,24],$Vl=[1,27],$Vm=[1,29],$Vn=[1,28],$Vo=[1,32],$Vp=[1,33],$Vq=[1,34],$Vr=[1,35],$Vs=[1,36],$Vt=[1,37],$Vu=[1,38],$Vv=[1,39],$Vw=[1,40],$Vx=[1,41],$Vy=[1,42],$Vz=[1,43],$VA=[1,44],$VB=[1,45],$VC=[1,46],$VD=[1,47],$VE=[1,48],$VF=[1,49],$VG=[1,50],$VH=[1,51],$VI=[1,52],$VJ=[5,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,30,31,33,35,36,52],$VK=[5,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,30,31,33,35,36,51,52,53,55,56,57],$VL=[1,60],$VM=[5,14,15,16,19,20,21,22,23,24,25,26,27,28,30,31,33,35,36,52],$VN=[5,27,28,30,36,52],$VO=[1,111],$VP=[1,112],$VQ=[1,106],$VR=[1,108],$VS=[1,109],$VT=[1,107],$VU=[1,110],$VV=[5,11,12,14,15,16,19,20,21,22,23,24,25,26,27,28,30,31,33,35,36,52],$VW=[5,19,20,25,26,27,28,30,31,36,52],$VX=[5,19,20,21,22,23,24,25,26,27,28,30,31,36,52],$VY=[30,36];
var parser = {trace: function trace () { },
yy: {},
symbols_: {"error":2,"expressions":3,"exp":4,"EOF":5,"const":6,"propertyWithAgg":7,"parameter":8,"*":9,"/":10,"+":11,"-":12,"%":13,"|":14,"&":15,"^":16,"!":17,"~":18,"OP_EQ":19,"OP_NE":20,"OP_GT":21,"OP_LT":22,"OP_GE":23,"OP_LE":24,"OP_LIKE":25,"NOT":26,"AND":27,"OR":28,"(":29,")":30,"IS":31,"NULL":32,"OP_IN":33,"arguments":34,"OP_BETWEEN":35,",":36,"NAME_SOFT":37,"AGG_MIN":38,"AGG_MAX":39,"AGG_COUNT":40,"AGG_AVG":41,"AGG_SUM":42,"AGG_EXISTS":43,"AGG_SINGLE":44,"STRING":45,"NUMBER":46,"OBJECT":47,"BOOLEAN":48,"GUID":49,"property":50,"[":51,"]":52,".":53,"agg":54,"FIELD_END":55,"CH":56,"ESC_CH":57,"FIELD_START":58,"?":59,"commaseparated":60,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",9:"*",10:"/",11:"+",12:"-",13:"%",14:"|",15:"&",16:"^",17:"!",18:"~",19:"OP_EQ",20:"OP_NE",21:"OP_GT",22:"OP_LT",23:"OP_GE",24:"OP_LE",25:"OP_LIKE",26:"NOT",27:"AND",28:"OR",29:"(",30:")",31:"IS",32:"NULL",33:"OP_IN",35:"OP_BETWEEN",36:",",37:"NAME_SOFT",38:"AGG_MIN",39:"AGG_MAX",40:"AGG_COUNT",41:"AGG_AVG",42:"AGG_SUM",43:"AGG_EXISTS",44:"AGG_SINGLE",45:"STRING",46:"NUMBER",47:"OBJECT",48:"BOOLEAN",49:"GUID",51:"[",52:"]",53:".",55:"FIELD_END",56:"CH",57:"ESC_CH",58:"FIELD_START",59:"?"},
productions_: [0,[3,2],[4,1],[4,1],[4,1],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,4],[4,2],[4,3],[4,3],[4,3],[4,3],[4,4],[4,3],[4,7],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[7,6],[7,5],[7,3],[7,4],[7,3],[7,1],[7,4],[54,3],[54,1],[54,3],[54,1],[54,4],[54,4],[54,3],[54,4],[54,4],[54,4],[50,2],[50,2],[50,2],[50,3],[50,3],[50,1],[50,1],[50,1],[8,2],[8,1],[34,2],[34,3],[60,1],[60,3]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:
 return $$[$0-1]; 
break;
case 2:
 this.$ = criteriaCreator.process("const", { value: $$[$0] }); 
break;
case 3: case 4: case 41: case 42: case 43: case 44: case 45:
 this.$ = $$[$0]; 
break;
case 5:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.Multiply }); 
break;
case 6:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.Divide }); 
break;
case 7:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.Plus }); 
break;
case 8:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.Minus }); 
break;
case 9:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.Modulo }); 
break;
case 10:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.BitwiseOr }); 
break;
case 11:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.BitwiseAnd }); 
break;
case 12:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.BitwiseXor }); 
break;
case 13:
 this.$ = criteriaCreator.process("unary", { operatorType: UnaryOperatorType.Minus, operator: $$[$0] }); 
break;
case 14:
 this.$ = criteriaCreator.process("unary", { operatorType: UnaryOperatorType.Plus, operator: $$[$0] }); 
break;
case 15: case 25:
 this.$ = criteriaCreator.process("unary", { operatorType: UnaryOperatorType.Not, operator: $$[$0] }); 
break;
case 16:
 this.$ = criteriaCreator.process("unary", { operatorType: UnaryOperatorType.BitwiseNot, operator: $$[$0] }); 
break;
case 17:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.Equal }); 
break;
case 18:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.NotEqual }); 
break;
case 19:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.Greater }); 
break;
case 20:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.Less }); 
break;
case 21:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.GreaterOrEqual }); 
break;
case 22:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.LessOrEqual }); 
break;
case 23:
 this.$ = criteriaCreator.process("binary",  { left: $$[$0-2], right: $$[$0], operatorType: BinaryOperatorType.Like }); 
break;
case 24:

            this.$ = criteriaCreator.process("unary", { 
                operatorType: UnaryOperatorType.Not, 
                operator: criteriaCreator.process("binary", { left: $$[$0-3], right: $$[$0], operatorType: BinaryOperatorType.Like }) 
            });
        
break;
case 26:
 this.$ = GroupOperator.combine(GroupOperatorType.And, [$$[$0-2], $$[$0]]); 
break;
case 27:
 this.$ = GroupOperator.combine(GroupOperatorType.Or, [$$[$0-2], $$[$0]]); 
break;
case 28: case 64: case 75:
 this.$ = $$[$0-1]; 
break;
case 29:
 this.$ = criteriaCreator.process("unary", { operatorType: UnaryOperatorType.IsNull, operator: $$[$0-2] }); 
break;
case 30:
 
            this.$ = criteriaCreator.process("unary", { 
                operatorType: UnaryOperatorType.Not,
                operator: criteriaCreator.process("unary", { operatorType: UnaryOperatorType.IsNull, operator: $$[$0-3] })
            }); 
        
break;
case 31:
 this.$ = criteriaCreator.process("in", { criteriaOperator: $$[$0-2], operands: $$[$0] }); 
break;
case 32:
 this.$ = criteriaCreator.process("between", { property: $$[$0-6], begin: $$[$0-3], end: $$[$0-1] }); 
break;
case 33:
 this.$ = criteriaCreator.process("function", { operatorType: FunctionOperatorType[$$[$0-1]] || $$[$0-1], operands: $$[$0] }); 
break;
case 34:
 this.$ = criteriaCreator.process("function", { operatorType: FunctionOperatorType.Min, operands: $$[$0] }); 
break;
case 35:
 this.$ = criteriaCreator.process("function", { operatorType: FunctionOperatorType.Max, operands: $$[$0] }); 
break;
case 36:
 this.$ = criteriaCreator.process("function", { operatorType: FunctionOperatorType["Count"] || "Count", operands: $$[$0] }); 
break;
case 37:
 this.$ = criteriaCreator.process("function", { operatorType: FunctionOperatorType["Avg"] || "Avg", operands: $$[$0] }); 
break;
case 38:
 this.$ = criteriaCreator.process("function", { operatorType: FunctionOperatorType["Sum"] || "Sum", operands: $$[$0] }); 
break;
case 39:
 this.$ = criteriaCreator.process("function", { operatorType: FunctionOperatorType["Exists"] || "Exists", operands: $$[$0] }); 
break;
case 40:
 this.$ = criteriaCreator.process("function", { operatorType: FunctionOperatorType["Single"] || "Single", operands: $$[$0] }); 
break;
case 46:
 this.$ = null; 
break;
case 47:
 
            this.$ = JoinOperand.joinOrAggregate(
                criteriaCreator.process("property", { propertyName: $$[$0-5].name, startColumn: $$[$0-5].col, circumflex: $$[$0-5].circumflex, startLine: $$[$0-5].line, originalPropertyLength: _$[$0-5].last_column - _$[$0-5].first_column + 1 }), 
                $$[$0-3], $$[$0].type, $$[$0].expr
            );
        
break;
case 48:
 
            this.$ = JoinOperand.joinOrAggregate(
                criteriaCreator.process("property", { propertyName: $$[$0-4].name, startColumn: $$[$0-4].col, circumflex: $$[$0-4].circumflex, startLine: $$[$0-4].line, originalPropertyLength: _$[$0-4].last_column - _$[$0-4].first_column + 1 }), 
                null, $$[$0].type, $$[$0].expr
            );
        
break;
case 49:
 
            this.$ = JoinOperand.joinOrAggregate(
                criteriaCreator.process("property", { propertyName: $$[$0-2].name, startColumn: $$[$0-2].col, circumflex: $$[$0-2].circumflex, startLine: $$[$0-2].line, originalPropertyLength: _$[$0-2].last_column - _$[$0-2].first_column }), 
                null, $$[$0].type, $$[$0].expr
            );
        
break;
case 50:
 
            this.$ = JoinOperand.joinOrAggregate(
                criteriaCreator.process("property", { propertyName: $$[$0-3].name, startColumn: $$[$0-3].col, circumflex: $$[$0-3].circumflex, startLine: $$[$0-3].line, originalPropertyLength: _$[$0-3].last_column - _$[$0-3].first_column + 1 }), 
                $$[$0-1], Aggregate.Exists, null
            );
        
break;
case 51:
 
            this.$ = JoinOperand.joinOrAggregate(
                criteriaCreator.process("property", { propertyName: $$[$0-2].name, startColumn: $$[$0-2].col, circumflex: $$[$0-2].circumflex, startLine: $$[$0-2].line, originalPropertyLength: _$[$0-2].last_column - _$[$0-2].first_column + 1 }), 
                null, Aggregate.Exists, null);
        
break;
case 52:
 
            this.$ = criteriaCreator.process("property", { propertyName: $$[$0].name, startColumn: $$[$0].col, circumflex: $$[$0].circumflex, startLine: $$[$0].line, originalPropertyLength: _$[$0].last_column - _$[$0].first_column });
        
break;
case 53:
 
            this.$ = JoinOperand.joinOrAggregate(
                criteriaCreator.process("property", { }), 
                null, $$[$0].type, $$[$0].expr
            ); 
        
break;
case 54:
 this.$ = { type:  Aggregate.Count  };  
break;
case 55:
 this.$ = { type:  Aggregate.Count };   
break;
case 56: case 57:
 this.$ = { type:  Aggregate.Exists }; 
break;
case 58:
 this.$ = { type:  Aggregate.Avg, expr: $$[$0-1] }; 
break;
case 59:
 this.$ = { type:  Aggregate.Sum, expr: $$[$0-1] }; 
break;
case 60:
 this.$ = { type:  Aggregate.Single, expr: criteriaCreator.process("property", { propertyName: "This" }) }; 
break;
case 61:
 this.$ = { type:  Aggregate.Single, expr: $$[$0-1] }; 
break;
case 62:
 this.$ = { type:  Aggregate.Min, expr: $$[$0-1] }; 
break;
case 63:
 this.$ = { type:  Aggregate.Max, expr: $$[$0-1] }; 
break;
case 65:
 this.$ = { name: $$[$0-1].name + $$[$0], line: $$[$0-1].line, circumflex: $$[$0-1].circumflex, col: $$[$0-1].col }; 
break;
case 66:
 this.$ = { name: $$[$0-1].name + $$[$0].substr(1), line: $$[$0-1].line, circumflex: $$[$0-1].circumflex, col: $$[$0-1].col }; 
break;
case 67:
 
        if($$[$0-2].circumflex && $$[$0-2].started) {
            this.$ = { name: '', line: $$[$0-2].line, circumflex: $$[$0-2].circumflex, col: $$[$0-2].col + 2 }; 
        } else 
            this.$ = { name: $$[$0-2].name + '.', line: $$[$0-2].line, circumflex: $$[$0-2].circumflex, col: $$[$0-2].col }; 
    
break;
case 68:
 
        if($$[$0-2].circumflex && $$[$0-2].started){ 
            this.$ = { name: $$[$0], line: $$[$0-2].line, circumflex: $$[$0-2].circumflex, col: $$[$0-2].col + 1 }; 
        } else 
            this.$ = { name: $$[$0-2].name + '.' + $$[$0], line: $$[$0-2].line, circumflex: $$[$0-2].circumflex, col: $$[$0-2].col }; 
    
break;
case 69:
 this.$ = { name: "", line: _$[$0].first_line - 1, col: _$[$0].first_column + 1 }; 
break;
case 70:
 this.$ = { name: $$[$0], line: _$[$0].first_line - 1, col: _$[$0].first_column }; 
break;
case 71:
 this.$ = { circumflex: true, started: true, name: "", line: _$[$0].first_line - 1, col: _$[$0].first_column + 1 }; 
break;
case 72:
 this.$ = criteriaCreator.process("parameter", { parameterName: $$[$0] }); 
break;
case 73:
 this.$ = criteriaCreator.process("value", { }); 
break;
case 74:
 this.$ = []; 
break;
case 76:
 this.$ = [$$[$0]]; 
break;
case 77:
 this.$ = $$[$0-2].concat($$[$0]); 
break;
}
},
table: [{3:1,4:2,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{1:[3]},{5:[1,31],9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,31:$VG,33:$VH,35:$VI},o($VJ,[2,2]),o($VJ,[2,3]),o($VJ,[2,4]),{4:53,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:54,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:55,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:56,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:57,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:58,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},o($VK,[2,70],{34:59,29:$VL}),{29:$VL,34:61},{29:$VL,34:62},{29:$VL,34:63},{29:$VL,34:64},{29:$VL,34:65},{29:$VL,34:66},{29:$VL,34:67},o($VJ,[2,41]),o($VJ,[2,42]),o($VJ,[2,43]),o($VJ,[2,44]),o($VJ,[2,45]),o($VJ,[2,46]),o($VJ,[2,52],{51:[1,68],53:[1,69],55:[1,70],56:[1,71],57:[1,72]}),{52:[1,73]},o($VJ,[2,73],{37:[1,74]}),o($VK,[2,69]),o($VK,[2,71]),{1:[2,1]},{4:75,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:76,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:77,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:78,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:79,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:80,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:81,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:82,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:83,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:84,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:85,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:86,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:87,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:88,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:89,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{25:[1,90]},{4:91,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:92,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{26:[1,94],32:[1,93]},{29:$VL,34:95},{29:[1,96]},o($VJ,[2,13]),o($VJ,[2,14]),o($VJ,[2,15]),o($VM,[2,16],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs}),o($VN,[2,25],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,31:$VG,33:$VH,35:$VI}),{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,30:[1,97],31:$VG,33:$VH,35:$VI},o($VJ,[2,33]),{4:100,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,30:[1,98],32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn,60:99},o($VJ,[2,34]),o($VJ,[2,35]),o($VJ,[2,36]),o($VJ,[2,37]),o($VJ,[2,38]),o($VJ,[2,39]),o($VJ,[2,40]),{4:101,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,52:[1,102],58:$Vm,59:$Vn},{37:[1,105],38:$VO,39:$VP,40:$VQ,41:$VR,42:$VS,43:$VT,44:$VU,54:103,58:[1,104]},o($VK,[2,64]),o($VK,[2,65]),o($VK,[2,66]),{53:[1,113]},o($VJ,[2,72]),o($VJ,[2,5]),o($VJ,[2,6]),o($VV,[2,7],{9:$Vo,10:$Vp,13:$Vs}),o($VV,[2,8],{9:$Vo,10:$Vp,13:$Vs}),o($VJ,[2,9]),o([5,14,19,20,21,22,23,24,25,26,27,28,30,31,33,35,36,52],[2,10],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,15:$Vu,16:$Vv}),o($VM,[2,11],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs}),o([5,14,16,19,20,21,22,23,24,25,26,27,28,30,31,33,35,36,52],[2,12],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,15:$Vu}),o($VW,[2,17],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,21:$Vy,22:$Vz,23:$VA,24:$VB,33:$VH,35:$VI}),o($VW,[2,18],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,21:$Vy,22:$Vz,23:$VA,24:$VB,33:$VH,35:$VI}),o($VX,[2,19],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,33:$VH,35:$VI}),o($VX,[2,20],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,33:$VH,35:$VI}),o($VX,[2,21],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,33:$VH,35:$VI}),o($VX,[2,22],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,33:$VH,35:$VI}),o($VW,[2,23],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,21:$Vy,22:$Vz,23:$VA,24:$VB,33:$VH,35:$VI}),{4:114,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},o($VN,[2,26],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,31:$VG,33:$VH,35:$VI}),o([5,28,30,36,52],[2,27],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,31:$VG,33:$VH,35:$VI}),o($VJ,[2,29]),{32:[1,115]},o($VJ,[2,31]),{4:116,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},o($VJ,[2,28]),o($VJ,[2,74]),{30:[1,117],36:[1,118]},o($VY,[2,76],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,31:$VG,33:$VH,35:$VI}),{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,31:$VG,33:$VH,35:$VI,52:[1,119]},o($VJ,[2,51],{53:[1,120]}),o($VJ,[2,49]),o($VK,[2,67]),o($VK,[2,68]),o($VJ,[2,55],{29:[1,121]}),o($VJ,[2,57],{29:[1,122]}),{29:[1,123]},{29:[1,124]},{29:[1,125]},{29:[1,126]},{29:[1,127]},{38:$VO,39:$VP,40:$VQ,41:$VR,42:$VS,43:$VT,44:$VU,54:128},o($VW,[2,24],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,21:$Vy,22:$Vz,23:$VA,24:$VB,33:$VH,35:$VI}),o($VJ,[2,30]),{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,31:$VG,33:$VH,35:$VI,36:[1,129]},o($VJ,[2,75]),{4:130,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},o($VJ,[2,50],{53:[1,131]}),{38:$VO,39:$VP,40:$VQ,41:$VR,42:$VS,43:$VT,44:$VU,54:132},{30:[1,133]},{30:[1,134]},{4:135,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:136,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:138,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,30:[1,137],32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:139,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},{4:140,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},o($VJ,[2,53]),{4:141,6:3,7:4,8:5,11:$V0,12:$V1,16:$V2,17:$V3,18:$V4,26:$V5,29:$V6,32:$V7,37:$V8,38:$V9,39:$Va,40:$Vb,41:$Vc,42:$Vd,43:$Ve,44:$Vf,45:$Vg,46:$Vh,47:$Vi,48:$Vj,49:$Vk,50:26,51:$Vl,58:$Vm,59:$Vn},o($VY,[2,77],{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,31:$VG,33:$VH,35:$VI}),{38:$VO,39:$VP,40:$VQ,41:$VR,42:$VS,43:$VT,44:$VU,54:142},o($VJ,[2,48]),o($VJ,[2,54]),o($VJ,[2,56]),{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,30:[1,143],31:$VG,33:$VH,35:$VI},{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,30:[1,144],31:$VG,33:$VH,35:$VI},o($VJ,[2,60]),{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,30:[1,145],31:$VG,33:$VH,35:$VI},{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,30:[1,146],31:$VG,33:$VH,35:$VI},{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,30:[1,147],31:$VG,33:$VH,35:$VI},{9:$Vo,10:$Vp,11:$Vq,12:$Vr,13:$Vs,14:$Vt,15:$Vu,16:$Vv,19:$Vw,20:$Vx,21:$Vy,22:$Vz,23:$VA,24:$VB,25:$VC,26:$VD,27:$VE,28:$VF,30:[1,148],31:$VG,33:$VH,35:$VI},o($VJ,[2,47]),o($VJ,[2,58]),o($VJ,[2,59]),o($VJ,[2,61]),o($VJ,[2,62]),o($VJ,[2,63]),o($VJ,[2,32])],
defaultActions: {31:[2,1]},
parseError: function parseError (str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        var error = new Error(str);
        error.hash = hash;
        throw error;
    }
},
parse: function parse(input) {
    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    for (var k in this.yy) {
        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
            sharedState.yy[k] = this.yy[k];
        }
    }
    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);
    var ranges = lexer.options && lexer.options.ranges;
    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    _token_stack:
        var lex = function () {
            var token;
            token = lexer.lex() || EOF;
            if (typeof token !== 'number') {
                token = self.symbols_[token] || token;
            }
            return token;
        };
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(lexer.yytext);
            lstack.push(lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                sharedState.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};
/* generated by jison-lex 0.3.4 */
var lexer = (function(){
var lexer = ({

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input, yy) {
        this.yy = yy || this.yy || {};
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function(match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex () {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin (condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState () {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules () {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState (n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState (condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {"case-insensitive":true},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0: this.begin('INITIAL'); return 51; 
break;
case 1: this.begin('INITIAL'); return 55; 
break;
case 2:return 57;
break;
case 3:return 56;
break;
case 4:return 'INVALID';
break;
case 5:return 45
break;
case 6:return 49
break;
case 7:return 47
break;
case 8:return 46
break;
case 9:return 48
break;
case 10:return 48
break;
case 11:/* skip whitespace */
break;
case 12:return 35
break;
case 13:return 33
break;
case 14:return 26
break;
case 15:return 31
break;
case 16:return 32
break;
case 17:return 9
break;
case 18:return 10
break;
case 19:return 12
break;
case 20:return 11
break;
case 21:return 16
break;
case 22:return 18
break;
case 23:return 20
break;
case 24:return 17
break;
case 25:return 13
break;
case 26:return 20
break;
case 27:return 23
break;
case 28:return 24
break;
case 29:return 21
break;
case 30:return 22
break;
case 31:return 28
break;
case 32:return 27
break;
case 33:return 41
break;
case 34:return 39
break;
case 35:return 38
break;
case 36:return 44
break;
case 37:return 40
break;
case 38:return 43
break;
case 39:return 42
break;
case 40:return 19
break;
case 41:return 19
break;
case 42:return 25
break;
case 43:return 27
break;
case 44:return 28
break;
case 45:return 15
break;
case 46:return 14
break;
case 47: this.begin('fieldname'); return 58; 
break;
case 48:return 52;
break;
case 49:return 29
break;
case 50:return 30
break;
case 51:return 53
break;
case 52:return 36
break;
case 53:return 59
break;
case 54:return 37
break;
case 55:return 'INVALID'
break;
case 56:return 5
break;
}
},
rules: [/^(?:\]\s*\[)/i,/^(?:\])/i,/^(?:\\.)/i,/^(?:.)/i,/^(?:$)/i,/^(?:'(?:[^\']|(?:('')))*')/i,/^(?:\{[0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}\})/i,/^(?:#(?:[^\\\#]|(?:\\.))*#)/i,/^(?:[0-9]+(\.[0-9]+([mfMF]{1})?|[bsiluBSILU]{1})?)/i,/^(?:True\b)/i,/^(?:False\b)/i,/^(?:\s+)/i,/^(?:Between\b)/i,/^(?:In\b)/i,/^(?:Not\b)/i,/^(?:Is\b)/i,/^(?:Null\b)/i,/^(?:\*)/i,/^(?:\/)/i,/^(?:-)/i,/^(?:\+)/i,/^(?:\^)/i,/^(?:~)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:%)/i,/^(?:<>)/i,/^(?:>=)/i,/^(?:<=)/i,/^(?:>)/i,/^(?:<)/i,/^(?:\|\|)/i,/^(?:&&)/i,/^(?:Avg\b)/i,/^(?:Max\b)/i,/^(?:Min\b)/i,/^(?:Single\b)/i,/^(?:Count\b)/i,/^(?:Exists\b)/i,/^(?:Sum\b)/i,/^(?:==)/i,/^(?:=)/i,/^(?:Like\b)/i,/^(?:And\b)/i,/^(?:Or\b)/i,/^(?:&)/i,/^(?:\|)/i,/^(?:\[)/i,/^(?:\])/i,/^(?:\()/i,/^(?:\))/i,/^(?:\.)/i,/^(?:,)/i,/^(?:\?)/i,/^(?:[_\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376-\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E-\u066F\u0671-\u06D3\u06D5\u06E5-\u06E6\u06EE-\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4-\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F-\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC-\u09DD\u09DF-\u09E1\u09F0-\u09F1\u0A05-\u0A0A\u0A0F-\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32-\u0A33\u0A35-\u0A36\u0A38-\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2-\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0-\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F-\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32-\u0B33\u0B35-\u0B39\u0B3D\u0B5C-\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99-\u0B9A\u0B9C\u0B9E-\u0B9F\u0BA3-\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60-\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0-\u0CE1\u0CF1-\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32-\u0E33\u0E40-\u0E46\u0E81-\u0E82\u0E84\u0E87-\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA-\u0EAB\u0EAD-\u0EB0\u0EB2-\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065-\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE-\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5-\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183-\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3006\u3031-\u3035\u303B-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5-\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40-\uFB41\uFB43-\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC][\d_\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376-\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E-\u066F\u0671-\u06D3\u06D5\u06E5-\u06E6\u06EE-\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4-\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F-\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC-\u09DD\u09DF-\u09E1\u09F0-\u09F1\u0A05-\u0A0A\u0A0F-\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32-\u0A33\u0A35-\u0A36\u0A38-\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2-\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0-\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F-\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32-\u0B33\u0B35-\u0B39\u0B3D\u0B5C-\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99-\u0B9A\u0B9C\u0B9E-\u0B9F\u0BA3-\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60-\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0-\u0CE1\u0CF1-\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32-\u0E33\u0E40-\u0E46\u0E81-\u0E82\u0E84\u0E87-\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA-\u0EAB\u0EAD-\u0EB0\u0EB2-\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065-\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE-\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5-\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183-\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3006\u3031-\u3035\u303B-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5-\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40-\uFB41\uFB43-\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]*)/i,/^(?:.)/i,/^(?:$)/i],
conditions: {"fieldname":{"rules":[0,1,2,3,4],"inclusive":false},"INITIAL":{"rules":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"inclusive":true}}
});
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
exports.criteriaparser = criteriaparser;
exports.parse = function(test) { return criteriaparser.parse(test) };


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RequestHelper = (function () {
    function RequestHelper() {
    }
    RequestHelper.generateUri = function (host, uri) {
        host = host || '';
        if (host && host[host.length - 1] === '/' && uri && uri[0] === '/') {
            return host + uri.substring(1);
        }
        return host + uri;
    };
    return RequestHelper;
}());
exports.RequestHelper = RequestHelper;


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _ajaxSetup_1 = __webpack_require__(89);
exports.ajaxSetup = new _ajaxSetup_1.AjaxSetup();


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var _utils_1 = __webpack_require__(5);
var AjaxSetup = (function () {
    function AjaxSetup() {
        this.ajaxSettings = {};
    }
    AjaxSetup.prototype.sendRequest = function (settings) {
        return $.ajax(_utils_1.extend({}, this.ajaxSettings, settings));
    };
    return AjaxSetup;
}());
exports.AjaxSetup = AjaxSetup;


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var analytics_version_1 = __webpack_require__(152);
var devextremeVersion = __webpack_require__(194);
exports.dxversions = {
    analytics: analytics_version_1.version,
    devextreme: devextremeVersion.version || devextremeVersion.default
};


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.extendedTemplates = function (templates) { return ({
    'dxrd-svg-fieldlist-list': templates['dxrd-svg-fieldlist-table'],
    'dxrd-svg-fieldlist-default': templates['dxrd-svg-fieldlist-column']
}); };


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _controlElementBase_1 = __webpack_require__(39);
var _keyboardHelperBase_1 = __webpack_require__(49);
var RightPanelKeyboardHelper = (function (_super) {
    __extends(RightPanelKeyboardHelper, _super);
    function RightPanelKeyboardHelper(_tabPanel) {
        var _this = _super.call(this) || this;
        _this._tabPanel = _tabPanel;
        _this.controlElementClassName = 'dx-accessibility-rightpanel-button';
        return _this;
    }
    RightPanelKeyboardHelper.prototype.bindHandler = function (el) {
        var _this = this;
        _super.prototype.bindHandler.call(this, el);
        this._disposables.push(ko.computed(function () {
            _this._tabPanel.tabs.forEach(function (tab) { ko.unwrap(tab.visible); });
            _this.initialize();
        }).extend(({ rateLimit: { timeout: 1, method: 'notifyWhenChangesStop' } })));
    };
    RightPanelKeyboardHelper.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.setTabIndexes(0);
    };
    RightPanelKeyboardHelper.prototype.createControlElement = function (element, index) {
        if (ko.unwrap(this._tabPanel.tabs[index].visible))
            return new _controlElementBase_1.AccessibilityControlElementBase(element);
    };
    RightPanelKeyboardHelper.prototype.itemHandleDownArrowKey = function (e, index) {
        this.setFocusToNext(index, true);
        return true;
    };
    RightPanelKeyboardHelper.prototype.itemHandleUpArrowKey = function (e, index) {
        this.setFocusToPrevious(index, true);
        return true;
    };
    return RightPanelKeyboardHelper;
}(_keyboardHelperBase_1.AccessibilityKeyboardHelperBase));
exports.RightPanelKeyboardHelper = RightPanelKeyboardHelper;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var rectangle_1 = __webpack_require__(50);
var DragHelperControlRectangle = (function (_super) {
    __extends(DragHelperControlRectangle, _super);
    function DragHelperControlRectangle(position, left, top, width, height) {
        var _this = _super.call(this, left, top, width, height) || this;
        _this.position = position;
        return _this;
    }
    return DragHelperControlRectangle;
}(rectangle_1.Rectangle));
exports.DragHelperControlRectangle = DragHelperControlRectangle;
var DragHelperContent = (function (_super) {
    __extends(DragHelperContent, _super);
    function DragHelperContent(selectionProvider) {
        var _this = _super.call(this) || this;
        _this.controls = ko.observableArray([]);
        _this.customData = ko.observable({});
        _this.template = 'dxrd-drag-helper-source';
        _this.isLocked = ko.observable(false);
        _this._selectionProvider = selectionProvider;
        return _this;
    }
    Object.defineProperty(DragHelperContent.prototype, "_isEmpty", {
        get: function () {
            return this.controls().length === 0;
        },
        enumerable: true,
        configurable: true
    });
    DragHelperContent.prototype.reset = function () {
        this.controls([]);
        this.customData({});
    };
    DragHelperContent.prototype.update = function (surface) {
        var _this = this;
        this.left(surface.absolutePosition.x());
        this.top(surface.absolutePosition.y());
        this.width(surface.rect().width);
        this.height(surface.rect().height);
        if (this._isEmpty) {
            var controls = [];
            this._selectionProvider.selectedItems.forEach(function (item, index) {
                if (!item.locked && item.parent === surface.parent)
                    controls.push(new DragHelperControlRectangle(index));
            });
            this.controls(controls);
        }
        this.controls().forEach(function (item) {
            var surfaceElement = _this._selectionProvider.selectedItems[item.position];
            item.left(surfaceElement.absolutePosition.x() - _this.left());
            item.top(surfaceElement.absolutePosition.y() - _this.top());
            item.width(surfaceElement.rect().width);
            item.height(surfaceElement.rect().height);
        });
    };
    DragHelperContent.prototype.setContent = function (area, customData) {
        if (customData === void 0) { customData = null; }
        if (this._isEmpty)
            this.controls([area]);
        this.left(area.left());
        this.top(area.top());
        this.width(area.width());
        this.height(area.height());
        this.customData(customData);
    };
    return DragHelperContent;
}(rectangle_1.Rectangle));
exports.DragHelperContent = DragHelperContent;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
__webpack_require__(7);
__webpack_require__(7);
__webpack_require__(7);
__webpack_require__(7);
var _dragDropHandler_1 = __webpack_require__(31);
var _surfaceHelpers_1 = __webpack_require__(25);
var SelectionDragDropHandler = (function (_super) {
    __extends(SelectionDragDropHandler, _super);
    function SelectionDragDropHandler(surface, selection, undoEngine, snapHelper, dragHelperContent) {
        var _this = _super.call(this, surface, selection, undoEngine, snapHelper, dragHelperContent) || this;
        _this.cursor = 'move';
        _this.containment = '.dxrd-ghost-container';
        _this['helper'] = function (draggable) {
            _super.prototype.helper.call(_this, draggable);
            if (_this.selection.selectedItems.indexOf(draggable) === -1) {
                _this.selection.updateSelection(draggable);
            }
            dragHelperContent.update(draggable);
            _this._size.width(dragHelperContent.width());
            _this._size.height(dragHelperContent.height());
        };
        return _this;
    }
    SelectionDragDropHandler.prototype.adjustDropTarget = function (dropTargetSurface) {
        var selectedItemInTree = dropTargetSurface;
        while (selectedItemInTree != null) {
            if (selectedItemInTree.selected && selectedItemInTree.selected()) {
                dropTargetSurface = selectedItemInTree.parent;
                break;
            }
            selectedItemInTree = selectedItemInTree.parent;
        }
        return dropTargetSurface;
    };
    SelectionDragDropHandler.prototype.startDrag = function (control) {
        this.selection.swapFocusedItem(control);
        var focusedSurface = this.selection.focused();
        var baseOffsetX = focusedSurface.rect().left + focusedSurface.underCursor().x;
        var baseOffsetY = focusedSurface.rect().top + focusedSurface.underCursor().y;
        this.selection.selectedItems.filter(function (item) { return !item.locked; }).forEach(function (item) {
            if (item.parent === focusedSurface.parent) {
                item.underCursor().offsetX = item.rect().left - baseOffsetX;
                item.underCursor().offsetY = item.rect().top - baseOffsetY;
            }
        });
    };
    SelectionDragDropHandler.prototype.drag = function (event, ui) {
        ui.position.left += ui['scroll'].left;
        ui.position.top += ui['scroll'].top;
        _super.prototype.drag.call(this, event, ui);
    };
    SelectionDragDropHandler.prototype.getLocation = function (adjustedTarget, item) {
        var left = adjustedTarget.underCursor().x + item.underCursor().offsetX, top = adjustedTarget.underCursor().y + item.underCursor().offsetY;
        return { left: left > 0 ? left : 0, top: top > 0 ? top : 0 };
    };
    SelectionDragDropHandler.prototype.ajustLocation = function (adjustedTarget, item) {
        item.rect(this.getLocation(adjustedTarget, item));
    };
    SelectionDragDropHandler.prototype.doStopDrag = function (ui, _) {
        this.dragHelperContent.reset();
        if (this.dragHelperContent.isLocked())
            return;
        if (this.selection.dropTarget) {
            var dropTarget = this.selection.dropTarget.getControlModel(), dropTargetSurface = dropTarget.getNearestParent(dropTarget)['surface'];
            var focusedSurface = this.selection.focused();
            var adjustedTarget = this.adjustDropTarget(dropTargetSurface), focusedModel = focusedSurface.getControlModel(), parent = focusedModel.getNearestParent(adjustedTarget.getControlModel()), adjustedTarget = parent && _surfaceHelpers_1.findSurface(parent), changeParent = adjustedTarget !== focusedSurface.parent;
            if (!adjustedTarget || !adjustedTarget.canDrop()) {
                return;
            }
            var position = this._getAbsoluteSurfacePosition(ui);
            adjustedTarget.underCursor().x = position.left - (adjustedTarget['absolutePosition'] && adjustedTarget['absolutePosition'].x() || 0) - focusedSurface.underCursor().offsetX;
            adjustedTarget.underCursor().y = position.top - (adjustedTarget['absolutePosition'] && adjustedTarget['absolutePosition'].y() || 0) - focusedSurface.underCursor().offsetY;
            var dropPointRelativeX = ui.position.left;
            var dropPointRelativeY = ui.position.top;
            var itemsToDrop = this.selection.selectedItems
                .filter(function (item) { return !item.locked && item.parent === focusedSurface.parent; })
                .map(function (item) {
                return item.getControlModel();
            })
                .filter(function (item) {
                return item.getMetaData().canDrop(adjustedTarget, item);
            });
            if (changeParent) {
                for (var i = 0; i < itemsToDrop.length; i++) {
                    itemsToDrop[i].surface.rect({ top: 0, left: 0 });
                }
                focusedModel.parentModel().removeChilds(itemsToDrop);
                parent['addChilds'](itemsToDrop);
                for (var i = 0; i < itemsToDrop.length; i++) {
                    this.ajustLocation(adjustedTarget, itemsToDrop[i].surface);
                }
                this.selection.focused(focusedSurface);
                this.selection.selectItems(itemsToDrop.map(function (item) { return item.surface; }));
            }
            else {
                for (var i = 0; i < itemsToDrop.length; i++) {
                    this.ajustLocation(adjustedTarget, itemsToDrop[i].surface);
                }
                this.selection.expectClick = true;
            }
        }
    };
    SelectionDragDropHandler.prototype.create = function (event, ui) {
        if (ko.dataFor(event.target).locked) {
            $(this)['draggable']('disable');
        }
    };
    return SelectionDragDropHandler;
}(_dragDropHandler_1.DragDropHandler));
exports.SelectionDragDropHandler = SelectionDragDropHandler;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dragDropHandler_1 = __webpack_require__(31);
var size_1 = __webpack_require__(47);
var rectangle_1 = __webpack_require__(50);
var _surfaceHelpers_1 = __webpack_require__(25);
var _utils_1 = __webpack_require__(5);
var ToolboxDragDropHandler = (function (_super) {
    __extends(ToolboxDragDropHandler, _super);
    function ToolboxDragDropHandler(surface, selection, undoEngine, snapHelper, dragHelperContent, controlsFactory) {
        var _this = _super.call(this, surface, selection, undoEngine, snapHelper, dragHelperContent) || this;
        _this.cursor = 'arrow';
        _this._controlsFactory = controlsFactory;
        _this.containment = '.dxrd-designer';
        _this['cursorAt'] = {
            top: 0,
            left: 0
        };
        return _this;
    }
    ToolboxDragDropHandler.prototype.helper = function (draggable) {
        _super.prototype.helper.call(this, draggable);
        var toolboxItem = draggable;
        var size = size_1.Size.fromString(toolboxItem.info['@SizeF'] || toolboxItem.info['size'] || '100,23');
        this.recalculateSize(size);
        this.dragHelperContent.setContent(new rectangle_1.Rectangle(0, 0, this._size.width(), this._size.height()));
    };
    ToolboxDragDropHandler.prototype.doStopDrag = function (ui, draggable) {
        this.dragHelperContent.reset();
        if (this.dragHelperContent.isLocked())
            return;
        if (this.selection.dropTarget) {
            var toolboxItem = draggable, control = this._controlsFactory.createControl(_utils_1.extend({}, toolboxItem.info), null), parent = control.getNearestParent(this.selection.dropTarget.getControlModel()), dropTargetSurface = _surfaceHelpers_1.findSurface(parent);
            if (!dropTargetSurface || !dropTargetSurface.canDrop()) {
                return;
            }
            var position = this._getAbsoluteSurfacePosition(ui);
            dropTargetSurface.underCursor().x = position.left - (dropTargetSurface['absolutePosition'] && dropTargetSurface['absolutePosition'].x() || 0);
            dropTargetSurface.underCursor().y = position.top - (dropTargetSurface['absolutePosition'] && dropTargetSurface['absolutePosition'].y() || 0);
            if (this.surface().isFit && this.surface().isFit(dropTargetSurface) || dropTargetSurface.underCursor().isOver) {
                this.addControl(control, dropTargetSurface, this._size);
            }
        }
    };
    return ToolboxDragDropHandler;
}(_dragDropHandler_1.DragDropHandler));
exports.ToolboxDragDropHandler = ToolboxDragDropHandler;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _getNameHelpers_1 = __webpack_require__(33);
var _svgTemplateEngine_1 = __webpack_require__(20);
var ToolboxItem = (function () {
    function ToolboxItem(info) {
        this.disabled = ko.observable(false);
        this.info = info;
    }
    Object.defineProperty(ToolboxItem.prototype, "type", {
        get: function () {
            return _getNameHelpers_1.getTypeNameFromFullName(this.info['@ControlType']);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxItem.prototype, "imageClassName", {
        get: function () {
            return [_getNameHelpers_1.getImageClassName(this.type), this.disabled() ? 'dxrd-disabled-button' : ''].join(' ');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxItem.prototype, "imageTemplateName", {
        get: function () {
            var _templateName = _getNameHelpers_1.getImageClassName(this.type, true);
            return _svgTemplateEngine_1.SvgTemplatesEngine.getExistingTemplate(_templateName);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxItem.prototype, "index", {
        get: function () {
            return this.info.index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolboxItem.prototype, "displayName", {
        get: function () {
            return this.info.displayName || this.type;
        },
        enumerable: true,
        configurable: true
    });
    return ToolboxItem;
}());
exports.ToolboxItem = ToolboxItem;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var _getNameHelpers_1 = __webpack_require__(33);
var _visitors_1 = __webpack_require__(69);
var DesignControlsHelper = (function (_super) {
    __extends(DesignControlsHelper, _super);
    function DesignControlsHelper(target, handlers, collectionNames) {
        var _this = _super.call(this) || this;
        _this.target = target;
        _this.collectionNames = collectionNames;
        _this._handlers = [];
        _this._setText = false;
        _this._visitedCollections = [];
        _this._subscriptions = [];
        _this.added = function (value) {
            _this._setText = true;
            _this._collectControls(value);
            _this._setText = false;
        };
        _this.deleted = function (value) {
            var allControls = _this.allControls();
            var index = allControls.indexOf(value);
            allControls.splice(index, 1);
            _visitors_1.collectionsVisitor(value, function (collection) {
                collection().forEach(function (item) {
                    allControls.splice(allControls.indexOf(item), 1);
                });
            });
            _this.allControls.valueHasMutated();
        };
        _this.allControls = ko.observableArray();
        var unwrappedTarget = target;
        if (ko.isSubscribable(target)) {
            _this._disposables.push(target.subscribe(function (newTarget) {
                _this._visitedCollections = [];
                for (var i = 0, len = _this._subscriptions.length; i < len; i++) {
                    _this._subscriptions[i].dispose();
                }
                _this._subscriptions = [];
                _this.allControls([]);
                if (newTarget) {
                    _this._collectControls(newTarget);
                }
            }));
            unwrappedTarget = target.peek();
        }
        _this._disposables.push(_this.allControls.subscribe(function (args) {
            var addedItems = args.filter(function (x) { return x.status === 'added'; });
            for (var i = 0; i < addedItems.length; i++) {
                _this._setName(addedItems[i].value);
            }
        }, null, 'arrayChange'));
        unwrappedTarget && _this._collectControls(unwrappedTarget);
        _this._handlers.push.apply(_this._handlers, handlers);
        return _this;
    }
    DesignControlsHelper.prototype.getNameProperty = function (model) {
        return model.name;
    };
    DesignControlsHelper.prototype.getControlByName = function (name) {
        var control = null;
        this.allControls().some(function (x) {
            if (ko.unwrap(x.name) == name) {
                control = x;
                return true;
            }
            return false;
        });
        return control;
    };
    DesignControlsHelper.prototype._setName = function (value) {
        var _this = this;
        var names = this.allControls().map(function (item) { return ko.unwrap(_this.getNameProperty(item)); });
        if (!this.getNameProperty(value)() || names.filter(function (x) { return x === _this.getNameProperty(value)(); }).length > 1) {
            var newName = _getNameHelpers_1.getUniqueNameForNamedObjectsArray(this.allControls(), this._getNamePrefix(value), names);
            this.getNameProperty(value)(newName);
            this._setText && this._setDefaultText(value);
        }
    };
    DesignControlsHelper.prototype._setDefaultText = function (value) {
        var initialText = value.getControlInfo && value.getControlInfo().defaultVal && value.getControlInfo().defaultVal['@Text'];
        if (this._setText && value['text'] && !value['text']() && (initialText === null || initialText === undefined)) {
            value['text'](this.getNameProperty(value)());
        }
    };
    DesignControlsHelper.prototype._getNamePrefix = function (value) {
        var controlType = value.controlType || 'Unknown';
        return controlType.split('.').pop();
    };
    DesignControlsHelper.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._subscriptions.forEach(function (subscription) { return subscription.dispose(); });
        this._subscriptions.splice(0);
        this._visitedCollections.splice(0);
        this._handlers.splice(0);
        this.target = null;
        this.allControls([]);
    };
    DesignControlsHelper.prototype.processCollection = function (collection) { };
    DesignControlsHelper.prototype._collectControls = function (target) {
        var _this = this;
        var array = [target];
        _visitors_1.collectionsVisitor(target, function (collection, owner) {
            if (_this._visitedCollections.indexOf(collection) === -1) {
                _this._visitedCollections.push(collection);
                var subscriptionsArray = _this._subscriptions;
                if (owner instanceof utils_1.Disposable) {
                    subscriptionsArray = owner._disposables;
                }
                var subscription = collection.subscribe(function (args) {
                    args.forEach(function (changeSet) {
                        if (changeSet.moved != undefined)
                            return;
                        _this[changeSet.status] && _this[changeSet.status](changeSet.value);
                        _this._handlers.forEach(function (handler) {
                            handler[changeSet.status] && handler[changeSet.status](changeSet.value);
                        });
                    });
                }, null, 'arrayChange');
                subscriptionsArray.push({
                    dispose: function () {
                        subscription.dispose();
                        subscription = null;
                        _this._visitedCollections.splice(_this._visitedCollections.indexOf(collection), 1);
                    }
                });
            }
            _this.processCollection(collection());
            array.push.apply(array, collection());
        }, this.collectionNames);
        this.allControls.push.apply(this.allControls, array);
    };
    DesignControlsHelper.prototype.getControls = function (target) {
        var controls = ko.observableArray();
        _visitors_1.collectionsVisitor(target, function (collection) {
            controls.push.apply(controls, collection());
        });
        return controls;
    };
    return DesignControlsHelper;
}(utils_1.Disposable));
exports.DesignControlsHelper = DesignControlsHelper;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _units_1 = __webpack_require__(38);
var paddingModel_1 = __webpack_require__(99);
var _utils_1 = __webpack_require__(5);
function patchPositionByRTL(position, rtl) {
    if (rtl) {
        if (position === 'Left')
            return 'Right';
        else if (position === 'Right')
            return 'Left';
    }
    return position;
}
exports.patchPositionByRTL = patchPositionByRTL;
var CssCalculator = (function () {
    function CssCalculator(control, _rtlLayout) {
        var _this = this;
        this._rtlLayout = _rtlLayout;
        this._control = control;
        this.borderCss = function (zoom) {
            var borderWidth = _this._getBorderWidth(control, zoom);
            var borderDefault = control['borderDefault'] && control['borderDefault']();
            var borderColor = control['borderColor'] && control['borderColor']() || '';
            var borders = control['borders'] && control['borders']() || '';
            var borderStyle = control['borderDashStyle'] && control['borderDashStyle']() || '';
            return borderDefault ? _this.createBorders(borderStyle, borderWidth, borderColor, borders, borderDefault) :
                _this.createBorders(borderStyle, borderWidth, borderColor, borders);
        };
        this.backGroundCss = function () {
            return { backgroundColor: control['backColor'] && control['backColor']() || 'transparent' };
        };
        this.foreColorCss = function () {
            var color = (control['foreColor'] && control['foreColor']() || 'transparent') === 'transparent' ? 'black' : control['foreColor']();
            return { color: color };
        };
        this.fontCss = function () {
            return _this.createFont(control['font'] && control['font']() || '');
        };
        this.wordWrapCss = function () {
            return _this.createWordWrap(ko.unwrap(control['wordWrap']), ko.unwrap(control['multiline']));
        };
        this.paddingsCss = function () {
            var controlPaddings = ko.unwrap(control['paddingObj'] || control['padding']) || paddingModel_1.PaddingModel.from(paddingModel_1.PaddingModel.defaultVal);
            var paddings = {
                paddingLeft: _this._getPixelValueFromUnit(controlPaddings.left(), control) + 'px',
                paddingTop: _this._getPixelValueFromUnit(controlPaddings.top(), control) + 'px',
                paddingRight: _this._getPixelValueFromUnit(controlPaddings.right(), control) + 'px',
                paddingBottom: _this._getPixelValueFromUnit(controlPaddings.bottom(), control) + 'px'
            };
            return paddings;
        };
        this.textAlignmentCss = function () {
            var align = control['textAlignment'] && control['textAlignment']() || '';
            return _utils_1.extend(_this.createVerticalAlignment(align), _this.createHorizontalAlignment(align));
        };
        this.stroke = function () {
            var color = (control['foreColor'] && control['foreColor']() || 'transparent') === 'transparent' ? 'black' : control['foreColor']();
            return { 'stroke': color };
        };
        this.strokeWidth = function () {
            var lineWidth = control['lineWidth'] && control['lineWidth']() || '';
            return { 'strokeWidth': lineWidth };
        };
        this.strokeWidthWithWidth = function () {
            var lineWidth = control['width'] && control['width']() || '';
            return { 'strokeWidth': lineWidth };
        };
        this.strokeDashArray = function () {
            var dashArray = _this.createStrokeDashArray(control['lineStyle'] && control['lineStyle']() || '', control['lineWidth'] && control['lineWidth']() || '');
            return { 'strokeDasharray': dashArray };
        };
        this.strokeDashArrayWithWidth = function () {
            var dashArray = _this.createStrokeDashArray(control['lineStyle'] && control['lineStyle']() || '', control['width'] && control['width']() || '');
            return { 'strokeDasharray': dashArray };
        };
        this.crossBandBorder = function (position) {
            return _this.createBorder(control['borderDashStyleCrossband'] && control['borderDashStyleCrossband']() || 'solid', _this._getBorderWidth(control), control['borderColor'] && control['borderColor']() || '', control['borders'] && control['borders']() || '', position);
        };
        this.angle = function () {
            return _this.createAngle(control['angle'] && control['angle']() || 0);
        };
        this.cellBorder = function (position, zoom) {
            return _this.createControlBorder(control['borderDashStyle'] && control['borderDashStyle']() || 'solid', _this._getBorderWidth(control, zoom), control['borderColor'] && control['borderColor']() || '', control['borders'] && control['borders']() || '', position);
        };
        this.zipCodeFontCss = function (fontSize) {
            return _this.createZipCodeFont(fontSize || control['size']['height']());
        };
        this.zipCodeAlignment = function () {
            var align = 'TopLeft';
            return _utils_1.extend(_this.createVerticalAlignment(align), _this.createHorizontalAlignment(align));
        };
    }
    CssCalculator.prototype._getPixelValueFromUnit = function (value, control) {
        if (control['root'] && control['root'].measureUnit) {
            return _units_1.unitsToPixel(value, control['root'].measureUnit());
        }
        return value;
    };
    CssCalculator.prototype._patchPosition = function (position) {
        return patchPositionByRTL(position, this._rtlLayout());
    };
    CssCalculator.prototype._getBorderWidth = function (control, zoom) {
        return control['borderWidth'] && typeof (control['borderWidth']()) == 'number' ? Math.floor(control['borderWidth']() * (zoom || 1)) : '';
    };
    CssCalculator.prototype.createBorder = function (dashStyle, width, color, positions, position) {
        var line = {};
        positions = positions || 'All';
        line = { stroke: 'Silver', strokeWidth: 2 };
        var dash = this.createStrokeDashArray(dashStyle, width);
        if (positions.indexOf(position) !== -1 || positions.indexOf('All') !== -1) {
            line['stroke'] = color;
            line['strokeWidth'] = width;
            line['strokeDasharray'] = dash;
        }
        return line;
    };
    CssCalculator.prototype.createControlBorder = function (borderStyle, width, color, positions, position, defaultColor) {
        if (defaultColor === void 0) { defaultColor = 'solid 1px Silver'; }
        var border = {};
        positions = positions || '';
        if (borderStyle === 'Dash') {
            borderStyle = 'dashed';
        }
        else if (borderStyle === 'Dot') {
            borderStyle = 'dotted';
        }
        else if (borderStyle === 'Double') {
            borderStyle = 'double';
        }
        else {
            borderStyle = 'solid';
        }
        if (positions.indexOf(position) !== -1 || positions.indexOf('All') !== -1) {
            border['border' + this._patchPosition(position)] = borderStyle + ' ' + width + 'px ' + color;
        }
        else {
            border['border' + this._patchPosition(position)] = defaultColor;
        }
        return border;
    };
    CssCalculator.prototype.createBorders = function (borderStyle, width, color, positions, defaultColor) {
        if (defaultColor === void 0) { defaultColor = CssCalculator.DEFAULT_BORDER; }
        var left = this.createControlBorder(borderStyle, width, color, positions, 'Left', defaultColor);
        var right = this.createControlBorder(borderStyle, width, color, positions, 'Right', defaultColor);
        var top = this.createControlBorder(borderStyle, width, color, positions, 'Top', defaultColor);
        var bottom = this.createControlBorder(borderStyle, width, color, positions, 'Bottom', defaultColor);
        var border = _utils_1.extend({}, left, right, top, bottom);
        return border;
    };
    CssCalculator.prototype.createZipCodeFont = function (height) {
        var fontStyles = {};
        fontStyles['fontFamily'] = 'Impact';
        fontStyles['fontSize'] = height + 'px';
        return fontStyles;
    };
    CssCalculator.prototype.createFont = function (fontString) {
        var fontStyles = {};
        fontString = fontString || '';
        var components = fontString.split(',');
        fontStyles['fontFamily'] = components[0] ? '"' + components[0] + '"' : '';
        fontStyles['fontSize'] = components[1];
        if (components.length > 2) {
            for (var i = 2; i < components.length; i++) {
                if (components[i].indexOf('Bold') !== -1)
                    fontStyles['fontWeight'] = 'Bold';
                if (components[i].indexOf('Italic') !== -1)
                    fontStyles['fontStyle'] = 'Italic';
                if (components[i].indexOf('Underline') != -1)
                    fontStyles['textDecoration'] = 'Underline';
                if (components[i].indexOf('Strikeout') != -1)
                    fontStyles['textDecoration'] = (fontStyles['textDecoration'] ? fontStyles['textDecoration'] + ' ' : '') + 'Line-through';
            }
        }
        if (!fontStyles['fontWeight']) {
            fontStyles['fontWeight'] = '';
        }
        if (!fontStyles['fontStyle']) {
            fontStyles['fontStyle'] = '';
        }
        if (!fontStyles['textDecoration']) {
            fontStyles['textDecoration'] = '';
        }
        return fontStyles;
    };
    CssCalculator.prototype.createVerticalAlignment = function (alignment) {
        var result = {};
        if (alignment.indexOf('Top') !== -1) {
            result['verticalAlign'] = 'top';
        }
        if (alignment.indexOf('Middle') !== -1) {
            result['verticalAlign'] = 'middle';
        }
        if (alignment.indexOf('Bottom') !== -1) {
            result['verticalAlign'] = 'bottom';
        }
        return result;
    };
    CssCalculator.prototype.createHorizontalAlignment = function (alignment) {
        var result = {};
        if (alignment.indexOf('Left') !== -1) {
            result['textAlign'] = patchPositionByRTL('Left', this._control.rtl()).toLowerCase();
        }
        if (alignment.indexOf('Right') !== -1) {
            result['textAlign'] = patchPositionByRTL('Right', this._control.rtl()).toLowerCase();
        }
        if (alignment.indexOf('Center') !== -1) {
            result['textAlign'] = 'center';
        }
        if (alignment.indexOf('Justify') !== -1) {
            result['textAlign'] = 'justify';
        }
        return result;
    };
    CssCalculator.prototype.createStrokeDashArray = function (style, width) {
        if (style === 'Solid') {
            return '';
        }
        else if (style === 'Dot') {
            return [width, width * 2].join('px, ') + 'px';
        }
        else if (style === 'Dash') {
            return [width * 4, width * 4].join('px, ') + 'px';
        }
        else if (style === 'DashDot') {
            return [width * 4, width * 2, width, width * 2].join('px, ') + 'px';
        }
        else if (style === 'DashDotDot') {
            return [width * 4, width * 2, width, width * 2, width, width * 2].join('px, ') + 'px';
        }
        else {
            return '';
        }
    };
    CssCalculator.prototype.createWordWrap = function (wordwrap, multiline) {
        var result = {};
        if (wordwrap === false && multiline === false) {
            result['white-space'] = 'nowrap';
            result['word-wrap'] = 'normal';
        }
        else if (wordwrap === true && multiline === false) {
            result['word-wrap'] = 'break-word';
            result['white-space'] = '';
        }
        else if (wordwrap === false && multiline === true) {
            result['word-wrap'] = 'normal';
            result['white-space'] = 'pre';
        }
        else if (wordwrap === true && multiline === true) {
            result['white-space'] = 'pre-wrap';
            result['word-wrap'] = 'break-word';
        }
        return result;
    };
    CssCalculator.prototype.createAngle = function (angle) {
        angle = -angle;
        return {
            '-webkit-transform': 'rotate(' + angle + 'deg)',
            '-moz-transform': 'rotate(' + angle + 'deg)',
            '-o-transform': 'rotate(' + angle + 'deg)',
            '-ms-transform': 'rotate(' + angle + 'deg)',
            'transform': 'rotate(' + angle + 'deg)'
        };
    };
    CssCalculator.prototype.contentSizeCss = function (controlSurfaceWidth, controlSurfaceHeight, zoom, borders, paddings) {
        var _this = this;
        var result = { top: 1, left: 1, right: 1, bottom: 1, width: 1, height: 1 };
        borders = borders || this._control['borders'] && this._control['borders']() || '';
        var borderWidth = this._getBorderWidth(this._control, zoom);
        ['Left', 'Top', 'Right', 'Bottom'].forEach(function (item) {
            var value = 0;
            if (borderWidth != '' && (borders.indexOf(item) !== -1 || borders.indexOf('All') !== -1)) {
                value += borderWidth;
            }
            if (paddings) {
                value += _this._getPixelValueFromUnit(ko.unwrap(paddings[item.toLowerCase()]), _this._control) * (zoom || 1);
            }
            if (value)
                result[_this._patchPosition(item).toLowerCase()] = value;
        });
        result.width = controlSurfaceWidth - result.left - result.right;
        result.height = controlSurfaceHeight - result.top - result.bottom;
        return result;
    };
    CssCalculator.DEFAULT_BORDER = 'none';
    return CssCalculator;
}());
exports.CssCalculator = CssCalculator;


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var paddingModelMetaData_1 = __webpack_require__(75);
var PaddingModel = (function (_super) {
    __extends(PaddingModel, _super);
    function PaddingModel(left, right, top, bottom, dpi) {
        if (left === void 0) { left = ko.observable(null); }
        if (right === void 0) { right = ko.observable(null); }
        if (top === void 0) { top = ko.observable(null); }
        if (bottom === void 0) { bottom = ko.observable(null); }
        if (dpi === void 0) { dpi = ko.observable(100); }
        var _this = _super.call(this) || this;
        _this.left = left;
        _this.right = right;
        _this.top = top;
        _this.bottom = bottom;
        _this.dpi = dpi;
        ['left', 'right', 'top', 'bottom'].forEach(function (propertyName) {
            _this['_' + propertyName] = ko.observable(_this[propertyName]());
            _this._disposables.push(_this[propertyName] = ko.computed({
                read: function () {
                    return _this['_' + propertyName]() || 0;
                },
                write: function (newVal) {
                    _this['_' + propertyName](newVal);
                }
            }));
        });
        var isUpdating = ko.observable(false);
        var oldValue = null;
        _this._disposables.push(_this.all = ko.computed({
            read: function () {
                if (isUpdating())
                    return oldValue;
                if (['right', 'top', 'bottom'].every(function (propertyName) { return _this[propertyName]() === _this.left(); }))
                    oldValue = _this.left();
                else
                    oldValue = null;
                return oldValue;
            },
            write: function (newVal) {
                isUpdating(true);
                ['left', 'right', 'top', 'bottom'].forEach(function (propertyName) { return _this[propertyName](newVal); });
                isUpdating(false);
            }
        }));
        return _this;
    }
    PaddingModel.prototype.getInfo = function () {
        return paddingModelMetaData_1.paddingSerializationsInfo;
    };
    PaddingModel.prototype.resetValue = function () {
        var _this = this;
        ['left', 'right', 'top', 'bottom'].forEach(function (name) { return _this['_' + name](null); });
    };
    PaddingModel.prototype.isEmpty = function () {
        var _this = this;
        return ['left', 'right', 'top', 'bottom'].map(function (x) { return ko.unwrap(_this['_' + x]); }).every(function (x) { return x === null; });
    };
    PaddingModel.prototype.applyFromString = function (value) {
        if (value) {
            var components = (value || '').split(',');
            this.left(parseInt(components[0]) || 0);
            this.right(parseInt(components[1]) || 0);
            this.top(parseInt(components[2]) || 0);
            this.bottom(parseInt(components[3]) || 0);
        }
        return this;
    };
    PaddingModel.from = function (val) {
        return new PaddingModel().applyFromString(val);
    };
    PaddingModel.prototype.toString = function () {
        if (this.isEmpty())
            return;
        return this._toString();
    };
    PaddingModel.prototype._toString = function (inner) {
        var _this = this;
        if (inner === void 0) { inner = false; }
        return ['left', 'right', 'top', 'bottom'].map(function (x) { return parseInt(ko.unwrap(_this[x])); }).concat(this.dpi()).join(', ');
    };
    PaddingModel.defaultVal = '0, 0, 0, 0, 100';
    PaddingModel.unitProperties = ['left', 'right', 'top', 'bottom'];
    return PaddingModel;
}(utils_1.Disposable));
exports.PaddingModel = PaddingModel;


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var HoverInfo = (function () {
    function HoverInfo() {
        this._x = 0;
        this._y = 0;
        this.isOver = false;
    }
    Object.defineProperty(HoverInfo.prototype, "x", {
        get: function () {
            return this._x;
        },
        set: function (newX) {
            this._x = newX;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HoverInfo.prototype, "y", {
        get: function () {
            return this._y;
        },
        set: function (newY) {
            this._y = newY;
        },
        enumerable: true,
        configurable: true
    });
    return HoverInfo;
}());
exports.HoverInfo = HoverInfo;


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var _utils_1 = __webpack_require__(9);
function processTextEditorHotKeys(event, delegates) {
    if (!event || !delegates)
        return;
    if (event.key === _utils_1.KeyboardEnum.Esc && !!delegates['esc']) {
        delegates['esc']();
    }
    if (event.key === _utils_1.KeyboardEnum.Enter && event.ctrlKey && !!delegates['ctrlEnter']) {
        delegates['ctrlEnter']();
    }
}
exports.processTextEditorHotKeys = processTextEditorHotKeys;
var InlineTextEdit = (function (_super) {
    __extends(InlineTextEdit, _super);
    function InlineTextEdit(selection) {
        var _this = _super.call(this) || this;
        _this._showInline = ko.observable(false);
        _this.text = ko.observable();
        var _controlText;
        _this._disposables.push(selection.focused.subscribe(function () {
            if (_this._showInline() && _controlText) {
                _controlText(_this.text());
                _this._showInline(false);
            }
            var controlModel = selection.focused() && selection.focused().getControlModel();
            _controlText = controlModel && (controlModel.textEditableProperty || controlModel.text);
        }));
        _this._disposables.push(_this.visible = ko.pureComputed({
            read: function () {
                return _this._showInline();
            },
            write: function (val) {
                _this._showInline(val);
            }
        }));
        _this.show = function (element) {
            if (_this._showInline()) {
                return;
            }
            var isSingleControlSelected = !!selection.selectedItems ? selection.selectedItems.length === 1 : !!selection.focused();
            if (isSingleControlSelected && _controlText && !selection.focused().locked) {
                _this.text(_controlText());
                _this._showInline(true);
                if (element) {
                    var textarea = $(element).find('textarea')[0];
                    textarea && textarea['select']();
                }
            }
            else {
                _this._showInline(false);
            }
        };
        _this.keypressAction = function (args) {
            processTextEditorHotKeys(args.event, {
                esc: function () { _this._showInline(false); },
                ctrlEnter: function () {
                    _controlText(_this.text());
                    _this._showInline(false);
                }
            });
        };
        return _this;
    }
    return InlineTextEdit;
}(utils_1.Disposable));
exports.InlineTextEdit = InlineTextEdit;


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var array_store_1 = __webpack_require__(201);
var custom_store_1 = __webpack_require__(202);
var data_source_1 = __webpack_require__(162);
var $ = __webpack_require__(1);
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var CustomSortedArrayStore = (function (_super) {
    __extends(CustomSortedArrayStore, _super);
    function CustomSortedArrayStore(items, sortPropertyName) {
        if (sortPropertyName === void 0) { sortPropertyName = 'name'; }
        return _super.call(this, CustomSortedArrayStore._createOptions(items, sortPropertyName)) || this;
    }
    CustomSortedArrayStore._sortItems = function (items, sortPropertyName) {
        return items.sort(function (a, b) {
            var propA = ko.unwrap(a[sortPropertyName]), propB = ko.unwrap(b[sortPropertyName]);
            if (propA && propB) {
                var diff = propA - propB;
                if (!isNaN(diff))
                    return diff;
                propA = propA.toLowerCase ? propA.toLowerCase() : propA;
                propB = propB.toLowerCase ? propB.toLowerCase() : propB;
                return (propA < propB) ? -1 : (propA > propB) ? 1 : 0;
            }
        });
    };
    CustomSortedArrayStore._createOptions = function (items, sortPropertyName) {
        items = this._sortItems(items, sortPropertyName);
        return {
            load: function (options) {
                var result = [].concat(items);
                if (options.take)
                    result = result.splice(options.skip, options.take);
                return $.Deferred().resolve(result).promise();
            },
            byKey: function (key) {
                if (items.some(function (x) { return x === key; }))
                    return key;
            }
        };
    };
    return CustomSortedArrayStore;
}(custom_store_1.default));
exports.CustomSortedArrayStore = CustomSortedArrayStore;
var SortedArrayStore = (function (_super) {
    __extends(SortedArrayStore, _super);
    function SortedArrayStore(options, sortPropertyName) {
        if (sortPropertyName === void 0) { sortPropertyName = 'name'; }
        var _this = this;
        if (options instanceof Array) {
            CustomSortedArrayStore._sortItems(options, sortPropertyName);
        }
        _this = _super.call(this, options) || this;
        return _this;
    }
    return SortedArrayStore;
}(array_store_1.default));
exports.SortedArrayStore = SortedArrayStore;
var ControlsStore = (function (_super) {
    __extends(ControlsStore, _super);
    function ControlsStore(allControls) {
        var _this = _super.call(this) || this;
        _this._filter = ko.observable(null);
        var dataSource = null;
        _this._disposables.push(_this.dataSource = ko.computed(function () {
            dataSource && dataSource.dispose();
            var items = _this._filter() ? allControls().filter(_this._filter()) : allControls();
            dataSource = new data_source_1.default({
                store: new CustomSortedArrayStore(items),
                paginate: true,
                pageSize: 100
            });
            return dataSource;
        }));
        _this._disposables.push(_this.visible = ko.computed(function () {
            return allControls().length > 0;
        }));
        return _this;
    }
    ControlsStore.prototype.setFilter = function (filter) {
        this._filter(filter);
    };
    ControlsStore.prototype.resetFilter = function () {
        this._filter(null);
    };
    return ControlsStore;
}(utils_1.Disposable));
exports.ControlsStore = ControlsStore;


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var localization_utils_1 = __webpack_require__(3);
exports.restrictedNames = ['Name', 'Version'];
function validateName(nameCandidate) {
    if (!nameCandidate)
        return false;
    var letter = '\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376-\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06E5-\\u06E6\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4-\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0CF1-\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E46\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5-\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183-\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3006\\u3031-\\u3035\\u303B-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC';
    var pattern = new RegExp('^[' + letter + '_][' + letter + '_\\d]*$');
    return pattern.test(nameCandidate) && exports.restrictedNames.every(function (name) { return nameCandidate != name; });
}
exports.validateName = validateName;
function replaceInvalidSymbols(text) {
    return text.replace(/[\W_]+/g, '_');
}
exports.replaceInvalidSymbols = replaceInvalidSymbols;
exports.nameValidationRules = [
    {
        type: 'custom',
        validationCallback: function (options) { return validateName(options.value); },
        get message() {
            return localization_utils_1.getLocalization('Name is required and should be a valid identifier.', 'AnalyticsCoreStringId.NameIsRequired_Error');
        }
    }
];


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _utils_1 = __webpack_require__(5);
var CombinedObject = (function () {
    function CombinedObject() {
    }
    CombinedObject.getInfo = function (controls) {
        var infos = controls.map(function (item) { return item['getInfo'](); });
        return function () {
            var info = [];
            for (var i = 0; i < infos[0].length; i++) {
                if (infos.filter(function (info) { return info.filter(function (x) { return x.propertyName === infos[0][i].propertyName; }).length > 0; }).length === infos.length) {
                    info.push(infos[0][i]);
                }
            }
            return info;
        };
    };
    CombinedObject.isPropertyDisabled = function (controls) {
        return function (name) {
            for (var i = 0; i < controls.length; i++) {
                if (controls[i]['isPropertyDisabled'](name)) {
                    return true;
                }
            }
            return false;
        };
    };
    CombinedObject.getPath = function (controls) {
        return function (name) {
            var result = '';
            for (var i = 0; i < controls.length; i++) {
                var currentPath = controls[i].getPath(name);
                if (i === 0) {
                    result = currentPath;
                }
                else if (result !== currentPath) {
                    result = '';
                    break;
                }
            }
            return result;
        };
    };
    CombinedObject.isPropertyVisible = function (controls) {
        return function (name) {
            for (var i = 0; i < controls.length; i++) {
                if (!controls[i]['isPropertyVisible'](name)) {
                    return false;
                }
            }
            return true;
        };
    };
    CombinedObject.mergeProperty = function (controls, propertyName, undoEngine, customMerge) {
        var property = controls[0][propertyName];
        var combinedObj = null;
        var subscriptions = null;
        if (controls.filter(function (x) { return !!x[propertyName]; }).length === controls.length) {
            combinedObj = customMerge && customMerge(propertyName, controls, undoEngine);
            if (!combinedObj) {
                if (ko.isObservable(property) && !property['push']) {
                    if (!controls.every(function (control) { return ko.isObservable(control[propertyName]); }))
                        return combinedObj;
                    var combinedObservable = ko.observable(controls.every(function (control) { return controls[0][propertyName].peek() === control[propertyName].peek(); }) ? controls[0][propertyName].peek() : null);
                    combinedObj = {
                        result: combinedObservable,
                        subscriptions: [combinedObservable.subscribe(function (newVal) {
                                undoEngine && undoEngine().start();
                                controls.forEach(function (control) { control[propertyName](newVal); });
                                undoEngine && undoEngine().end();
                            })]
                    };
                }
                else if (typeof property === 'object' && !$.isArray(property)) {
                    combinedObj = this._merge(controls.map(function (x) { return x[propertyName]; }), undoEngine, customMerge);
                }
            }
        }
        return combinedObj;
    };
    CombinedObject._createProperty = function (result, propertyName, propertyValue) {
        if (propertyValue) {
            if (typeof propertyValue === 'object' && _utils_1.isEmptyObject(propertyValue))
                return;
            result[propertyName] = propertyValue;
        }
    };
    CombinedObject._merge = function (controls, undoEngine, customMerge, ignoreProperties) {
        var _this = this;
        var result = {};
        var subscriptions = [];
        ['getInfo', 'isPropertyVisible', 'isPropertyDisabled', 'getPath'].forEach(function (propertyName) {
            if (controls[0][propertyName])
                _this._createProperty(result, propertyName, _this[propertyName](controls));
        });
        if (ignoreProperties) {
            var oldPropertyDisabled = result['isPropertyDisabled'];
            result['isPropertyDisabled'] = function (name) {
                return (oldPropertyDisabled && oldPropertyDisabled(name)) || ignoreProperties.indexOf(name) !== -1;
            };
        }
        if (result && result['getInfo']) {
            result['getInfo']().map(function (x) { return x.propertyName; }).forEach(function (propertyName) {
                var combinedObj = _this.mergeProperty(controls, propertyName, undoEngine, customMerge);
                if (combinedObj) {
                    subscriptions = [].concat.apply(subscriptions, combinedObj.subscriptions);
                    _this._createProperty(result, propertyName, combinedObj.result);
                }
            });
        }
        else {
            Object.keys(controls[0]).forEach(function (propertyName) {
                var combinedObj = _this.mergeProperty(controls, propertyName, undoEngine, customMerge);
                if (combinedObj) {
                    subscriptions = [].concat.apply(subscriptions, combinedObj.subscriptions);
                    _this._createProperty(result, propertyName, combinedObj.result);
                }
            });
        }
        return { result: result, subscriptions: subscriptions };
    };
    CombinedObject.mergeControls = function (controls, undoEngine, customMerge, ignoreProperties) {
        var combinedObj = this._merge(controls, undoEngine, customMerge, ignoreProperties);
        return {
            result: _utils_1.extend(combinedObj.result, { controlType: 'multiselect', displayName: ko.observable('') }),
            subscriptions: combinedObj.subscriptions
        };
    };
    CombinedObject.getEditableObject = function (selectionProvider, undoEngine, customMerge) {
        var _this = this;
        var editableObject = ko.observable(null);
        var subscriptions = [];
        var subscription = selectionProvider.focused.subscribe(function (newVal) {
            editableObject(newVal && newVal.getControlModel());
        });
        if (selectionProvider._disposables) {
            selectionProvider._disposables.push(subscription);
            selectionProvider._disposables.push({
                dispose: function () {
                    subscriptions.forEach(function (x) { return x.dispose(); });
                    subscriptions.splice(0);
                }
            });
        }
        return ko.pureComputed({
            read: function () {
                subscriptions.forEach(function (x) { return x.dispose(); });
                subscriptions = [];
                if (selectionProvider.selectedItems.length > 1) {
                    var combinedObj = _this.mergeControls(selectionProvider.selectedItems.map(function (item) { return item.getControlModel(); }), undoEngine, customMerge, selectionProvider.ignoreMultiSelectProperties);
                    subscriptions = combinedObj.subscriptions;
                    return combinedObj.result;
                }
                else {
                    return editableObject();
                }
            },
            write: function (val) {
                if (val && val.surface) {
                    selectionProvider.focused(val.surface);
                }
                else {
                    selectionProvider.updateSelection(null);
                    editableObject(val);
                }
            }
        }).extend({ deferred: true });
    };
    return CombinedObject;
}());
exports.CombinedObject = CombinedObject;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var _utils_1 = __webpack_require__(74);
var SurfaceSelection = (function (_super) {
    __extends(SurfaceSelection, _super);
    function SurfaceSelection(ignoreMultiSelectProperties) {
        if (ignoreMultiSelectProperties === void 0) { ignoreMultiSelectProperties = ['name']; }
        var _this = _super.call(this) || this;
        _this.ignoreMultiSelectProperties = ignoreMultiSelectProperties;
        _this._focused = ko.observable(null);
        _this._selectedControls = ko.observableArray();
        _this._selectedControlsInner = [];
        _this.focused = ko.pureComputed({
            read: function () {
                return _this._focused();
            },
            write: function (val) {
                if (val !== _this._focused()) {
                    if (!!val) {
                        _this._firstSelected = val;
                    }
                    _this.updateSelection(_this._firstSelected);
                }
            }
        });
        _this.dropTarget = null;
        _this.expectClick = false;
        _this.disabled = ko.observable(false);
        _this._disposables.push(_this.focused);
        return _this;
    }
    SurfaceSelection.prototype.dispose = function () {
        this.reset();
        _super.prototype.dispose.call(this);
    };
    SurfaceSelection.prototype._removeFromSelection = function (control) {
        control.focused(false);
        control.selected(false);
        if (this._selectedControlsInner.indexOf(control) !== -1) {
            this._selectedControlsInner.splice(this._selectedControlsInner.indexOf(control), 1);
        }
    };
    SurfaceSelection.prototype._setFocused = function (control) {
        if (this._focused()) {
            this._removeFromSelection(this._focused());
        }
        this._focused(control);
        if (control) {
            control.focused(true);
            if (this._selectedControlsInner.indexOf(control) === -1) {
                this._selectedControlsInner.push(control);
            }
            control.selected(true);
        }
    };
    SurfaceSelection.prototype._resetTabPanelFocus = function () {
        var isTabPanelFocused = document.activeElement && $(document.activeElement).closest('.dxrd-surface').length === 0;
        if (isTabPanelFocused) {
            _utils_1.blur(document.activeElement);
        }
    };
    Object.defineProperty(SurfaceSelection.prototype, "selectedItems", {
        get: function () {
            return this._selectedControls();
        },
        enumerable: true,
        configurable: true
    });
    SurfaceSelection.prototype.clear = function () {
        this.focused(null);
        this._selectedControls([]);
    };
    SurfaceSelection.prototype.reset = function () {
        this._focused(null);
        this._selectedControlsInner.splice(0);
        this._firstSelected = null;
        this._selectedControls([]);
    };
    SurfaceSelection.prototype.applySelection = function () {
        this._selectedControls(this._selectedControlsInner);
    };
    SurfaceSelection.prototype.selectItems = function (items) {
        this._selectedControlsInner = items;
        this._selectedControlsInner.forEach(function (selectedControl) {
            if (!selectedControl.focused()) {
                selectedControl.selected(true);
            }
        });
        this.applySelection();
    };
    SurfaceSelection.prototype.updateSelection = function (control) {
        this._selectedControlsInner.forEach(function (selectedControl) {
            selectedControl.focused(false);
            selectedControl.selected(false);
        });
        this._selectedControlsInner = [];
        this._setFocused(control);
        this.applySelection();
    };
    SurfaceSelection.prototype.swapFocusedItem = function (control) {
        if (this._focused() !== control) {
            this._focused().focused(false);
            this._focused(control);
            this._focused().focused(true);
        }
    };
    SurfaceSelection.prototype.initialize = function (control) {
        control = control || this.dropTarget;
        this._firstSelected = !!(control && control['focused']) ? control : null;
        this.updateSelection(this._firstSelected);
    };
    SurfaceSelection.prototype.clickHandler = function (control, event) {
        if (event === void 0) { event = { ctrlKey: false, metaKey: false }; }
        if (this.expectClick) {
            this.expectClick = false;
            return;
        }
        control = control || this.dropTarget;
        if (!event.ctrlKey && !event.metaKey) {
            if (this._selectedControlsInner.length > 1 && this._selectedControlsInner.indexOf(control) !== -1) {
                this.swapFocusedItem(control);
            }
            else {
                if (this._focused() !== control) {
                    this.initialize(control);
                }
            }
        }
        else {
            this.selectionWithCtrl(control);
            this.applySelection();
        }
        this._resetTabPanelFocus();
    };
    SurfaceSelection.prototype.selecting = function (event) {
        if (!this._focused()) {
            this._setFocused(event.control);
        }
        else {
            event.cancel = !event.control.checkParent(this._firstSelected);
            if (!event.cancel) {
                if (this._firstSelected && this._firstSelected.focused()) {
                    this._setFocused(event.control);
                }
                else if (this._selectedControlsInner.indexOf(event.control) === -1) {
                    event.control.selected(true);
                    this._selectedControlsInner.push(event.control);
                }
            }
        }
    };
    SurfaceSelection.prototype.unselecting = function (control) {
        if (this._focused() === control) {
            this._setFocused(null);
            if (this._selectedControlsInner.length === 0) {
                this._setFocused(this._firstSelected);
            }
            else {
                this._setFocused(this._selectedControlsInner[0]);
            }
        }
        else {
            this._removeFromSelection(control);
        }
    };
    SurfaceSelection.prototype.selectionWithCtrl = function (control) {
        if (control && control.allowMultiselect) {
            var selectedControls = this._selectedControlsInner;
            if (selectedControls.length === 0 || (selectedControls.length === 1 && (!selectedControls[0].allowMultiselect))) {
                this.initialize(control);
            }
            else {
                if (this._selectedControlsInner.indexOf(control) === -1) {
                    control.selected(true);
                    this._selectedControlsInner.push(control);
                }
                else {
                    if (this._selectedControlsInner.length > 1) {
                        this.unselecting(control);
                    }
                }
            }
        }
    };
    return SurfaceSelection;
}(utils_1.Disposable));
exports.SurfaceSelection = SurfaceSelection;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var undoengine_1 = __webpack_require__(76);
function deleteSelection(selection) {
    var focused = selection.focused();
    selection.selectedItems.forEach(function (item) {
        var itemModel = item.getControlModel(), parent = itemModel.parentModel();
        if (!item.getControlModel().getMetaData().isDeleteDeny && parent && item !== focused) {
            parent.removeChild(itemModel);
        }
    });
    var model = focused.getControlModel();
    var undo = undoengine_1.UndoEngine.tryGetUndoEngine(model.parentModel());
    undo && undo.start();
    model.parentModel().removeChild(model);
    undo && undo.end();
    selection.focused(focused.findNextSelection());
}
exports.deleteSelection = deleteSelection;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _snapLinesCollector_1 = __webpack_require__(77);
var _snapLineSurface_1 = __webpack_require__(108);
var _arrayutils_1 = __webpack_require__(32);
var SnapLinesHelper = (function () {
    function SnapLinesHelper(surface, snapTolerance, snapLinesCollector) {
        if (surface === void 0) { surface = null; }
        if (snapTolerance === void 0) { snapTolerance = SnapLinesHelper.snapTolerance; }
        if (snapLinesCollector === void 0) { snapLinesCollector = new _snapLinesCollector_1.SnapLinesCollector(); }
        this.snapLineSurfaces = [new _snapLineSurface_1.SnapLineSurface(), new _snapLineSurface_1.SnapLineSurface(), new _snapLineSurface_1.SnapLineSurface(), new _snapLineSurface_1.SnapLineSurface()];
        this.verticalSnapLines = [];
        this.horizontalSnapLines = [];
        this._surfaceContext = surface;
        this._snapTolerance = snapTolerance;
        this._snapLinesCollector = snapLinesCollector;
    }
    SnapLinesHelper.prototype._findClosestSnapLine = function (position, snapLines) {
        var line = {
            position: position,
            limitInf: 0,
            limSup: 0
        };
        var index = _arrayutils_1.binaryIndexOf(snapLines, line, function (a, b) { return a.position - b.position; });
        var snapLineCandidate;
        if (index > -1) {
            snapLineCandidate = {
                snapLine: snapLines[index],
                distance: position - snapLines[index].position
            };
        }
        else {
            index = ~index;
            var delta1 = snapLines[index] ? (position - snapLines[index].position) : Number.MAX_VALUE;
            var delta2 = snapLines[index - 1] ? (position - snapLines[index - 1].position) : Number.MAX_VALUE;
            snapLineCandidate = Math.abs(delta1) > Math.abs(delta2) ?
                { snapLine: snapLines[index - 1], distance: delta2 } :
                { snapLine: snapLines[index], distance: delta1 };
        }
        return snapLineCandidate;
    };
    SnapLinesHelper.prototype._getActiveSnapLines = function (position1, position2, snapLines) {
        var line1 = this._findClosestSnapLine(position1, snapLines);
        var line2 = this._findClosestSnapLine(position2, snapLines);
        var result = {
            lines: [],
            distance: 0
        };
        if (Math.abs(line1.distance - line2.distance) >= 1) {
            var line = Math.abs(line1.distance) < Math.abs(line2.distance) ? line1 : line2;
            if (Math.abs(line.distance) <= this._snapTolerance) {
                result.lines = [line];
                result.distance = line.distance;
            }
        }
        else if (Math.abs(line1.distance) <= this._snapTolerance) {
            result.lines = [line1, line2];
            result.distance = line1.distance;
        }
        return result;
    };
    SnapLinesHelper.prototype.updateSnapLines = function (snapTargetToIgnore) {
        if (snapTargetToIgnore === void 0) { snapTargetToIgnore = null; }
        this.verticalSnapLines.splice(0);
        this.horizontalSnapLines.splice(0);
        var result = this._snapLinesCollector.collectSnaplines(this._surfaceContext(), snapTargetToIgnore);
        this.verticalSnapLines.push.apply(this.verticalSnapLines, result.vertical);
        this.horizontalSnapLines.push.apply(this.horizontalSnapLines, result.horizontal);
    };
    SnapLinesHelper.prototype.deactivateSnapLines = function () {
        this.snapLineSurfaces[0].reset();
        this.snapLineSurfaces[1].reset();
        this.snapLineSurfaces[2].reset();
        this.snapLineSurfaces[3].reset();
    };
    SnapLinesHelper.prototype.activateSnapLines = function (position) {
        var vertical = this._getActiveSnapLines(position.left, position.right, this.verticalSnapLines);
        var horizontal = this._getActiveSnapLines(position.top, position.bottom, this.horizontalSnapLines);
        for (var i = 0; i < 2; i++) {
            var line = vertical.lines[i];
            if (!line) {
                this.snapLineSurfaces[i].reset();
            }
            else {
                var top = Math.min(line.snapLine.limitInf, position.top);
                var bottom = Math.max(line.snapLine.limSup, position.bottom);
                if (position.top < line.snapLine.limitInf) {
                    top -= horizontal.distance;
                }
                if (position.bottom > line.snapLine.limSup) {
                    bottom -= horizontal.distance;
                }
                this.snapLineSurfaces[i].updatePosition({
                    top: top,
                    left: line.snapLine.position,
                    height: bottom - top,
                    width: 1
                });
            }
        }
        for (var i = 0; i < 2; i++) {
            var line = horizontal.lines[i];
            if (!line) {
                this.snapLineSurfaces[i + 2].reset();
            }
            else {
                var left = Math.min(line.snapLine.limitInf, position.left);
                var right = Math.max(line.snapLine.limSup, position.right);
                if (position.left < line.snapLine.limitInf) {
                    left -= vertical.distance;
                }
                if (position.right > line.snapLine.limSup) {
                    right -= vertical.distance;
                }
                this.snapLineSurfaces[i + 2].updatePosition({
                    top: line.snapLine.position,
                    left: left,
                    width: right - left,
                    height: 1
                });
            }
        }
        return {
            left: vertical.distance,
            top: horizontal.distance
        };
    };
    SnapLinesHelper.prototype.snapPosition = function (position, horizontal) {
        var line = this._findClosestSnapLine(position, horizontal ? this.horizontalSnapLines : this.verticalSnapLines);
        return (line && Math.abs(line.distance) <= this._snapTolerance) ? line.snapLine.position : position;
    };
    SnapLinesHelper.snapTolerance = 10;
    return SnapLinesHelper;
}());
exports.SnapLinesHelper = SnapLinesHelper;


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var SnapLineSurface = (function () {
    function SnapLineSurface() {
        this._position = ko.observable(SnapLineSurface._blankPosition);
    }
    SnapLineSurface.prototype.transform = function () {
        var position = this._position();
        return 'matrix(' + position.width + ', 0, 0, ' + position.height + ', ' + position.left + ', ' + position.top + ')';
    };
    SnapLineSurface.prototype.updatePosition = function (position) {
        this._position(position);
    };
    SnapLineSurface.prototype.reset = function () {
        this.updatePosition(SnapLineSurface._blankPosition);
    };
    SnapLineSurface._blankPosition = { top: 0, left: 0, width: 0, height: 0, };
    return SnapLineSurface;
}());
exports.SnapLineSurface = SnapLineSurface;


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var _keyboardHelper_1 = __webpack_require__(48);
var _copyPaste_1 = __webpack_require__(110);
var actionId_1 = __webpack_require__(111);
var localization_utils_1 = __webpack_require__(3);
var _selectionHelpers_1 = __webpack_require__(106);
var _utils_1 = __webpack_require__(24);
var ActionListsBase = (function (_super) {
    __extends(ActionListsBase, _super);
    function ActionListsBase(enabled) {
        var _this = _super.call(this) || this;
        _this.toolbarItems = [];
        _this.enabled = enabled || ko.observable(true);
        return _this;
    }
    ActionListsBase.prototype.processShortcut = function (actions, e) {
        for (var i = 0; i < actions.length; i++) {
            if (actions[i].hotKey && (actions[i].disabled && !actions[i].disabled() || !actions[i].disabled) && ($.isFunction(actions[i].visible) ? actions[i].visible() : actions[i].visible)) {
                if (actions[i].hotKey.ctrlKey === e.ctrlKey && actions[i].hotKey.keyCode === e.keyCode) {
                    actions[i].clickAction();
                    e.preventDefault();
                }
            }
        }
    };
    ActionListsBase.prototype.shouldIgnoreProcessing = function (e) {
        if (e.altKey || !this.enabled.peek())
            return true;
        var activeElement = $(document.activeElement);
        if (activeElement.is('textarea') || activeElement.is(':input') && (['password', 'text', 'number'].indexOf(activeElement.attr('type')) != -1)) {
            return true;
        }
        return false;
    };
    return ActionListsBase;
}(utils_1.Disposable));
exports.ActionListsBase = ActionListsBase;
var ActionLists = (function (_super) {
    __extends(ActionLists, _super);
    function ActionLists(surfaceContext, selection, undoEngine, customizeActions, enabled, copyPasteStrategy, zoomStep, isLocked) {
        if (zoomStep === void 0) { zoomStep = ko.observable(0.01); }
        if (isLocked === void 0) { isLocked = function (item) { return false; }; }
        var _this = _super.call(this, enabled) || this;
        _this.menuItems = [];
        var copyPasteHandler = new _copyPaste_1.CopyPasteHandler(selection, copyPasteStrategy), actions = [];
        if (selection) {
            var selectionControlsLocked = ko.computed(function () {
                return selection.selectedItems.some(function (item) { return item.locked || isLocked(item); });
            });
            _this._disposables.push(selectionControlsLocked);
            _this._keyboardHelper = new _keyboardHelper_1.KeyboardHelper(selection, undoEngine);
            actions.push({
                id: actionId_1.ActionId.Cut,
                text: 'Cut',
                displayText: function () { return localization_utils_1.getLocalization('Cut', 'AnalyticsCoreStringId.EditCut'); },
                imageClassName: 'dxrd-image-cut',
                imageTemplateName: 'dxrd-svg-toolbar-cut',
                disabled: ko.pureComputed(function () {
                    return !surfaceContext() || !copyPasteHandler.canCopy() || selectionControlsLocked();
                }),
                visible: true,
                clickAction: function () {
                    undoEngine().start();
                    copyPasteHandler.cut();
                    undoEngine().end();
                },
                hotKey: { ctrlKey: true, keyCode: 'X'.charCodeAt(0) }
            });
            actions.push({
                id: actionId_1.ActionId.Copy,
                text: 'Copy',
                displayText: function () { return localization_utils_1.getLocalization('Copy', 'AnalyticsCoreStringId.Cmd_Copy'); },
                imageClassName: 'dxrd-image-copy',
                imageTemplateName: 'dxrd-svg-toolbar-copy',
                disabled: ko.pureComputed(function () {
                    return !surfaceContext() || !copyPasteHandler.canCopy() || selectionControlsLocked();
                }),
                visible: true,
                clickAction: function () {
                    copyPasteHandler.copy();
                },
                hotKey: { ctrlKey: true, keyCode: 'C'.charCodeAt(0) }
            });
            actions.push({
                id: actionId_1.ActionId.Paste,
                text: 'Paste',
                displayText: function () { return localization_utils_1.getLocalization('Paste', 'AnalyticsCoreStringId.Cmd_Paste'); },
                imageClassName: 'dxrd-image-paste',
                imageTemplateName: 'dxrd-svg-toolbar-paste',
                disabled: ko.pureComputed(function () {
                    return !surfaceContext() || !copyPasteHandler.canPaste() || selectionControlsLocked();
                }),
                visible: true,
                clickAction: function () {
                    undoEngine().start();
                    copyPasteHandler.paste();
                    undoEngine().end();
                },
                hotKey: { ctrlKey: true, keyCode: 'V'.charCodeAt(0) }
            });
            actions.push({
                id: actionId_1.ActionId.Delete,
                text: 'Delete',
                displayText: function () { return localization_utils_1.getLocalization('Delete', 'AnalyticsCoreStringId.Cmd_Delete'); },
                imageClassName: 'dxrd-image-delete',
                imageTemplateName: 'dxrd-svg-toolbar-delete',
                disabled: ko.pureComputed(function () {
                    if (selection.focused()) {
                        return selection.focused().getControlModel().getMetaData().isDeleteDeny || selectionControlsLocked();
                    }
                    else {
                        return true;
                    }
                }),
                visible: true,
                hotKey: { ctrlKey: false, keyCode: 46 },
                clickAction: function () {
                    undoEngine().start();
                    _selectionHelpers_1.deleteSelection(selection);
                    undoEngine().end();
                }
            });
        }
        actions.push({
            id: actionId_1.ActionId.Undo,
            text: 'Undo',
            displayText: function () { return localization_utils_1.getLocalization('Undo', 'AnalyticsCoreStringId.Undo'); },
            imageClassName: 'dxrd-image-undo',
            imageTemplateName: 'dxrd-svg-toolbar-undo',
            disabled: ko.pureComputed(function () { return !surfaceContext() || !undoEngine() || (undoEngine() && !undoEngine().undoEnabled()); }),
            visible: true,
            clickAction: function () {
                undoEngine().undo();
            },
            hotKey: { ctrlKey: true, keyCode: 'Z'.charCodeAt(0) },
            hasSeparator: true
        });
        actions.push({
            id: actionId_1.ActionId.Redo,
            text: 'Redo',
            displayText: function () { return localization_utils_1.getLocalization('Redo', 'AnalyticsCoreStringId.Redo'); },
            imageClassName: 'dxrd-image-redo',
            imageTemplateName: 'dxrd-svg-toolbar-redo',
            disabled: ko.pureComputed(function () { return !surfaceContext() || !undoEngine() || (undoEngine() && !undoEngine().redoEnabled()); }),
            visible: true,
            clickAction: function () {
                undoEngine().redo();
            },
            hotKey: { ctrlKey: true, keyCode: 'Y'.charCodeAt(0) }
        });
        actions.push({
            id: actionId_1.ActionId.ZoomOut,
            text: 'Zoom Out',
            displayText: function () { return localization_utils_1.getLocalization('Zoom Out', 'AnalyticsCoreStringId.ZoomOut'); },
            imageClassName: 'dxrd-image-zoomout',
            imageTemplateName: 'dxrd-svg-toolbar-zoomout',
            disabled: ko.pureComputed(function () {
                return !surfaceContext();
            }),
            visible: true,
            hotKey: { ctrlKey: true, keyCode: 109 },
            zoomStep: zoomStep,
            clickAction: function () {
                surfaceContext().zoom(Math.max(surfaceContext().zoom() - zoomStep(), 0.01));
            },
            hasSeparator: true
        });
        actions.push({
            id: actionId_1.ActionId.ZoomSelector,
            text: 'Zoom 100%',
            displayText: function () { return localization_utils_1.getLocalization('Zoom 100%'); },
            imageClassName: 'dxrd-image-zoom',
            disabled: ko.pureComputed(function () {
                return !surfaceContext();
            }),
            visible: true,
            hotKey: { ctrlKey: true, keyCode: 187 },
            clickAction: function () {
                surfaceContext().zoom(1);
            },
            templateName: 'dxrd-zoom-select-template',
            zoomLevels: ko.observableArray([5, 2, 1.5, 1, 0.75, 0.5, 0.25]),
            zoom: ko.pureComputed({
                read: function () { return surfaceContext() && surfaceContext().zoom(); },
                write: function (val) { surfaceContext().zoom(val); }
            }),
            onCustomItemCreating: function (e) {
                e.customItem = _utils_1.parseZoom(e.text);
            }
        });
        actions.push({
            id: actionId_1.ActionId.ZoomIn,
            text: 'Zoom In',
            displayText: function () { return localization_utils_1.getLocalization('Zoom In', 'AnalyticsCoreStringId.ZoomIn'); },
            imageClassName: 'dxrd-image-zoomin',
            imageTemplateName: 'dxrd-svg-toolbar-zoomin',
            disabled: ko.pureComputed(function () {
                return !surfaceContext();
            }),
            visible: true,
            hotKey: { ctrlKey: true, keyCode: 107 },
            zoomStep: zoomStep,
            clickAction: function () {
                surfaceContext().zoom(surfaceContext().zoom() + zoomStep());
            }
        });
        if (customizeActions) {
            customizeActions(actions);
        }
        actions.forEach(function (action) {
            Object.keys(action).forEach(function (name) {
                if (ko.isComputed(action[name])) {
                    _this._disposables.push(action[name]);
                }
            });
            _this._registerAction(action['container'] === 'menu' ? _this.menuItems : ko.unwrap(_this.toolbarItems), action);
        });
        return _this;
    }
    ActionLists.prototype._registerAction = function (container, action) {
        if (action['index']) {
            container.splice(action['index'], 0, action);
        }
        else {
            container.push(action);
        }
    };
    ActionLists.prototype.processShortcut = function (actions, e) {
        if (this.shouldIgnoreProcessing(e)) {
            return;
        }
        if (!this._keyboardHelper.processShortcut(e)) {
            _super.prototype.processShortcut.call(this, actions, e);
        }
        else {
            e.preventDefault();
        }
    };
    return ActionLists;
}(ActionListsBase));
exports.ActionLists = ActionLists;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var point_1 = __webpack_require__(78);
var serializer_1 = __webpack_require__(51);
var _surfaceHelpers_1 = __webpack_require__(25);
exports.copyPasteStrategy = {
    createChild: function (pasteTarget, info) {
        return pasteTarget.createChild(info);
    },
    calculateDelta: function (selection, pasteTargetSurface, minPoint) {
        return {
            x: selection.rect().left - minPoint.x(),
            y: selection.rect().top - minPoint.y()
        };
    },
    canPaste: function (pasteTarget, info) { return true; }
};
var CopyPasteHandler = (function () {
    function CopyPasteHandler(selectionProvider, _copyPasteStrategy) {
        if (_copyPasteStrategy === void 0) { _copyPasteStrategy = exports.copyPasteStrategy; }
        var _this = this;
        this._copyPasteStrategy = _copyPasteStrategy;
        this._copyInfo = ko.observable(null);
        this.hasPasteInfo = ko.pureComputed(function () { return _this._copyInfo() !== null; });
        this._selectionProvider = selectionProvider;
    }
    CopyPasteHandler.prototype.canCopy = function () {
        return this._selectionProvider.focused() !== null && !this._selectionProvider.focused().getControlModel().getMetaData().isCopyDeny;
    };
    CopyPasteHandler.prototype.canPaste = function () {
        var pasteTargetSurface = this._selectionProvider.focused();
        return pasteTargetSurface !== null
            && this.hasPasteInfo()
            && pasteTargetSurface.canDrop()
            && (!this._copyPasteStrategy.canPaste || this._copyPasteStrategy.canPaste(pasteTargetSurface.getControlModel(), this._copyInfo()))
            && !pasteTargetSurface.getControlModel().getMetaData().isPasteDeny;
    };
    CopyPasteHandler.prototype.copy = function () {
        if (this.canCopy()) {
            var serializer = new serializer_1.ModelSerializer(), copyInfo = {
                focused: this._selectionProvider.focused(),
                objects: $.map(this._selectionProvider.selectedItems, function (item) {
                    return serializer.serialize(item.getControlModel());
                })
            };
            this._copyInfo(copyInfo);
        }
    };
    CopyPasteHandler.prototype.cut = function () {
        var _this = this;
        var serializer = new serializer_1.ModelSerializer(), focused = this._selectionProvider.focused(), objects = [];
        this._selectionProvider.selectedItems.forEach(function (item) {
            var control = item.getControlModel();
            control.parentModel().removeChild(control);
            objects.push(serializer.serialize(control));
            if (_this._copyPasteStrategy.createSelfRestoringItems)
                objects.push.apply(objects, _this._copyPasteStrategy.createSelfRestoringItems(control, serializer));
        });
        var cutInfo = {
            focused: focused,
            objects: objects
        };
        this._copyInfo(cutInfo);
    };
    CopyPasteHandler.prototype.paste = function () {
        var _this = this;
        if (this.canPaste()) {
            var pasteTargetSurface = this._selectionProvider.focused(), pasteTarget = pasteTargetSurface.getControlModel(), newSelection = [];
            if (pasteTargetSurface === this._copyInfo().focused) {
                pasteTargetSurface = pasteTargetSurface.parent;
                pasteTarget = pasteTargetSurface.getControlModel();
            }
            if (!pasteTarget.getMetaData().isContainer) {
                pasteTargetSurface = pasteTargetSurface.parent;
                pasteTarget = pasteTargetSurface.getControlModel();
            }
            var minPoint = new point_1.Point(Number.MAX_VALUE, Number.MAX_VALUE), maxPoint = new point_1.Point(-1, -1);
            for (var i = 0; i < this._copyInfo().objects.length; i++) {
                var newControl = this._copyPasteStrategy.createChild(pasteTarget, this._copyInfo().objects[i]);
                var newControlSurface = _surfaceHelpers_1.findSurface(newControl);
                if (!newControlSurface)
                    continue;
                var posMin = new point_1.Point(newControlSurface.rect().left, newControlSurface.rect().top);
                var posMax = new point_1.Point(newControlSurface.rect().left + newControlSurface.rect().width, newControlSurface.rect().top + newControlSurface.rect().height);
                if (minPoint.x() >= posMin.x())
                    minPoint.x(posMin.x());
                if (maxPoint.x() <= posMax.x())
                    maxPoint.x(posMax.x());
                if (minPoint.y() >= posMin.y())
                    minPoint.y(posMin.y());
                if (maxPoint.y() <= posMax.y())
                    maxPoint.y(posMax.y());
                newSelection.push(newControlSurface);
            }
            var newOriginPoint = new point_1.Point(((pasteTargetSurface.rect().width - pasteTargetSurface['_context'].margins.right()) / 2) - ((maxPoint.x() - minPoint.x()) / 2) + (pasteTargetSurface['rtlLayout']() ? pasteTargetSurface['_context'].margins.right() : 0), (pasteTargetSurface.rect().height / 2) - ((maxPoint.y() - minPoint.y()) / 2));
            for (var i = 0; i < newSelection.length; i++) {
                var delta = this._copyPasteStrategy.calculateDelta(newSelection[i], pasteTargetSurface, minPoint);
                newSelection[i].rect({ left: newOriginPoint.x() + delta.x, top: newOriginPoint.y() + delta.y });
            }
            this._selectionProvider.initialize();
            newSelection.forEach(function (newControlSurface) {
                _this._selectionProvider.selecting({ control: newControlSurface, cancel: false });
            });
        }
    };
    return CopyPasteHandler;
}());
exports.CopyPasteHandler = CopyPasteHandler;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionId = {
    Cut: 'dxd-cut',
    Copy: 'dxd-copy',
    Paste: 'dxd-paste',
    Delete: 'dxd-delete',
    Undo: 'dxd-undo',
    Redo: 'dxd-redo',
    ZoomOut: 'dxd-zoom-out',
    ZoomSelector: 'dxd-zoom-selector',
    ZoomIn: 'dxd-zoom-in',
};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var undoengine_1 = __webpack_require__(76);
var utils_1 = __webpack_require__(2);
var _controlProperties_1 = __webpack_require__(113);
var propertygrid_1 = __webpack_require__(21);
var _controlsHelper_1 = __webpack_require__(97);
var _stores_1 = __webpack_require__(102);
var tabPanel_1 = __webpack_require__(52);
var _actionList_1 = __webpack_require__(109);
var _utils_1 = __webpack_require__(24);
var _utils_2 = __webpack_require__(5);
var DesignerContextGeneratorInternal = (function () {
    function DesignerContextGeneratorInternal(_context, _rtl) {
        this._context = _context;
        this._rtl = _rtl;
    }
    DesignerContextGeneratorInternal.prototype.addElement = function (propertyName, model) {
        this._context[propertyName] = model;
        return this;
    };
    DesignerContextGeneratorInternal.prototype.addUndoEngine = function (undoEngine) {
        if (undoEngine === void 0) { undoEngine = ko.observable(new undoengine_1.UndoEngine(this._context.model)); }
        this._context.undoEngine = undoEngine;
        return this;
    };
    DesignerContextGeneratorInternal.prototype.addSurface = function (surface) {
        this._context.surface = surface;
        return this;
    };
    DesignerContextGeneratorInternal.prototype.getContext = function () {
        return this._context;
    };
    return DesignerContextGeneratorInternal;
}());
exports.DesignerContextGeneratorInternal = DesignerContextGeneratorInternal;
var DesignerContextGenerator = (function () {
    function DesignerContextGenerator(_rtl) {
        this._rtl = _rtl;
    }
    DesignerContextGenerator.prototype.addModel = function (model) {
        return new DesignerContextGeneratorInternal({ model: model }, this._rtl);
    };
    return DesignerContextGenerator;
}());
exports.DesignerContextGenerator = DesignerContextGenerator;
var ResizeSettings = (function (_super) {
    __extends(ResizeSettings, _super);
    function ResizeSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ResizeSettings.prototype, "handler", {
        get: function () { return this._handler; },
        set: function (newVal) {
            this._disposables.push(newVal);
            this._handler = newVal;
        },
        enumerable: true,
        configurable: true
    });
    ResizeSettings.prototype.generate = function () {
        var result = {};
        if (this.handler)
            result['resizeHandler'] = this.handler;
        return result;
    };
    return ResizeSettings;
}(utils_1.Disposable));
exports.ResizeSettings = ResizeSettings;
var ContextActionsSettings = (function (_super) {
    __extends(ContextActionsSettings, _super);
    function ContextActionsSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ContextActionsSettings.prototype._actionUndoEngineWrappingFunction = function (contextActions, undoEngine) {
        return _utils_1.createActionWrappingFunction('WrapWithUndoEngine', function (model, handler) {
            undoEngine().start();
            handler(model);
            undoEngine().end();
        })(contextActions);
    };
    ContextActionsSettings.prototype._collectActions = function (editableObj, undoEngine) {
        var editable = editableObj(), contextActions = [];
        this.actionProviders.forEach(function (actionProvider) {
            contextActions.push.apply(contextActions, actionProvider.getActions(editable));
        });
        this._actionUndoEngineWrappingFunction(contextActions, undoEngine);
        return contextActions;
    };
    Object.defineProperty(ContextActionsSettings.prototype, "actionProviders", {
        get: function () {
            return this._actionProviders;
        },
        set: function (val) {
            this._disposables.push.apply(this._disposables, val);
            this._actionProviders = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ContextActionsSettings.prototype, "actions", {
        get: function () {
            return this._actions;
        },
        set: function (val) {
            this._disposables.push(val);
            this._actions = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ContextActionsSettings.prototype, "groupActions", {
        get: function () {
            return this._groupActions;
        },
        set: function (val) {
            this._disposables.push(val);
            this._groupActions = val;
        },
        enumerable: true,
        configurable: true
    });
    ContextActionsSettings.prototype.createDefaultActions = function (editableObj, undoEngine) {
        var _this = this;
        this.actions = ko.computed(function () {
            return _this._collectActions(editableObj, undoEngine);
        });
    };
    ContextActionsSettings.prototype.createDefaultGroupAction = function (editableObj, undoEngine) {
        var _this = this;
        this.groupActions = ko.computed(function () {
            return _utils_1.collectGroupsFromFlatList(_this._collectActions(editableObj, undoEngine), function (x) { return x.group && x.group(); });
        });
    };
    ContextActionsSettings.prototype.generate = function () {
        var result = {};
        if (this.actionProviders)
            result['contextActionProviders'] = this.actionProviders;
        if (this.actions)
            result['contextActions'] = this.actions;
        if (this.groupActions)
            result['contextGroupActions'] = this.groupActions;
        return result;
    };
    return ContextActionsSettings;
}(utils_1.Disposable));
exports.ContextActionsSettings = ContextActionsSettings;
var DragDropSettings = (function (_super) {
    __extends(DragDropSettings, _super);
    function DragDropSettings() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._model = {};
        return _this;
    }
    Object.defineProperty(DragDropSettings.prototype, "dragHelperContent", {
        get: function () {
            return this._dragHelperContent;
        },
        set: function (val) {
            this._disposables.push(val);
            this._dragHelperContent = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragDropSettings.prototype, "dragDropStarted", {
        get: function () {
            return this._dragDropStarted;
        },
        set: function (val) {
            this._disposables.push(val);
            this._dragDropStarted = val;
        },
        enumerable: true,
        configurable: true
    });
    DragDropSettings.prototype.addDragDropHandler = function (propertyName, handler) {
        this._disposables.push(handler);
        this._model[propertyName] = handler;
    };
    DragDropSettings.prototype.generate = function () {
        var result = this._model;
        if (this.dragHelperContent)
            result['dragHelperContent'] = this.dragHelperContent;
        if (this.dragDropStarted)
            result['dragDropStarted'] = this.dragDropStarted;
        return result;
    };
    return DragDropSettings;
}(utils_1.Disposable));
exports.DragDropSettings = DragDropSettings;
var ControlsHelperSettings = (function (_super) {
    __extends(ControlsHelperSettings, _super);
    function ControlsHelperSettings(_selection, _context) {
        var _this = _super.call(this) || this;
        _this._selection = _selection;
        _this._context = _context;
        _this._model = {};
        return _this;
    }
    ControlsHelperSettings.prototype.generate = function () {
        var result = this._model;
        if (this.controlsHelper)
            result['controlsHelper'] = this.controlsHelper;
        return result;
    };
    ControlsHelperSettings.prototype.addControlsHelper = function (helper) {
        var _this = this;
        this.controlsHelper = helper || new _controlsHelper_1.DesignControlsHelper(this._context.model, [{
                added: function (control) { },
                deleted: function (control) { control.surface === _this._selection.focused() && _this._selection.focused(control.surface.findNextSelection()); }
            }]);
        this._disposables.push(this.controlsHelper);
        return this;
    };
    ControlsHelperSettings.prototype.addControlsStore = function (store) {
        store = store || new _stores_1.ControlsStore(this.controlsHelper.allControls);
        this._disposables.push(store);
        this._model['controlsStore'] = store;
        return this;
    };
    return ControlsHelperSettings;
}(utils_1.Disposable));
exports.ControlsHelperSettings = ControlsHelperSettings;
var MenuSettings = (function (_super) {
    __extends(MenuSettings, _super);
    function MenuSettings() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.stopPropagation = false;
        return _this;
    }
    MenuSettings.prototype.generate = function () {
        var result = {};
        if (this.appMenuVisible)
            result['appMenuVisible'] = this.appMenuVisible;
        if (this.toggleAppMenu)
            result['toggleAppMenu'] = this.toggleAppMenu;
        if (this.getMenuPopupContainer)
            result['getMenuPopupContainer'] = this.getMenuPopupContainer;
        if (this.getMenuPopupTarget)
            result['getMenuPopupTarget'] = this.getMenuPopupTarget;
        result['stopPropagation'] = this.stopPropagation;
        return result;
    };
    Object.defineProperty(MenuSettings.prototype, "appMenuVisible", {
        get: function () {
            return this._appMenuVisible;
        },
        set: function (val) {
            this._disposables.push(val);
            this._appMenuVisible = val;
        },
        enumerable: true,
        configurable: true
    });
    return MenuSettings;
}(utils_1.Disposable));
exports.MenuSettings = MenuSettings;
var SelectionSettings = (function (_super) {
    __extends(SelectionSettings, _super);
    function SelectionSettings() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._dragDropSettings = new DragDropSettings();
        _this._resizeSettings = new ResizeSettings();
        return _this;
    }
    SelectionSettings.prototype.dispose = function () {
        this._editableObject(null);
        _super.prototype.dispose.call(this);
        this.removeProperties();
    };
    Object.defineProperty(SelectionSettings.prototype, "selection", {
        get: function () {
            return this._selection;
        },
        set: function (val) {
            this._disposables.push(val);
            this._selection = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionSettings.prototype, "snapHelper", {
        get: function () {
            return this._snapHelper;
        },
        set: function (val) {
            this._disposables.push(val);
            this._snapHelper = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectionSettings.prototype, "editableObject", {
        get: function () {
            return this._editableObject;
        },
        set: function (val) {
            this._disposables.push(val);
            this._editableObject = val;
        },
        enumerable: true,
        configurable: true
    });
    SelectionSettings.prototype.addDragDrop = function (func) {
        func(this._dragDropSettings);
        this._disposables.push(this._dragDropSettings);
    };
    SelectionSettings.prototype.addResize = function (func) {
        func(this._resizeSettings);
        this._disposables.push(this._resizeSettings);
    };
    SelectionSettings.prototype.generate = function () {
        var result = {};
        if (this.selection)
            result['selection'] = this.selection;
        if (this.snapHelper)
            result['snapHelper'] = this.snapHelper;
        if (this.editableObject)
            result['editableObject'] = this.editableObject;
        return _utils_2.extend(result, this._dragDropSettings.generate(), this._resizeSettings.generate());
    };
    return SelectionSettings;
}(utils_1.Disposable));
exports.SelectionSettings = SelectionSettings;
var CommonDesignerGenerator = (function (_super) {
    __extends(CommonDesignerGenerator, _super);
    function CommonDesignerGenerator(_context, _rtl) {
        var _this = _super.call(this) || this;
        _this._context = _context;
        _this._rtl = _rtl;
        _this._model = {};
        _this._selectionSettings = new SelectionSettings();
        _this._model.rtl = _this._rtl;
        _this._model.dispose = function () {
            _this.dispose();
        };
        return _this;
    }
    CommonDesignerGenerator.prototype._createPopularProperties = function (info, popularProperties) {
        var properties = [];
        popularProperties.forEach(function (name) {
            var property = info.filter(function (propertyInfo) { return propertyInfo.propertyName === name; })[0];
            if (property) {
                properties.push(property);
            }
        });
        return properties;
    };
    CommonDesignerGenerator.prototype._resetModel = function () {
        var _this = this;
        Object.keys(this._model).forEach(function (propertyName) {
            if (propertyName !== 'dispose')
                delete _this._model[propertyName];
        });
    };
    Object.defineProperty(CommonDesignerGenerator.prototype, "rtl", {
        get: function () {
            return this._rtl;
        },
        set: function (newVal) {
            this._rtl = newVal;
            this._model.rtl = newVal;
        },
        enumerable: true,
        configurable: true
    });
    CommonDesignerGenerator.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._resetModel();
    };
    CommonDesignerGenerator.prototype.initializeContext = function (context) {
        this._context = context;
        return this;
    };
    CommonDesignerGenerator.prototype.getPropertyByName = function (propertyName) {
        return this._model[propertyName];
    };
    CommonDesignerGenerator.prototype.addElement = function (propertyName, elementFunc) {
        this._model[propertyName] = elementFunc();
        this._disposables.push(this._model[propertyName]);
        return this;
    };
    CommonDesignerGenerator.prototype.mapOnContext = function () {
        this._model.model = this._context.model;
        this._model.surface = this._context.surface;
        this._model.undoEngine = this._context.undoEngine;
        return this;
    };
    CommonDesignerGenerator.prototype.addSelection = function (func) {
        func(this._selectionSettings);
        this._disposables.push(this._selectionSettings);
        _utils_2.extend(this._model, this._selectionSettings.generate());
        return this;
    };
    CommonDesignerGenerator.prototype.addPropertyGrid = function (propertyGrid, propertyName) {
        if (propertyName === void 0) { propertyName = 'propertyGrid'; }
        this._model[propertyName] = propertyGrid && propertyGrid();
        this._disposables.push(this._model[propertyName]);
        return this;
    };
    CommonDesignerGenerator.prototype.addControlProperties = function (editors, groups, groupLocalizationIDs, accessibilityProvider) {
        var _this = this;
        return this.addPropertyGrid(function () { return _this.createControlProperties(editors, groups, accessibilityProvider); });
    };
    CommonDesignerGenerator.prototype.createControlProperties = function (editors, groups, accessibilityProvider) {
        var properties = new _controlProperties_1.ControlProperties(this._model.editableObject, { groups: groups, editors: editors }, null);
        if (accessibilityProvider)
            properties.registerAccessibilityProvider(accessibilityProvider);
        return properties;
    };
    CommonDesignerGenerator.prototype.addPopularProperties = function (controlsFactory, accessibilityProvider) {
        var _this = this;
        return this.addPropertyGrid(function () {
            var properties = new propertygrid_1.ObjectProperties(ko.pureComputed(function () {
                var popularPropertiesObject = { getInfo: function () { return []; } }, editable = _this._model.editableObject();
                if (editable) {
                    var controlInfo = controlsFactory.controlsMap[editable.controlType], propertiesInfo = _this._createPopularProperties(controlInfo && controlInfo.info || [], controlInfo && controlInfo.popularProperties || []);
                    (propertiesInfo).forEach(function (item) {
                        if (item.propertyName in editable)
                            popularPropertiesObject[item.propertyName] = editable[item.propertyName];
                    });
                    popularPropertiesObject.getInfo = function () {
                        return propertiesInfo;
                    };
                    popularPropertiesObject['root'] = editable.root;
                    popularPropertiesObject['actions'] = editable.actions;
                    popularPropertiesObject['actionProviders'] = editable.actionProviders;
                    popularPropertiesObject['getPath'] = function (propertyName) { return editable.getPath && editable.getPath(propertyName) || ''; };
                    popularPropertiesObject['getModel'] = function () { return editable; };
                    popularPropertiesObject['isPropertyModified'] = function (name) {
                        return editable.isPropertyModified ? editable.isPropertyModified(name) : false;
                    };
                    popularPropertiesObject['getActionClassName'] = function (name) {
                        return editable['getActionClassName'] ? editable['getActionClassName'](name) : '';
                    };
                    popularPropertiesObject['getMenuBoxTemplate'] = function (name) {
                        return editable['getMenuBoxTemplate'] ? editable['getMenuBoxTemplate'](name) : '';
                    };
                    popularPropertiesObject['isPropertyVisible'] = function (propertyName) {
                        return editable['isPropertyVisible'] ? editable['isPropertyVisible'](propertyName) : true;
                    };
                    popularPropertiesObject['isPropertyHighlighted'] = function (propertyName) {
                        return editable['isPropertyHighlighted'] ? editable['isPropertyHighlighted'](propertyName) : false;
                    };
                    popularPropertiesObject['isPropertyDisabled'] = function (name) {
                        return editable.isPropertyDisabled ? editable.isPropertyDisabled(name) : false;
                    };
                    popularPropertiesObject['isSame'] = function (x) { return x === editable; };
                    ['name', 'displayName'].forEach(function (propertyName) {
                        if (propertyName in editable) {
                            popularPropertiesObject[propertyName] = editable[propertyName];
                        }
                    });
                }
                return popularPropertiesObject;
            }), undefined, undefined, undefined);
            if (accessibilityProvider)
                properties.registerAccessibilityProvider(accessibilityProvider);
            return properties;
        }, 'popularProperties');
    };
    CommonDesignerGenerator.prototype.addToolboxItems = function (items) {
        this._model.toolboxItems = items && items();
        return this;
    };
    CommonDesignerGenerator.prototype.addGroupedToolboxItems = function () {
        this._model.groupedToolboxItems = _utils_1.collectGroupsFromFlatList(this._model.toolboxItems, function (item) { return item.info.group; });
        return this;
    };
    CommonDesignerGenerator.prototype.addTabPanel = function (panel, addTabInfo) {
        if (addTabInfo === void 0) { addTabInfo = function () { return []; }; }
        var panelModel = panel && panel() || new tabPanel_1.TabPanel({ tabs: addTabInfo(), rtl: this._rtl, width: 375 });
        this._model.tabPanel = panelModel;
        this._disposables.push(panelModel);
        return this;
    };
    CommonDesignerGenerator.prototype.addIsLoading = function (isLoadingFunc) {
        if (isLoadingFunc === void 0) { isLoadingFunc = function () { return ko.observable(true); }; }
        this._model.isLoading = isLoadingFunc();
        this._disposables.push(this._model.isLoading);
        return this;
    };
    CommonDesignerGenerator.prototype.addControlsHelper = function (func) {
        var settings = new ControlsHelperSettings(this._selectionSettings.selection, this._context);
        func(settings);
        this._disposables.push(settings);
        _utils_2.extend(this._model, settings.generate());
        return this;
    };
    CommonDesignerGenerator.prototype.addMenu = function (func) {
        var settings = new MenuSettings();
        func(settings);
        this._disposables.push(settings);
        _utils_2.extend(this._model, settings.generate());
        return this;
    };
    CommonDesignerGenerator.prototype.addContextActions = function (func) {
        var settings = new ContextActionsSettings();
        func(settings);
        this._disposables.push(settings);
        _utils_2.extend(this._model, settings.generate());
        return this;
    };
    CommonDesignerGenerator.prototype.addParts = function (func, useDefaults) {
        if (func === void 0) { func = function (parts) { return parts; }; }
        if (useDefaults === void 0) { useDefaults = true; }
        var parts = [];
        if (useDefaults)
            parts = _utils_1.generateDefaultParts(this._model);
        this._model.parts = func(parts);
        return this;
    };
    CommonDesignerGenerator.prototype.getModel = function () {
        return this._model;
    };
    CommonDesignerGenerator.prototype.addActionList = function (actionListsFunc) {
        var actionLists = actionListsFunc && actionListsFunc() || new _actionList_1.ActionLists(this._context.surface, this._selectionSettings.selection, this._context.undoEngine, function () { });
        this._disposables.push(actionLists);
        this._model.actionLists = actionLists;
        return this;
    };
    return CommonDesignerGenerator;
}(utils_1.Disposable));
exports.CommonDesignerGenerator = CommonDesignerGenerator;


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var propertygrid_1 = __webpack_require__(21);
var _group_1 = __webpack_require__(115);
var _popupService_1 = __webpack_require__(42);
var _getNameHelpers_1 = __webpack_require__(33);
var _localization_1 = __webpack_require__(8);
var text_box_1 = __webpack_require__(166);
var ControlProperties = (function (_super) {
    __extends(ControlProperties, _super);
    function ControlProperties(target, editorsInfo, level, useAddons) {
        if (level === void 0) { level = 0; }
        if (useAddons === void 0) { useAddons = true; }
        var _this = _super.call(this, target, editorsInfo, level, undefined, undefined, ko.observable(''), useAddons && new _popupService_1.PopupService()) || this;
        _this.focusedItem = ko.observable();
        _this.editorsRendered = ko.observable(false);
        _this.isSortingByGroups = ko.observable(true);
        _this.isSearching = ko.observable(false);
        _this.allEditorsCreated = ko.observable(false);
        _this.textToSearch = ko.observable('');
        _this._searchBox = null;
        _this.searchPlaceholder = function () { return _localization_1.searchPlaceholder(); };
        _this.switchSearchBox = function () {
            if (_this.isSearching()) {
                _this.isSearching(false);
                _this.textToSearch('');
            }
            else {
                _this.isSearching(true);
                _this._searchBox && _this._searchBox.focus();
            }
        };
        _this.createGroups(editorsInfo.groups);
        _this.update(target());
        _this._disposables.push(_this.focusedImageClassName = ko.pureComputed(function () {
            return _getNameHelpers_1.getImageClassName(target() && target().controlType);
        }));
        var subscription = _this.isSortingByGroups.subscribe(function (newVal) {
            if (!newVal) {
                _this.editorsRendered(true);
                subscription.dispose();
            }
        });
        _this._disposables.push(subscription);
        _this.focusedItem = target;
        _this._disposables.push(target.subscribe(function (newValue) {
            if (_this.isSearching() && !_this.textToSearch())
                _this.switchSearchBox();
        }));
        _this.displayExpr = function (value) { return _getNameHelpers_1.getControlFullName(value); };
        var timeout = null;
        _this._disposables.push(_this.textToSearch.subscribe(function (newValue) {
            timeout && clearTimeout(timeout);
            timeout = setTimeout(function () {
                _this._textToSearch(newValue);
                newValue && _this.groups.forEach(function (group) { return group.collapsed() && group.editors().some(function (editor) { return editor.isSearchedProperty(); }) && group.collapsed(false); });
            }, 200);
        }));
        return _this;
    }
    ControlProperties.prototype.getEditors = function () {
        var editors = _super.prototype.getEditors.call(this);
        var editorNames = editors.map(function (editor) { return editor.displayName(); }).sort();
        editors.sort(function (a, b) {
            return editorNames.indexOf(a.displayName()) - editorNames.indexOf(b.displayName());
        });
        return editors;
    };
    ControlProperties.prototype._update = function (target, editorsInfo, recreateEditors) {
        this.groups && this.groups.forEach(function (group) {
            if (group.editors().length === 0)
                group.recreate();
        });
        return _super.prototype._update.call(this, target, editorsInfo, recreateEditors);
    };
    ControlProperties.prototype.cleanEditors = function () {
        _super.prototype.cleanEditors.call(this);
        this.groups.forEach(function (x) { return x.resetEditors(); });
    };
    ControlProperties.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeArray(this.groups);
        this.disposeObservableArray(this._editors);
        this.resetObservableArray(this._editors);
        this.cleanSubscriptions();
        this._searchBox = null;
        this.focusedItem = null;
    };
    ControlProperties.prototype.createGroups = function (groups) {
        var _this = this;
        this.groups = Object.keys(groups).map(function (name) {
            return new _group_1.Group(name, groups[name].info, function (serializationInfo) {
                return serializationInfo
                    .filter(function (info) { return !!info.editor; })
                    .map(function (info) {
                    var editor = _this.findEditorByInfo(info);
                    if (editor)
                        return editor;
                    editor = _this.createEditor(info);
                    _this._editors.push(editor);
                    return editor;
                });
            }, true, groups[name].displayName);
        });
        this._disposables.push.apply(this._disposables, this.groups);
    };
    ControlProperties.prototype.registerAccessibilityProvider = function (accessibilityProvider) {
        _super.prototype.registerAccessibilityProvider.call(this, accessibilityProvider);
        this.groups.forEach(function (group) {
            group.registerAccessibilityProvider(accessibilityProvider);
        });
    };
    ControlProperties.prototype.searchBox = function ($element) {
        this._searchBox = text_box_1.default.getInstance($element.get(0));
    };
    return ControlProperties;
}(propertygrid_1.ObjectProperties));
exports.ControlProperties = ControlProperties;


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(2);
var validation_engine_1 = __webpack_require__(203);
var _utils_1 = __webpack_require__(5);
var EditorValidator = (function (_super) {
    __extends(EditorValidator, _super);
    function EditorValidator(_editor) {
        var _this_1 = _super.call(this) || this;
        _this_1._editor = _editor;
        _this_1._lastValidatorOptions = null;
        _this_1._lastModelOverridableRules = null;
        _this_1._onValidatedHandler = undefined;
        return _this_1;
    }
    EditorValidator.prototype.dispose = function () {
        this.onValidatedHandler = null;
        this.validatorInstance && this.validatorInstance.dispose();
        this.validatorInstance = null;
        _super.prototype.dispose.call(this);
    };
    EditorValidator.prototype._isValid = function (validationRules, newValue) {
        var _this_1 = this;
        this.onValidatedHandler = undefined;
        if (this.validatorInstance) {
            (validationRules || []).forEach(function (rule) { return rule && (rule.validator = _this_1.validatorInstance); });
            return this.validatorInstance.validate();
        }
        else {
            return validation_engine_1.default['validate'](newValue, validationRules, this._editor.displayName());
        }
    };
    Object.defineProperty(EditorValidator.prototype, "validatorInstance", {
        get: function () {
            return this._validatorInstance;
        },
        set: function (newValue) {
            if (this._validatorInstance && this.onValidatedHandler) {
                this._validatorInstance.off('validated', this._onValidatedHandler);
            }
            this._validatorInstance = newValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditorValidator.prototype, "onValidatedHandler", {
        get: function () {
            return this._onValidatedHandler;
        },
        set: function (newValue) {
            if (this._onValidatedHandler && this.validatorInstance) {
                this.validatorInstance.off('validated', this._onValidatedHandler);
                this._onValidatedHandler = newValue;
                if (newValue) {
                    this.validatorInstance.on('validated', this._onValidatedHandler);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    EditorValidator.prototype.getValidationRules = function () {
        var options = this.getValidatorOptions();
        var resultRules = (options || {}).validationRules;
        return resultRules || (resultRules === null ? null : []);
    };
    EditorValidator.prototype.getValidatorOptions = function (templateValidatorOptions) {
        if (templateValidatorOptions === void 0) { templateValidatorOptions = {}; }
        var info = this._editor.info.peek();
        if (!info)
            return;
        var options = this._lastValidatorOptions;
        var modelOverridableRules = this._editor._getEditorValidationRules();
        if (options && !this.areRulesChanged(modelOverridableRules)) {
            return options;
        }
        this._lastModelOverridableRules = modelOverridableRules;
        var extendedValidationRules = this._concatValidationRules(info.validatorOptions, modelOverridableRules);
        var extendedValidatorOptions = info.editor.extendedOptions && info.editor.extendedOptions.validatorOptions;
        var options = _utils_1.extend({}, templateValidatorOptions, info.validatorOptions, { validationRules: extendedValidationRules }, extendedValidatorOptions);
        this._wrapValidatorEvents(options);
        this._lastValidatorOptions = options;
        return options;
    };
    EditorValidator.prototype.areRulesChanged = function (overridableRuleSet) {
        var _this_1 = this;
        if (!(this._lastModelOverridableRules && this._lastModelOverridableRules.length)) {
            return overridableRuleSet && overridableRuleSet.length;
        }
        else if (!overridableRuleSet || !overridableRuleSet.length) {
            return true;
        }
        else {
            return !overridableRuleSet.every(function (newRule) {
                return _this_1._lastModelOverridableRules.some(function (rule) {
                    return newRule.message === rule.message && newRule.validationCallback === rule.validationCallback && newRule.type === rule.type;
                });
            });
        }
    };
    EditorValidator.prototype.wrapOnValidatorInitialized = function (options) {
        var onInitializedHandler = options.onInitialized;
        var _this = this;
        options.onInitialized = function (e) {
            _this._onValidatorInitialized(e);
            onInitializedHandler && onInitializedHandler.apply(this, arguments);
        };
    };
    EditorValidator.prototype._onValidatorInitialized = function (e) {
        this.validatorInstance = e && e.component;
    };
    EditorValidator.prototype._concatValidationRules = function (validatorOptions, validationRules) {
        if ((!validatorOptions || !validatorOptions.validationRules) && !validationRules) {
            return null;
        }
        return ((validatorOptions || {}).validationRules || []).concat(validationRules || []);
    };
    EditorValidator.prototype._wrapValidatorEvents = function (validatorOptions) {
        if (!validatorOptions || !validatorOptions.validationRules || !validatorOptions.validationRules.length) {
            return;
        }
        this.wrapOnValidatorInitialized(validatorOptions);
        return validatorOptions;
    };
    EditorValidator.prototype.assignWithValidation = function (newValue, assignValueFunc) {
        var _this_1 = this;
        var validationRules = this.getValidationRules();
        var assignValueFirst = !validationRules || validationRules.some(function (x) { return x.assignValueFirst; });
        if (assignValueFirst) {
            assignValueFunc();
        }
        var validationResult = this._isValid(validationRules, newValue);
        if (!validationResult.isValid) {
            if (validationResult.brokenRule && validationResult.brokenRule['isDeferred']) {
                this.onValidatedHandler = function (result) {
                    _this_1.onValidatedHandler = undefined;
                    if (!result.isValid)
                        return;
                    assignValueFunc();
                };
            }
            return;
        }
        if (!assignValueFirst) {
            assignValueFunc();
        }
    };
    return EditorValidator;
}(utils_1.Disposable));
exports.EditorValidator = EditorValidator;


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var localization_utils_1 = __webpack_require__(3);
var Group = (function (_super) {
    __extends(Group, _super);
    function Group(name, serializationsInfo, createEditors, collapsed, displayName) {
        if (collapsed === void 0) { collapsed = true; }
        var _this = _super.call(this) || this;
        _this.editors = ko.observableArray([]).extend({ deferred: true });
        _this.editorsCreated = ko.observable(false);
        _this.editorsRendered = ko.observable(false);
        _this._displayName = name;
        _this.displayName = displayName || (function () { return localization_utils_1.getLocalization(name); });
        _this._serializationsInfo = serializationsInfo;
        _this.collapsed = ko.observable(collapsed);
        if (collapsed) {
            var subscription = _this.collapsed.subscribe(function (newVal) {
                subscription.dispose();
                _this.editorsRendered(true);
            });
            _this._disposables.push(subscription);
        }
        _this.recreate = function () {
            _this.editors(createEditors(serializationsInfo));
            if (_this._accessibilityProvider) {
                _this.editors().forEach(function (editor) {
                    editor.registerAccessibilityProvider(_this._accessibilityProvider);
                });
            }
        };
        _this.editors(createEditors(serializationsInfo));
        _this.visible = ko.computed(function () {
            return _this.editors().some(function (editor) { return editor.visible(); });
        });
        _this._disposables.push(_this.visible);
        return _this;
    }
    Group.prototype.resetEditors = function () {
        this.disposeObservableArray(this.editors);
        this.resetObservableArray(this.editors);
    };
    Group.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.editors);
        this.resetObservableArray(this.editors);
    };
    Group.prototype.update = function (viewModel) {
        var _this = this;
        this._viewModel = viewModel;
        this.editors().forEach(function (editor) {
            editor.update(_this._viewModel);
        });
    };
    Group.prototype.registerAccessibilityProvider = function (accessibilityProvider) {
        this._accessibilityProvider = accessibilityProvider;
        this.editors().forEach(function (editor) {
            editor.registerAccessibilityProvider(accessibilityProvider);
        });
    };
    return Group;
}(utils_1.Disposable));
exports.Group = Group;


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var BordersModel = (function (_super) {
    __extends(BordersModel, _super);
    function BordersModel(object) {
        var _this = _super.call(this) || this;
        _this.left = ko.observable(false);
        _this.right = ko.observable(false);
        _this.top = ko.observable(false);
        _this.bottom = ko.observable(false);
        _this.disabled = object.disabled || ko.observable(false);
        _this.value = object.value;
        _this.updateModel(object.value());
        _this._disposables.push(object.value.subscribe(function (newVal) {
            _this.updateModel(newVal);
        }));
        return _this;
    }
    BordersModel.prototype._setAllValues = function (value) {
        this.left(value), this.bottom(value), this.right(value), this.top(value);
    };
    BordersModel.prototype.setValue = function (name) {
        if (this.disabled())
            return;
        this[name](!this[name]());
        this.updateValue();
    };
    BordersModel.prototype.setAll = function () {
        if (this.disabled())
            return;
        this._setAllValues(true);
        this.updateValue();
    };
    BordersModel.prototype.setNone = function () {
        if (this.disabled())
            return;
        this._setAllValues(false);
        this.updateValue();
    };
    BordersModel.prototype.updateModel = function (value) {
        var val = value || 'None';
        if (val.indexOf('All') !== -1) {
            this._setAllValues(true);
        }
        else if (val.indexOf('None') !== -1) {
            this._setAllValues(false);
        }
        else {
            this.left(val.indexOf('Left') !== -1);
            this.top(val.indexOf('Top') !== -1);
            this.right(val.indexOf('Right') !== -1);
            this.bottom(val.indexOf('Bottom') !== -1);
        }
    };
    BordersModel.prototype.updateValue = function () {
        var result = [];
        if (this.left() && this.right() && this.top() && this.bottom()) {
            result.push('All');
        }
        else if (!this.left() && !this.right() && !this.top() && !this.bottom()) {
            result.push('None');
        }
        else {
            this.left() ? result.push('Left') : null;
            this.right() ? result.push('Right') : null;
            this.top() ? result.push('Top') : null;
            this.bottom() ? result.push('Bottom') : null;
        }
        this.value(result.join(','));
    };
    return BordersModel;
}(utils_1.Disposable));
exports.BordersModel = BordersModel;


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var _utils_1 = __webpack_require__(24);
var serializer_1 = __webpack_require__(51);
var localization_utils_1 = __webpack_require__(3);
var ElementViewModel = (function (_super) {
    __extends(ElementViewModel, _super);
    function ElementViewModel(model, parent, serializer) {
        var _this = _super.call(this) || this;
        _this.actions = [];
        _this.actionProviders = [];
        _this.update = ko.observable(false);
        _this.controlType = _this.controlType || _this.getControlFactory().getControlType(model);
        _this.preInitProperties(model, parent, serializer);
        _this.parentModel = ko.observable(parent);
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this._disposables.push(_this['displayName'] = ko.pureComputed(function () {
            var result = _this.name && _this.name();
            if (!result) {
                result = 'unnamed ' + _this.controlType;
            }
            return result;
        }));
        _this.resetValue = function (propertyName) {
            _this._resetProperty(propertyName);
        };
        _this.actions.push({
            action: _this.resetValue,
            id: 'dxd-reset',
            title: localization_utils_1.getLocalization('Reset', 'AnalyticsCoreStringId.PropertyGrid_PopupMenu_Reset'), visible: _this.isResettableProperty,
            weight: 1000
        });
        return _this;
    }
    ElementViewModel.prototype._resetProperty = function (propertyName) {
        if (this[propertyName].resetValue) {
            this[propertyName].resetValue();
        }
        else {
            var defaultValue = this.getPropertyDefaultValue(propertyName);
            if (ko.isObservable(this[propertyName])) {
                this[propertyName](defaultValue);
            }
            else {
                _utils_1.copyObservables(defaultValue, this[propertyName]);
            }
        }
    };
    ElementViewModel.prototype.getPropertyDefaultValue = function (propertyName) {
        var info = this.getPropertyInfo(propertyName);
        return ko.unwrap(info && new serializer_1.ModelSerializer().deserializeDefaultValue(info));
    };
    ElementViewModel.prototype.getPropertyInfo = function (propertyName) {
        return this.getInfo().filter(function (info) { return info.propertyName === propertyName; })[0];
    };
    ElementViewModel.prototype.getInfo = function () {
        return this.getControlFactory().controlsMap[this.controlType].info;
    };
    ElementViewModel.prototype.createControl = function (model, serializer) {
        return this.getControlFactory().createControl(model, this, serializer);
    };
    ElementViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.surface && this.surface.dispose();
    };
    ElementViewModel.prototype.preInitProperties = function (model, parent, serializer) { };
    ElementViewModel.prototype.getNearestParent = function (target) {
        return target.getMetaData().isContainer ? target : target.getNearestParent(target.parentModel());
    };
    ElementViewModel.prototype.getControlInfo = function () {
        return this.getControlFactory().controlsMap[this.controlType || 'Unknown'];
    };
    ElementViewModel.prototype.getMetaData = function () {
        var controlType = this.controlType ? this.controlType : 'Unknown', data = this.getControlFactory().controlsMap[controlType];
        return {
            isContainer: data.isContainer || false,
            isCopyDeny: data.isCopyDeny || false,
            isDeleteDeny: data.isDeleteDeny || false,
            canDrop: data.canDrop || (function () { return true; }),
            isPasteDeny: data.isPasteDeny || !data.isContainer
        };
    };
    ElementViewModel.prototype._hasModifiedValue = function (name) {
        return this['_' + name] && this['_' + name]() && this.isPropertyModified(name);
    };
    ElementViewModel.prototype.createChild = function (info) {
        var newControl = this.getControlFactory().createControl(info, this);
        this.addChild(newControl);
        return newControl;
    };
    ElementViewModel.prototype.removeChilds = function (controls) {
        if (this['controls']) {
            var childs = this['controls']();
            for (var i = 0; i < controls.length; i++) {
                childs.splice(childs.indexOf(controls[i]), 1);
            }
            this['controls'].valueHasMutated();
        }
    };
    ElementViewModel.prototype.addChilds = function (controls) {
        if (this['controls']) {
            var childs = this['controls']();
            for (var i = 0; i < controls.length; i++) {
                childs.splice(0, 0, controls[i]);
            }
            this['controls'].valueHasMutated();
        }
    };
    ElementViewModel.prototype.removeChild = function (control) {
        if (this['controls']) {
            this['controls'].splice(this['controls']().indexOf(control), 1);
            control.onDelete();
        }
    };
    ElementViewModel.prototype.addChild = function (control) {
        if (this['controls'] && this['controls']().indexOf(control) === -1) {
            control.parentModel(this);
            this['controls'].splice(0, 0, control);
        }
    };
    ElementViewModel.prototype.isPropertyVisible = function (name) {
        return true;
    };
    ElementViewModel.prototype.isPropertyDisabled = function (name) {
        return false;
    };
    ElementViewModel.prototype.isPropertyModified = function (name) {
        var needName = this['_' + name] ? '_' + name : name;
        if (this[needName].isPropertyModified) {
            return this[needName].isPropertyModified();
        }
        else if (this[needName].isEmpty) {
            return !this[needName].isEmpty();
        }
        else {
            var defaultValue = this.getPropertyDefaultValue(name), propertyValue = ko.unwrap(this[needName]);
            if (defaultValue instanceof Object) {
                return !_utils_1.compareObjects(defaultValue, propertyValue);
            }
            else {
                return defaultValue !== propertyValue;
            }
        }
    };
    ElementViewModel.prototype.getControlFactory = function () {
        throw Error('Virtual method getControlFactory');
    };
    ElementViewModel.prototype.isResettableProperty = function (propertyName) {
        return ['name', 'size', 'location'].indexOf(propertyName) === -1;
    };
    Object.defineProperty(ElementViewModel.prototype, "root", {
        get: function () {
            var root = this;
            while (root && root.parentModel()) {
                root = root.parentModel();
            }
            return root;
        },
        enumerable: true,
        configurable: true
    });
    ElementViewModel.prototype.rtl = function () {
        return false;
    };
    ElementViewModel.prototype.onDelete = function () { };
    return ElementViewModel;
}(utils_1.Disposable));
exports.ElementViewModel = ElementViewModel;


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var _internal_1 = __webpack_require__(19);
var localization_utils_1 = __webpack_require__(3);
var _internal_2 = __webpack_require__(4);
var _listKeyboardHelper_1 = __webpack_require__(73);
var CollectionItemWrapper = (function (_super) {
    __extends(CollectionItemWrapper, _super);
    function CollectionItemWrapper(editor, array, index, displayNameField) {
        if (displayNameField === void 0) { displayNameField = ''; }
        var _this = _super.call(this) || this;
        _this.collapsed = ko.observable(true);
        _this.selected = ko.observable(false);
        _this._disposables.push(_this.value = ko.computed({
            read: function () {
                return array.peek()[index()];
            },
            write: function (val) {
                array.peek()[index()] = val;
            }
        }));
        _this.editor = editor;
        _this.index = index;
        _this._disposables.push(_this.name = ko.computed(function () {
            return displayNameField && _this.value() && _this.value()[displayNameField] ? ko.unwrap(_this.value()[displayNameField]) : index();
        }));
        return _this;
    }
    return CollectionItemWrapper;
}(utils_1.Disposable));
exports.CollectionItemWrapper = CollectionItemWrapper;
var CollectionEditorViewModel = (function (_super) {
    __extends(CollectionEditorViewModel, _super);
    function CollectionEditorViewModel(options, disabled) {
        if (disabled === void 0) { disabled = ko.observable(false); }
        var _this = _super.call(this) || this;
        _this.buttonMap = {
            'delete': { text: 'Delete', localizationId: 'AnalyticsCoreStringId.Cmd_Delete' },
            'add': { text: 'Add', localizationId: 'DataAccessUIStringId.Button_Add' },
            'down': { text: 'Move Down', localizationId: 'AnalyticsCoreStringId.Cmd_MoveDown' },
            'up': { text: 'Move Up', localizationId: 'AnalyticsCoreStringId.Cmd_MoveUp' }
        };
        _this.selectedIndex = ko.observable(null);
        _this.alwaysShow = ko.observable(false);
        _this.collapsed = ko.observable(options.collapsed !== false);
        var addHandler = function () { return (options.addHandler || options.info && options.info() && options.info()['addHandler']).call(_this); };
        var hideButtons = options.hideButtons || options.info && options.info() && options.info()['hideButtons'];
        _this._textEmptyArray = options.textEmptyArray || { text: 'To create an item click the Add button.', localizationId: 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureParametersEmpty' };
        _this.displayPropertyName = options.info && options.info() && options.info()['displayPropertyName'] || options.displayName;
        _this._disposables.push(_this.showButtons = ko.computed(function () {
            return !ko.unwrap(hideButtons) && !_this.collapsed();
        }));
        _this.showScroll = !!options.showScroll;
        var _isDisabled = function (selectedIndex, name) {
            if (options.isDisabledButton) {
                return options.isDisabledButton(selectedIndex, name);
            }
            else if (name === 'delete') {
                return selectedIndex === null;
            }
            else if (name === 'add') {
                return false;
            }
            else if (name === 'up') {
                return selectedIndex === null || selectedIndex === 0;
            }
            else if (name === 'down') {
                return selectedIndex === null || selectedIndex === (_this.values().length - 1);
            }
        };
        _this.isDisabledButton = function (name) {
            return disabled() || _isDisabled(_this.selectedIndex(), name);
        };
        _this.isVisibleButton = function (name) {
            if (!_this.showButtons()) {
                return false;
            }
            else
                return options.isVisibleButton ? options.isVisibleButton(_this.selectedIndex(), name) : true;
        };
        _this.padding = options.level !== void 0 ? options.level * _internal_1.propertiesGridEditorsPaddingLeft() : 0;
        _this.displayName = (options.info && options.info()) ? localization_utils_1.getLocalization(options.info().displayName, options.info().localizationId) : options.displayName;
        _this.options = options;
        if (!options.displayName) {
            _this.collapsed(false);
            _this.alwaysShow(true);
        }
        if (options.alwaysShow)
            _this.alwaysShow(true);
        _this._disposables.push(_this.values = ko.computed(function () {
            _this._timeoutItemRendered && clearTimeout(_this._timeoutItemRendered);
            _this._timeoutItemRendered = setTimeout(function () {
                _this.listKeyboardHelper && _this.listKeyboardHelper.initialize();
            }, 100);
            return ko.unwrap(options.values());
        }));
        var selectedItem = ko.unwrap(options.selectedItem);
        if (selectedItem) {
            _this._setSelectedIndex(selectedItem);
            _this._disposables.push(options.selectedItem.subscribe(function (newVal) {
                _this._setSelectedIndex(newVal);
            }));
        }
        _this.add = function (model) {
            model.event.stopPropagation();
            options.undoEngine && options.undoEngine().start();
            var item = addHandler();
            if (!item)
                return;
            var index = options.values().push(item);
            options.undoEngine && options.undoEngine().end();
            if (options.selectedItem) {
                _this.select({ index: function () { return index - 1; } });
            }
        };
        _this.up = function (model) {
            _this._move(options.values(), -1);
            model.event.stopPropagation();
        };
        _this.down = function (model) {
            _this._move(options.values(), 1);
            model.event.stopPropagation();
        };
        _this.remove = function (model) {
            model.event.stopPropagation();
            if (_this.selectedIndex() < 0)
                return;
            options.values().splice(_this.selectedIndex(), 1);
            var valuesCount = options.values()().length;
            if (valuesCount > 0) {
                _this.select({
                    index: function () { return _this.selectedIndex() >= valuesCount ? valuesCount - 1 : _this.selectedIndex(); }
                }, true);
            }
            else {
                _this.select({ index: function () { return null; } }, true);
            }
        };
        _this.select = function (model, force) {
            if (force === void 0) { force = false; }
            if (_this.selectedIndex() === model.index() && !force)
                return;
            _this.selectedIndex(model.index());
            if (options.selectedItem) {
                options.selectedItem(_this.selectedIndex() !== null ? _this.values()[_this.selectedIndex()] : null);
            }
        };
        _this.disabled = disabled;
        _this.listKeyboardHelper = new _listKeyboardHelper_1.ListKeyboardHelper();
        return _this;
    }
    CollectionEditorViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.removeProperties();
    };
    CollectionEditorViewModel.prototype._move = function (array, offset) {
        if (this.selectedIndex() >= 0) {
            var old_index = this.selectedIndex(), new_index = old_index + offset;
            if ((new_index >= array().length) || (new_index < 0)) {
                return;
            }
            array.splice(new_index, 0, array.splice(old_index, 1)[0]);
            this.selectedIndex(new_index);
        }
    };
    CollectionEditorViewModel.prototype._setSelectedIndex = function (selectedItem) {
        var index = this.values().indexOf(selectedItem);
        this.selectedIndex(index === -1 ? null : index);
    };
    CollectionEditorViewModel.prototype.getDisplayTextButton = function (key) {
        return localization_utils_1.getLocalization(this.buttonMap[key].text, this.buttonMap[key].localizationId);
    };
    CollectionEditorViewModel.prototype.getDisplayTextEmptyArray = function () {
        return localization_utils_1.getLocalization(this._textEmptyArray.text, this._textEmptyArray.localizationId);
    };
    CollectionEditorViewModel.prototype.createCollectionItemWrapper = function (grandfather, index, element) {
        var wrapper = new CollectionItemWrapper(grandfather, this.values, index, this.displayPropertyName);
        _internal_2.addDisposeCallback(element, function () { return wrapper.dispose(); });
        return wrapper;
    };
    return CollectionEditorViewModel;
}(utils_1.Disposable));
exports.CollectionEditorViewModel = CollectionEditorViewModel;


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
__webpack_require__(166);
var _svgTemplateEngine_1 = __webpack_require__(20);
var _utils_1 = __webpack_require__(9);
var _internal_1 = __webpack_require__(4);
var _dxtInherit_1 = __webpack_require__(30);
var editor_prefix = 'dx-ellipsiseditor', EDITOR_CLASS = editor_prefix + ' dx-dropdowneditor', EDITOR_BUTTON_CLASS = editor_prefix + '-button dx-widget dx-button-normal dx-dropdowneditor-button dx-ellipsis-button', EDITOR_BUTTON_ICON_CLASS = editor_prefix + '-icon dx-ellipsis-image dx-dropdowneditor-icon', EDITOR_BUTTON_ICON_TEMPLATE = 'dxrd-svg-ellipsis', EDITOR_WARNING_STATE_CLASS = 'dx-ellipsiseditor-warning';
var dxEllipsisEditor = (function (_super) {
    __extends(dxEllipsisEditor, _super);
    function dxEllipsisEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    dxEllipsisEditor.prototype._init = function () {
        _dxtInherit_1._getSuper(this)['_init'].apply(this);
        if (!this._$element) {
            this._$element = $(this.element());
        }
        this._$element.addClass(EDITOR_CLASS);
        this._koContext = ko.contextFor(this._$element.get(0));
    };
    dxEllipsisEditor.prototype._render = function () {
        _dxtInherit_1._getSuper(this)['_render'].apply(this);
        this._renderButton();
        this._updateWarningState();
        this._attachInputEvents();
    };
    dxEllipsisEditor.prototype._updateWarningState = function (value) {
        if (value === void 0) { value = this.option('warningMessage'); }
        if (value) {
            this._$element.attr('title', value);
            this._$element.addClass(EDITOR_WARNING_STATE_CLASS);
        }
        else {
            this._$element.removeAttr('title');
            this._$element.removeClass(EDITOR_WARNING_STATE_CLASS);
        }
    };
    dxEllipsisEditor.prototype._renderButton = function () {
        this._$button = $('<div />').addClass(EDITOR_BUTTON_CLASS);
        this._attachButtonEvents();
        this._$buttonIcon = $('<div />').addClass(EDITOR_BUTTON_ICON_CLASS).height('100%').append(_svgTemplateEngine_1.SvgTemplatesEngine.templates[EDITOR_BUTTON_ICON_TEMPLATE]).appendTo(this._$button);
        ko.applyBindingsToDescendants(this._koContext, this._$buttonIcon[0]);
        var buttonsContainer = this['_buttonsContainer']();
        this._$button.prependTo(buttonsContainer);
    };
    dxEllipsisEditor.prototype._updateButtonSize = function () {
        this._$buttonIcon.height($(this.element()).height());
    };
    dxEllipsisEditor.prototype._attachButtonEvents = function () {
        var _this = this;
        var subscribeElements = [];
        if (!this._$input)
            this._$input = $(this['_input']());
        this._$button.off('click');
        this._$input.off('click');
        if (!this.option('disabled'))
            subscribeElements.push(this._$button);
        if (this.option('openOnFieldClick'))
            subscribeElements.push(this._$input);
        subscribeElements.forEach(function ($element) {
            $element.on('click', _this.buttonAction.bind(_this));
        });
    };
    dxEllipsisEditor.prototype._attachInputEvents = function () {
        var _this = this;
        var input = this['_input']()[0];
        if (!input)
            return;
        var handler = function (e) {
            if (e.key == _utils_1.KeyboardEnum.Enter || (e.key == _utils_1.KeyboardEnum.ArrowDown && e.altKey)) {
                _this.buttonAction(e);
            }
        };
        input.addEventListener('keydown', handler);
        _internal_1.addDisposeCallback(input, function () {
            input.removeEventListener('keydown', handler);
        });
    };
    dxEllipsisEditor.prototype._optionChanged = function (args) {
        switch (args.name) {
            case 'disabled':
                this._attachButtonEvents();
                break;
            case 'warningMessage':
                this._updateWarningState(args.value);
                break;
        }
        _dxtInherit_1._getSuper(this)['_optionChanged'].apply(this, arguments);
    };
    dxEllipsisEditor.prototype.buttonAction = function (e) {
        if (this.option('buttonAction')) {
            this.option('buttonAction')();
            e.stopPropagation();
        }
    };
    dxEllipsisEditor.prototype.getComponentName = function () {
        return 'dxTextBox';
    };
    return dxEllipsisEditor;
}(_dxtInherit_1._dxtInherit));
exports.dxEllipsisEditor = dxEllipsisEditor;
_dxtInherit_1._registerDxtComponent('dxEllipsisEditor', dxEllipsisEditor);


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var _localization_1 = __webpack_require__(8);
var _operatorNames_1 = __webpack_require__(65);
var localization_utils_1 = __webpack_require__(3);
var _expressioneditor_1 = __webpack_require__(37);
var _utils_1 = __webpack_require__(9);
var _functions_1 = __webpack_require__(64);
var Tools = (function (_super) {
    __extends(Tools, _super);
    function Tools(onClick, parametersOptions, options, fieldListOptions) {
        var _this = _super.call(this) || this;
        _this.searchPlaceholder = function () { return _localization_1.searchPlaceholder(); };
        _this._categories = ko.observableArray([]);
        _this.toolBox = [];
        _this.description = ko.observable();
        _this._defaultClick = onClick;
        _operatorNames_1.operatorNames.filter(function (item) { return !!item.descriptionStringId; }).forEach(function (item) { return _this._initDescription(item); });
        var functionGroups = ko.computed(function () {
            return options() && ko.unwrap(options().functions) || _functions_1.functionDisplay();
        }), functions = ko.computed(function () {
            return functionGroups().map(function (funtionGroup) {
                return _this._createFunctionsCategoryItem(funtionGroup.items, localization_utils_1.getLocalization(funtionGroup.display, funtionGroup.localizationId));
            });
        }), createDefaultCategories = function () {
            return [
                _this._createFieldsCategory(fieldListOptions, parametersOptions),
                _this._createConstantCategory(),
                _this._createFunctionsCategory(functions),
                _this._createOperatorsCategory(_operatorNames_1.operatorNames)
            ];
        }, selectedContent = ko.observable(null), resetCategoriesSelection = function () {
            var firstItem = _this._categories()[0].content;
            selectedContent() && selectedContent().isSelected(false);
            selectedContent(firstItem);
            firstItem.isSelected(true);
        }, updateCategories = function (newOptions) {
            _this._disposeCategories();
            var defaultCategories = createDefaultCategories();
            newOptions && newOptions.customizeCategories && newOptions.customizeCategories(_this, defaultCategories, onClick);
            _this._categories(defaultCategories);
            resetCategoriesSelection();
        };
        _this.resetCategoriesSelection = resetCategoriesSelection;
        [functionGroups, functions].forEach(function (x) { return _this._disposables.push(x); });
        _this._disposables.push(options.subscribe(function (newOptions) {
            updateCategories(newOptions);
        }));
        updateCategories(options());
        _this._disposables.push(_this.showDescription = ko.computed(function () { return selectedContent() && selectedContent().showDescription; }));
        _this.toolBox = [
            _this._generateTab(_this._categories, 'dx-expressioneditor-categories', '170px', function (item) {
                if (item.data && item.data.selectedItem && item.data.selectedItem() && item.data.items.indexOf(item.data.selectedItem()) !== -1) {
                    var contentItem = item.data.selectedItem();
                    _this.description(_this._localizedExpressionEditorItem(contentItem));
                }
                else {
                    _this.description(undefined);
                }
                if (selectedContent() === item)
                    return;
                selectedContent().isSelected(false);
                item.isSelected(true);
                selectedContent(item);
            }),
            _this._generateTab(selectedContent, 'dx-expressioneditor-selectedcontent', ko.computed(function () { return _this.showDescription() ? '248px' : '436px'; }), function (item) { _this.description(_this._localizedExpressionEditorItem(item)); }, _this._defaultClick),
            _this._generateTab(_this.description, 'dx-expressioneditor-description', '184px', undefined, undefined, _this.showDescription)
        ];
        return _this;
    }
    Tools.prototype._generateTab = function (content, templateName, width, click, dblclick, visible) {
        if (templateName === void 0) { templateName = null; }
        return {
            templateName: templateName,
            width: width || '30%',
            content: content,
            click: click,
            dblclick: dblclick,
            visible: visible || true
        };
    };
    Tools.prototype._localizedExpressionEditorItem = function (item) {
        return item.descriptionStringId ? localization_utils_1.getLocalization(item.text, item.descriptionStringId) : item.description ? item.description : item.text;
    };
    Tools.prototype._initDescription = function (expressionEditorItem) {
        expressionEditorItem.description = this._localizedExpressionEditorItem(expressionEditorItem);
    };
    Tools.prototype._createFieldsCategory = function (fields, parameters) {
        var category = {
            displayName: localization_utils_1.getLocalization('Fields', 'AnalyticsCoreStringId.ExpressionEditor_ItemInfo_Fields'),
            content: {
                showDescription: false,
                isSelected: ko.observable(false),
                data: { fields: fields, parameters: parameters },
                name: 'dx-expressioneditor-fields'
            },
            dispose: function () { return void 0; }
        };
        return category;
    };
    Tools.prototype._createConstantCategory = function () {
        var items = [
            { text: '?', descriptionStringId: 'ExpressionEditorStringId.Constant_Null' },
            { text: 'False', descriptionStringId: 'ExpressionEditorStringId.Constant_False' },
            { text: 'True', descriptionStringId: 'ExpressionEditorStringId.Constant_True' }
        ];
        return _expressioneditor_1.createExpressionEditorCollectionToolOptions(items, 'Constants', 'DataAccessStringId.ExpressionEditor_DocumentationCategory_Constants', true);
    };
    Tools.prototype._createOperatorsCategory = function (data) {
        return _expressioneditor_1.createExpressionEditorCollectionToolOptions(data, 'Operators', 'DataAccessStringId.ExpressionEditor_DocumentationCategory_Operators', true);
    };
    Tools.prototype._createFunctionsCategoryContent = function (textToSearch, isSelected, items) {
        return {
            showDescription: true,
            isSelected: isSelected,
            data: {
                textToSearch: textToSearch,
                items: items,
                availableItems: ko.observableArray(items),
                selectedItem: ko.observable(null)
            },
            name: 'dx-expressioneditor-collection-function',
        };
    };
    Tools.prototype._createFunctionsCategoryItem = function (functions, display) {
        var _this = this;
        var result = {
            display: display,
            isSelected: ko.observable(false),
            data: [],
            name: 'dx-expressioneditor-collection-function',
        };
        $.map(functions, (function (item) {
            if (item) {
                item.forEach(function (functionItem) {
                    _this._initDescription(functionItem);
                    result.data.push(functionItem);
                });
            }
        }));
        return result;
    };
    Tools.prototype._createFunctionsCategory = function (items) {
        var textToSearch = ko.observable(''), disposables = [], isSelected = ko.observable(false), timeout = null, allItems = ko.computed(function () { return [].concat.apply([], items().map(function (x) { return x.data; })); }), content = this._createFunctionsCategoryContent(textToSearch, isSelected, allItems()), category = {
            displayName: localization_utils_1.getLocalization('Functions', 'DataAccessStringId.ExpressionEditor_DocumentationCategory_Functions'),
            items: items, allItems: allItems, isSelected: isSelected, content: content,
            collapsed: ko.observable(true),
            updateContent: function (items, isSelected) {
                content.isSelected && content.isSelected(false);
                content.isSelected = isSelected;
                content.isSelected(true);
                content.data.items = items;
                content.data.availableItems(content.data.items.filter(function (x) { return !!_utils_1.findMatchesInString(x.text, textToSearch()); }));
            },
            templateName: 'dx-expressioneditor-category-accordion',
            dispose: function () {
                disposables.forEach(function (x) { return x.dispose(); });
                disposables.splice(0, disposables.length);
            }
        };
        disposables.push(allItems);
        disposables.push(textToSearch.subscribe(function (newVal) {
            timeout && clearTimeout(timeout);
            timeout = setTimeout(function () {
                category.content.data.availableItems(category.content.data.items.filter(function (x) { return !!_utils_1.findMatchesInString(x.text, newVal); }));
            }, 150);
        }));
        return category;
    };
    Tools.prototype._disposeCategories = function () {
        this._categories().forEach(function (category) { return category.dispose && category.dispose(); });
    };
    Tools.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._disposeCategories();
    };
    return Tools;
}(utils_1.Disposable));
exports.Tools = Tools;


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var localization_utils_1 = __webpack_require__(3);
var utils_1 = __webpack_require__(2);
var _svgTemplateEngine_1 = __webpack_require__(20);
var pathRequest_1 = __webpack_require__(27);
var _codeResolver_1 = __webpack_require__(59);
var options_1 = __webpack_require__(122);
var _internal_1 = __webpack_require__(4);
exports.maxSearchLevel = _internal_1.createGlobalModuleVariableFunc(5);
exports.treeListEditAction = {
    templateName: 'dx-treelist-edit-action',
    imageClassName: '',
    text: 'Edit',
    clickAction: $.noop,
    displayText: function () { return localization_utils_1.getLocalization('Edit', 'AnalyticsCoreStringId.Group_Edit'); }
};
var DefaultTreeListItemFactory = (function () {
    function DefaultTreeListItemFactory() {
    }
    DefaultTreeListItemFactory.prototype.createRootItem = function (options, path, onItemsVisibilityChanged, rtl) {
        return new TreeListRootItemViewModel(options, path, onItemsVisibilityChanged, rtl);
    };
    DefaultTreeListItemFactory.prototype.createItem = function (options, path, onItemsVisibilityChanged, rtl, resolver) {
        return new TreeListItemViewModel(options, path, onItemsVisibilityChanged, rtl, resolver);
    };
    return DefaultTreeListItemFactory;
}());
exports.DefaultTreeListItemFactory = DefaultTreeListItemFactory;
var TreeListEllipsisButton = (function () {
    function TreeListEllipsisButton(_availableItemsCount, padding, pageSize) {
        this._availableItemsCount = _availableItemsCount;
        this.padding = padding;
        this.pageSize = pageSize;
        this.templateName = 'dx-treelist-item-ellipsis';
        this.collapsed = function () { return true; };
        this.visibleItems = function () { return []; };
        this.text = function () { return localization_utils_1.getLocalization('Show more...', 'AnalyticsCoreStringId.QueryBuilder_Tables_ShowMore'); };
    }
    TreeListEllipsisButton.prototype.renderNext = function () {
        this._availableItemsCount(this._availableItemsCount() + this.pageSize);
    };
    return TreeListEllipsisButton;
}());
exports.TreeListEllipsisButton = TreeListEllipsisButton;
var TreeListItemViewModel = (function (_super) {
    __extends(TreeListItemViewModel, _super);
    function TreeListItemViewModel(options, path, onItemsVisibilityChanged, rtl, resolver) {
        if (path === void 0) { path = []; }
        if (onItemsVisibilityChanged === void 0) { onItemsVisibilityChanged = $.noop; }
        if (rtl === void 0) { rtl = false; }
        if (resolver === void 0) { resolver = new _codeResolver_1.CodeResolver(); }
        var _this = _super.call(this) || this;
        _this.resolver = resolver;
        _this._rtl = false;
        _this._data = ko.observable(null);
        _this._actions = ko.observable([]);
        _this._isVisible = ko.observable(true);
        _this._pageSize = -1;
        _this._actionsSubscription = null;
        _this._iconName = function () { return (ko.unwrap((_this.data && _this.data.icon) || (_this.data && _this.data.specifics)) || 'default').split('.').join('_').toLowerCase(); };
        _this._nodeIsLocked = false;
        _this.level = -1;
        _this.items = ko.observableArray();
        _this.collapsed = ko.observable(true);
        _this.isSelected = ko.observable(false);
        _this.isHovered = ko.observable(false);
        _this.isMultiSelected = ko.observable(false);
        _this._pageSize = options.pageSize || -1;
        _this._path = path;
        _this._rtl = rtl;
        _this._factory = options.factory || new DefaultTreeListItemFactory();
        _this._treeListController = options.treeListController;
        _this._templateName = options.templateName;
        _this._onItemsVisibilityChanged = onItemsVisibilityChanged;
        _this.dragDropHandler = options.treeListController.dragDropHandler;
        _this.getItems = function () {
            if (_this.items().length > 0)
                return $.Deferred().resolve(_this.items()).promise();
            return _this._loadItems(options);
        };
        _this._initPaginate();
        _this.toggleSelected = function (_, event) {
            if (event && (event.shiftKey || event.ctrlKey || event.metaKey) && _this.selectedItems().length > 0 && _this._treeListController.canMultiSelect && _this._treeListController.canMultiSelect(_this)) {
                options.selectedPath('');
                _this._treeListController.multiSelect(_this, event.shiftKey, event.ctrlKey || event.metaKey);
            }
            else if (_this._treeListController.canSelect(_this)) {
                options.treeListController.clickHandler && options.treeListController.clickHandler(_this);
                options.selectedPath(_this.path);
            }
        };
        if (options.treeListController.dblClickHandler) {
            _this.dblClickHandler = function (item) {
                options.treeListController.dblClickHandler && options.treeListController.dblClickHandler(item);
            };
        }
        _this.toggleCollapsed = function () {
            if (_this.hasItems) {
                _this.collapsed(!_this.collapsed.peek());
                if (!_this.collapsed.peek() && _this.items().length === 0) {
                    _this._loadItems(options, options_1.LoadChildItemsForCollapsedNodes()).always(function () { onItemsVisibilityChanged(); });
                }
                else if (options_1.LoadChildItemsForCollapsedNodes()) {
                    _this.items().forEach(function (item) {
                        item._treeListController.hasItems(item.data) && item.items().length === 0 && item._loadItems(options);
                    });
                    onItemsVisibilityChanged();
                }
            }
        };
        _this.nodeImageClass = _this._getNodeImageClassName();
        return _this;
    }
    TreeListItemViewModel.prototype._equal = function (obj1, obj2) {
        var ignore = ['innerActions', 'noDragable', 'dragData'];
        if (obj2 === obj1)
            return true;
        return Object.keys(obj2).filter(function (key) { return ignore.indexOf(key) === -1; }).every(function (key) {
            return obj2[key] === obj1[key];
        });
    };
    TreeListItemViewModel.prototype._getImageClassName = function (showIcon) {
        var _this = this;
        return ko.computed(function () {
            return 'dx-image-fieldlist-'
                + _this._iconName()
                + (!showIcon ? ' dx-treelist-image-empty' : '');
        });
    };
    TreeListItemViewModel.prototype._getImageTemplateName = function () {
        var _this = this;
        return ko.computed(function () {
            var _templateName = 'dxrd-svg-fieldlist-' + _this._iconName();
            return _svgTemplateEngine_1.SvgTemplatesEngine.getExistingTemplate(_templateName);
        });
    };
    TreeListItemViewModel.prototype._getNodeImageClassName = function () {
        var _this = this;
        var imageClassName = ko.observable('dx-collapsing-image');
        return ko.computed({
            read: function () {
                if (!_this.hasItems) {
                    return 'dx-image-leaf-node';
                }
                return _this.collapsed() ? 'dx-collapsing-image' : imageClassName();
            },
            write: function (newValue) {
                imageClassName(newValue);
            }
        });
    };
    TreeListItemViewModel.prototype._createItemsObj = function (items) {
        var obj = {};
        for (var i = 0; i < items.length; i++) {
            obj[items[i].name] = { item: items[i], index: i };
        }
        return obj;
    };
    TreeListItemViewModel.prototype._loadItems = function (options, loadInnerItems) {
        var _this = this;
        if (loadInnerItems === void 0) { loadInnerItems = false; }
        var deferred = $.Deferred();
        if (this._loader) {
            this._loader.dispose();
        }
        this._disposables.reverse().forEach(function (x) { return x.dispose && x.dispose(); });
        this._disposables.splice(0);
        var promise = ko.observable();
        var subscription = promise.subscribe(function (value) {
            if (!value)
                return;
            value.done(function (data) {
                if (_this.isDisposing) {
                    deferred.reject();
                    return;
                }
                var _data = data;
                var items = _this.items.peek();
                var dataObj = _this._createItemsObj(_data);
                var isMutated = false;
                var splicedItems = 0;
                var tempItems = [].concat.apply([], items);
                for (var i = 0; i < tempItems.length; i++) {
                    if (!dataObj[tempItems[i].data.name]) {
                        tempItems[i].dispose();
                        items.splice(i - splicedItems, 1);
                        splicedItems++;
                        isMutated = true;
                    }
                }
                var itemsObj = _this._createItemsObj(items);
                var resorted = false;
                var showIconsForChildItems = !_this._treeListController.showIconsForChildItems || _this._treeListController.showIconsForChildItems(_this);
                var showIconTemplate = _this._treeListController.showIconsForChildItems && _this._treeListController.showIconsForChildItems(_this);
                _data.forEach(function (d, index) {
                    var currentItem = itemsObj[d.name];
                    if (!currentItem) {
                        isMutated = true;
                        var newItem = _this._factory.createItem(options, _this.pathParts, _this._onItemsVisibilityChanged, _this._rtl, _this.resolver);
                        newItem.data = d;
                        newItem.level = _this.level + 1;
                        newItem.parent = _this;
                        newItem.padding = _this._applyPadding(_this._rtl ? 'right' : 'left', 20 * newItem.level + 12);
                        newItem.imageClassName = newItem._getImageClassName(showIconsForChildItems);
                        newItem.imageTemplateName = newItem._getImageTemplateName();
                        newItem.showIcon = showIconTemplate;
                        items.splice(index, 0, newItem);
                        itemsObj[d.name] = { item: newItem, index: index };
                    }
                    else {
                        if (!_this._equal(d, currentItem.item.data))
                            currentItem.item.data = d;
                        if (!resorted)
                            resorted = currentItem.index !== index;
                    }
                });
                if (resorted) {
                    var index = items.reduce(function (acc, x, index) {
                        var max = Math.abs(index - (dataObj[x.data.name] ? dataObj[x.data.name].index : -1));
                        if (!acc || acc.max < max) {
                            return { max: max, index: index };
                        }
                        return acc;
                    }, null).index;
                    var curItem = items[index];
                    items.splice(index, 1);
                    items.splice(dataObj[curItem.data.name] ? dataObj[curItem.data.name].index : -1, 0, curItem);
                    isMutated = true;
                }
                dataObj = null;
                itemsObj = null;
                if (isMutated) {
                    _this.items.valueHasMutated();
                    _this._onItemsChanged();
                }
                if (!_this.collapsed() || loadInnerItems) {
                    _this.items().forEach(function (item) {
                        if (item._treeListController.hasItems(item.data)) {
                            item._loadItems(options);
                        }
                    });
                }
                _this.nodeImageClass(_this.items.peek().some(function (x) { return x.visible; }) ? 'dx-collapsing-image dx-image-expanded' : 'dx-image-leaf-node');
                deferred.resolve(_this.items.peek());
                var selectedPath = options.selectedPath.peek();
                if (selectedPath) {
                    var item2Select = _this.items.peek().filter(function (item) { return selectedPath.indexOf(item.path) === 0; })[0];
                    if (item2Select) {
                        _this._selectItem(item2Select.name + selectedPath.substring(item2Select.path.length));
                    }
                }
            });
        });
        this._disposables.push({
            dispose: function () {
                subscription.dispose();
                promise(null);
            }
        });
        this._disposables.push(this._loader = ko.computed(function () {
            promise(options.itemsProvider.getItems(new pathRequest_1.PathRequest(_this.path, _this.pathParts)));
        }));
        return deferred.promise();
    };
    TreeListItemViewModel.prototype._onItemsChanged = function () { };
    TreeListItemViewModel.prototype._getTemplateName = function () {
        return this._templateName || this.data && this.data.templateName || 'dx-treelist-item';
    };
    TreeListItemViewModel.prototype._selectItem = function (itemPath) {
        var _this = this;
        if (!this.hasItems) {
            return;
        }
        var selectItemDelegate = function () {
            _this._find(itemPath);
            if (_this.collapsed.peek()) {
                _this.toggleCollapsed();
            }
        };
        if (this.items.peek().length === 0) {
            this.getItems().done(function (items) {
                selectItemDelegate();
            });
        }
        else {
            selectItemDelegate();
        }
    };
    TreeListItemViewModel.prototype._find = function (itemPath) {
        var item = itemPath && this.items.peek().filter(function (childItem) {
            return itemPath === childItem.name
                || itemPath.indexOf(childItem.name) === 0 && itemPath[childItem.name.length] === '.';
        })[0];
        if (item) {
            if (itemPath.length > item.name.length) {
                item._selectItem(itemPath.substr(item.name.length + 1));
            }
            else {
                this._treeListController.select(item);
            }
        }
    };
    TreeListItemViewModel.prototype._getItemsWithLock = function () {
        var _this = this;
        var deffered = $.Deferred();
        if (this._nodeIsLocked)
            return deffered.reject().promise();
        this._nodeIsLocked = true;
        this.getItems().done(function (result) {
            _this._nodeIsLocked = false;
            deffered.resolve(result);
        }).fail(function () {
            _this._nodeIsLocked = false;
            deffered.reject();
        });
        return deffered.promise();
    };
    TreeListItemViewModel.prototype._applyPadding = function (position, value) {
        var padding = {};
        padding['padding-' + position] = value;
        return padding;
    };
    TreeListItemViewModel.prototype._initPaginate = function () {
        var _this = this;
        if (this._pageSize === -1)
            return;
        this.maxItemsCount = ko.observable(this._pageSize);
        this.visibleItems = ko.computed(function () {
            if (_this.items().length === 0)
                return [];
            var result = _this.items().filter(function (x) { return x._isVisible.peek(); });
            if (result.length > _this.maxItemsCount()) {
                result = result.slice(0, _this.maxItemsCount());
                result.push(new TreeListEllipsisButton(_this.maxItemsCount, result[0].padding, _this._pageSize));
            }
            return result;
        });
    };
    Object.defineProperty(TreeListItemViewModel.prototype, "hasItems", {
        get: function () {
            if (!this.data) {
                return true;
            }
            var hasItems = this._treeListController.hasItems(this.data);
            return options_1.LoadChildItemsForCollapsedNodes() ?
                hasItems && this.items().some(function (item) { return item.visible; }) :
                hasItems;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeListItemViewModel.prototype, "data", {
        get: function () {
            return this._data();
        },
        set: function (newVal) {
            var _this = this;
            this._data(newVal);
            this._actionsSubscription && this._actionsSubscription.dispose();
            this._actionsSubscription = ko.computed(function () {
                _this._actions(_this._treeListController && _this._treeListController.getActions ? _this._treeListController.getActions(_this) : []);
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeListItemViewModel.prototype, "name", {
        get: function () {
            return ko.unwrap(this.data && this.data.name);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeListItemViewModel.prototype, "path", {
        get: function () {
            return this.pathParts.join('.');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeListItemViewModel.prototype, "pathParts", {
        get: function () {
            if (this.name) {
                return (ko.unwrap(this._path) || []).concat([this.name]);
            }
            else {
                return ko.unwrap(this._path);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeListItemViewModel.prototype, "text", {
        get: function () {
            return this.data && this.data.displayName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeListItemViewModel.prototype, "templateName", {
        get: function () {
            return this._getTemplateName();
        },
        enumerable: true,
        configurable: true
    });
    TreeListItemViewModel.prototype.actionsTemplate = function () {
        return this.data && ko.unwrap(this.data['actionsTemplate']) || 'dx-treelist-item-actions-with-edit';
    };
    TreeListItemViewModel.prototype.treeListEditAction = function () {
        return exports.treeListEditAction;
    };
    Object.defineProperty(TreeListItemViewModel.prototype, "hasContent", {
        get: function () {
            return this.data && this.data['contenttemplate'];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeListItemViewModel.prototype, "actions", {
        get: function () {
            return this._actions();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeListItemViewModel.prototype, "isDraggable", {
        get: function () {
            if (this.data && this.data['dragData']) {
                return !this.data['dragData'].noDragable;
            }
            if (this._treeListController.isDraggable) {
                return this._treeListController.isDraggable(this);
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeListItemViewModel.prototype, "treeListController", {
        get: function () {
            return this._treeListController;
        },
        enumerable: true,
        configurable: true
    });
    TreeListItemViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._actions([]);
        this.visibleItems && this.visibleItems.dispose();
        this._actionsSubscription && this._actionsSubscription.dispose();
        this.disposeObservableArray(this.items);
        this.resetObservableArray(this.items);
        this.parent = null;
    };
    Object.defineProperty(TreeListItemViewModel.prototype, "visible", {
        get: function () {
            if (this.data && this._treeListController.itemsFilter && !this._treeListController.itemsFilter(this.data, this.path))
                return false;
            return this._isVisible();
        },
        enumerable: true,
        configurable: true
    });
    TreeListItemViewModel.prototype.setVisible = function (value) {
        this._isVisible(value);
        if (value && this.parent && !this.parent.visible)
            this.parent.setVisible(true);
    };
    TreeListItemViewModel.prototype.mouseenter = function () {
        this.isHovered(true);
    };
    TreeListItemViewModel.prototype.mouseleave = function () {
        this.isHovered(false);
    };
    TreeListItemViewModel.prototype.selectedItems = function () {
        return this._treeListController.selectedItems && this._treeListController.selectedItems() || [];
    };
    return TreeListItemViewModel;
}(utils_1.Disposable));
exports.TreeListItemViewModel = TreeListItemViewModel;
var TreeListRootItemViewModel = (function (_super) {
    __extends(TreeListRootItemViewModel, _super);
    function TreeListRootItemViewModel(_options, path, onItemsVisibilityChanged, rtl) {
        if (path === void 0) { path = []; }
        if (onItemsVisibilityChanged === void 0) { onItemsVisibilityChanged = $.noop; }
        if (rtl === void 0) { rtl = false; }
        var _this = _super.call(this, _options, path, onItemsVisibilityChanged, rtl) || this;
        _this._options = _options;
        _this._resolver = new _codeResolver_1.CodeResolver();
        _this._selectedPathSubscription = null;
        _this.resolver.done(function () {
            onItemsVisibilityChanged();
        });
        _this._selectedPathSubscription = _options.selectedPath.subscribe(function (newPath) {
            _this._selectItem(!!_this.path ? newPath.substr(_this.path.length + 1) : newPath);
        });
        _this._selectItem(!!_this.path ? _this.path + '.' + _options.selectedPath() : _options.selectedPath());
        return _this;
    }
    TreeListRootItemViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._resolver.clear();
        if (this._selectedPathSubscription) {
            this._selectedPathSubscription.dispose();
            this._selectedPathSubscription = null;
        }
    };
    TreeListRootItemViewModel.prototype.walkOnTree = function (walkCallBack) {
        var _this = this;
        this._resolver.clear();
        this._visitNextNode(this, walkCallBack);
        if (this['_pageSize'] != -1)
            this._resolver.doneOnce(function () { return _this.items.valueHasMutated(); });
        return { stop: function () { return _this._resolver.clear(); } };
    };
    TreeListRootItemViewModel.prototype._visitNextNode = function (item, walkCallback) {
        var _this = this;
        if (walkCallback === void 0) { walkCallback = function (_item) { }; }
        if (item.data && !item.data.specifics)
            throw new Error('Specific should be set');
        if (item.level >= exports.maxSearchLevel())
            return;
        var processItemsFunc = null;
        if (item.items().length > 0) {
            processItemsFunc = function () { return item.items().forEach(function (node) {
                walkCallback(node);
                _this._visitNextNode(node, walkCallback);
            }); };
        }
        else if (!item.data || item.treeListController.hasItems(item.data)) {
            processItemsFunc = function () { return item._getItemsWithLock().done(function (result) {
                result.forEach(function (node) {
                    walkCallback(node);
                    _this._visitNextNode(node, walkCallback);
                });
            }); };
        }
        if (processItemsFunc)
            this._resolver.execute(processItemsFunc, 1);
    };
    TreeListRootItemViewModel.prototype._onItemsChanged = function () {
        if (this._options.expandRootItems)
            this.items().forEach(function (item) {
                item.collapsed(false);
            });
    };
    return TreeListRootItemViewModel;
}(TreeListItemViewModel));
exports.TreeListRootItemViewModel = TreeListRootItemViewModel;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _internal_1 = __webpack_require__(4);
exports.LoadChildItemsForCollapsedNodes = _internal_1.createGlobalModuleVariableFunc(true);


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _utils_1 = __webpack_require__(9);
var utils_1 = __webpack_require__(2);
var _localization_1 = __webpack_require__(8);
var templateUtils_1 = __webpack_require__(13);
var TreeListSearchOptions = (function () {
    function TreeListSearchOptions() {
        this.globalMatch = true;
        this.canUseRegex = false;
        this.caseSensitive = false;
        this.searchMode = _utils_1.SearchMode.contains;
        this.searchTimeout = 500;
        this.searchExpr = 'displayName';
        this.searchBoxTemplate = 'dx-treelist-searchbox';
    }
    return TreeListSearchOptions;
}());
exports.TreeListSearchOptions = TreeListSearchOptions;
var TreeListSearchViewModel = (function (_super) {
    __extends(TreeListSearchViewModel, _super);
    function TreeListSearchViewModel() {
        var _this = _super.call(this) || this;
        _this._processedNodes = [];
        _this._currentProcess = [];
        _this.searchTimeout = 500;
        _this._roots = [];
        _this.searchPlaceholder = function () { return _localization_1.searchPlaceholder(); };
        var _textToSearch = ko.observable('');
        var timeout = null;
        _this._disposables.push(_this.value = ko.computed({
            read: function () { return _textToSearch(); },
            write: function (newVal) {
                clearTimeout(timeout);
                timeout = setTimeout(function () {
                    _textToSearch(newVal);
                }, _this.searchTimeout);
            }
        }));
        _this._disposables.push(_this.value.subscribe(function (newValue) { return _this.valueChanged(newValue); }));
        return _this;
    }
    TreeListSearchViewModel.createController = function (element, controllers, modelType, templateName) {
        if (modelType === void 0) { modelType = TreeListSearchViewModel; }
        if (templateName === void 0) { templateName = 'dx-treelist-search-panel'; }
        var model = new modelType();
        var $element = $(element);
        var subscriptions = [];
        controllers.forEach(function (controller) {
            if (!controller)
                return;
            controller.root = controller.root || ko.observable();
            subscriptions.push(controller.root.subscribe(function (newRoot) {
                model.addController(newRoot);
                model.valueChanged('');
            }));
        });
        model._disposables.push({
            dispose: function () {
                controllers.forEach(function (controller) {
                    if (controller) {
                        controller.root(null);
                        delete controller.root;
                    }
                });
            }
        });
        var template = templateUtils_1.getTemplate(templateName);
        $element.addClass('dxrd-treelist-search-panel-container').addClass('dxd-border-primary');
        $element.children().remove();
        $element.append(template);
        ko.cleanNode($element.children()[0]);
        ko.applyBindings(model, $element.children()[0]);
        var disposeCallback = function () {
            subscriptions.forEach(function (x) { return x.dispose(); });
            model && model.dispose();
            ko.utils.domNodeDisposal.removeDisposeCallback(element, disposeCallback);
        };
        ko.utils.domNodeDisposal.addDisposeCallback(element, disposeCallback);
    };
    TreeListSearchViewModel.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.clearProcess();
    };
    TreeListSearchViewModel.prototype.clearProcess = function () {
        this._currentProcess.forEach(function (x) { return x.stop && x.stop(); });
        this._currentProcess = [];
        this._processedNodes = [];
    };
    TreeListSearchViewModel.prototype.valueChanged = function (newValue) {
        var _this = this;
        if (!newValue)
            this._processedNodes.forEach(function (x) { return x.setVisible(true); });
        this.clearProcess();
        this._roots.forEach(function (root) {
            root.treeListController.textToSearch(newValue);
            if (newValue) {
                _this._currentProcess.push(root.walkOnTree(function (node) {
                    var regexResult = _utils_1.findMatchesInString(node.data[root.treeListController.searchOptions.searchExpr], newValue, root.treeListController.searchOptions);
                    _this._processedNodes.push(node);
                    node.setVisible(!!regexResult);
                    regexResult && _this._collapseTreeBranch(node);
                }));
            }
            else {
                root.items.valueHasMutated();
            }
        });
    };
    TreeListSearchViewModel.prototype._collapseTreeBranch = function (node) {
        if (node.parent) {
            if (node.parent.collapsed())
                node.parent.toggleCollapsed();
            this._collapseTreeBranch(node.parent);
        }
    };
    TreeListSearchViewModel.prototype.addController = function (root) {
        this._roots = this._roots.filter(function (a) { return !a.isDisposing; });
        root.treeListController.textToSearch = root.treeListController.textToSearch || ko.observable('');
        if (this._roots.indexOf(root) === -1)
            this._roots.push(root);
        this.searchTimeout = Math.max.apply(Math, this._roots.map(function (x) { return x.treeListController.searchOptions.searchTimeout; })) || 500;
    };
    return TreeListSearchViewModel;
}(utils_1.Disposable));
exports.TreeListSearchViewModel = TreeListSearchViewModel;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var _localization_1 = __webpack_require__(8);
var FilterEditorAddOn = (function (_super) {
    __extends(FilterEditorAddOn, _super);
    function FilterEditorAddOn(criteria, popupService, action, propertyName, templateName) {
        var _this = _super.call(this) || this;
        _this._filterPlaceHolder = _localization_1.searchPlaceholder();
        _this.showPopup = function (_, element) {
            _this.dispose();
            _this._disposables.splice(0);
            _this._popupService.title('');
            _this.target.isSelected(true);
            _this._updateActions(_this.target);
            _this._popupService.target(element);
            setTimeout(function () {
                _this._popupService.visible(true);
            }, 10);
        };
        _this.popupContentTemplate = 'dx-filtereditor-popup-common';
        _this.filterString = ko.observable('');
        _this.isFiltered = ko.observable(false);
        _this.target = criteria;
        _this._action = action;
        _this.propertyName = propertyName;
        _this._popupService = popupService;
        _this.popupContentTemplate = templateName || _this.popupContentTemplate;
        return _this;
    }
    FilterEditorAddOn.prototype._updateActions = function (viewModel) {
        var _this = this;
        this._popupService.data(null);
        if (viewModel) {
            this._disposables.push(this._popupService.visible.subscribe(function (newVal) {
                _this.target.isSelected(newVal);
                _this.filterString('');
            }));
            this._popupService['viewModel'] = viewModel;
            var data = viewModel[this.propertyName];
            this.isFiltered(false);
            if (data && data.length > 10) {
                this.isFiltered(true);
                this._disposables.push(data = ko.pureComputed(function () {
                    if (!_this.filterString())
                        return viewModel[_this.propertyName];
                    return viewModel[_this.propertyName].filter(function (x) { return (x.displayText || x.name).toLocaleLowerCase().indexOf(_this.filterString().toLocaleLowerCase()) != -1; });
                }));
            }
            this._popupService.data({
                data: data,
                template: this.popupContentTemplate,
                click: function (data) {
                    viewModel[_this._action](data);
                    _this._popupService.visible(false);
                },
                isFiltered: this.isFiltered,
                filterString: this.filterString,
                searchPlaceholder: function () { return _localization_1.searchPlaceholder(); },
                height: this.isFiltered() || data instanceof Function ? 'calc(100% - 30px)' : '100%'
            });
        }
    };
    return FilterEditorAddOn;
}(utils_1.Disposable));
exports.FilterEditorAddOn = FilterEditorAddOn;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var property_1 = __webpack_require__(15);
var parameter_1 = __webpack_require__(29);
var value_1 = __webpack_require__(10);
var constant_1 = __webpack_require__(44);
var unary_1 = __webpack_require__(12);
var aggregate_1 = __webpack_require__(11);
var group_1 = __webpack_require__(14);
var CriteriaSurfaceValidatorState;
(function (CriteriaSurfaceValidatorState) {
    CriteriaSurfaceValidatorState[CriteriaSurfaceValidatorState["Left"] = 0] = "Left";
    CriteriaSurfaceValidatorState[CriteriaSurfaceValidatorState["Right"] = 1] = "Right";
    CriteriaSurfaceValidatorState[CriteriaSurfaceValidatorState["Unary"] = 2] = "Unary";
})(CriteriaSurfaceValidatorState = exports.CriteriaSurfaceValidatorState || (exports.CriteriaSurfaceValidatorState = {}));
var CriteriaSurfaceValidator = (function () {
    function CriteriaSurfaceValidator() {
    }
    CriteriaSurfaceValidator.prototype.customValidate = function (operator, from) {
        return false;
    };
    CriteriaSurfaceValidator.prototype.checkLeftPart = function (leftPart) {
        return leftPart instanceof property_1.OperandProperty || this.customValidate(leftPart, CriteriaSurfaceValidatorState.Left);
    };
    CriteriaSurfaceValidator.prototype._checkRightPart = function (criteriaOperator) {
        return criteriaOperator instanceof property_1.OperandProperty
            || criteriaOperator instanceof parameter_1.OperandParameter
            || criteriaOperator instanceof value_1.OperandValue
            || criteriaOperator instanceof constant_1.ConstantValue
            || (criteriaOperator instanceof unary_1.UnaryOperator && this._checkRightPart(criteriaOperator.operand))
            || this.customValidate(criteriaOperator, CriteriaSurfaceValidatorState.Right);
    };
    CriteriaSurfaceValidator.prototype.checkRightPart = function (rigthPart) {
        if (Array.isArray(rigthPart)) {
            for (var i = 0; i < rigthPart.length; i++) {
                if (!this._checkRightPart(rigthPart[i])) {
                    return false;
                }
            }
            return true;
        }
        else {
            return this._checkRightPart(rigthPart);
        }
    };
    CriteriaSurfaceValidator.prototype.aggregateIsValid = function (criteriaOperator) {
        return this.checkLeftPart(criteriaOperator.leftPart)
            && this.validateModel(criteriaOperator.condition)
            && (!!criteriaOperator.aggregatedExpression ?
                (criteriaOperator.aggregatedExpression instanceof property_1.OperandProperty ||
                    this.validateModel(criteriaOperator.aggregatedExpression))
                : true);
    };
    CriteriaSurfaceValidator.prototype.commonOperandValid = function (criteriaOperator) {
        return criteriaOperator.leftPart instanceof aggregate_1.AggregateOperand ?
            this.validateModel(criteriaOperator.leftPart) : this.checkLeftPart(criteriaOperator.leftPart)
            && this.checkRightPart(criteriaOperator.rightPart);
    };
    CriteriaSurfaceValidator.prototype.groupIsValid = function (criteriaOperator) {
        for (var i = 0; i < criteriaOperator.operands.length; i++) {
            if (!this.validateModel(criteriaOperator.operands[i])) {
                return false;
            }
        }
        return true;
    };
    CriteriaSurfaceValidator.prototype.unaryIsValid = function (criteriaOperator) {
        return criteriaOperator.operand instanceof property_1.OperandProperty || this.validateModel(criteriaOperator.operand) || this.customValidate(criteriaOperator.operand, CriteriaSurfaceValidatorState.Unary);
    };
    CriteriaSurfaceValidator.prototype.validateModel = function (criteriaOperator) {
        if (criteriaOperator instanceof aggregate_1.AggregateOperand) {
            return this.aggregateIsValid(criteriaOperator);
        }
        else if (criteriaOperator instanceof group_1.GroupOperator) {
            return this.groupIsValid(criteriaOperator);
        }
        else if (criteriaOperator instanceof unary_1.UnaryOperator) {
            return this.unaryIsValid(criteriaOperator);
        }
        else {
            return this.commonOperandValid(criteriaOperator);
        }
    };
    return CriteriaSurfaceValidator;
}());
exports.CriteriaSurfaceValidator = CriteriaSurfaceValidator;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _treelistController_1 = __webpack_require__(40);
var FilterEditorTreeListController = (function (_super) {
    __extends(FilterEditorTreeListController, _super);
    function FilterEditorTreeListController(selectedItem) {
        var _this = _super.call(this) || this;
        _this.selectedItem = selectedItem;
        return _this;
    }
    FilterEditorTreeListController.prototype.itemsFilter = function (item) {
        return true;
    };
    FilterEditorTreeListController.prototype.hasItems = function (item) {
        return item.specifics !== 'none' && (item.specifics !== 'List' && item.isList === true);
    };
    FilterEditorTreeListController.prototype.canSelect = function (value) {
        return !value.data.isList || (value.data.isList === true && value.data.specifics === 'List');
    };
    FilterEditorTreeListController.prototype.select = function (value) {
        if (this.canSelect(value)) {
            this.selectedItem(value.data);
            value.isSelected(true);
        }
    };
    return FilterEditorTreeListController;
}(_treelistController_1.TreeListController));
exports.FilterEditorTreeListController = FilterEditorTreeListController;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _codeCompletor_1 = __webpack_require__(46);
var helper_1 = __webpack_require__(82);
var function_1 = __webpack_require__(16);
var aggregate_1 = __webpack_require__(11);
var FilterEditorCodeCompletor = (function (_super) {
    __extends(FilterEditorCodeCompletor, _super);
    function FilterEditorCodeCompletor(options) {
        var _this = _super.call(this, options) || this;
        var helper = new helper_1.FilterEditorHelper();
        var functions = [];
        var aggregate = [];
        var operators = [];
        var groups = Object.keys(helper.filterEditorOperators);
        groups.forEach(function (groupName) {
            helper.filterEditorOperators[groupName].forEach(function (operator) {
                if (operator.insertVal) {
                    var name = operator.name, insertVal = operator.insertVal, paramCount = operator.paramCount;
                    if (operator.type === function_1.FunctionOperatorType && functions.filter(function (x) { return x.name === name; }).length === 0) {
                        functions.push({ name: name, insertVal: insertVal });
                    }
                    else if (operator.type === aggregate_1.Aggregate && aggregate.filter(function (x) { return x.name === name; }).length === 0) {
                        aggregate.push({ name: name, insertVal: insertVal });
                    }
                    else if (operator.type !== aggregate_1.Aggregate && operator.type !== function_1.FunctionOperatorType && operators.filter(function (x) { return x.name === name; }).length === 0) {
                        operators.push({ name: name, insertVal: insertVal, paramCount: paramCount });
                    }
                }
            });
        });
        _this.filterEditorAvailable = { operators: operators, aggregate: aggregate, functions: functions };
        return _this;
    }
    FilterEditorCodeCompletor.prototype.getFunctionsCompletions = function () {
        var functions = [];
        this.filterEditorAvailable.functions.forEach(function (funcItem) {
            functions.push(_codeCompletor_1.createFunctionCompletion({ text: funcItem.name, paramCount: funcItem.insertVal.split(',').length }, funcItem.insertVal, funcItem.insertVal));
        });
        return functions;
    };
    FilterEditorCodeCompletor.prototype.getAggregateCompletions = function () {
        var functions = [];
        this.filterEditorAvailable.aggregate.forEach(function (funcItem) {
            functions.push(_codeCompletor_1.createFunctionCompletion({ text: funcItem.name, paramCount: 0 }, funcItem.insertVal, funcItem.insertVal));
        });
        return functions;
    };
    FilterEditorCodeCompletor.prototype.getOperatorCompletions = function (prefix) {
        var operators = [];
        this.filterEditorAvailable.operators.forEach(function (operator) {
            operators.push((operator.insertVal.match(new RegExp('[\(][^\(\)]*[\)]', 'g'))) ?
                _codeCompletor_1.createFunctionCompletion({ text: operator.name, paramCount: operator.paramCount || operator.insertVal.split(',').length }, operator.insertVal, operator.insertVal) :
                { caption: operator.insertVal, snippet: prefix + operator.insertVal, meta: 'operator' });
        });
        return operators;
    };
    return FilterEditorCodeCompletor;
}(_codeCompletor_1.CodeCompletor));
exports.FilterEditorCodeCompletor = FilterEditorCodeCompletor;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var operandSurfaceBase_1 = __webpack_require__(41);
var OperandParameterSurface = (function (_super) {
    __extends(OperandParameterSurface, _super);
    function OperandParameterSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.changeParameter = function (item) {
            _this.model.parameterName = item.name;
            _this.parameterName(item.name);
            _this.helper.onChange();
        };
        _this.operatorClass = 'criteria-operator-item-parameter dxd-filter-editor-parameter-back-color dxd-filter-editor-text-color';
        _this.parameterName = ko.observable('');
        _this.templateName = 'dx-filtereditor-parameter';
        _this.specifics = parent.specifics;
        _this.parameterName(operator.parameterName);
        if (!_this.parameterName() && _this.items.length > 0) {
            _this.changeParameter(_this.items[0]);
        }
        _this.specifics && _this._disposables.push(_this.specifics.subscribe(function (newVal) {
            if (_this.items.filter(function (x) { return ko.unwrap(x.name) == _this.parameterName(); }).length == 0)
                _this.items.length > 0 ? _this.changeParameter(_this.items[0]) : _this.changeParameter({ name: '' });
        }));
        return _this;
    }
    Object.defineProperty(OperandParameterSurface.prototype, "items", {
        get: function () {
            return this.getConvertableParameters(this.specifics());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OperandParameterSurface.prototype, "displayType", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    return OperandParameterSurface;
}(operandSurfaceBase_1.OperandSurfaceBase));
exports.OperandParameterSurface = OperandParameterSurface;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var operandSurfaceBase_1 = __webpack_require__(41);
var unaryOperandSurface_1 = __webpack_require__(26);
var unary_1 = __webpack_require__(12);
var _utils_1 = __webpack_require__(22);
var _localization_1 = __webpack_require__(8);
var operandPropertySurface_1 = __webpack_require__(83);
var pathRequest_1 = __webpack_require__(27);
var localization_utils_1 = __webpack_require__(3);
var _valueEditorHelper_1 = __webpack_require__(45);
var data_source_1 = __webpack_require__(162);
var OperandValueSurface = (function (_super) {
    __extends(OperandValueSurface, _super);
    function OperandValueSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this._value = ko.observable(null);
        _this._updateDate = function (specifics) {
            if (specifics === 'date') {
                if (!(this._value() instanceof Date)) {
                    this._value(new Date(new Date().setHours(0, 0, 0, 0)));
                }
            }
            else {
                this._value('');
            }
        };
        _this.changeValue = function () {
            var parent = _this.getRealParent(_this.parent);
            var property = _this.getRealProperty(_this);
            var propertyLocation = _this.getPropertyName(parent, property);
            var model = parent.model.changeValue(_this.model, _this.reverse, propertyLocation);
            if (propertyLocation.index !== null) {
                parent[propertyLocation.name]()[propertyLocation.index].dispose();
                parent[propertyLocation.name].splice(propertyLocation.index, 1, parent.createChildSurface(model));
            }
            else {
                parent[propertyLocation.name]().dispose();
                parent[propertyLocation.name](parent.createChildSurface(model));
            }
        };
        _this.dataType = ko.observable('');
        _this.values = ko.observable([]);
        _this.isEditable = ko.observable(false);
        _this.templateName = 'dx-filtereditor-value';
        _this.getNumberEditorOptions = function () {
            return _valueEditorHelper_1.ValueEditorHelper.getNumberEditorOptions(_this.dataType(), _this.specifics(), { value: _this._value, onFocusOut: function () { _this.isEditable(false); } });
        };
        var dataSource = null;
        _this._disposables.push(_this.dataSource = ko.computed(function () {
            dataSource && dataSource.dispose();
            dataSource = new data_source_1.default({
                store: _this.values(),
                paginate: _this.values().length > 200,
                pageSize: 100
            });
            return dataSource;
        }));
        if (parent instanceof unaryOperandSurface_1.UnaryOperandSurface) {
            _this.specifics = parent.parent.specifics;
            _this.isUpdated = parent.parent.isUpdated;
            _this.dataType = parent.parent.dataType;
            if (parent.model.operatorType === unary_1.UnaryOperatorType.Minus) {
                _this.reverse = true;
            }
        }
        else {
            _this.specifics = parent.specifics;
            _this.isUpdated = parent.isUpdated;
            _this.dataType = parent.dataType;
        }
        if (operator.specifics && ko.isWritableObservable(_this.specifics))
            _this.specifics(operator.specifics);
        _this._disposables.push(_this.specifics.subscribe(function (newVal) {
            if (!_this.isUpdated || !_this.isUpdated()) {
                operator.specifics = newVal;
                _this._updateDate(newVal);
            }
        }));
        _this._value(operator.value);
        _this._disposables.push(_this._value.subscribe(function (newVal) {
            _this.model.value = newVal;
            _this.helper.onChange();
        }));
        if (_utils_1.isNullOrEmptyString(_this._value())) {
            _this._updateDate(_this.specifics());
        }
        _this._disposables.push(_this.value = ko.computed({
            read: function () {
                var value = _this._value();
                if (value instanceof Date) {
                    value = _localization_1.formatDate(value);
                }
                if (_this.items.length > 0) {
                    var result = _this.items.filter(function (item) { return String(item.value) === String(value); })[0];
                    if (result) {
                        return result.display;
                    }
                }
                if (_this.reverse) {
                    value = '-' + value;
                }
                return value !== null && value !== undefined && value !== '' ? value : _this.getDefaultValue();
            },
            write: function (newVal) {
                if (newVal > 0 && !_this.reverse || newVal < 0 && _this.reverse) {
                    _this._value(newVal);
                }
                else if (newVal > 0 && _this.reverse || newVal < 0 && !_this.reverse) {
                    _this.reverse = !_this.reverse;
                    _this._value(newVal < 0 ? ('' + newVal).substring(1) : newVal);
                    _this.changeValue();
                }
            }
        }));
        _this._disposables.push(ko.computed(function () {
            var itemsProvider = ko.unwrap(fieldListProvider);
            if (itemsProvider && itemsProvider.getValues && _this.parent.leftPart instanceof operandPropertySurface_1.OperandPropertySurface) {
                if (_this.parent.leftPart.propertyName()) {
                    itemsProvider.getValues(new pathRequest_1.PathRequest(ko.unwrap(_this.path) + '.' + _this.parent.leftPart.propertyName())).done(function (result) {
                        _this.values(result);
                    });
                }
            }
        }));
        operator.specifics = _this.specifics();
        return _this;
    }
    Object.defineProperty(OperandValueSurface.prototype, "items", {
        get: function () {
            return this.values();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OperandValueSurface.prototype, "displayType", {
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    OperandValueSurface.prototype.isDefaultDisplay = function () {
        return this.value() === this.getDefaultValue();
    };
    OperandValueSurface.prototype.getDefaultValue = function () {
        return OperandValueSurface._defaultValue ? OperandValueSurface._defaultValue :
            OperandValueSurface._defaultValue = localization_utils_1.getLocalization('Enter a value', 'StringId.FilterEmptyEnter');
    };
    return OperandValueSurface;
}(operandSurfaceBase_1.OperandSurfaceBase));
exports.OperandValueSurface = OperandValueSurface;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var criteriaOperatorSurface_1 = __webpack_require__(18);
var _helper_1 = __webpack_require__(55);
var aggregateOperandSurface_1 = __webpack_require__(56);
var property_1 = __webpack_require__(15);
var GroupOperandSurface = (function (_super) {
    __extends(GroupOperandSurface, _super);
    function GroupOperandSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.templateName = 'dx-filtereditor-group';
        _this.operatorClass = 'criteria-operator-item-group dxd-filter-editor-group-back-color dxd-filter-editor-text-color';
        _this.operands = ko.observableArray([]);
        _this.createItems = null;
        _this.createItems = [
            { name: 'Add group', value: true, localizationId: 'StringId.FilterMenuGroupAdd' },
            { name: 'Add condition', value: false, localizationId: 'StringId.FilterMenuConditionAdd' }
        ];
        _this.createItems.forEach(_helper_1.initDisplayText);
        _this.operands((operator.operands || []).map(function (operand) {
            return _this.createChildSurface(operand);
        }));
        _this.specifics = ko.observable('group');
        return _this;
    }
    GroupOperandSurface.prototype.change = function (type, surface) {
        if (surface) {
            var specifics = surface.specifics() || 'integer';
            var operators = this.helper.filterEditorOperators[specifics] || this.helper.filterEditorOperators._common;
            if (!type) {
                var item = operators.filter(function (item) {
                    return surface.operatorType() === item.value && surface.reverse === item.reverse && surface.model.enumType === item.type;
                })[0];
                if (item) {
                    type = item;
                }
                else {
                    type = operators[0];
                }
            }
            var newModel = this.model.change(type, surface.model, surface.leftPart instanceof aggregateOperandSurface_1.AggregateOperandSurface && surface.leftPart.leftPart.specifics() !== 'list');
            var position = this.operands().indexOf(surface);
            var operand = this.createChildSurface(newModel);
            this.operands()[position].dispose();
            this.operands.splice(position, 1, operand);
        }
        else {
            _super.prototype.change.call(this, type, surface);
        }
        this.helper.onChange();
    };
    GroupOperandSurface.prototype.remove = function (surface) {
        if (surface) {
            this.model.remove(surface.model);
            this.operands.remove(surface);
            surface.dispose();
        }
        else {
            this.parent.remove(this);
            this.dispose();
        }
        this.helper.onChange();
    };
    GroupOperandSurface.prototype.create = function (type) {
        var newModel = this.model.create(type.value, new property_1.OperandProperty());
        this.operands.push(this.createChildSurface(newModel));
        this.helper.onChange();
    };
    Object.defineProperty(GroupOperandSurface.prototype, "rightPart", {
        get: function () {
            return this.operands();
        },
        enumerable: true,
        configurable: true
    });
    GroupOperandSurface.prototype.dispose = function () {
        this.operands().forEach(function (x) { return x.dispose(); });
        _super.prototype.dispose.call(this);
    };
    return GroupOperandSurface;
}(criteriaOperatorSurface_1.CriteriaOperatorSurface));
exports.GroupOperandSurface = GroupOperandSurface;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var criteriaOperatorSurface_1 = __webpack_require__(18);
var BetweenOperandSurface = (function (_super) {
    __extends(BetweenOperandSurface, _super);
    function BetweenOperandSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.property = ko.observable(null);
        _this.end = ko.observable(null);
        _this.begin = ko.observable(null);
        _this.contentTemplateName = 'dx-filtereditor-between';
        _this.property(_this._createLeftPartProperty(operator.property));
        _this.begin(_this.createChildSurface(operator.begin));
        _this.end(_this.createChildSurface(operator.end));
        return _this;
    }
    Object.defineProperty(BetweenOperandSurface.prototype, "leftPart", {
        get: function () {
            return this.property && this.property();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BetweenOperandSurface.prototype, "rightPart", {
        get: function () {
            return [this.begin(), this.end()];
        },
        enumerable: true,
        configurable: true
    });
    BetweenOperandSurface.prototype.dispose = function () {
        this.property().dispose();
        this.begin().dispose();
        this.end().dispose();
        _super.prototype.dispose.call(this);
    };
    return BetweenOperandSurface;
}(criteriaOperatorSurface_1.CriteriaOperatorSurface));
exports.BetweenOperandSurface = BetweenOperandSurface;


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var criteriaOperatorSurface_1 = __webpack_require__(18);
var BinaryOperandSurface = (function (_super) {
    __extends(BinaryOperandSurface, _super);
    function BinaryOperandSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.contentTemplateName = 'dx-filtereditor-binary';
        _this.leftOperand = ko.observable(null);
        _this.rightOperand = ko.observable(null);
        _this.leftOperand(_this._createLeftPartProperty(operator.leftOperand));
        _this.rightOperand(_this.createChildSurface(operator.rightOperand));
        return _this;
    }
    Object.defineProperty(BinaryOperandSurface.prototype, "leftPart", {
        get: function () {
            return this.leftOperand();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BinaryOperandSurface.prototype, "rightPart", {
        get: function () {
            return this.rightOperand();
        },
        enumerable: true,
        configurable: true
    });
    BinaryOperandSurface.prototype.dispose = function () {
        this.leftOperand().dispose();
        this.rightOperand().dispose();
        _super.prototype.dispose.call(this);
    };
    return BinaryOperandSurface;
}(criteriaOperatorSurface_1.CriteriaOperatorSurface));
exports.BinaryOperandSurface = BinaryOperandSurface;


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var operandSurfaceBase_1 = __webpack_require__(41);
var function_1 = __webpack_require__(16);
var unaryOperandSurface_1 = __webpack_require__(26);
var localization_utils_1 = __webpack_require__(3);
var FunctionOperandSurface = (function (_super) {
    __extends(FunctionOperandSurface, _super);
    function FunctionOperandSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.canRemove = true;
        _this.contentTemplateName = 'dx-filtereditor-function';
        _this.operands = ko.observableArray([]);
        if (operator.operands.length === 0) {
            if (parent instanceof unaryOperandSurface_1.UnaryOperandSurface) {
                _this.specifics = parent.parent.specifics;
            }
            else {
                _this.specifics = parent.specifics;
            }
            _this.contentTemplateName = 'dx-filtereditor-function-lightweight';
            _this.canRemove = false;
        }
        else {
            _this.operands.push(_this._createLeftPartProperty(operator.operands[0]));
            for (var i = 1; i < operator.operands.length; i++) {
                _this.operands.push(_this.createChildSurface(operator.operands[i]));
            }
        }
        return _this;
    }
    Object.defineProperty(FunctionOperandSurface.prototype, "leftPart", {
        get: function () {
            return this.operands && this.operands()[0];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionOperandSurface.prototype, "rightPart", {
        get: function () {
            return this.operands && this.operands().filter(function (_, index) { return index !== 0; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionOperandSurface.prototype, "displayType", {
        get: function () {
            var _this = this;
            var item = this.items.filter(function (item) { return _this.operatorType() === item.value && _this.reverse === item.reverse && _this.model.enumType === item.type; })[0];
            if (item && item.name) {
                return item.displayText || localization_utils_1.getLocalization(item.name, item.localizationId);
            }
            else {
                if (!isNaN(parseInt(this.operatorType()))) {
                    return function_1.FunctionOperatorType[this.operatorType()];
                }
                else {
                    return this.operatorType() || '';
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    FunctionOperandSurface.prototype.dispose = function () {
        this.operands().forEach(function (x) { return x.dispose(); });
        _super.prototype.dispose.call(this);
    };
    return FunctionOperandSurface;
}(operandSurfaceBase_1.OperandSurfaceBase));
exports.FunctionOperandSurface = FunctionOperandSurface;


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var criteriaOperatorSurface_1 = __webpack_require__(18);
var value_1 = __webpack_require__(10);
var InOperandSurface = (function (_super) {
    __extends(InOperandSurface, _super);
    function InOperandSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.contentTemplateName = 'dx-filtereditor-in';
        _this.operands = ko.observableArray([]);
        _this.criteriaOperator = ko.observable(null);
        _this.criteriaOperator(_this._createLeftPartProperty(operator.criteriaOperator));
        _this.operands((operator.operands || []).map(function (operand) {
            return _this.createChildSurface(operand);
        }));
        _this.addValue = function () {
            var value = new value_1.OperandValue(null);
            _this.model.operands.push(value);
            _this.operands.push(_this.createChildSurface(value));
        };
        return _this;
    }
    Object.defineProperty(InOperandSurface.prototype, "leftPart", {
        get: function () {
            return this.criteriaOperator();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InOperandSurface.prototype, "rightPart", {
        get: function () {
            return this.operands();
        },
        enumerable: true,
        configurable: true
    });
    InOperandSurface.prototype.dispose = function () {
        this.criteriaOperator().dispose();
        this.operands().forEach(function (x) { return x.dispose(); });
        _super.prototype.dispose.call(this);
    };
    return InOperandSurface;
}(criteriaOperatorSurface_1.CriteriaOperatorSurface));
exports.InOperandSurface = InOperandSurface;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.formatStringStandardPatterns = {
    'DateTime': { type: 'System.DateTime', value: new Date(Date.now()), patterns: [] },
    'Number': { type: 'System.Int32', value: '123456789', patterns: ['#.00', '#,#', '0.E+0.0', '0.e+0.0', 'n', 'n1', 'n2', 'e', 'e1', 'f', 'f1'] },
    'Percent': { type: 'System.Int32', value: '100', patterns: ['0.00%', '0%'] },
    'Currency': { type: 'System.Int32', value: '100', patterns: ['$0.00', '$0', 'c', 'c1', 'c2'] },
    'Special': { type: 'System.Int32', value: '123456789', patterns: ['(###) ### - ####', '### - ## - ####'] },
    'General': { type: 'System.String', value: '', patterns: ['General format have no specific number format'] }
};


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DataMemberTreeListController = (function () {
    function DataMemberTreeListController() {
        this.selectedItem = null;
        this.suppressActions = true;
    }
    DataMemberTreeListController.prototype.dispose = function () {
        this.selectedItem = null;
    };
    DataMemberTreeListController.prototype.itemsFilter = function (item) {
        return item.specifics !== 'parameters' && (item.specifics === 'List' || item.specifics === 'ListSource' || item.isList === true || item.specifics === 'none');
    };
    DataMemberTreeListController.prototype.hasItems = function (item) {
        return item.specifics !== 'none';
    };
    DataMemberTreeListController.prototype.canSelect = function (value) {
        return (this.hasItems(value.data) && !!value.path && (value.data.specifics === 'List' || value.data.specifics === 'ListSource')) || value.data.specifics === 'none';
    };
    DataMemberTreeListController.prototype.select = function (value) {
        if (this.canSelect(value)) {
            this.selectedItem && this.selectedItem.isSelected(false);
            this.selectedItem = value;
            value.isSelected(true);
        }
    };
    return DataMemberTreeListController;
}());
exports.DataMemberTreeListController = DataMemberTreeListController;


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var editor_1 = __webpack_require__(34);
var _internal_1 = __webpack_require__(19);
var _valueEditorHelper_1 = __webpack_require__(45);
var RequiredNullableEditor = (function (_super) {
    __extends(RequiredNullableEditor, _super);
    function RequiredNullableEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RequiredNullableEditor.prototype._getEditorValidationRules = function () {
        return (_super.prototype._getEditorValidationRules.call(this) || []).concat(this.editorOptions && this.editorOptions.showClearButton && ko.unwrap(this.editorOptions.showClearButton) ? [] : _internal_1.requiredValidationRules);
    };
    return RequiredNullableEditor;
}(editor_1.Editor));
exports.RequiredNullableEditor = RequiredNullableEditor;
function createNumericEditor(dotNetTypeFullName, specifics) {
    var DynamicNumberEditor = (function (_super) {
        __extends(DynamicNumberEditor, _super);
        function DynamicNumberEditor(info, level, parentDisabled, textToSearch) {
            return _super.call(this, info, level, parentDisabled, textToSearch) || this;
        }
        DynamicNumberEditor.prototype.getOptions = function (templateOptions) {
            var options = _super.prototype.getOptions.call(this, templateOptions);
            return _valueEditorHelper_1.ValueEditorHelper.getNumberEditorOptions(dotNetTypeFullName, specifics, options);
        };
        return DynamicNumberEditor;
    }(RequiredNullableEditor));
    return {
        header: 'dx-number-editor',
        editorType: DynamicNumberEditor
    };
}
exports.createNumericEditor = createNumericEditor;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _localization_1 = __webpack_require__(8);
var utils_1 = __webpack_require__(2);
var TextAlignmentModel = (function (_super) {
    __extends(TextAlignmentModel, _super);
    function TextAlignmentModel(object) {
        var _this = _super.call(this) || this;
        _this.top = ko.observable(false);
        _this.middle = ko.observable(false);
        _this.bottom = ko.observable(false);
        _this.left = ko.observable(false);
        _this.right = ko.observable(false);
        _this.center = ko.observable(false);
        _this.justify = ko.observable(false);
        _this.horizontalString = ko.observable(_localization_1.getLocalization('Horizontal', 'ASPxReportsStringId.ReportDesigner_TextAlignment_Horizontal'));
        _this.verticalString = ko.observable(_localization_1.getLocalization('Vertical', 'ASPxReportsStringId.ReportDesigner_TextAlignment_Vertical'));
        _this.disabled = object.disabled || ko.observable(false);
        _this.value = object.value;
        _this.updateModel(object.value());
        _this._disposables.push(object.value.subscribe(function (newVal) {
            _this.updateModel(newVal);
        }));
        return _this;
    }
    TextAlignmentModel.prototype._resetHorizontalValues = function () {
        this.left(false), this.right(false), this.center(false), this.justify(false);
    };
    TextAlignmentModel.prototype._resetVerticalValues = function () {
        this.top(false), this.middle(false), this.bottom(false);
    };
    TextAlignmentModel.prototype.setValue = function (name, type) {
        if (this.disabled() || this[name]())
            return;
        if (type == 'Horizontal')
            this._resetHorizontalValues();
        else
            this._resetVerticalValues();
        this[name](true);
        this.updateValue();
    };
    TextAlignmentModel.prototype.updateModel = function (value) {
        var val = value || 'TopLeft';
        this.top(val.indexOf('Top') !== -1);
        this.middle(val.indexOf('Middle') !== -1);
        this.bottom(val.indexOf('Bottom') !== -1);
        this.left(val.indexOf('Left') !== -1);
        this.right(val.indexOf('Right') !== -1);
        this.center(val.indexOf('Center') !== -1);
        this.justify(val.indexOf('Justify') !== -1);
    };
    TextAlignmentModel.prototype.updateValue = function () {
        var result = [];
        this.top() ? result.push('Top') : null;
        this.middle() ? result.push('Middle') : null;
        this.bottom() ? result.push('Bottom') : null;
        this.left() ? result.push('Left') : null;
        this.right() ? result.push('Right') : null;
        this.center() ? result.push('Center') : null;
        this.justify() ? result.push('Justify') : null;
        this.value(result.join(''));
    };
    return TextAlignmentModel;
}(utils_1.Disposable));
exports.TextAlignmentModel = TextAlignmentModel;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var editor_1 = __webpack_require__(34);
var _internal_1 = __webpack_require__(19);
var GuidEditor = (function (_super) {
    __extends(GuidEditor, _super);
    function GuidEditor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GuidEditor.prototype._getEditorValidationRules = function () {
        return (_super.prototype._getEditorValidationRules.call(this) || []).concat(_internal_1.guidValidationRules).concat((this.editorOptions && this.editorOptions.isNullable) ? [] : _internal_1.guidRequiredValidationRules);
    };
    return GuidEditor;
}(editor_1.Editor));
exports.GuidEditor = GuidEditor;


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _model_1 = __webpack_require__(81);
var propertygrid_1 = __webpack_require__(21);
var metadata_1 = __webpack_require__(141);
var FontEditor = (function (_super) {
    __extends(FontEditor, _super);
    function FontEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    FontEditor.prototype.createObjectProperties = function () {
        var model = new _model_1.FontModel(this.value);
        this._disposables.push(model);
        return new propertygrid_1.ObjectProperties(ko.observable(model), { editors: metadata_1.fontInfo }, this.level + 1, this.disabled, undefined, this.textToSearch);
    };
    return FontEditor;
}(propertygrid_1.PropertyGridEditor));
exports.FontEditor = FontEditor;


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorsInfo_1 = __webpack_require__(17);
var _fonts_1 = __webpack_require__(79);
var _model_1 = __webpack_require__(81);
exports.fontName = {
    propertyName: 'family', displayName: 'Font Name', localizationId: 'AnalyticsCoreStringId.FormatFontName',
    editor: editorsInfo_1.editorTemplates.getEditor('combobox'), values: _fonts_1.availableFonts
};
exports.fontSize = {
    propertyName: 'size', displayName: 'Size', localizationId: 'AnalyticsCoreStringId.Font.Size', editor: editorsInfo_1.editorTemplates.getEditor('numeric')
};
exports.fontSizeUnit = {
    propertyName: 'unit', displayName: 'Unit', localizationId: 'AnalyticsCoreStringId.Font.Unit', editor: editorsInfo_1.editorTemplates.getEditor('combobox'),
    valuesArray: _model_1.availableUnits
};
exports.fontInfo = [
    exports.fontName,
    exports.fontSize,
    exports.fontSizeUnit,
    { propertyName: 'modificators', editor: editorsInfo_1.editorTemplates.getEditor('modificators') },
];


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _codeCompletor_1 = __webpack_require__(46);
var criteriaOperator_1 = __webpack_require__(6);
var utils_1 = __webpack_require__(2);
var localization_utils_1 = __webpack_require__(3);
var _localizationStringIds_1 = __webpack_require__(58);
var _utils_1 = __webpack_require__(22);
var _expressioneditor_1 = __webpack_require__(37);
var _displayNameProvider_1 = __webpack_require__(62);
var _treeListControllers_1 = __webpack_require__(54);
var _tools_1 = __webpack_require__(120);
var _ace_available_1 = __webpack_require__(53);
function createExpressionEditorFieldListProvider(originalProvider, fieldName) {
    return ko.computed(function () {
        var provider = ko.unwrap(originalProvider);
        var unwrappedFieldName = ko.unwrap(fieldName);
        return !unwrappedFieldName ? provider : {
            getItems: function (path) {
                var $deferred = $.Deferred();
                provider.getItems(path)
                    .done(function (data) {
                    $deferred.resolve(data.filter(function (field) { return field.name !== unwrappedFieldName; }));
                })
                    .fail(function () { return $deferred.reject(); });
                return $deferred.promise();
            },
            getValues: function (path) {
                return provider.getValues(path);
            }
        };
    });
}
var ExpressionEditor = (function (_super) {
    __extends(ExpressionEditor, _super);
    function ExpressionEditor(options, fieldListProvider, disabled, rtl, _displayNameProvider, popupVisible) {
        if (disabled === void 0) { disabled = ko.observable(false); }
        if (rtl === void 0) { rtl = false; }
        if (popupVisible === void 0) { popupVisible = ko.observable(false); }
        var _this = _super.call(this) || this;
        _this.options = options;
        _this._displayNameProvider = _displayNameProvider;
        _this.popupVisible = popupVisible;
        _this._updateTextAreaValue = function (item, element) {
            var textArea = _this._getTextArea(element), textAreaValue = _this.textAreaValue().toString(), cursorPosition = textArea && textArea.selectionStart || textAreaValue.length, newAddedText = textAreaValue[cursorPosition - 1] == ' ' ? (item.val || item.text || item) + ' ' : ' ' + (item.val || item.text || item) + ' ';
            _this.textAreaValue([textAreaValue.slice(0, cursorPosition), newAddedText, textAreaValue.slice(cursorPosition)].join(''));
            if (textArea && textArea.setSelectionRange) {
                textArea.focus();
                var posisition = cursorPosition + (newAddedText.indexOf('(') !== -1 ? newAddedText.indexOf('(') + 1 : newAddedText.length);
                textArea.setSelectionRange(posisition, posisition);
            }
        };
        _this._updateAceValue = function (item, element) {
            var editor = _this.editorContainer(), _a = editor.getCursorPosition(), row = _a.row, col = _a.column, insertion = (item.val || item.text || item) + ' ';
            if (col && editor.getSession().getValue().split('\n')[row][col - 1] !== ' ')
                insertion = ' ' + insertion;
            editor.insert(insertion);
            editor.focus();
            _utils_1.setCursorInFunctionParameter(item.paramCount, editor, insertion);
        };
        _this._updateValue = function (item, element) {
            _this.aceAvailable ? _this._updateAceValue(item, $(element)) : _this._updateTextAreaValue(item, $(element));
        };
        _this.patchFieldName = function (fieldName) { return fieldName; };
        _this._parametersPutSelectionHandler = function (selectedItemPath, element) {
            var pathParts = selectedItemPath.split('.');
            var newAddedString = '?' + _this.patchFieldName(pathParts[pathParts.length - 1]);
            _this._updateValue(newAddedString, element);
        };
        _this._fieldsPutSelectionHandler = function (selectedItemPath, element) {
            var path = _this.koOptions.peek().path.peek();
            var proposedFieldName = selectedItemPath.substring(path.length + 1);
            var newAddedString = '[' + _this.patchFieldName(proposedFieldName) + ']';
            if (_this._displayNameProvider) {
                _this.displayExpressionConverter.toDisplayExpression(path, newAddedString)
                    .done(function (result) { _this._updateValue(result, element); })
                    .fail(function () { _this._updateValue(newAddedString, element); });
            }
            else {
                _this._updateValue(newAddedString, element);
            }
        };
        _this.aceAvailable = _ace_available_1.aceAvailable();
        _this.title = function () { return localization_utils_1.getLocalization('Expression Editor', 'AnalyticsCoreStringId.ExpressionEditor_ExpressionCaption'); };
        _this.value = ko.observable('');
        _this.textAreaValue = ko.observable('');
        _this.languageHelper = {
            getLanguageMode: function () { return 'ace/mode/criteria'; },
            createCompleters: function (editor, bindingContext, viewModel) {
                var path = ko.computed(function () { return viewModel.koOptions() && ko.unwrap(viewModel.koOptions().path) || ''; }), functions = ko.computed(function () { return viewModel.koOptions() && ko.unwrap(viewModel.koOptions().functions) || []; }), completor = new _codeCompletor_1.CodeCompletor({
                    editor: editor,
                    bindingContext: bindingContext,
                    fieldListProvider: viewModel.fieldListProvider,
                    path: path,
                    functions: functions,
                    rootItems: viewModel.options.rootItems,
                    getRealExpression: function (path, member) {
                        return _this.displayExpressionConverter && _this.displayExpressionConverter.toRealExpression(path, member) || $.Deferred().resolve(member).promise();
                    }
                });
                [path, functions].forEach(function (x) { return completor._disposables.push(x); });
                return [completor];
            }
        };
        _this.aceOptions = {
            showLineNumbers: false,
            showPrintMargin: false,
            enableBasicAutocompletion: true,
            enableLiveAutocompletion: true,
            showFoldWidgets: false,
            highlightActiveLine: false
        };
        _this.additionalOptions = {
            onChange: function (session) {
                var value = session.getValue();
                try {
                    var operator = criteriaOperator_1.CriteriaOperator.parse(value);
                    if (_this.koOptions().validate) {
                        _this.isValid(_this.koOptions().validate(operator));
                    }
                    session.clearAnnotations();
                }
                catch (exception) {
                    var row = exception.hash && exception.hash.line || 0;
                    var column = 0;
                    var lines = exception.message.split('\n');
                    var text = lines[1] + '\n' + lines[2];
                    session.setAnnotations([{ row: row, column: column, text: text, 'type': 'error' }]);
                }
            }
        };
        _this.callbacks = {
            focus: $.noop
        };
        _this.koOptions = ko.observable(null);
        _this.editorContainer = ko.observable();
        _this.isValid = ko.observable(true);
        _this.buttonItems = [];
        _this.rtl = false;
        _this.modelValueValid = ko.computed(function () {
            var options = _this.koOptions();
            return options && ko.isObservable(options.isValid) ? options.isValid() : true;
        });
        _this.modelValueWarning = ko.computed(function () {
            var options = _this.koOptions();
            return options && ko.unwrap(options.warningMessage) || '';
        });
        _this.getPopupContainer = _utils_1.getParentContainer;
        _this.koOptions(options);
        _this.patchFieldName = function (fieldName) {
            return _this.koOptions().patchFieldName && _this.koOptions().patchFieldName(fieldName) || fieldName;
        };
        _this.theme = _this.koOptions() && _this.koOptions().theme;
        _this._disposables.push(_this.value = ko.computed({
            read: function () {
                var value = _this.koOptions() && ko.unwrap(_this.koOptions().value);
                return (value && value.toString()) || '';
            },
            write: function (newVal) { return _this.koOptions() && _this.koOptions().value(newVal); }
        }));
        if (_displayNameProvider && options.path) {
            _this.displayExpressionConverter = new _displayNameProvider_1.DisplayExpressionConverter(_displayNameProvider);
            var pathFunc = ko.pureComputed(function () { return _this.koOptions() && _this.koOptions().path && _this.koOptions().path(); });
            _this.displayValue = _expressioneditor_1.wrapExpressionValue(pathFunc, _this.value, _this.displayExpressionConverter, _this._disposables);
            _this._disposables.push(pathFunc);
        }
        else {
            _this.displayValue = _this.value;
        }
        _this.rtl = rtl;
        _this.validate = function (value, sender) {
            try {
                criteriaOperator_1.CriteriaOperator.parse(value);
                _this.isValid(true);
                return true;
            }
            catch (exception) {
                var result = criteriaOperator_1.CriteriaOperator.getNotValidRange(value, exception.message);
                var textArea = _this._getTextArea(sender && sender.element);
                textArea && textArea.setSelectionRange(result.start, result.end);
                _this.isValid(false);
            }
        };
        _this._disposables.push(_this.popupVisible.subscribe(function (newVal) {
            if (!newVal) {
                _this.editorContainer(null);
                return;
            }
            _this.initDisplayValue();
        }));
        var fieldName = ko.computed(function () { return _this.koOptions() && _this.koOptions().fieldName && _this.koOptions().fieldName(); });
        _this._disposables.push(_this.fieldListProvider = createExpressionEditorFieldListProvider(fieldListProvider, fieldName));
        _this.disabled = disabled;
        var self = _this;
        _this.save = function (sender) {
            var value = _this.getValue();
            if (_this.validate(value, sender)) {
                _this.displayValue(value);
                _this.popupVisible(false);
            }
        };
        var selectedItem = null;
        var selectionHandler = function (item) {
            var selectedItemType = ko.unwrap(item.data['type']);
            if (selectedItem)
                selectedItem.isSelected(false);
            selectedItem = item;
            item.isSelected(true);
        };
        var fieldsTreeListOptions = ko.pureComputed(function () {
            return _this.koOptions() && _this.koOptions().path && _this.koOptions().path() && _this._createToolsOptions(_this.koOptions().path(), _this.fieldListProvider(), new _treeListControllers_1.ExpressionEditorTreeListController(fieldName, function (data, element) { _this._fieldsPutSelectionHandler(data.path, element); }, selectionHandler));
        });
        _this.parametersTreeListController = new _treeListControllers_1.ExpressionEditorParametersTreeListController(_this._parametersCustomFilter, _this._parametersPutSelectionHandler, selectionHandler);
        var parametersTreeListOptions = ko.pureComputed(function () {
            return _this._createToolsOptions('', _this.fieldListProvider(), _this.parametersTreeListController);
        });
        _this._disposables.push(_this.tools = new _tools_1.Tools(_this._updateValue, parametersTreeListOptions, _this.koOptions, fieldsTreeListOptions));
        _this._disposables.push(_this.modelValueValid, _this.modelValueWarning);
        _this._createMainPopupButtons();
        [fieldName, fieldsTreeListOptions, parametersTreeListOptions].forEach(function (x) { return _this._disposables.push(x); });
        return _this;
    }
    ExpressionEditor.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.koOptions(null);
        this.editorContainer(null);
        this.options = null;
    };
    ExpressionEditor.prototype._createMainPopupButtons = function () {
        var self = this;
        this.buttonItems = [
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: localization_utils_1.getLocalization('Save', _localizationStringIds_1.StringId.DataAccessBtnOK), onClick: function (sender) { self.save(sender); } } },
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: localization_utils_1.getLocalization('Cancel', _localizationStringIds_1.StringId.DataAccessBtnCancel), onClick: function () { self.popupVisible(false); } } }
        ];
    };
    ExpressionEditor.prototype._getTextArea = function (element) {
        var $el = $(element);
        return ($el && $el.parents('.dx-expressioneditor').find(':input')[0]);
    };
    ExpressionEditor.prototype._createToolsOptions = function (path, fieldListProvider, treeListController) {
        return {
            itemsProvider: fieldListProvider,
            selectedPath: ko.observable(''),
            path: path,
            templateName: 'dx-ee-treelist-item',
            treeListController: treeListController,
            rtl: this.rtl
        };
    };
    ExpressionEditor.prototype._parametersCustomFilter = function (item) {
        return item.specifics === 'parameters' || item.specifics === _expressioneditor_1.RangeSpecific || !_utils_1.isList(item);
    };
    ExpressionEditor.prototype.onShown = function () {
        this.callbacks.focus();
    };
    ExpressionEditor.prototype.onHiding = function (e) {
        var options = this.koOptions();
        return options && options.onHiding && options.onHiding(e);
    };
    ExpressionEditor.prototype.onShowing = function (e) {
        var options = this.koOptions();
        return options && options.onShowing && options.onShowing(e);
    };
    ExpressionEditor.prototype.initDisplayValue = function () {
        this.tools.resetCategoriesSelection && this.tools.resetCategoriesSelection();
        this.textAreaValue(this.displayValue());
        if (!this.aceAvailable) {
            this.validate(this.value());
        }
        else {
            var editor = this.editorContainer();
            var session = editor && editor.getSession();
            session && session.setValue(this.textAreaValue());
        }
    };
    ExpressionEditor.prototype.getValue = function () {
        var value = this.textAreaValue();
        if (this.aceAvailable) {
            var editor = this.editorContainer();
            var session = editor && editor.getSession();
            value = session && session.getValue();
        }
        return value;
    };
    return ExpressionEditor;
}(utils_1.Disposable));
exports.ExpressionEditor = ExpressionEditor;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var _patterns_1 = __webpack_require__(135);
var localization_utils_1 = __webpack_require__(3);
var _localizationStringIds_1 = __webpack_require__(58);
var _popupService_1 = __webpack_require__(42);
var scroll_view_1 = __webpack_require__(80);
var FormatStringEditor = (function (_super) {
    __extends(FormatStringEditor, _super);
    function FormatStringEditor(value, disabled, defaultPatterns, customPatterns, actions, rtl, popupContainer) {
        var _this = _super.call(this) || this;
        _this._isDisabled = ko.observable(false);
        _this._timeout = null;
        _this.currentType = ko.observable();
        _this.patternList = ko.observableArray([]);
        _this.canAddCustomFormat = ko.observable(false);
        _this.formatPrefix = ko.observable('');
        _this.formatSuffix = ko.observable('');
        _this.previewString = ko.observable('Preview string');
        _this.formatResult = ko.observable('');
        _this.selectedFormats = ko.observable([]);
        _this.selectedTypes = ko.observable([]);
        _this.popupVisible = ko.observable(false);
        _this.localizationIdMap = {
            'title': { text: 'FormatString Editor', localizationId: 'AnalyticsCoreStringId.FormatStringEditor_Title' },
            'category': { text: 'Category', localizationId: 'AnalyticsCoreStringId.Category' },
            'preview': { text: 'Preview', localizationId: 'AnalyticsCoreStringId.TooltipButtons_Preview' },
            'types': { text: 'Types', localizationId: 'AnalyticsCoreStringId.FormatStringEditor_Types' },
            'add': { text: 'Add', localizationId: 'DataAccessUIStringId.Button_Add' },
            'prefix': { text: 'Prefix', localizationId: 'AnalyticsCoreStringId.Prefix' },
            'suffix': { text: 'Suffix', localizationId: 'AnalyticsCoreStringId.FormatStringEditor_Suffix' }
        };
        _this.option('value', value);
        _this.option('disabled', disabled || false);
        _this.option('rtl', rtl || false);
        _this.option('popupContainer', popupContainer || '.dx-designer-viewport');
        var self = _this;
        _this.popupService = new _popupService_1.PopupService();
        _this._standardPatternSource = defaultPatterns || _patterns_1.formatStringStandardPatterns;
        _this._customPatternSource = customPatterns || {};
        _this.types = _this._convertArray(Object.keys(_this._standardPatternSource));
        _this._disposables.push(_this.currentType.subscribe(function (newVal) {
            if (self.isGeneralType) {
                self.formatResult('');
                self.selectedFormats([]);
            }
            else {
                self._updateFormatList();
            }
        }));
        _this.currentType(_this.types[0].name);
        _this._disposables.push(_this.formatResult.subscribe(function (newVal) {
            self._updateCanAddCustomFormat(newVal);
            self._updatePreview();
        }));
        _this._disposables.push(_this.formatPrefix.subscribe(function (newVal) {
            self._updatePreview();
        }));
        _this._disposables.push(_this.formatSuffix.subscribe(function (newVal) {
            self._updatePreview();
        }));
        _this._disposables.push(_this.popupVisible.subscribe(function (newVal) {
            if (!newVal)
                return;
            self._initEditor(value());
            self.selectedTypes(self.types.filter(function (item) { return item.name === self.currentType(); }));
        }));
        _this._createMainPopupButtons();
        actions && actions.updatePreview && (_this.updatePreview = actions.updatePreview);
        _this.setType = function (e) {
            self.currentType(e.itemData.name);
            self._updateSelection();
        };
        _this.setFormat = function (e) {
            self.formatResult(e.itemData.name);
        };
        _this.addCustomFormat = function () {
            if (self.formatResult() && self.canAddCustomFormat()) {
                self.customPatterns.push(self.formatResult());
                self._updateFormatList();
                self._scrollToBottom();
                actions && actions.saveCustomPattern(self.currentType(), self.formatResult());
                self._updateSelection(self.patternList().length - 1);
                self.canAddCustomFormat(false);
            }
        };
        _this.removeCustomFormat = function (data) {
            var currentSelection = self.selectedFormats()[0];
            var patternList = self.patternList();
            var removedItemIndex = patternList.map(function (item) { return item.name; }).indexOf(data.name);
            self.customPatterns.splice(self.customPatterns.indexOf(data.name), 1);
            self._updateFormatList();
            actions && actions.removeCustomPattern(self.currentType(), data.name);
            if (currentSelection.name === data.name) {
                self._updateSelection(removedItemIndex === (patternList.length - 1) ? (self.patternList().length - 1) : removedItemIndex);
            }
            else {
                self.selectedFormats(self.patternList().filter(function (item) { return item.name === currentSelection.name; }));
            }
        };
        return _this;
    }
    FormatStringEditor.prototype.okAction = function () {
        var result = this.isGeneralType ? this._getGeneralPreview('{0}') : this._wrapFormat();
        this.option('value', result);
        this.popupVisible(false);
    };
    FormatStringEditor.prototype._createMainPopupButtons = function () {
        var self = this;
        this.buttonItems = [
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: localization_utils_1.getLocalization('OK', _localizationStringIds_1.StringId.DataAccessBtnOK), disabled: this._isDisabled, onClick: function () { self.okAction(); } } },
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: localization_utils_1.getLocalization('Cancel', _localizationStringIds_1.StringId.DataAccessBtnCancel), onClick: function () { self.popupVisible(false); } } }
        ];
    };
    FormatStringEditor.prototype._convertArray = function (array, canRemove) {
        return array.map(function (item) { return { name: item, displayName: localization_utils_1.getLocalization(item), canRemove: !!canRemove }; });
    };
    FormatStringEditor.prototype._scrollToBottom = function () {
        var $scrollView = $('.dx-format-string .dx-format-string-formats').find('.dx-scrollview').filter(':visible');
        var scrollViewInstance = scroll_view_1.default.getInstance($scrollView.get(0));
        scrollViewInstance && scrollViewInstance['scrollTo'] && scrollViewInstance['scrollTo'](scrollViewInstance['scrollHeight']());
    };
    FormatStringEditor.prototype._updateFormatList = function () {
        this.selectedFormats([]);
        var currentTypeInfo = this._standardPatternSource[this.currentType()];
        this.patternList(this._convertArray(currentTypeInfo.patterns).concat(this._convertArray(this.customPatterns, true)));
    };
    FormatStringEditor.prototype._updateSelection = function (selectedItemIndex) {
        var currectFormat = this.patternList()[selectedItemIndex || 0];
        if (currectFormat) {
            this.selectedFormats([currectFormat]);
            this.formatResult(currectFormat.name);
        }
    };
    FormatStringEditor.prototype._setPreviewString = function (previewString) {
        this.previewString(previewString);
        this._isDisabled(false);
    };
    FormatStringEditor.prototype._setErrorMessage = function (setDisabled) {
        this.previewString(localization_utils_1.getLocalization('Preview string is not available', 'AnalyticsCoreStringId.FormatStringEditor_PreviewNotAvailable_Text'));
        this._isDisabled(setDisabled);
    };
    FormatStringEditor.prototype._updatePreview = function () {
        var _this = this;
        this._timeout && clearTimeout(this._timeout);
        this._timeout = setTimeout(function () {
            if (_this.isGeneralType) {
                _this.previewString(_this._getGeneralPreview(undefined));
                return;
            }
            var category = _this._standardPatternSource[_this.currentType()];
            var updatedPreviewPromise = _this.updatePreview(category.value, category.type, _this._wrapFormat());
            _this._lastUpdatePreviewPromise = updatedPreviewPromise;
            updatedPreviewPromise
                .done(function (previewResult) {
                if (_this._lastUpdatePreviewPromise === updatedPreviewPromise) {
                    if (previewResult.Result)
                        _this._setPreviewString(previewResult.Result);
                    else
                        _this._setErrorMessage(previewResult.IsError);
                }
            }).fail(function (error) {
                if (_this._lastUpdatePreviewPromise === updatedPreviewPromise)
                    _this.previewString(localization_utils_1.getLocalization('Preview string is not available', 'AnalyticsCoreStringId.FormatStringEditor_PreviewNotAvailable_Text'));
            });
        }, 100);
    };
    FormatStringEditor.prototype._getGeneralPreview = function (value) {
        if (value === void 0) { value = '###'; }
        return this.formatPrefix() + value + this.formatSuffix();
    };
    FormatStringEditor.prototype._wrapFormat = function (format) {
        var pattern = format || this.formatResult();
        if (pattern && pattern.indexOf('{0:') !== -1) {
            return pattern;
        }
        return pattern ? '{0:' + pattern + '}' : '';
    };
    FormatStringEditor.prototype._updateCanAddCustomFormat = function (newFormat) {
        var _this = this;
        if (!newFormat) {
            this.canAddCustomFormat(false);
            return;
        }
        var canAddCustomFormat = true;
        Object.keys(this._standardPatternSource).some(function (name) {
            canAddCustomFormat = _this._standardPatternSource[name].patterns.indexOf(newFormat) === -1;
            return !canAddCustomFormat;
        });
        this.canAddCustomFormat(canAddCustomFormat ? this.customPatterns.indexOf(newFormat) === -1 : canAddCustomFormat);
    };
    FormatStringEditor.prototype._initEditor = function (formatStringValue) {
        var _this = this;
        if (!formatStringValue) {
            this.setType({ itemData: this.types[0] });
            return;
        }
        if (formatStringValue.indexOf('{0}') !== -1) {
            this.currentType('General');
            this.formatPrefix(formatStringValue.substring(0, formatStringValue.indexOf('{0}')));
            this.formatSuffix(formatStringValue.substring(formatStringValue.indexOf('{0}') + 3));
            return;
        }
        var startIndex = formatStringValue.indexOf('{0:'), closingBracketIndex = formatStringValue.indexOf('}', startIndex), formatPattern = formatStringValue.substring(startIndex + 3, closingBracketIndex), isFormatPatternFind;
        var selectTypePatternPair = function (name) {
            _this.currentType(name);
            if (startIndex === 0 && closingBracketIndex === (formatStringValue.length - 1)) {
                _this.selectedFormats(_this.patternList().filter(function (item) { return item.name === formatPattern; }));
                _this.formatResult(formatPattern);
                isFormatPatternFind = true;
            }
        };
        Object.keys(this._standardPatternSource).some(function (name) {
            if (_this._standardPatternSource[name].patterns.indexOf(formatPattern) !== -1) {
                selectTypePatternPair(name);
                return true;
            }
            var customPatterns = _this._customPatternSource[_this._standardPatternSource[name].type];
            if (customPatterns && customPatterns.indexOf(formatPattern) !== -1) {
                selectTypePatternPair(name);
                return true;
            }
            return false;
        });
        if (!isFormatPatternFind) {
            this.currentType(this.types[0].name);
            this.selectedFormats([]);
            this.formatResult(formatStringValue);
        }
    };
    FormatStringEditor.prototype.updateInputText = function (propertyName, componentInstance) {
        this[propertyName](componentInstance.option('text'));
    };
    FormatStringEditor.prototype.option = function (name, value) {
        if (value !== void 0) {
            if (ko.isObservable(this[name])) {
                this[name](value);
            }
            else {
                this[name] = value;
            }
        }
        return ko.unwrap(this[name]);
    };
    FormatStringEditor.prototype.updatePreview = function (value, category, pattern) {
        return $.Deferred().resolve({ Result: value || 'preview string' }).promise();
    };
    Object.defineProperty(FormatStringEditor.prototype, "customPatterns", {
        get: function () {
            var currentTypeInfo = this._standardPatternSource[this.currentType()];
            return this._customPatternSource[currentTypeInfo.type] = this._customPatternSource[currentTypeInfo.type] || [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormatStringEditor.prototype, "isGeneralType", {
        get: function () {
            return this.currentType() === 'General';
        },
        enumerable: true,
        configurable: true
    });
    FormatStringEditor.prototype.getDisplayText = function (key) {
        return localization_utils_1.getLocalization(this.localizationIdMap[key].text, this.localizationIdMap[key].localizationId);
    };
    FormatStringEditor.prototype.getPopupContainer = function (el) {
        return $(el).closest(this.option('popupContainer'));
    };
    return FormatStringEditor;
}(utils_1.Disposable));
exports.FormatStringEditor = FormatStringEditor;


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var editor_1 = __webpack_require__(34);
var ColorPickerEditor = (function (_super) {
    __extends(ColorPickerEditor, _super);
    function ColorPickerEditor(info, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, info, level, parentDisabled, textToSearch) || this;
        _this._disposables.push(_this.displayValue = ko.pureComputed({
            read: function () {
                var value = ko.unwrap(_this.value);
                if (value && value.toLowerCase() === 'transparent') {
                    return 'rgba(0,0,0,0)';
                }
                if ((/^rgba\s*\((\s*[a-f\d]+\s*,){3}\s*[a-f\d]+\s*\)$/i).test(value))
                    return value;
                var div = document.createElement('div');
                div.style.backgroundColor = value;
                return div.style.backgroundColor || 'rgba(0,0,0,1)';
            },
            write: function (val) {
                _this.value(val);
            }
        }));
        return _this;
    }
    return ColorPickerEditor;
}(editor_1.Editor));
exports.ColorPickerEditor = ColorPickerEditor;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var fieldListEditor_1 = __webpack_require__(84);
var _dataMemberEditor_1 = __webpack_require__(136);
var DataMemberEditor = (function (_super) {
    __extends(DataMemberEditor, _super);
    function DataMemberEditor(modelPropertyInfo, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, modelPropertyInfo, level, parentDisabled, textToSearch) || this;
        _this.treeListController = new _dataMemberEditor_1.DataMemberTreeListController();
        _this._disposables.push(_this.treeListController);
        return _this;
    }
    return DataMemberEditor;
}(fieldListEditor_1.FieldListEditor));
exports.DataMemberEditor = DataMemberEditor;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ace_1 = __webpack_require__(147);
if (!!ace_1.default) {
    ace_1.default.define('ace/mode/doc_comment_highlight_rules', ['require', 'exports', 'module', 'ace/lib/oop', 'ace/mode/text_highlight_rules'], function (require, exports, module) {
        'use strict';
        var oop = ace_1.default.require('ace/lib/oop');
        var TextHighlightRules = ace_1.default.require('ace/mode/text_highlight_rules').TextHighlightRules;
        var DocCommentHighlightRules = function () {
            this.$rules = {
                'start': [{
                        token: 'comment.doc.tag',
                        regex: '@[\\w\\d_]+'
                    },
                    DocCommentHighlightRules['getTagRule'](),
                    {
                        defaultToken: 'comment.doc',
                        caseInsensitive: true
                    }]
            };
        };
        oop.inherits(DocCommentHighlightRules, TextHighlightRules);
        DocCommentHighlightRules['getTagRule'] = function (start) {
            return {
                token: 'comment.doc.tag.storage.type',
                regex: '\\b(?:TODO|FIXME|XXX|HACK)\\b'
            };
        };
        DocCommentHighlightRules['getStartRule'] = function (start) {
            return {
                token: 'comment.doc',
                regex: '\\/\\*(?=\\*)',
                next: start
            };
        };
        DocCommentHighlightRules['getEndRule'] = function (start) {
            return {
                token: 'comment.doc',
                regex: '\\*\\/',
                next: start
            };
        };
        exports.DocCommentHighlightRules = DocCommentHighlightRules;
    });
}


/***/ }),
/* 147 */
/***/ (function(module, exports) {

module.exports = { default: window["ace"] };

/***/ }),
/* 148 */
/***/ (function(module, exports) {

module.exports = DevExpress.localization;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _utils_1 = __webpack_require__(9);
var utils_1 = __webpack_require__(2);
var _internal_1 = __webpack_require__(4);
function cloneHtmlBinding(data, element, valueAccessor, allBindings, viewModel, bindingContext) {
    _internal_1.addDisposeCallback(element, function () {
        data.dispose();
    });
    setTimeout(function () {
        var isInitialized = false;
        ko.computed({
            read: function () {
                if (!isInitialized && ko.bindingHandlers['html'].init) {
                    ko.bindingHandlers['html'].init(element, function () { return data.content; }, allBindings, viewModel, bindingContext);
                    isInitialized = true;
                }
                if (ko.bindingHandlers['html'].update) {
                    ko.bindingHandlers['html'].update(element, function () {
                        data.update(valueAccessor());
                        return data.content;
                    }, allBindings, viewModel, bindingContext);
                }
            },
            disposeWhenNodeIsRemoved: element
        });
    }, 1);
}
exports.cloneHtmlBinding = cloneHtmlBinding;
var HighlightEngine = (function (_super) {
    __extends(HighlightEngine, _super);
    function HighlightEngine(options) {
        var _this = _super.call(this) || this;
        _this._$spanProtect = $('<span>');
        _this._$spanSearch = $('<span>').addClass('dx-datagrid-search-text');
        _this.content = ko.observable('');
        _this._options = options;
        if (ko.isSubscribable(_this._options.text)) {
            _this._disposables.push(_this._options.text.subscribe(function (newText) {
                _this._update();
            }));
        }
        _this._disposables.push(_this._options.textToSearch.subscribe(function (newFind) {
            _this._update();
        }));
        _this._update();
        return _this;
    }
    HighlightEngine.prototype._update = function () {
        this.content(this._getHighlightContent(ko.unwrap(this._options.text), ko.unwrap(this._options.textToSearch), ko.unwrap(this._options.searchOptions)));
    };
    HighlightEngine.prototype.update = function (options) {
        this._options = options;
        this._update();
    };
    HighlightEngine.prototype._getHighlightContent = function (text, textToSearch, options) {
        var _this = this;
        var searchPattern = textToSearch;
        var result = text;
        if (searchPattern) {
            var match = _utils_1.findMatchesInString(result, searchPattern, options);
            if (match) {
                var newResult = '', curIndex = 0, subString = result;
                match.forEach(function (item, index) {
                    var itemIndex = subString.indexOf(item);
                    var textBeforeMath = result.substr(curIndex, itemIndex);
                    subString = subString.substr(itemIndex + item.length);
                    if (textBeforeMath) {
                        _this._$spanProtect.text(textBeforeMath);
                        newResult += _this._$spanProtect[0].outerHTML;
                    }
                    _this._$spanSearch.text(item);
                    newResult += _this._$spanSearch[0].outerHTML;
                    curIndex = result.length - subString.length;
                    if (index === match.length - 1) {
                        if (subString) {
                            _this._$spanProtect.text(subString);
                            newResult += _this._$spanProtect[0].outerHTML;
                        }
                    }
                });
                return newResult;
            }
        }
        this._$spanProtect.text(result);
        result = this._$spanProtect[0].outerHTML;
        return result;
    };
    return HighlightEngine;
}(utils_1.Disposable));
exports.HighlightEngine = HighlightEngine;
ko.bindingHandlers['searchHighlighting'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        cloneHtmlBinding(new HighlightEngine(valueAccessor()), element, valueAccessor, allBindings, viewModel, bindingContext);
    }
};


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var BaseActionsProvider = (function () {
    function BaseActionsProvider() {
    }
    BaseActionsProvider.prototype.initActions = function (actions) {
        this.actions = actions;
        this.actions.forEach(function (action) {
            if (!action.disabled)
                action.disabled = ko.observable(false);
        });
    };
    BaseActionsProvider.prototype.getActions = function (context) {
        if (this.condition(context)) {
            this.setDisabled && this.setDisabled(context);
            return this.actions;
        }
        return [];
    };
    BaseActionsProvider.prototype.condition = function (context) {
        return true;
    };
    return BaseActionsProvider;
}());
exports.BaseActionsProvider = BaseActionsProvider;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var _requestHelper_1 = __webpack_require__(87);
var _processError_1 = __webpack_require__(66);
var _internal_1 = __webpack_require__(4);
var templateUtils_1 = __webpack_require__(13);
var JSDesignerBindingCommon = (function (_super) {
    __extends(JSDesignerBindingCommon, _super);
    function JSDesignerBindingCommon(_options, _customEventRaiser) {
        var _this = _super.call(this) || this;
        _this._options = _options;
        _this._customEventRaiser = _customEventRaiser;
        _this._templateHtml = templateUtils_1.getTemplate('dxrd-designer');
        return _this;
    }
    JSDesignerBindingCommon.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        if (this.sender && this.sender instanceof utils_1.Disposable)
            this.sender.dispose();
        this.removeProperties();
    };
    JSDesignerBindingCommon.prototype._fireEvent = function (eventName, args) {
        if (this._customEventRaiser) {
            this._customEventRaiser(eventName, args);
            return;
        }
        this._options && this._options.callbacks && this._options.callbacks[eventName] && this._options.callbacks[eventName](this.sender, args);
    };
    JSDesignerBindingCommon.prototype._getServerActionUrl = function (host, uri) {
        return _requestHelper_1.RequestHelper.generateUri(host, uri);
    };
    JSDesignerBindingCommon.prototype._getAvailableEvents = function (events, prefix) {
        var _this = this;
        var result = events;
        if (prefix && this._options.callbacks[prefix]) {
            Object.keys(events).forEach(function (propertyName) {
                result[propertyName] = _this._options.callbacks[prefix][propertyName] || events[propertyName];
            });
        }
        else {
            Object.keys(events).forEach(function (propertyName) {
                result[propertyName] = _this._options.callbacks[propertyName] || events[propertyName];
            });
        }
        return result;
    };
    JSDesignerBindingCommon.prototype._getLocalizationRequest = function () {
        var deferred = $.Deferred();
        var requestOptions = this._options.requestOptions;
        if (requestOptions.getLocalizationAction) {
            var actionUrl = this._getServerActionUrl(requestOptions.host, requestOptions.getLocalizationAction);
            $.getJSON(actionUrl)
                .fail(function (jqXHR, textStatus, errorThrown) {
                try {
                    _processError_1._processError(errorThrown.message, $.Deferred(), jqXHR, textStatus);
                }
                finally {
                    deferred.reject();
                }
            }).done(function (localization) {
                deferred.resolve(localization);
            });
        }
        else {
            deferred.resolve();
        }
        return deferred.promise();
    };
    JSDesignerBindingCommon.prototype._createDisposeFunction = function (element) {
        var _this = this;
        _internal_1.addDisposeCallback(element, function () {
            _this.dispose();
        });
    };
    return JSDesignerBindingCommon;
}(utils_1.Disposable));
exports.JSDesignerBindingCommon = JSDesignerBindingCommon;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.version = '21.2.7';


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _svgTemplateEngine_1 = __webpack_require__(20);
_svgTemplateEngine_1.SvgTemplatesEngine.addTemplates({
    'dxrd-svg-collapsed': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 9 9" xml:space="preserve"><path class="dxd-icon-fill" d="M2 2l5 3-5 3z"/></svg>',
    'dxrd-svg-ellipsis': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="-467 277 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M-464 284h2v2h-2zM-460 284h2v2h-2zM-456 284h2v2h-2z"/></svg>',
    'dxrd-svg-expressioneditor-addition': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M20 10h-6V4h-4v6H4v4h6v6h4v-6h6z"/></svg>',
    'dxrd-svg-expressioneditor-and': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M15 4c-1.1 0-2.1.2-3 .7-.9-.5-1.9-.7-3-.7-3.9 0-7 3.1-7 7s3.1 7 7 7c1.1 0 2.1-.2 3-.7.9.4 1.9.7 3 .7 3.9 0 7-3.1 7-7s-3.1-7-7-7zm-1 7c0 1.6-.8 3.1-2 4-1.2-.9-2-2.3-2-4s.8-3.1 2-4c1.2.9 2 2.4 2 4zM4 11c0-2.8 2.2-5 5-5 .3 0 .7 0 1 .1-1.2 1.3-2 3-2 4.9s.8 3.6 2 4.9c-.3.1-.7.1-1 .1-2.8 0-5-2.2-5-5zm11 5c-.3 0-.7 0-1-.1 1.2-1.3 2-3 2-4.9s-.8-3.6-2-4.9c.3-.1.7-.1 1-.1 2.8 0 5 2.2 5 5s-2.2 5-5 5z"/><path class="dxd-icon-fill dxd-opacity-80" d="M14 11c0 1.6-.8 3.1-2 4-1.2-.9-2-2.3-2-4s.8-3.1 2-4c1.2.9 2 2.4 2 4z"/></svg>',
    'dxrd-svg-expressioneditor-division': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M2 10h20v4H2z"/><circle class="dxd-icon-fill" cx="12" cy="6" r="2"/><circle class="dxd-icon-fill" cx="12" cy="18" r="2"/></svg>',
    'dxrd-svg-expressioneditor-edit': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M18 8l-6 6-6-6z"/></svg>',
    'dxrd-svg-expressioneditor-equal': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M4 6h16v4H4zM4 12h16v4H4z"/></svg>',
    'dxrd-svg-expressioneditor-greater': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M4 4v2l10 6-10 6v2l14-8z"/></svg>',
    'dxrd-svg-expressioneditor-greater_or_equal': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M4 2v2l10 6-10 6v2l14-8zM4 22l14-8v-2L4 20z"/></svg>',
    'dxrd-svg-expressioneditor-less': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M18 4v2L8 12l10 6v2L4 12z"/></svg>',
    'dxrd-svg-expressioneditor-less_or_equal': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M18 2v2L8 10l10 6v2L4 10zM18 22L4 14v-2l14 8z"/></svg>',
    'dxrd-svg-expressioneditor-modulus': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M16 4L2 20h4L20 4zM16 12c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM6 12c2.2 0 4-1.8 4-4S8.2 4 6 4 2 5.8 2 8s1.8 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2z"/></svg>',
    'dxrd-svg-expressioneditor-multiplication': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M18 6l-2-2-5 5-5-5-2 2 5 5-5 5 2 2 5-5 5 5 2-2-5-5z"/></svg>',
    'dxrd-svg-expressioneditor-not': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M15 4c-1.1 0-2.1.2-3 .7-.9-.5-1.9-.7-3-.7-3.9 0-7 3.1-7 7s3.1 7 7 7c1.1 0 2.1-.2 3-.7.9.4 1.9.7 3 .7 3.9 0 7-3.1 7-7s-3.1-7-7-7zm-1 7c0 1.6-.8 3.1-2 4-1.2-.9-2-2.3-2-4s.8-3.1 2-4c1.2.9 2 2.4 2 4zM4 11c0-2.8 2.2-5 5-5 .3 0 .7 0 1 .1-1.2 1.3-2 3-2 4.9s.8 3.6 2 4.9c-.3.1-.7.1-1 .1-2.8 0-5-2.2-5-5zm11 5c-.3 0-.7 0-1-.1 1.2-1.3 2-3 2-4.9s-.8-3.6-2-4.9c.3-.1.7-.1 1-.1 2.8 0 5 2.2 5 5s-2.2 5-5 5z"/><path class="dxd-icon-fill dxd-opacity-80" d="M4 11c0-2.8 2.2-5 5-5 .3 0 .7 0 1 .1-1.2 1.3-2 3-2 4.9s.8 3.6 2 4.9c-.3.1-.7.1-1 .1-2.8 0-5-2.2-5-5z"/></svg>',
    'dxrd-svg-expressioneditor-not_equal': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M20 0h-2l-3.8 6H4v4h7.6l-1.2 2H4v4h3.8L4 22h2l3.8-6H20v-4h-7.6l1.2-2H20V6h-3.8z"/></svg>',
    'dxrd-svg-expressioneditor-or': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill dxd-opacity-80" d="M14 11c0 1.6-.8 3.1-2 4-1.2-.9-2-2.3-2-4s.8-3.1 2-4c1.2.9 2 2.4 2 4z"/><path class="dxd-icon-fill" d="M15 4c-1.1 0-2.1.2-3 .7-.9-.5-1.9-.7-3-.7-3.9 0-7 3.1-7 7s3.1 7 7 7c1.1 0 2.1-.2 3-.7.9.4 1.9.7 3 .7 3.9 0 7-3.1 7-7s-3.1-7-7-7zm-1 7c0 1.6-.8 3.1-2 4-1.2-.9-2-2.3-2-4s.8-3.1 2-4c1.2.9 2 2.4 2 4zM4 11c0-2.8 2.2-5 5-5 .3 0 .7 0 1 .1-1.2 1.3-2 3-2 4.9s.8 3.6 2 4.9c-.3.1-.7.1-1 .1-2.8 0-5-2.2-5-5zm11 5c-.3 0-.7 0-1-.1 1.2-1.3 2-3 2-4.9s-.8-3.6-2-4.9c.3-.1.7-.1 1-.1 2.8 0 5 2.2 5 5s-2.2 5-5 5z"/><path class="dxd-icon-fill dxd-opacity-80" d="M4 11c0-2.8 2.2-5 5-5 .3 0 .7 0 1 .1-1.2 1.3-2 3-2 4.9s.8 3.6 2 4.9c-.3.1-.7.1-1 .1-2.8 0-5-2.2-5-5zM15 16c-.3 0-.7 0-1-.1 1.2-1.3 2-3 2-4.9s-.8-3.6-2-4.9c.3-.1.7-.1 1-.1 2.8 0 5 2.2 5 5s-2.2 5-5 5z"/></svg>',
    'dxrd-svg-expressioneditor-parenthesis': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M2 11c0 3.8 1.8 7.1 4 9h2c-2.2-1.9-4-5.2-4-9s1.8-7.1 4-9H6c-2.2 1.9-4 5.2-4 9zM16 2h-2c2.2 1.8 4 5.2 4 9s-1.8 7.2-4 9h2c2.2-1.8 4-5.2 4-9s-1.8-7.2-4-9z"/><path class="dxd-icon-fill" d="M6 10h2v2H6zM10 10h2v2h-2zM14 10h2v2h-2z"/></svg>',
    'dxrd-svg-expressioneditor-subtraction': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M4 10h16v4H4z"/></svg>',
    'dxrd-svg-fieldlist-array': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M4 4v8H2.3V5.5H1V4h3zm2.8 7.6c-.5-.3-.8-.8-1.1-1.4-.2-.6-.4-1.3-.4-2.2 0-.9.1-1.6.4-2.2.3-.6.7-1.1 1.1-1.4.5-.3 1-.5 1.6-.5s1.1.1 1.6.5c.5.3.8.8 1.1 1.4.3.6.4 1.4.4 2.2 0 .9-.1 1.6-.4 2.2-.3.6-.6 1.1-1.1 1.4-.5.3-1 .5-1.6.5s-1.1-.1-1.6-.5zm2.6-1.7c.3-.4.4-1 .4-1.9s-.1-1.5-.4-1.9c-.2-.4-.6-.6-1-.6s-.8.2-1 .6c-.3.4-.4 1-.4 1.9s.1 1.5.4 1.9c.2.4.6.6 1 .6.5.1.8-.1 1-.6zM15 4v8h-1.7V5.5H12V4h3z"/></svg>',
    'dxrd-svg-fieldlist-bitearray': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M4 4v8H2.3V5.5H1V4h3zm2.8 7.6c-.5-.3-.8-.8-1.1-1.4-.2-.6-.4-1.3-.4-2.2 0-.9.1-1.6.4-2.2.3-.6.7-1.1 1.1-1.4.5-.3 1-.5 1.6-.5s1.1.1 1.6.5c.5.3.8.8 1.1 1.4.3.6.4 1.4.4 2.2 0 .9-.1 1.6-.4 2.2-.3.6-.6 1.1-1.1 1.4-.5.3-1 .5-1.6.5s-1.1-.1-1.6-.5zm2.6-1.7c.3-.4.4-1 .4-1.9s-.1-1.5-.4-1.9c-.2-.4-.6-.6-1-.6s-.8.2-1 .6c-.3.4-.4 1-.4 1.9s.1 1.5.4 1.9c.2.4.6.6 1 .6.5.1.8-.1 1-.6zM15 4v8h-1.7V5.5H12V4h3z"/></svg>',
    'dxrd-svg-fieldlist-bool': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M13.6 2.6L6 10.2 3.4 7.6 2 9l4 4 9-9z"/></svg>',
    'dxrd-svg-fieldlist-booleanfield': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M13.6 2.6L6 10.2 3.4 7.6 2 9l4 4 9-9z"/></svg>',
    'dxrd-svg-fieldlist-column': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M1 6h14v4H1z"/><g class="dxd-opacity-50"><path class="dxd-icon-fill" d="M5 5H1V1h4v4zm5-4H6v4h4V1zm5 0h-4v4h4V1zM5 11H1v4h4v-4zm5 0H6v4h4v-4zm5 0h-4v4h4v-4z"/></g></svg>',
    'dxrd-svg-fieldlist-datasource': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><g class="st1"><path class="dxd-icon-fill" d="M7.3 9V7H10V3c0-1.7-2-3-4.5-3S1 1.3 1 3v5c0 1.7 2 3 4.5 3 2 0 3.6-.8 4.2-2H7.3zm-4-6c0-.4.9-1 2.3-1s2.3.6 2.3 1-1 1-2.4 1-2.2-.6-2.2-1z"/></g><path class="dxd-icon-fill" d="M9.5 5C7 5 5 6.3 5 8v5c0 1.7 2 3 4.5 3s4.5-1.3 4.5-3V8c0-1.7-2-3-4.5-3zm0 4c-1.4 0-2.2-.6-2.2-1s.9-1 2.3-1 2.3.6 2.3 1-1 1-2.4 1z"/></svg>',
    'dxrd-svg-fieldlist-date': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 12c-2.8 0-5-2.2-5-5s2.2-5 5-5 5 2.2 5 5-2.2 5-5 5zm3-5v1H7V5h1v3h3z"/></svg>',
    'dxrd-svg-fieldlist-datetimefield': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 12c-2.8 0-5-2.2-5-5s2.2-5 5-5 5 2.2 5 5-2.2 5-5 5zm3-5v1H7V5h1v3h3z"/></svg>',
    'dxrd-svg-fieldlist-doublefield': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M5 4v8H3.3V5.5H2V4h3zM6.3 11.7c-.2-.2-.3-.4-.3-.7 0-.3.1-.5.3-.7.2-.2.4-.3.7-.3s.5.1.7.3.3.4.3.7c0 .3-.1.5-.3.7-.2.2-.4.3-.7.3s-.5-.1-.7-.3zM15 10.5V12H9v-1.2l3.1-2.9c.3-.3.5-.6.7-.8.1-.2.2-.4.2-.7 0-.3-.1-.6-.3-.7-.2-.2-.5-.3-.9-.3-.3 0-.7.1-.9.2-.5.2-.7.4-.9.6l-1.3-.8c.3-.5.7-.9 1.2-1.1.5-.3 1.2-.4 1.9-.4.6 0 1.1.1 1.5.3.4.2.8.5 1 .8.2.4.4.8.4 1.2 0 .4-.1.8-.3 1.2-.2.4-.5.8-1.1 1.3l-1.8 1.7H15z"/></svg>',
    'dxrd-svg-fieldlist-enum': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M13 12H1c-.5 0-1 .5-1 1v8c0 .5.5 1 1 1h12c.5 0 1-.5 1-1v-8c0-.5-.5-1-1-1zm-1 8H2v-2h10v2zm0-4H2v-2h10v2zM23 4H11c-.5 0-1 .5-1 1v5h12v2h-6v2h7c.5 0 1-.5 1-1V5c0-.5-.5-1-1-1zm-1 4H12V6h10v2z" id="Enum"/></svg>',
    'dxrd-svg-fieldlist-float': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M5 4v8H3.3V5.5H2V4h3zM6.3 11.7c-.2-.2-.3-.4-.3-.7 0-.3.1-.5.3-.7.2-.2.4-.3.7-.3s.5.1.7.3.3.4.3.7c0 .3-.1.5-.3.7-.2.2-.4.3-.7.3s-.5-.1-.7-.3zM15 10.5V12H9v-1.2l3.1-2.9c.3-.3.5-.6.7-.8.1-.2.2-.4.2-.7 0-.3-.1-.6-.3-.7-.2-.2-.5-.3-.9-.3-.3 0-.7.1-.9.2-.5.2-.7.4-.9.6l-1.3-.8c.3-.5.7-.9 1.2-1.1.5-.3 1.2-.4 1.9-.4.6 0 1.1.1 1.5.3.4.2.8.5 1 .8.2.4.4.8.4 1.2 0 .4-.1.8-.3 1.2-.2.4-.5.8-1.1 1.3l-1.8 1.7H15z"/></svg>',
    'dxrd-svg-fieldlist-guid': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M4.1 4.6c-.2-.2-.3-.4-.3-.7 0-.3.1-.5.3-.7.2-.2.4-.3.7-.3.3 0 .6.1.7.3.2.2.3.4.3.7 0 .3-.1.6-.3.8-.1.1-.4.2-.7.2-.3 0-.5-.1-.7-.3zm-.1 1h1.7V12H4V5.6zM13 3v9h-1.6v-.7c-.4.6-1 .8-1.8.8-.5 0-1-.1-1.5-.4-.4-.3-.8-.7-1-1.2-.2-.5-.3-1.1-.3-1.7 0-.7.1-1.2.4-1.7.2-.5.6-.9 1-1.2.4-.3.9-.4 1.5-.4.7 0 1.3.3 1.7.8V3H13zm-2 7.1c.3-.3.4-.8.4-1.3s-.1-1-.4-1.3c-.3-.3-.7-.5-1.1-.5-.4 0-.8.2-1 .5-.3.3-.4.7-.4 1.3 0 .5.1 1 .4 1.3.3.3.6.5 1 .5.4-.1.8-.2 1.1-.5z"/></svg>',
    'dxrd-svg-fieldlist-integer': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M6 4v8H4.3V5.5H3V4h3zm8 6.5V12H8v-1.2l3.1-2.9c.3-.3.5-.6.7-.8.1-.2.2-.4.2-.7 0-.3-.1-.6-.3-.7-.2-.2-.5-.3-.9-.3-.3 0-.7.1-.9.2-.5.2-.7.4-.9.6l-1.3-.8c.3-.5.7-.9 1.2-1.1.5-.3 1.2-.4 1.9-.4.6 0 1.1.1 1.5.3.4.2.8.5 1 .8.2.4.4.8.4 1.2 0 .4-.1.8-.3 1.2-.2.4-.5.8-1.1 1.3l-1.8 1.7H14z"/></svg>',
    'dxrd-svg-fieldlist-integerfield': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M6 4v8H4.3V5.5H3V4h3zm8 6.5V12H8v-1.2l3.1-2.9c.3-.3.5-.6.7-.8.1-.2.2-.4.2-.7 0-.3-.1-.6-.3-.7-.2-.2-.5-.3-.9-.3-.3 0-.7.1-.9.2-.5.2-.7.4-.9.6l-1.3-.8c.3-.5.7-.9 1.2-1.1.5-.3 1.2-.4 1.9-.4.6 0 1.1.1 1.5.3.4.2.8.5 1 .8.2.4.4.8.4 1.2 0 .4-.1.8-.3 1.2-.2.4-.5.8-1.1 1.3l-1.8 1.7H14z"/></svg>',
    'dxrd-svg-fieldlist-listsource': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M8 2C5.2 2 3 3.3 3 5v6c0 1.7 2.2 3 5 3s5-1.3 5-3V5c0-1.7-2.2-3-5-3zm0 4c-1.8 0-2.9-.8-3-1 .1-.2 1.2-1 3-1s2.9.8 3 1c-.1.2-1.2 1-3 1z"/></svg>',
    'dxrd-svg-fieldlist-none': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M9.4 8l3.3-3.3c.4-.4.4-1 0-1.4s-1-.4-1.4 0L8 6.6 4.7 3.3c-.4-.4-1-.4-1.4 0s-.4 1 0 1.4L6.6 8l-3.3 3.3c-.4.4-.4 1 0 1.4s1 .4 1.4 0L8 9.4l3.3 3.3c.4.4 1 .4 1.4 0s.4-1 0-1.4L9.4 8z"/></svg>',
    'dxrd-svg-fieldlist-parameters': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M7.2 8.3c.2-.3.5-.6.8-1l.7-.7c.1-.2.2-.4.2-.6 0-.3-.1-.6-.4-.8-.3-.2-.6-.3-1-.3s-.8.1-1.1.3c-.3.1-.6.3-.8.6L4 4.9c.4-.6.9-1.1 1.5-1.4.6-.3 1.3-.5 2.2-.5 1 0 1.8.2 2.4.7.6.4.9 1.1.9 1.9 0 .4-.1.7-.2 1-.1.3-.3.5-.4.7l-.7.7c-.3.3-.5.5-.7.8-.1.2-.2.4-.2.7h-2c.1-.5.2-.9.4-1.2zm-.3 4.3c-.2-.2-.4-.5-.4-.9s.1-.6.4-.9c.2-.2.5-.4.9-.4s.7.1.9.4c.2.2.4.5.4.9s-.1.7-.4.9c-.2.3-.5.4-.9.4-.3 0-.6-.1-.9-.4z"/></svg>',
    'dxrd-svg-fieldlist-range': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M3 4v8h2v2H1V2h4v2H3zm10 0v8h-2v2h4V2h-4v2h2z"/></svg>',
    'dxrd-svg-fieldlist-string': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M6 6.1c.5.5.8 1.2.8 2.2V12H5.1v-.8c-.3.6-.9.9-1.9.9-.5 0-.9-.1-1.2-.3-.3-.2-.6-.4-.8-.7-.2-.3-.3-.6-.3-1 .1-.6.3-1.1.7-1.4.4-.3 1.1-.5 2-.5H5c0-.4-.1-.7-.4-1-.2-.2-.5-.3-1-.3-.3 0-.6 0-.9.1-.4.2-.6.3-.8.5l-.7-1.3c.4-.3.8-.5 1.2-.6.5-.1.9-.2 1.4-.2 1 0 1.7.2 2.2.7zm-1.5 4.5c.2-.1.4-.4.5-.7v-.6H3.8c-.7 0-1.1.3-1.1.8 0 .2.1.4.3.6.2.1.4.2.7.2.3-.1.6-.2.8-.3zm9-4.8c.5.3.8.7 1.1 1.2.3.5.4 1.1.4 1.7 0 .7-.1 1.3-.4 1.8-.3.5-.6.9-1.1 1.2-.5.3-1 .4-1.5.4-.8 0-1.5-.3-1.9-.8v.7H8.4V3h1.8v3.2c.4-.5 1.1-.8 1.8-.8.5 0 1 .1 1.5.4zm-.7 4.3c.3-.3.4-.8.4-1.3s-.1-1-.4-1.3c-.3-.3-.7-.5-1.1-.5s-.8.2-1.1.5c-.3.3-.4.8-.4 1.3s.1 1 .4 1.3c.3.3.7.5 1.1.5s.8-.2 1.1-.5z"/></svg>',
    'dxrd-svg-fieldlist-stringfield': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M6 6.1c.5.5.8 1.2.8 2.2V12H5.1v-.8c-.3.6-.9.9-1.9.9-.5 0-.9-.1-1.2-.3-.3-.2-.6-.4-.8-.7-.2-.3-.3-.6-.3-1 .1-.6.3-1.1.7-1.4.4-.3 1.1-.5 2-.5H5c0-.4-.1-.7-.4-1-.2-.2-.5-.3-1-.3-.3 0-.6 0-.9.1-.4.2-.6.3-.8.5l-.7-1.3c.4-.3.8-.5 1.2-.6.5-.1.9-.2 1.4-.2 1 0 1.7.2 2.2.7zm-1.5 4.5c.2-.1.4-.4.5-.7v-.6H3.8c-.7 0-1.1.3-1.1.8 0 .2.1.4.3.6.2.1.4.2.7.2.3-.1.6-.2.8-.3zm9-4.8c.5.3.8.7 1.1 1.2.3.5.4 1.1.4 1.7 0 .7-.1 1.3-.4 1.8-.3.5-.6.9-1.1 1.2-.5.3-1 .4-1.5.4-.8 0-1.5-.3-1.9-.8v.7H8.4V3h1.8v3.2c.4-.5 1.1-.8 1.8-.8.5 0 1 .1 1.5.4zm-.7 4.3c.3-.3.4-.8.4-1.3s-.1-1-.4-1.3c-.3-.3-.7-.5-1.1-.5s-.8.2-1.1.5c-.3.3-.4.8-.4 1.3s.1 1 .4 1.3c.3.3.7.5 1.1.5s.8-.2 1.1-.5z"/></svg>',
    'dxrd-svg-fieldlist-table': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M14 1H2c-.5 0-1 .5-1 1v12c0 .5.5 1 1 1h12c.5 0 1-.5 1-1V2c0-.5-.5-1-1-1zM9 3v2H7V3h2zm0 4v2H7V7h2zM3 3h2v2H3V3zm0 4h2v2H3V7zm0 6v-2h2v2H3zm4 0v-2h2v2H7zm6 0h-2v-2h2v2zm0-4h-2V7h2v2zm0-4h-2V3h2v2z"/></svg>',
    'dxrd-svg-fieldlist-view': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M14.7 13.3l-3.5-3.5C11.7 9 12 8 12 7c0-2.8-2.2-5-5-5S2 4.2 2 7s2.2 5 5 5c1 0 2-.3 2.8-.8l3.5 3.5c.4.4 1 .4 1.4 0s.4-1 0-1.4zM7 10c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3z"/></svg>',
    'dxrd-svg-filtereditor-add': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-filter-editor-add-icon-fill-color" d="M20 10h-6V4h-4v6H4v4h6v6h4v-6h6z"/></svg>',
    'dxrd-svg-filtereditor-edit': '<svg data-bind="svgAttrs" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path class="dxd-filter-editor-text-color" d="M4 7h8l-4 4z"/></svg>',
    'dxrd-svg-filtereditor-remove': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-filter-editor-remove-icon-fill-color" d="M18 6l-2-2-5 5-5-5-2 2 5 5-5 5 2 2 5-5 5 5 2-2-5-5z"/></svg>',
    'dxrd-svg-fontstyle-bold': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M14.4 10.8c1.1.3 1.9.7 2.5 1.3.8.8 1.1 1.8 1.1 3 0 .9-.2 1.8-.7 2.6-.5.8-1.2 1.4-2 1.8-.9.4-2.2.6-4 .6H4v-.5h.4c.7 0 1.1-.2 1.4-.7.2-.5.2-2 .2-3V6c0-1.1 0-2.6-.3-2.9-.3-.4-.7-.6-1.3-.6H4V2h6.6c1.3 0 2.3.1 3.1.3 1.2.3 2.1.9 2.7 1.7s.9 1.7.9 2.8c0 .9-.2 1.7-.7 2.4-.5.7-1.2 1.3-2.2 1.6zM8 10H10.6c1.1 0 2 0 2.6-.3.6-.3.9-.6 1.2-1.2.3-.6.5-1.2.5-1.9 0-1.1-.4-2-1.1-2.7S11.4 3 10 3H8v7zm0 8.9h3c1.4 0 2.5-.3 3.2-1s1.1-1.6 1.1-2.7c0-.7-.2-1.4-.5-2-.3-.6-.9-1.2-1.6-1.5-.8-.4-1.5-.7-2.7-.7H8v7.9z"/></svg>',
    'dxrd-svg-fontstyle-italic': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M14 21.5l-.2.5H6l.2-.5c.8 0 1.3-.1 1.6-.2.4-.2.7-.4.9-.7.3-.5.5-1.3.8-2.5l2.4-12c.3-1.3.3-1.8.3-2.3 0-.3-.1-.5-.2-.6s-.3-.3-.6-.4c-.3-.1-.7-.1-1.5-.1l.3-.7H18l-.2.5c-.6 0-1.4.1-1.7.2-.4.2-.8.5-1 .8-.1.5-.5 1-.8 2.5L12 18.1c-.2 1.3-.3 1.7-.3 2.1 0 .2.1.5.2.6.1.2.3.3.6.4s.7.2 1.5.3z"/></svg>',
    'dxrd-svg-fontstyle-strikeout': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M20 12h-5.3c-.7-.4-1.7-.9-2.9-1.5-2.4-1.2-3.9-2.1-4.6-2.8-.4-.5-.7-1-.7-1.6 0-.8.3-1.4 1-2.1.6-.4.8-.7 2.1-.9.9-.1 1.9.2 2.8.7.9.4 1.6 1 2.1 1.8s.8 1.4 1 2.4h.5V2h-.5c-.1.4-.2.7-.4.9-.2.1-.4.2-.7.2-.2 0-.6-.1-1.2-.4-1.3-.5-2.5-.7-3.6-.7-1.8 0-3 .8-3.9 1.5C4.5 4.4 4 5.7 4 7c0 .8.2 1.5.6 2.2s1 1.3 1.7 1.8c.4.3.9.6 1.6 1H2v2h9.7c.9.5 1.5.8 1.8 1 .6.4 1 .9 1.3 1.3s.4 1 .4 1.4c0 .8-.4 1.6-1.1 2.2-.8.6-1.8.9-3.1.9-1.1 0-2.1-.2-3.1-.7-.9-.5-1.8-1-2.3-1.7-.2-.2-.8-1.4-1-2.4H4v6h.6c.1-.4.2-.7.3-.9.2-.1.4-.2.6-.2.3 0 1.1.1 2.1.4s1.7.5 2 .5c.5.1 1.1.1 1.7.1 1.9 0 3.5-.5 4.8-1.6 1.2-1 1.9-2.3 1.9-3.7 0-.8-.2-1.5-.6-2.2-.1-.2-.2-.2-.3-.4H20v-2z"/></svg>',
    'dxrd-svg-fontstyle-underline': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M14 0v1h.9c.4 0 .7.1.8.2.3.4.3 1.2.3 2.3V12c0 .8 0 1.7-.1 2.6-.1 1-.5 1.8-1 2.3-1 .9-3 1.1-3.7 1.1-.7 0-2.9-.2-3.9-1.1-.7-.7-.9-1.3-1.1-2.2-.2-1.1-.2-2-.2-2.7V3.5c0-1.1 0-2 .3-2.2.2-.2.6-.3 1.1-.3H8V0H2v1h.9c.7 0 .9.1 1 .2.1.2.1 1.1.1 2.3v7.6c0 2.4.2 4 .5 4.8.5 1.2 1.3 2.3 2.4 3C8.7 20 9.9 20 11 20c1.4 0 2.6-.1 4.1-1.1 1.1-.8 1.9-1.7 2.3-3 .3-.9.4-2.5.4-4.8V3.5c0-1.2 0-1.9.3-2.2.3-.3.5-.3 1.3-.3h.6V0h-6zM2 22h18v2H2z"/></svg>',
    'dxrd-svg-menu-menu': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M21 7H3V5h18v2zm0 4H3v2h18v-2zm0 6H3v2h18v-2z"/></svg>',
    'dxrd-svg-menu-open': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M4 8L2 20h18l2-12z"/><path class="dxd-icon-fill" d="M20 6V4H6V2H0v18L2 6z"/></svg>',
    'dxrd-svg-menu-save': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M10 0h6v6h-6z"/><path class="dxd-icon-fill" d="M18 0v8H4V0H2L0 2v20h22V0h-4zm0 18H4v-6h14v6z"/></svg>',
    'dxrd-svg-menu-saveas': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M21 15.1V22c0 .5-.5 1-1 1H2c-.5 0-1-.5-1-1V4c0-.5.5-1 1-1h3v7h3.5c.6 1.6 1.5 3 2.8 4H5v5h12v-3c1.4 0 2.8-.3 4-.9zM24 7c0 3.9-3.1 7-7 7s-7-3.1-7-7 3.1-7 7-7 7 3.1 7 7zM14 6h-2v2h2V6zm4 0h-2v2h2V6zm4 2V6h-2v2h2z"/></svg>',
    'dxrd-svg-operations-add': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M22 10h-8V2h-4v8H2v4h8v8h4v-8h8z"/></svg>',
    'dxrd-svg-operations-add_calcfield': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M18 8V0H0v16h10c0-4.4 3.6-8 8-8zM8 4H6v2h2v2H6v6H2v-2h2V8H2V6h2V2h4v2z"/><path class="dxd-icon-fill" d="M18 10c-3.3 0-6 2.7-6 6s2.7 6 6 6 6-2.7 6-6-2.7-6-6-6zm3 7h-2v2h-2v-2h-2v-2h2v-2h2v2h2v2z"/></svg>',
    'dxrd-svg-operations-add_datasource': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><ellipse class="dxd-icon-fill" cx="8" cy="2" rx="6" ry="2"/><path class="dxd-icon-fill" d="M16 10c-3.3 0-6 2.7-6 6s2.7 6 6 6 6-2.7 6-6-2.7-6-6-6zm3 7h-2v2h-2v-2h-2v-2h2v-2h2v2h2v2zM8 13c-3.1 0-6-.9-6-2v5c0 1.1 2.9 2 6 2h.3c-.2-.6-.3-1.3-.3-2 0-1.1.2-2.1.6-3H8zM14 8.3V4c0 1.1-2.9 2-6 2s-6-.9-6-2v5c0 1.1 2.9 2 6 2 .6 0 1.3 0 1.9-.1 1-1.3 2.5-2.2 4.1-2.6z"/></svg>',
    'dxrd-svg-operations-add_query': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M0 6h4v4H0zM6 6h4v4H6zM12 6h4v4h-4zM18 6h4v4h-4zM0 12h4v4H0zM6 12h4v4H6zM0 18h4v4H0zM6 18h4v4H6zM0 0h22v4H0zM18 12c-3.3 0-6 2.7-6 6s2.7 6 6 6 6-2.7 6-6-2.7-6-6-6zm3 7h-2v2h-2v-2h-2v-2h2v-2h2v2h2v2z"/></svg>',
    'dxrd-svg-operations-ascending': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M12 0L6 6h4v16h4V6h4z"/></svg>',
    'dxrd-svg-operations-descending': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M12 22l6-6h-4V0h-4v16H6z"/></svg>',
    'dxrd-svg-operations-edit': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M2 22h4l-4-4zM4 16l4 4 8-8-4-4zM16 4l-2 2 4 4 2-2z"/></svg>',
    'dxrd-svg-operations-movedown': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M6 10l6 6 6-6V6l-6 6-6-6z"/></svg>',
    'dxrd-svg-operations-moveleft': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M12 6l-6 6 6 6h4l-6-6 6-6z"/></svg>',
    'dxrd-svg-operations-moveleft_all': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M12 6H8l-6 6 6 6h4l-6-6z"/><path class="dxd-icon-fill" d="M20 6h-4l-6 6 6 6h4l-6-6z"/></svg>',
    'dxrd-svg-operations-moveright': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M10 18l6-6-6-6H6l6 6-6 6z"/></svg>',
    'dxrd-svg-operations-moveright_all': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M10 18h4l6-6-6-6h-4l6 6z"/><path class="dxd-icon-fill" d="M2 18h4l6-6-6-6H2l6 6z"/></svg>',
    'dxrd-svg-operations-moveup': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M18 12l-6-6-6 6v4l6-6 6 6z"/></svg>',
    'dxrd-svg-operations-recycle_bin': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M6 19c0 .5.5 1 1 1h10c.5 0 1-.5 1-1V8H6v11zM19 4h-5V3c0-.5-.5-1-1-1h-2c-.5 0-1 .5-1 1v1H5c-.6 0-1 .4-1 1v1h16V5c0-.6-.4-1-1-1z"/></svg>',
    'dxrd-svg-operations-remove': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M4 10h14v4H4z"/></svg>',
    'dxrd-svg-operations-unsorted': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M0 20l6-6V6H2l5-6 5 6H8v6l6-6V0h2v4l4-4 2 2-6 6v8h4l-5 6-5-6h4v-6l-6 6v6H6v-4l-4 4z"/></svg>',
    'dxrd-svg-properties-borders-all': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M0 0v22h22V0H0zm20 20H2V2h18v18z"/></svg>',
    'dxrd-svg-properties-borders-bottom': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M0 12h2v4H0zM12 0h4v2h-4zM0 6h2v4H0zM18 2h2v2h2V0h-4zM6 0h4v2H6zM20 18v2H2v-2H0v4h22v-4zM2 4V2h2V0H0v4zM20 6h2v4h-2zM20 12h2v4h-2z"/></svg>',
    'dxrd-svg-properties-borders-left': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M6 0h4v2H6zM20 12h2v4h-2zM12 0h4v2h-4zM20 18v2h-2v2h4v-4zM20 6h2v4h-2zM4 20H2V2h2V0H0v22h4zM18 2h2v2h2V0h-4zM12 20h4v2h-4zM6 20h4v2H6z"/></svg>',
    'dxrd-svg-properties-borders-none': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M6 0h4v2H6zM20 12h2v4h-2zM12 0h4v2h-4zM20 18v2h-2v2h4v-4zM20 6h2v4h-2zM18 2h2v2h2V0h-4zM12 20h4v2h-4zM6 20h4v2H6zM0 6h2v4H0zM2 4V2h2V0H0v4zM2 18H0v4h4v-2H2zM0 12h2v4H0z"/></svg>',
    'dxrd-svg-properties-borders-right': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M12 20h4v2h-4zM0 6h2v4H0zM6 20h4v2H6zM2 4V2h2V0H0v4zM0 12h2v4H0zM18 2h2v18h-2v2h4V0h-4zM4 20H2v-2H0v4h4zM6 0h4v2H6zM12 0h4v2h-4z"/></svg>',
    'dxrd-svg-properties-borders-top': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M20 6h2v4h-2zM6 20h4v2H6zM20 12h2v4h-2zM4 20H2v-2H0v4h4zM12 20h4v2h-4zM2 4V2h18v2h2V0H0v4zM20 18v2h-2v2h4v-4zM0 12h2v4H0zM0 6h2v4H0z"/></svg>',
    'dxrd-svg-properties-propertyexpression': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 12 12" xml:space="preserve"><path class="dxd-icon-fill" d="M4.8 6h-2l.4-2h1.9l.3-1.5c.1-.7.5-1.9 2.5-2.3C9 .1 10.2 0 11 0l-.5 2c-.2 0-1.1 0-1.9.2-.5 0-.6.3-.7.7L7.7 4H10l-.4 2H7.3l-.7 3.5c-.1.7-.5 1.9-2.5 2.3-1.1.1-2.3.2-3.1.2l.5-2c.2 0 1.1 0 1.9-.2.5-.1.6-.4.7-.7L4.8 6z" id="Background"/></svg>',
    'dxrd-svg-properties-search': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M2.6 21.4c.8.8 2 .8 2.8 0l4.6-4.6c1.2.7 2.6 1.1 4.1 1.1 4.4 0 8-3.6 8-8s-3.6-8-8-8-8 3.6-8 8c0 1.5.4 2.9 1.1 4.1l-4.6 4.6c-.8.8-.8 2 0 2.8zM10 10.1c0-2.2 1.8-4 4-4s4 1.8 4 4-1.8 4-4 4-4-1.9-4-4z"/></svg>',
    'dxrd-svg-properties-sortingbyalphabet': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M3.2 0L1 7h1.6L3 5.3h2L5.4 7H7L4.9 0H3.2zm0 4.2L3.8 2c0-.1.1-.4.2-.8v.1c0 .3.1.6.1.7l.5 2.2H3.2zM1 10h4l-4 5v1h6v-1H3l4-5V9H1zM13 12V0h-2v12H8l4 4 4-4z"/></svg>',
    'dxrd-svg-properties-sortingbygroups': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 16 16" xml:space="preserve"><path class="dxd-icon-fill" d="M1 7h7V0H1v7zm1-6h5v5H2V1zM9 1h6v1H9zM9 3h6v1H9zM9 5h6v1H9zM9 10h6v1H9zM9 12h6v1H9zM9 14h6v1H9z"/><path class="dxd-icon-fill" d="M5 2H4v1H3v1h1v1h1V4h1V3H5zM1 16h7V9H1v7zm1-6h5v5H2v-5z"/><path class="dxd-icon-fill" d="M5 11H4v1H3v1h1v1h1v-1h1v-1H5z"/></svg>',
    'dxrd-svg-properties-textAlignment-bottom': '<svg data-bind="svgAttrs" version="1.1" id="Bottom_Align_1_" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 32 32" xml:space="preserve"><style>.Black{fill:#727272}</style><path id="Bottom_Align" class="Black" d="M28 18H4v-2h24v2zm0 2H4v2h24v-2zm0 4H4v2h24v-2z"/></svg>',
    'dxrd-svg-properties-textAlignment-center': '<svg data-bind="svgAttrs" version="1.1" id="Align_Center" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 32 32" xml:space="preserve"><style>.Black{fill:#727272}</style><path id="Align_Center_1_" class="Black" d="M28 8H4V6h24v2zm-4 2H8v2h16v-2zm4 4H4v2h24v-2zm0 8H4v2h24v-2zm-4-4H8v2h16v-2z"/></svg>',
    'dxrd-svg-properties-textAlignment-justify': '<svg data-bind="svgAttrs" version="1.1" id="Align_Justify" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 32 32" xml:space="preserve"><style>.Black{fill:#727272}</style><path id="Align_Justify_2_" class="Black" d="M28 8H4V6h24v2zm0 2H4v2h24v-2zm0 4H4v2h24v-2zm0 8H4v2h24v-2zm0-4H4v2h24v-2z"/></svg>',
    'dxrd-svg-properties-textAlignment-left': '<svg data-bind="svgAttrs" version="1.1" id="Align_Left" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 32 32" xml:space="preserve"><style>.Black{fill:#727272}</style><path id="Align_Left_2_" class="Black" d="M28 8H4V6h24v2zm-8 2H4v2h16v-2zm8 4H4v2h24v-2zm0 8H4v2h24v-2zm-8-4H4v2h16v-2z"/></svg>',
    'dxrd-svg-properties-textAlignment-middle': '<svg data-bind="svgAttrs" version="1.1" id="Middle_Align" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 32 32" xml:space="preserve"><style>.Black{fill:#727272}</style><path id="Middle_Align_1_" class="Black" d="M28 12H4v-2h24v2zm0 2H4v2h24v-2zm0 4H4v2h24v-2z"/></svg>',
    'dxrd-svg-properties-textAlignment-right': '<svg data-bind="svgAttrs" version="1.1" id="Align_Right" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 32 32" xml:space="preserve"><style>.Black{fill:#727272}</style><path id="Align_Right_2_" class="Black" d="M28 8H4V6h24v2zm0 2H12v2h16v-2zm0 4H4v2h24v-2zm0 8H4v2h24v-2zm0-4H12v2h16v-2z"/></svg>',
    'dxrd-svg-properties-textAlignment-top': '<svg data-bind="svgAttrs" version="1.1" id="Top_Align" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 32 32" xml:space="preserve"><style>.Black{fill:#727272}</style><path id="Top_Align_1_" class="Black" d="M28 6H4V4h24v2zm0 2H4v2h24V8zm0 4H4v2h24v-2z"/></svg>',
    'dxrd-svg-queryBuilder-aggregate': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M21 0H3v4l8 8-8 8v4h18v-4H7l8-8-8-8h14z"/></svg>',
    'dxrd-svg-queryBuilder-data_preview': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M21.7 20.3l-2.5-2.5c.5-.8.8-1.8.8-2.8 0-2.8-2.2-5-5-5s-5 2.2-5 5 2.2 5 5 5c1 0 2-.3 2.8-.8l2.5 2.5c.4.4 1 .4 1.4 0 .4-.4.4-1 0-1.4zM15 18c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3z"/><ellipse class="dxd-icon-fill" cx="8" cy="2" rx="6" ry="2"/><path class="dxd-icon-fill" d="M8.7 13s-.1 0 0 0c-.1 0-.1 0 0 0H7.3C4.4 12.8 2 12 2 11v5c0 1 2.6 1.9 5.4 2H9c-.4-.9-.7-1.9-.7-2.9.1-.8.2-1.5.4-2.1zM14 8.2V4c0 1.1-2.9 2-6 2s-6-.9-6-2v5c0 1.1 2.9 2 6 2 .6 0 1.2 0 1.7-.1 1-1.4 2.5-2.4 4.3-2.7z"/></svg>',
    'dxrd-svg-queryBuilder-group_by': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M2 4h14v6H2zM8 14h14v6H8z"/></svg>',
    'dxrd-svg-queryBuilder-select_statment': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M18 4l-4-4v4zM21.7 22.3l-4.5-4.5c.5-.8.8-1.8.8-2.8 0-2.8-2.2-5-5-5s-5 2.2-5 5 2.2 5 5 5c1 0 2-.3 2.8-.8l4.5 4.5c.4.4 1 .4 1.4 0s.4-1 0-1.4zM13.1 18c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.4 3-3 3z"/><path class="dxd-icon-fill" d="M13 8c2 0 3.7.8 5 2.1V6h-6V0H0v20h8.1C6.8 18.7 6 17 6 15c0-3.9 3.1-7 7-7z"/></svg>',
    'dxrd-svg-queryBuilder-sorting_asc': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M8 0H4v14H2l4 8 4-8H8zM14 14h6l-6 6v2h8v-2h-6l6-6v-2h-8zM19.4 0L14 10h2l.9-2H20v2h2V0h-2.6zm.6 6h-1.9L20 2v4z"/></svg>',
    'dxrd-svg-queryBuilder-sorting_desc': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M8 0H4v14H2l4 8 4-8H8zM22 0h-8v2h6l-6 6v2h8V8h-6l6-6zM14 22h2l.9-2H20v2h2V12h-2.6L14 22zm6-4h-1.9l1.9-4v4z"/></svg>',
    'dxrd-svg-tabs-properties': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M21.6 10.4l-2.6-.3c-.2 0-.3-.2-.4-.3-.1-.3-.2-.6-.3-.8-.1-.2-.1-.4 0-.5l1.5-2.1c.1-.2.1-.5 0-.7l-1.5-1.5c-.2-.2-.5-.2-.7 0l-2.1 1.5c-.2.1-.4.1-.5 0-.3-.1-.5-.2-.8-.3-.1-.1-.2-.2-.3-.4l-.4-2.5c0-.2-.2-.4-.5-.4h-2.1c-.2 0-.5.2-.5.4L10.1 5c0 .2-.2.3-.3.4l-.9.3c-.2.1-.4.1-.5 0L6.3 4.1c-.2-.1-.4-.1-.6.1L4.2 5.7c-.2.2-.2.4-.1.6l1.5 2.1c.1.2.1.4 0 .5 0 .3-.1.6-.2.8-.1.2-.2.3-.4.4l-2.5.4c-.2 0-.4.2-.4.5v2.1c0 .2.2.5.4.5l2.5.3c.2 0 .3.2.4.3.1.3.2.6.3.8.1.2.1.4 0 .5l-1.5 2.1c-.1.2-.1.5 0 .7l1.5 1.5c.2.2.5.2.7 0l2.1-1.5c.2-.1.4-.1.5 0 .3.1.5.2.8.3.2.1.3.2.3.4.1.6.3 1.9.4 2.6 0 .2.2.4.5.4h2.1c.2 0 .5-.2.5-.4l.4-2.5c0-.2.2-.3.3-.4.3-.1.6-.2.8-.3.2-.1.4-.1.5 0l2.1 1.5c.2.1.5.1.7 0l1.5-1.5c.2-.2.2-.5 0-.7l-1.5-2.1c-.1-.2-.1-.4 0-.5.1-.3.2-.5.3-.8.1-.2.2-.3.4-.3l2.5-.4c.2 0 .4-.2.4-.5V11c0-.3-.2-.5-.4-.6zM12 17c-2.8 0-5-2.2-5-5s2.2-5 5-5 5 2.2 5 5-2.2 5-5 5zm2-5c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2z"/></svg>',
    'dxrd-svg-toolbar-copy': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M4 14h2v2H3c-.5 0-1-.5-1-1V3c0-.5.5-1 1-1h12c.5 0 1 .5 1 1v3h-2V4H4v10zm18-5v12c0 .5-.5 1-1 1H9c-.5 0-1-.5-1-1V9c0-.5.5-1 1-1h12c.5 0 1 .5 1 1zm-2 1H10v10h10V10z"/></svg>',
    'dxrd-svg-toolbar-cut': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M20.4 5.6l-5 5-2-2 6.4-6.4c.4-.4 1.2-.1 1.2.5v1.5c0 .5-.2 1-.6 1.4zM22 17.5c.3 2.6-1.9 4.9-4.5 4.5-1.6-.2-2.9-1.4-3.3-3-.2-.9-.1-1.8.2-2.6L12 14l-2.4 2.4c.4.7.5 1.6.3 2.6-.4 1.6-1.7 2.8-3.3 3-2.6.3-4.9-1.9-4.5-4.5.2-1.6 1.4-2.9 3-3.3.9-.3 1.8-.2 2.5.2L10 12 3.6 5.6c-.4-.4-.6-.9-.6-1.4V2.7c0-.6.8-.9 1.2-.5l12.1 12.1c.8-.3 1.7-.5 2.6-.2 1.6.4 2.9 1.8 3.1 3.4zM8 18c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2zm12 0c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2z"/></svg>',
    'dxrd-svg-toolbar-delete': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M13.4 12l5.3-5.3c.4-.4.4-1 0-1.4-.4-.4-1-.4-1.4 0L12 10.6 6.7 5.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4l5.3 5.3-5.3 5.3c-.4.4-.4 1 0 1.4.4.4 1 .4 1.4 0l5.3-5.3 5.3 5.3c.4.4 1 .4 1.4 0 .4-.4.4-1 0-1.4L13.4 12z"/></svg>',
    'dxrd-svg-toolbar-paste': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M21 8H9c-.5 0-1 .5-1 1v12c0 .5.5 1 1 1h12c.5 0 1-.5 1-1V9c0-.5-.5-1-1-1zm-1 12H10V10h10v10zM15 2v3H7V2h2V1c0-.6.4-1 1-1h2c.6 0 1 .4 1 1v1h2zm3 4h2V3c0-.5-.5-1-1-1h-3v2h2v2zM6 20H3c-.5 0-1-.5-1-1V3c0-.5.5-1 1-1h3v2H4v14h2v2z"/></svg>',
    'dxrd-svg-toolbar-redo': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M10 7c2.2 0 4.3.8 5.7 2.3l3.3 3.3V8c0-.6.4-1 1-1s1 .4 1 1v8h-8c-.6 0-1-.4-1-1s.4-1 1-1h4.6l-3.3-3.3C13.2 9.6 11.7 9 10 9c-3.3 0-6 2.7-6 6 0 .6-.4 1-1 1s-1-.4-1-1c0-4.4 3.6-8 8-8z"/></svg>',
    'dxrd-svg-toolbar-undo': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M14 7c-2.2 0-4.3.8-5.7 2.3L5 12.6V8c0-.6-.4-1-1-1s-1 .4-1 1v8h8c.6 0 1-.4 1-1s-.4-1-1-1H6.4l3.3-3.3C10.8 9.6 12.3 9 14 9c3.3 0 6 2.7 6 6 0 .6.4 1 1 1s1-.4 1-1c0-4.4-3.6-8-8-8z"/></svg>',
    'dxrd-svg-toolbar-validate': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M22 6L8 20l-6-6v-4l6 6L22 2v4z"/></svg>',
    'dxrd-svg-toolbar-zoomin': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path id="ZoomIn" class="dxd-icon-fill" d="M19 11h-6V5c0-.5-.5-1-1-1s-1 .5-1 1v6H5c-.5 0-1 .5-1 1s.5 1 1 1h6v6c0 .5.5 1 1 1s1-.5 1-1v-6h6c.5 0 1-.5 1-1s-.5-1-1-1z"/></svg>',
    'dxrd-svg-toolbar-zoomout': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path id="ZoomOut" class="dxd-icon-fill" d="M19 13H5c-.5 0-1-.4-1-1 0-.5.4-1 1-1h14c.5 0 1 .4 1 1s-.4 1-1 1z"/></svg>',
    'dxrd-svg-wizard-Download': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 24 24" xml:space="preserve"><path class="dxd-icon-fill" d="M7 12l5 5 5-5h-4V2h-2v10H7zm8-4v2h4v10H5V10h4V8H3v14h18V8h-6z"/></svg>',
    'dxrd-svg-wizard-expressions': '<svg data-bind="svgAttrs" version="1.1" id="Tabs" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 32 32" xml:space="preserve"><path class="dxd-icon-fill" d="M25.6 4.3c-.3-.4-.7-.7-1.2-1-.6-.2-1.3-.3-2.2-.3-1.8 0-3.3.4-4.5 1.3s-1.9 2.1-2.2 3.6l-.3 1.4-.4 1.7h-2.4l-.4 2h2.4L12 24.3c-.2 1.3-.7 1.9-1.3 1.9-.2 0-.3 0-.4-.1l-.4-.4c-.3-.4-.6-.7-.7-.8-.2-.2-.4-.3-.6-.4-.2-.1-.4-.1-.7-.1-.5 0-1 .2-1.3.6-.4.4-.6.9-.6 1.5 0 .7.4 1.3 1.2 1.9.6.4 1.5.6 2.6.6s2.1-.2 2.9-.6 1.5-1.1 2.2-2c.6-.9 1.1-2.1 1.4-3.4l2.3-9.9H21l.5-2H19l.4-1.7.4-1.6c.2-.8.3-1.2.5-1.5.2-.3.5-.5.9-.5.2 0 .3 0 .5.1s.4.3.7.7c.3.3.6.6.9.7s.6.2.9.2c.4 0 .7-.1 1-.2.3-.2.5-.4.7-.7.2-.3.3-.7.3-1-.2-.5-.3-.9-.6-1.3z" id="Expressions"/></svg>',
    'dxrd-svg-wizard-JsonDataSource': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 96 96" xml:space="preserve"><style>.Black{fill:#727272}.Blue{fill:#1177d7}.st1{opacity:.25}.st2{opacity:.5}</style><g id="JSON"><g class="st2"><path class="Black" d="M63.6 72.5c-.1-.2-.2-.4-.3-.7-.5-1.4-.8-2.9-.9-4.4-.1-2.3.4-4.5 1.5-6.3.7-1.2 1.7-2.4 2.8-3.2.4-.3 1.1-.7 1.1-.7s.5-.3 1.2-.6c.1.1.2.1.3.2 1.7 1.2 3 2.8 3.9 4.6.3.7.6 1.5.8 2.3v2.8c0 2.4-4.1 4.6-10.4 6zm-20.4-2.2c-.3-2.6-.3-5.3.2-7.9.4-2.3 1.2-4.5 2.2-6.5C48.9 49.5 55 44.6 62 42.8c1.4-.4 4.2-.8 5.8-.8 1.4 0 4.4.6 6.2 1.4v-22c0 4.2-11.6 7.6-26 7.6s-26-3.4-26-7.6v45c0 3.8 9.5 6.9 21.9 7.5-.3-1.2-.5-2.4-.7-3.6z"/></g><g class="st1"><ellipse class="Black" cx="48" cy="19.5" rx="26" ry="7.5"/></g><path class="Blue" d="M91.8 70.1c-.3 2.4-1 4.8-2 7-1.2 2.5-2.9 4.9-4.9 6.9-2.2 2.1-4.8 4-7.6 5.2-2 .9-5.5 1.9-9.1 1.9-1 0-3.3-.6-4.7-1.1-2.4-1-4.6-2.5-6.3-4.5-1.1-1.3-2-2.8-2.7-4.3-1.1-2.5-1.7-5.3-1.9-8.1-.1-2-.1-4 .2-5.9.5-3.1 1.8-6.2 4.1-8.5.4-.4 1.9-1.6 2.7-2.1.8-.5 3.2-1.3 4.5-1.4 1-.1 2 0 2.9.2-.5.3-1 .6-1.4 1-1.4 1-2.5 2.3-3.3 3.8-1.3 2.2-1.8 4.8-1.7 7.3 0 1.7.4 3.5 1 5.1.5 1.3 1.2 2.5 2.1 3.5.7.8 1.6 1.6 2.5 2.2.5.3 1 .7 1.6.9.5.2 1 .4 1.5.5 3.1.7 6.4-.4 8.9-2.2 1.5-1.1 2.8-2.6 3.8-4.2 1.4-2.2 2.2-4.7 2.5-7.2.2-1.5.2-3 .1-4.5-.1-2-.4-4.1-1-6-.8-3-2.3-5.8-4.4-8.1-.9-1-2-1.9-3.1-2.7-.2-.2-.5-.3-.7-.4-.2-.1-.5-.3-.7-.4 1.5.4 3 1 4.4 1.7 3.9 2 7.3 4.9 9.6 8.6.7 1 1.2 2.1 1.7 3.2.8 1.8 1.3 3.7 1.6 5.6.1 2.3.1 4.7-.2 7zm-40.1 8.6c-.6-2-.9-4.2-1-6.5-.1-1.5-.1-2.9.1-4.3.3-2.8 1.1-5.4 2.4-7.5 1-1.7 2.3-3.2 3.8-4.4 1.1-.8 2.3-1.5 3.5-1.9 1.3-.5 2.6-.7 4-.7.5 0 1.1 0 1.6.1.7.1 1.4.3 2 .5.1.1.7.3.8.4.4.2.9.5 1.5.9 2 1.4 3.5 3.2 4.5 5.4.9 1.9 1.3 4 1.4 6.3 0 2.4-.4 4.7-1.4 6.7-.8 1.7-2 3.3-3.4 4.5 2.2-.2 4.5-1.2 6.4-3 .4-.3.7-.7 1-1.1.5-.6.9-1.1 1.2-1.5.4-.7.8-1.4 1.2-2.2.5-1.1.8-2.1 1-3.1.3-1.7.4-3.5.3-5.8-.3-4.3-1.5-8-3.5-10.9-.4-.6-.7-1-1-1.4-.6-.7-1.3-1.3-2-2-.8-.7-1.1-.9-2.5-1.7S69 44 67.8 44c-1.3 0-4 .3-5.4.6-6.5 1.7-12 6.2-15 12.2-.9 1.9-1.6 3.9-2 6-.5 2.4-.5 4.8-.2 7.2.2 2 .7 3.9 1.5 5.7.4 1 .9 2.1 1.6 3.1 1.8 2.9 4.2 5.3 7.2 7.2-1.7-1.9-3-4.5-3.8-7.3z"/></g></svg>',
    'dxrd-svg-wizard-NoDataSource': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 96 96" xml:space="preserve"><style>.Black{fill:#727272}.White{fill:#fff}.Red{fill:#d11c1c}.st1{opacity:.25}.st2{opacity:.5}</style><g id="NoData"><g class="st2"><path class="Black" d="M44 68c0-12.2 9.8-22 22-22 1.4 0 2.7.1 4 .4v-24c0 4.2-11.6 7.6-26 7.6s-26-3.4-26-7.6v45c0 4.2 11.6 7.6 26 7.6h1.1c-.7-2.2-1.1-4.6-1.1-7z"/></g><g class="st1"><ellipse class="Black" cx="44" cy="20.5" rx="26" ry="7.5"/></g><circle class="Red" cx="66" cy="68" r="20"/><path class="White" d="M53.4 77.8C51.3 75.1 50 71.7 50 68c0-8.8 7.2-16 16-16 3.7 0 7.1 1.3 9.8 3.4L53.4 77.8zm25.2-19.6L56.2 80.6c2.7 2.1 6.1 3.4 9.8 3.4 8.8 0 16-7.2 16-16 0-3.7-1.3-7.1-3.4-9.8z"/></g></svg>',
    'dxrd-svg-wizard-ObjectDataSource': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 96 96" xml:space="preserve"><style>.Black{fill:#727272}.Blue{fill:#1177d7}.st1{opacity:.25}.st2{opacity:.5}</style><g id="ObjectBinding"><g class="st2"><path class="Black" d="M64.7 71H64V59h6v7.4c0 1.8-2 3.3-5.3 4.6zM52 52v7h12v-7H52zm-18 7h12V46h18v-7h6V21.4c0 4.2-11.6 7.6-26 7.6s-26-3.4-26-7.6v45c0 3.1 6.6 5.8 16 7V59z"/></g><g class="st1"><ellipse class="Black" cx="44" cy="19.5" rx="26" ry="7.5"/></g><path class="Blue" d="M82 41H66v7H48v13H36v26h26V75h13V57h7V41zm-9 32H62V61H50V50h16v7h7v16z"/></g></svg>',
    'dxrd-svg-wizard-SqlDataSource': '<svg data-bind="svgAttrs" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 96 96" xml:space="preserve"><style>.Black{fill:#727272}.st1{opacity:.25}.st2{opacity:.5}</style><g id="Database"><g class="st2"><path class="Black" d="M48 29c-14.4 0-26-3.4-26-7.6v45c0 4.2 11.6 7.6 26 7.6s26-3.4 26-7.6v-45c0 4.2-11.6 7.6-26 7.6z"/></g><g class="st1"><ellipse class="Black" cx="48" cy="19.5" rx="26" ry="7.5"/></g></g></svg>',
});


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var select_box_1 = __webpack_require__(197);
var menu_1 = __webpack_require__(198);
var _keyboardHelperWithArrowButtonBase_1 = __webpack_require__(72);
var _controlElementWithParentHighlight_1 = __webpack_require__(71);
var localization_utils_1 = __webpack_require__(3);
var ToolbarKeyboardHelper = (function (_super) {
    __extends(ToolbarKeyboardHelper, _super);
    function ToolbarKeyboardHelper(_buttonModels) {
        var _this = _super.call(this) || this;
        _this._buttonModels = _buttonModels;
        _this.controlElementClassName = 'dx-accessibility-toolbar-item';
        _this.liveRegionId = 'dxrd-preview-toolbar-live-region';
        _this._disposables.push(ko.computed(function () {
            _this.buttonModels.forEach(function (button) { ko.unwrap(button.visible); });
            setTimeout(function () { return _this.initialize(); }, 100);
        }));
        return _this;
    }
    ToolbarKeyboardHelper.prototype.createControlElement = function (element, index) {
        if (ko.unwrap(this.buttonModels[index].visible))
            return new ToolbarItemElement(element, this.getContainer(), this.buttonModels[index], this.liveRegion.bind(this));
    };
    ToolbarKeyboardHelper.prototype.itemHandleEnterKey = function (e, index) {
        var item = this.controlElements[index];
        item.actionExecute();
        return true;
    };
    ToolbarKeyboardHelper.prototype.itemHandleSpaceKey = function (e, index) {
        var item = this.controlElements[index];
        item.actionExecute();
        return true;
    };
    ToolbarKeyboardHelper.prototype.itemHandleLeftArrowKey = function (e, index) {
        this.setFocusToPrevious(index);
        return true;
    };
    ToolbarKeyboardHelper.prototype.itemHandleRightArrowKey = function (e, index) {
        this.setFocusToNext(index);
        return true;
    };
    Object.defineProperty(ToolbarKeyboardHelper.prototype, "buttonModels", {
        get: function () {
            return ko.unwrap(this._buttonModels);
        },
        enumerable: true,
        configurable: true
    });
    return ToolbarKeyboardHelper;
}(_keyboardHelperWithArrowButtonBase_1.KeyboardHelperWithArrowButtonBase));
exports.ToolbarKeyboardHelper = ToolbarKeyboardHelper;
var ToolbarItemElement = (function (_super) {
    __extends(ToolbarItemElement, _super);
    function ToolbarItemElement(element, _toolbarElement, _toolbarItemModel, _liveRegion) {
        var _this = _super.call(this, element, _toolbarElement) || this;
        _this.element = element;
        _this._toolbarItemModel = _toolbarItemModel;
        _this._liveRegion = _liveRegion;
        _this._selectBox = select_box_1.default.getInstance(element.children[0]);
        _this._menu = menu_1.default.getInstance(element.children[0]);
        return _this;
    }
    ToolbarItemElement.prototype._complexItem = function () {
        if (this._selectBox || this._menu)
            return true;
        return false;
    };
    ToolbarItemElement.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._menu = null;
        this._selectBox = null;
    };
    ToolbarItemElement.prototype.setFocus = function () {
        if (this._complexItem() && this.element.getAttribute('aria-disabled') !== 'true')
            this._liveRegion().changeText(localization_utils_1.getLocalization('press Enter or Space to activate the editor', 'ASPxReportsStringId.WebDocumentViewer_AriaActivateEditor'), 200);
        else
            this._liveRegion().changeText('');
        return _super.prototype.setFocus.call(this);
    };
    ToolbarItemElement.prototype.actionExecute = function () {
        if (this._complexItem()) {
            this._liveRegion().changeText(localization_utils_1.getLocalization('Press Alt ↓ or Alt  ↑ to navigate the editor. Press Shift Tab to exit navigation mode.', 'ASPxReportsStringId.WebDocumentViewer_AriaEditorKeyboardNavigation'), 500);
        }
        if (this._selectBox) {
            this._selectBox.focus();
            return;
        }
        if (this._menu) {
            this._menu.focus();
            return;
        }
        if (!ko.unwrap(this._toolbarItemModel.disabled))
            this._toolbarItemModel.clickAction();
    };
    return ToolbarItemElement;
}(_controlElementWithParentHighlight_1.ControlElementWithParentHighlight));


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _keyboardHelperBase_1 = __webpack_require__(49);
var AccordionKeyboardHelper = (function (_super) {
    __extends(AccordionKeyboardHelper, _super);
    function AccordionKeyboardHelper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.controlElementClassName = 'dxrd-accessibility-accordion-trigger';
        _this.focusFirstFocusableDescendant = true;
        return _this;
    }
    AccordionKeyboardHelper.prototype._getElementsCount = function () {
        return Array.prototype.slice.call(this.getContainer().querySelectorAll('.' + this.controlElementClassName)).length;
    };
    AccordionKeyboardHelper.prototype._defferedInit = function () {
        var _this = this;
        setTimeout(function () {
            if (_this.controlElements.length !== _this._getElementsCount()) {
                _this.initialize();
            }
        }, 20);
    };
    AccordionKeyboardHelper.prototype._collapseItem = function (item) {
        var collapsed = ko.dataFor(item).collapsed;
        collapsed(!collapsed());
        this._defferedInit();
    };
    AccordionKeyboardHelper.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.setTabIndexes(0);
    };
    AccordionKeyboardHelper.prototype.itemHandleUpArrowKey = function (e, index) {
        this.setFocusToPrevious(index);
        return true;
    };
    AccordionKeyboardHelper.prototype.itemHandleDownArrowKey = function (e, index) {
        this.setFocusToNext(index);
        return true;
    };
    AccordionKeyboardHelper.prototype.itemHandleEnterKey = function (e, index) {
        this._collapseItem(e.target);
        return true;
    };
    AccordionKeyboardHelper.prototype.itemHandleSpaceKey = function (e, index) {
        this._collapseItem(e.target);
        return true;
    };
    AccordionKeyboardHelper.prototype.clickHandler = function (e, index) {
        this._defferedInit();
        _super.prototype.clickHandler.call(this, e, index);
    };
    return AccordionKeyboardHelper;
}(_keyboardHelperBase_1.AccessibilityKeyboardHelperBase));
exports.AccordionKeyboardHelper = AccordionKeyboardHelper;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _controlElementBase_1 = __webpack_require__(39);
var _listKeyboardHelper_1 = __webpack_require__(73);
var TreeListKeyboardHelper = (function (_super) {
    __extends(TreeListKeyboardHelper, _super);
    function TreeListKeyboardHelper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.controlElementClassName = 'dx-accessibility-treelist-item';
        return _this;
    }
    TreeListKeyboardHelper.prototype._setFocusToParentNode = function (item, index) {
        var offset = 1;
        var parentItems = item.parent.items();
        var indexOfParent = parentItems.indexOf(item);
        var getChildCount = function (item, _offset) {
            if (item.hasItems && !item.collapsed()) {
                item.items().forEach(function (element) {
                    _offset += getChildCount(element, 0);
                });
            }
            _offset += 1;
            return _offset;
        };
        for (var i = 0; i < indexOfParent; i++) {
            offset += getChildCount(parentItems[i], 0);
        }
        this.changeFocus(index - offset);
    };
    TreeListKeyboardHelper.prototype._toggleCollapsed = function (item, model) {
        this.startIndex = this.getIndexByElement(item);
        model.toggleCollapsed();
    };
    TreeListKeyboardHelper.prototype._toggleSelected = function (el) {
        this._getItemModel(el).toggleSelected();
    };
    TreeListKeyboardHelper.prototype._getItemModel = function (el) {
        return ko.dataFor(el);
    };
    TreeListKeyboardHelper.prototype.createControlElement = function (element, index) {
        return new _controlElementBase_1.AccessibilityControlElementBase(element);
    };
    TreeListKeyboardHelper.prototype.itemHandleLeftArrowKey = function (e, index) {
        var item = this._getItemModel(e.target);
        if (item.hasItems && !item.collapsed()) {
            this._toggleCollapsed(e.target, item);
        }
        else {
            this._setFocusToParentNode(item, index);
        }
        return true;
    };
    TreeListKeyboardHelper.prototype.itemHandleRightArrowKey = function (e, index) {
        var item = this._getItemModel(e.target);
        if (item.hasItems) {
            if (item.collapsed())
                this._toggleCollapsed(e.target, item);
            else
                this.changeFocus(index + 1, false);
        }
        return true;
    };
    TreeListKeyboardHelper.prototype.itemHandleEnterKey = function (e, index) {
        this._toggleSelected(e.target);
        return true;
    };
    TreeListKeyboardHelper.prototype.itemHandleSpaceKey = function (e, index) {
        this._toggleSelected(e.target);
        return true;
    };
    TreeListKeyboardHelper.prototype.clickHandler = function (e, index) {
        _super.prototype.clickHandler.call(this, e, index);
        this.startIndex = index;
    };
    return TreeListKeyboardHelper;
}(_listKeyboardHelper_1.ListKeyboardHelper));
exports.TreeListKeyboardHelper = TreeListKeyboardHelper;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorsInfo_1 = __webpack_require__(17);
exports.ExpressionType = 'DevExpress.DataAccess.Expression';
function IsDataAccessExpression(type) {
    return type === exports.ExpressionType;
}
exports.IsDataAccessExpression = IsDataAccessExpression;
exports.editorTypeMapper = {
    'Enum': editorsInfo_1.editorTemplates.getEditor('combobox'),
    'System.String': editorsInfo_1.editorTemplates.getEditor('text'),
    'System.Guid': editorsInfo_1.editorTemplates.getEditor('guid'),
    'System.SByte': editorsInfo_1.editorTemplates.getEditor('sbyte'),
    'System.Decimal': editorsInfo_1.editorTemplates.getEditor('decimal'),
    'System.Int64': editorsInfo_1.editorTemplates.getEditor('int64'),
    'System.Int32': editorsInfo_1.editorTemplates.getEditor('int32'),
    'System.Int16': editorsInfo_1.editorTemplates.getEditor('int16'),
    'System.Single': editorsInfo_1.editorTemplates.getEditor('single'),
    'System.Double': editorsInfo_1.editorTemplates.getEditor('double'),
    'System.Byte': editorsInfo_1.editorTemplates.getEditor('byte'),
    'System.UInt16': editorsInfo_1.editorTemplates.getEditor('uint16'),
    'System.UInt32': editorsInfo_1.editorTemplates.getEditor('uint32'),
    'System.UInt64': editorsInfo_1.editorTemplates.getEditor('uint64'),
    'System.Boolean': editorsInfo_1.editorTemplates.getEditor('boolSelect'),
    'System.DateTime': editorsInfo_1.editorTemplates.getEditor('date'),
    'DevExpress.DataAccess.Expression': editorsInfo_1.editorTemplates.getEditor('expressionEditor')
};
function getEditorType(typeString) {
    return exports.editorTypeMapper[typeString] || editorsInfo_1.editorTemplates.getEditor('text');
}
exports.getEditorType = getEditorType;


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _localization_1 = __webpack_require__(8);
var localization = __webpack_require__(148);
function initGlobalize(settings) {
    var globalize = _localization_1.Globalize;
    if (globalize && settings) {
        settings.cldrSupplemental && globalize.load(settings.cldrSupplemental);
        settings.cldrData && globalize.load(settings.cldrData);
        if (settings.currentCulture) {
            globalize.locale(settings.currentCulture);
            localization['locale'] && localization['locale'](settings.currentCulture);
        }
    }
}
exports.initGlobalize = initGlobalize;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var ObjectStructureTreeListController = (function () {
    function ObjectStructureTreeListController(propertyNames, listPropertyNames) {
        var _this = this;
        this.selectedItem = null;
        this.itemsFilter = function (item, path) {
            var realPropertyName = item.name.split('.')[0];
            return propertyNames ? propertyNames.indexOf(realPropertyName) !== -1 || $.isNumeric(realPropertyName) : true;
        };
        this.hasItems = function (item) {
            var realPropertyName = item.name.split('.')[0];
            return item.isList || (listPropertyNames ? listPropertyNames.indexOf(realPropertyName) !== -1 : false);
        };
        this.getActions = function (item) {
            return item.data && item.data['innerActions'] || [];
        };
        this.select = function (value) {
            _this.selectedItem && _this.selectedItem.isSelected(false);
            _this.selectedItem = value;
            value.isSelected(true);
        };
        this.showIconsForChildItems = function () { return true; };
    }
    ObjectStructureTreeListController.prototype.dispose = function () {
        this.selectedItem = null;
    };
    ObjectStructureTreeListController.prototype.canSelect = function (value) {
        return true;
    };
    return ObjectStructureTreeListController;
}());
exports.ObjectStructureTreeListController = ObjectStructureTreeListController;


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var localization_utils_1 = __webpack_require__(3);
var ObjectStructureProviderBase = (function (_super) {
    __extends(ObjectStructureProviderBase, _super);
    function ObjectStructureProviderBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selectedPath = ko.observable('');
        _this.selectedMember = ko.observable();
        return _this;
    }
    ObjectStructureProviderBase.prototype.getClassName = function (instance) {
        if (instance.className && instance.className()) {
            return instance.className();
        }
        var funcNameRegex = /function (.{1,})\(/;
        var results = (funcNameRegex).exec((instance).constructor.toString());
        return (results && results.length > 1) ? results[1] : '';
    };
    ObjectStructureProviderBase.prototype.createItem = function (currentTarget, propertyName, propertyValue, result) {
        var targetInfo = currentTarget.getInfo && currentTarget.getInfo();
        var propertyInfo = targetInfo && targetInfo.filter(function (propertyInfo) { return propertyInfo.propertyName === propertyName; })[0], unwrapPropertyValue = ko.unwrap(propertyValue);
        if (propertyInfo && unwrapPropertyValue !== null && typeof unwrapPropertyValue === 'object') {
            result.push({
                name: propertyName,
                displayName: localization_utils_1.getLocalization(propertyInfo.displayName, propertyInfo.localizationId),
                specifics: propertyName,
                innerActions: unwrapPropertyValue['innerActions'],
                isList: !!unwrapPropertyValue.push
            });
        }
    };
    ObjectStructureProviderBase.prototype.getMemberByPath = function (target, path) {
        var pathComponents = path.split('.'), currentTarget = target;
        pathComponents.splice(0, 1);
        pathComponents.forEach(function (member) {
            if (currentTarget && currentTarget[member]) {
                currentTarget = ko.unwrap(currentTarget[member]);
            }
        });
        return currentTarget;
    };
    ObjectStructureProviderBase.prototype.getObjectPropertiesForPath = function (target, path, propertyName) {
        var currentTarget = this.getMemberByPath(target, path), result = [];
        if (currentTarget) {
            if (currentTarget.push) {
                this.createArrayItem(currentTarget, result, propertyName);
            }
            else {
                for (var name in currentTarget) {
                    this.createItem(currentTarget, name, currentTarget[name], result);
                }
            }
        }
        return result;
    };
    ObjectStructureProviderBase.prototype.createArrayItem = function (currentTarget, result, propertyName) {
        for (var i = 0; i < currentTarget.length; i++) {
            var unwrapArrayValue = ko.unwrap(currentTarget[i]);
            result.push({
                name: propertyName ? propertyName + '.' + i.toString() : i.toString(),
                displayName: ko.unwrap(unwrapArrayValue['displayName'] || unwrapArrayValue['name']),
                specifics: this.getClassName(unwrapArrayValue),
                innerActions: unwrapArrayValue['innerActions'],
                isList: !!unwrapArrayValue.push
            });
        }
    };
    return ObjectStructureProviderBase;
}(utils_1.Disposable));
exports.ObjectStructureProviderBase = ObjectStructureProviderBase;
var ObjectExplorerProvider = (function (_super) {
    __extends(ObjectExplorerProvider, _super);
    function ObjectExplorerProvider(rootITems, listPropertyNames, member, getPathByMember) {
        var _this = _super.call(this) || this;
        _this.path = ko.observable('');
        _this.getPathByMember = getPathByMember;
        _this.listPropertyNames = listPropertyNames || [];
        _this.getItems = function (pathRequest) {
            var result = $.Deferred();
            if (!pathRequest.fullPath) {
                result.resolve((rootITems || []).map(function (item) {
                    return { name: item.name, displayName: localization_utils_1.getLocalization(item.displayName) || item.name, isList: true, specifics: item.className, dragData: { noDragable: true }, data: ko.unwrap(item.data) };
                }));
            }
            else {
                var target = rootITems.filter(function (item) { return item.name === pathRequest.fullPath.split('.')[0]; })[0];
                result.resolve(_this.getObjectPropertiesForPath(ko.unwrap(target.model), pathRequest.fullPath, target.name));
            }
            return result.promise();
        };
        _this._disposables.push(_this.selectedPath = ko.computed({
            read: function () {
                if (member()) {
                    if (_this.path.peek()) {
                        return _this.getPathByMember(member()).substr(_this.path.peek().length + 1);
                    }
                    else {
                        return _this.getPathByMember(member());
                    }
                }
                else {
                    return null;
                }
            },
            write: function (newVal) {
                if (!!newVal) {
                    var root = !!_this.path() ? _this.path().split('.')[0] : newVal.split('.')[0];
                    var rootItem = rootITems.filter(function (x) { return x.name === root; })[0];
                    if (!!rootItem) {
                        member(_this.getMemberByPath(ko.unwrap(rootItem.model), _this.path() ? [_this.path(), newVal].join('.') : newVal));
                    }
                }
                else {
                    member(null);
                }
            }
        }));
        return _this;
    }
    ObjectExplorerProvider.prototype.createArrayItem = function (currentTarget, result, propertyName) {
        for (var i = 0; i < currentTarget.length; i++) {
            var unwrapArrayValue = ko.unwrap(currentTarget[i]), isList = false;
            this.listPropertyNames.forEach(function (name) {
                if (!isList && unwrapArrayValue[name] && ko.unwrap(unwrapArrayValue[name]).length > 0) {
                    isList = true;
                }
            });
            var specifics = this.getClassName(unwrapArrayValue);
            result.push({
                name: propertyName ? propertyName + '.' + i.toString() : i.toString(),
                displayName: ko.unwrap(unwrapArrayValue['displayName'] || unwrapArrayValue['name']),
                specifics: specifics,
                isList: isList,
                data: unwrapArrayValue,
                dragData: {
                    noDragable: !((propertyName === 'bands' && (specifics === 'groupheaderband' || specifics === 'groupfooterband' || specifics === 'detailreportband' || specifics === 'subband')) ||
                        propertyName === 'controls' ||
                        propertyName === 'rows' ||
                        (propertyName === 'cells' && specifics !== 'xrcrosstabcell') ||
                        propertyName === 'subBands' ||
                        propertyName === 'Styles' ||
                        propertyName === 'Formatting Rules')
                }
            });
        }
    };
    ObjectExplorerProvider.prototype.createItem = function (currentTarget, propertyName, propertyValue, result) {
        var isAvailableListProperty = this.listPropertyNames.length > 0 ? this.listPropertyNames.indexOf(propertyName) > -1 : true;
        if (isAvailableListProperty && propertyValue && propertyValue.push) {
            this.createArrayItem(ko.unwrap(propertyValue), result, propertyName);
        }
    };
    return ObjectExplorerProvider;
}(ObjectStructureProviderBase));
exports.ObjectExplorerProvider = ObjectExplorerProvider;
var ObjectStructureProvider = (function (_super) {
    __extends(ObjectStructureProvider, _super);
    function ObjectStructureProvider(target, displayName, localizationId) {
        var _this = _super.call(this) || this;
        _this.getItems = function (pathRequest) {
            var result = $.Deferred();
            if (!pathRequest.fullPath) {
                result.resolve([{ name: displayName || ko.unwrap(target['name']), displayName: localization_utils_1.getLocalization(displayName || ko.unwrap(target['name']), localizationId), isList: true, specifics: target.className && target.className(), dragData: { noDragable: true } }]);
            }
            else {
                result.resolve(_this.getObjectPropertiesForPath(ko.unwrap(target), pathRequest.fullPath));
            }
            return result.promise();
        };
        _this._disposables.push(_this.selectedPath.subscribe(function (path) {
            _this.selectedMember(ko.unwrap(_this.getMemberByPath(ko.unwrap(target), path)));
        }));
        return _this;
    }
    return ObjectStructureProvider;
}(ObjectStructureProviderBase));
exports.ObjectStructureProvider = ObjectStructureProvider;


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.papperKindMapper = {
    A2: { width: 1654, height: 2339 },
    A3: { width: 1169, height: 1654 },
    A3Extra: { width: 1268, height: 1752 },
    A3ExtraTransverse: { width: 1268, height: 1752 },
    A3Rotated: { width: 1654, height: 1169 },
    A3Transverse: { width: 1169, height: 1654 },
    A4: { width: 827, height: 1169 },
    A4Extra: { width: 929, height: 1268 },
    A4Plus: { width: 827, height: 1299 },
    A4Rotated: { width: 1169, height: 827 },
    A4Small: { width: 827, height: 1169 },
    A4Transverse: { width: 827, height: 1169 },
    A5: { width: 583, height: 827 },
    A5Extra: { width: 685, height: 925 },
    A5Rotated: { width: 827, height: 583 },
    A5Transverse: { width: 583, height: 827 },
    A6: { width: 413, height: 583 },
    A6Rotated: { width: 583, height: 413 },
    APlus: { width: 894, height: 1402 },
    B4: { width: 984, height: 1390 },
    B4Envelope: { width: 984, height: 1390 },
    B4JisRotated: { width: 1433, height: 1012 },
    B5: { width: 693, height: 984 },
    B5Envelope: { width: 693, height: 984 },
    B5Extra: { width: 791, height: 1087 },
    B5JisRotated: { width: 1012, height: 717 },
    B5Transverse: { width: 717, height: 1012 },
    B6Envelope: { width: 693, height: 492 },
    B6Jis: { width: 504, height: 717 },
    B6JisRotated: { width: 717, height: 504 },
    BPlus: { width: 1201, height: 1917 },
    C3Envelope: { width: 1276, height: 1803 },
    C4Envelope: { width: 902, height: 1276 },
    C5Envelope: { width: 638, height: 902 },
    C65Envelope: { width: 449, height: 902 },
    C6Envelope: { width: 449, height: 638 },
    CSheet: { width: 1700, height: 2200 },
    DLEnvelope: { width: 433, height: 866 },
    DSheet: { width: 2200, height: 3400 },
    ESheet: { width: 3400, height: 4400 },
    Executive: { width: 725, height: 1050 },
    Folio: { width: 850, height: 1300 },
    GermanLegalFanfold: { width: 850, height: 1300 },
    GermanStandardFanfold: { width: 850, height: 1200 },
    InviteEnvelope: { width: 866, height: 866 },
    IsoB4: { width: 984, height: 1390 },
    ItalyEnvelope: { width: 433, height: 906 },
    JapaneseDoublePostcard: { width: 787, height: 583 },
    JapaneseDoublePostcardRotated: { width: 583, height: 787 },
    JapanesePostcard: { width: 394, height: 583 },
    Ledger: { width: 1700, height: 1100 },
    Legal: { width: 850, height: 1400 },
    LegalExtra: { width: 927, height: 1500 },
    Letter: { width: 850, height: 1100 },
    LetterExtra: { width: 927, height: 1200 },
    LetterExtraTransverse: { width: 927, height: 1200 },
    LetterPlus: { width: 850, height: 1269 },
    LetterRotated: { width: 1100, height: 850 },
    LetterSmall: { width: 850, height: 1100 },
    LetterTransverse: { width: 827, height: 1100 },
    MonarchEnvelope: { width: 388, height: 750 },
    Note: { width: 850, height: 1100 },
    Number10Envelope: { width: 412, height: 950 },
    Number11Envelope: { width: 450, height: 1038 },
    Number12Envelope: { width: 475, height: 1100 },
    Number14Envelope: { width: 500, height: 1150 },
    Number9Envelope: { width: 388, height: 888 },
    PersonalEnvelope: { width: 362, height: 650 },
    Prc16K: { width: 575, height: 846 },
    Prc16KRotated: { width: 575, height: 846 },
    Prc32K: { width: 382, height: 594 },
    Prc32KBig: { width: 382, height: 594 },
    Prc32KBigRotated: { width: 382, height: 594 },
    Prc32KRotated: { width: 382, height: 594 },
    PrcEnvelopeNumber1: { width: 402, height: 650 },
    PrcEnvelopeNumber10: { width: 1276, height: 1803 },
    PrcEnvelopeNumber10Rotated: { width: 1803, height: 1276 },
    PrcEnvelopeNumber1Rotated: { width: 650, height: 402 },
    PrcEnvelopeNumber2: { width: 402, height: 693 },
    PrcEnvelopeNumber2Rotated: { width: 693, height: 402 },
    PrcEnvelopeNumber3: { width: 492, height: 693 },
    PrcEnvelopeNumber3Rotated: { width: 693, height: 492 },
    PrcEnvelopeNumber4: { width: 433, height: 819 },
    PrcEnvelopeNumber4Rotated: { width: 819, height: 433 },
    PrcEnvelopeNumber5: { width: 433, height: 866 },
    PrcEnvelopeNumber5Rotated: { width: 866, height: 433 },
    PrcEnvelopeNumber6: { width: 472, height: 906 },
    PrcEnvelopeNumber6Rotated: { width: 906, height: 472 },
    PrcEnvelopeNumber7: { width: 630, height: 906 },
    PrcEnvelopeNumber7Rotated: { width: 906, height: 630 },
    PrcEnvelopeNumber8: { width: 472, height: 1217 },
    PrcEnvelopeNumber8Rotated: { width: 1217, height: 472 },
    PrcEnvelopeNumber9: { width: 902, height: 1276 },
    PrcEnvelopeNumber9Rotated: { width: 1276, height: 902 },
    Quarto: { width: 846, height: 1083 },
    Standard10x11: { width: 1000, height: 1100 },
    Standard10x14: { width: 1000, height: 1400 },
    Standard11x17: { width: 1100, height: 1700 },
    Standard12x11: { width: 1200, height: 1100 },
    Standard15x11: { width: 1500, height: 1100 },
    Standard9x11: { width: 900, height: 1100 },
    Statement: { width: 550, height: 850 },
    Tabloid: { width: 1100, height: 1700 },
    TabloidExtra: { width: 1169, height: 1800 },
    USStandardFanfold: { width: 1488, height: 1100 },
};


/***/ }),
/* 162 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.data.DataSource };

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var FieldListProvider = (function () {
    function FieldListProvider(fieldListCallback, rootItems, extenders) {
        var _this = this;
        this._extenders = extenders;
        this.getItems = function (pathRequest) {
            var result = $.Deferred();
            var items = [];
            if (_this._beforeFieldListCallback(pathRequest, items)) {
                result.resolve(items);
            }
            else if (rootItems && !pathRequest.fullPath) {
                items.push.apply(items, $.map(rootItems(), function (item) {
                    return { name: item.id || item.ref, displayName: item.name, isList: true, specifics: item.specifics || 'ListSource', dragData: { noDragable: false } };
                }));
                _this._afterFieldListCallBack(pathRequest, items);
                result.resolve(items);
            }
            else {
                _this._patchRequest(pathRequest, rootItems);
                fieldListCallback(pathRequest).done(function (fields) {
                    items.push.apply(items, fields);
                    _this._afterFieldListCallBack(pathRequest, items);
                    result.resolve(items);
                })
                    .fail(function (error) { return result.reject(error); });
            }
            return result.promise();
        };
    }
    FieldListProvider.prototype._patchRequest = function (request, dataSources) {
        if (!dataSources) {
            return;
        }
        var dss = dataSources.peek();
        for (var i = 0; i < dss.length; i++) {
            if (dss[i].id === request.id && !!request.id) {
                request.ref = undefined;
                return;
            }
            if (dss[i].ref === request.ref && !!request.ref) {
                request.id = undefined;
                return;
            }
        }
    };
    FieldListProvider.prototype._beforeFieldListCallback = function (request, items) {
        return !!this._extenders && this._extenders.some(function (extender) { return extender.beforeItemsFilled(request, items); });
    };
    FieldListProvider.prototype._afterFieldListCallBack = function (request, items) {
        this._extenders && this._extenders.forEach(function (extender) { extender.afterItemsFilled && extender.afterItemsFilled(request, items); });
    };
    return FieldListProvider;
}());
exports.FieldListProvider = FieldListProvider;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _selection_1 = __webpack_require__(105);
var _snapLinesHelper_1 = __webpack_require__(107);
var _dragHelperContent_1 = __webpack_require__(93);
var _selectionDragDropHandler_1 = __webpack_require__(94);
var _toolboxDragDropHandler_1 = __webpack_require__(95);
var tabPanel_1 = __webpack_require__(52);
var _inlineTextEdit_1 = __webpack_require__(101);
var _dragDropHandler_1 = __webpack_require__(31);
var _fonts_1 = __webpack_require__(79);
var _snapLinesCollector_1 = __webpack_require__(77);
var _combinedObj_1 = __webpack_require__(104);
var _utils_1 = __webpack_require__(74);
var localization_utils_1 = __webpack_require__(3);
var _designerCreator_1 = __webpack_require__(112);
function createDesigner(model, surface, controlsFactory, groups, editors, parts, rtl, selection, designControlsHelper, undoEngine, customMerge, snapLinesCollector, groupLocalizationIDs) {
    if (groups === void 0) { groups = {}; }
    if (editors === void 0) { editors = []; }
    var context = new _designerCreator_1.DesignerContextGenerator(rtl)
        .addModel(model)
        .addSurface(surface)
        .addUndoEngine(undoEngine)
        .getContext();
    var designerGenerator = new _designerCreator_1.CommonDesignerGenerator(context, rtl);
    return designerGenerator
        .mapOnContext()
        .addSelection(function (settings) {
        settings.selection = selection || new _selection_1.SurfaceSelection();
        settings.snapHelper = new _snapLinesHelper_1.SnapLinesHelper(surface, _snapLinesHelper_1.SnapLinesHelper.snapTolerance, snapLinesCollector || new _snapLinesCollector_1.SnapLinesCollector());
        settings.editableObject = _combinedObj_1.CombinedObject.getEditableObject(settings.selection, context.undoEngine, customMerge).extend({ throttle: 1 });
        settings.addDragDrop(function (dragDropSettings) {
            dragDropSettings.dragHelperContent = new _dragHelperContent_1.DragHelperContent(settings.selection);
            dragDropSettings.dragDropStarted = _dragDropHandler_1.DragDropHandler.started;
            dragDropSettings.addDragDropHandler('dragHandler', new _selectionDragDropHandler_1.SelectionDragDropHandler(context.surface, settings.selection, context.undoEngine, settings.snapHelper, dragDropSettings.dragHelperContent));
            dragDropSettings.addDragDropHandler('toolboxDragHandler', new _toolboxDragDropHandler_1.ToolboxDragDropHandler(context.surface, settings.selection, context.undoEngine, settings.snapHelper, dragDropSettings.dragHelperContent, controlsFactory));
        });
        settings.addResize(function (resizeSettings) {
            resizeSettings.handler = {
                starting: function () {
                    selection.expectClick = true;
                    context.undoEngine().start();
                },
                stopped: function () {
                    context.undoEngine().end();
                    setTimeout(function () { selection.expectClick = false; }, 100);
                },
                disabled: _dragDropHandler_1.DragDropHandler.started,
                snapHelper: settings.snapHelper
            };
        });
    })
        .addToolboxItems(function () { return _utils_1.getToolboxItems(controlsFactory.controlsMap); })
        .addIsLoading()
        .addControlProperties(editors, groups, groupLocalizationIDs)
        .addPopularProperties(controlsFactory)
        .addControlsHelper(function (settings) {
        settings
            .addControlsHelper(designControlsHelper)
            .addControlsStore();
    })
        .addTabPanel(undefined, function () {
        return [
            new tabPanel_1.TabInfo({
                text: 'Properties',
                template: 'dxrd-propertiestab',
                model: designerGenerator.getModel().propertyGrid,
                localizationId: 'AnalyticsCoreStringId.Cmd_Properties',
                visible: ko.pureComputed(function () { return !!model(); }),
                disabled: ko.pureComputed(function () { return designerGenerator.getModel().propertyGrid.focusedItem() instanceof Array; }).extend({ throttle: 100 })
            })
        ];
    })
        .addContextActions(function (settings) {
        settings.actionProviders = [];
        settings.createDefaultActions(designerGenerator.getModel().editableObject, designerGenerator.getModel().undoEngine);
    })
        .addMenu(function (settings) {
        settings.appMenuVisible = ko.observable(false);
        settings.toggleAppMenu = function () {
            settings.appMenuVisible(!settings.appMenuVisible());
        };
        settings.getMenuPopupContainer = function (el) { return $(el).closest('.dxrd-menu-button').prev('.dxrd-menu-container'); };
        settings.getMenuPopupTarget = function (el) { return $(el).closest('.dxrd-menu-button').find('.dxrd-menu-place'); };
    })
        .addElement('inlineTextEdit', function () { return new _inlineTextEdit_1.InlineTextEdit(designerGenerator.getModel().selection); })
        .addElement('actionsGroupTitle', function () { return function () { return localization_utils_1.getLocalization('Actions', 'AnalyticsCoreStringId.Actions'); }; })
        .addElement('updateFont', function () { return function (values) {
        _fonts_1.availableFonts(__assign({}, _fonts_1.availableFonts(), values));
    }; })
        .addElement('sortFont', function () { return function () {
        var sortedObj = {};
        var fonts = _fonts_1.availableFonts.peek();
        Object.keys(fonts).sort(function (a, b) { return a.localeCompare(b); }).forEach(function (key) { return sortedObj[key] = fonts[key]; });
        _fonts_1.availableFonts(sortedObj);
    }; })
        .addElement('surfaceSize', function () { return ko.observable(0); })
        .addElement('popularVisible', function () { return ko.pureComputed(function () {
        return designerGenerator.getModel().popularProperties._editors().some(function (x) { return x.visible(); }) ||
            designerGenerator.getModel().contextActions && designerGenerator.getModel().contextActions().length > 0;
    }); })
        .addActionList()
        .addParts()
        .getModel();
}
exports.createDesigner = createDesigner;


/***/ }),
/* 165 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.config };

/***/ }),
/* 166 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxTextBox };

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
__webpack_require__(205);
var _dxtInherit_1 = __webpack_require__(30);
var editor_template = {
    render: function (options) {
        var $icon = $('<i />').addClass('dx-icon');
        if (!!options.model.iconClass) {
            $icon.addClass(options.model.iconClass);
            $icon.addClass('dx-icon-' + options.model.iconClass);
            $icon.addClass('dx-icon-dxrd');
        }
        else if (!!options.model.icon) {
            $icon.addClass(options.model.icon);
        }
        if (options.model.icon) {
            $icon.attr('data-bind', "template: '" + options.model.icon + "'");
        }
        var icon = $icon.get(0);
        $(options.container).append(icon);
        if (options.model.text) {
            var $span = $('<span />').addClass('dx-button-text');
            $span.text(options.model.text);
            $(options.container).append($span);
        }
        setTimeout(function () {
            if (!ko.dataFor(icon))
                ko.applyBindings(options.model, icon);
        }, 1);
    }
};
var dxButtonWithTemplate = (function (_super) {
    __extends(dxButtonWithTemplate, _super);
    function dxButtonWithTemplate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    dxButtonWithTemplate.prototype.updateOptions = function (options) {
        options['template'] = editor_template;
    };
    dxButtonWithTemplate.prototype._patchOptionValues = function (options) {
        var patchedOptions = _dxtInherit_1._getSuper(this)._patchOptionValues.call(this, options);
        var optionsToExtend = { iconClass: options['iconClass'] };
        ko.utils.extend(patchedOptions.templateData, optionsToExtend);
        return patchedOptions;
    };
    dxButtonWithTemplate.prototype.getComponentName = function () {
        return 'dxButton';
    };
    return dxButtonWithTemplate;
}(_dxtInherit_1._dxtInherit));
exports.dxButtonWithTemplate = dxButtonWithTemplate;
_dxtInherit_1._registerDxtComponent('dxButtonWithTemplate', dxButtonWithTemplate);


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var scroll_view_1 = __webpack_require__(80);
var utils_1 = __webpack_require__(2);
var dxScrollProcessor = (function (_super) {
    __extends(dxScrollProcessor, _super);
    function dxScrollProcessor(_container, _updateTime) {
        if (_updateTime === void 0) { _updateTime = 10; }
        var _this = _super.call(this) || this;
        _this._container = _container;
        _this._updateTime = _updateTime;
        _this._currentOffsetY = 0;
        _this._currentOffsetX = 0;
        _this._scroll = null;
        _this._updateInterval = null;
        _this._scroll = scroll_view_1.default.getInstance(_this._container);
        return _this;
    }
    dxScrollProcessor.prototype.dispose = function () {
        this._scroll = null;
        this._container = null;
        this._updateInterval && clearTimeout(this._updateInterval);
        this._updateInterval = null;
    };
    dxScrollProcessor.prototype._startUpdateScrollPosition = function () {
        var _this = this;
        this._updateInterval && clearInterval(this._updateInterval);
        this._updateInterval = setInterval(function () { return _this._scroll.scrollTo({
            top: _this._scroll.scrollTop() + _this._currentOffsetY,
            left: _this._scroll.scrollLeft() + _this._currentOffsetX
        }); }, this._updateTime);
    };
    dxScrollProcessor.prototype._calculateOffset = function (screenPosition, containerRect, offsetProperty) {
        var sizeProperty = offsetProperty === 'y' ? 'height' : 'width';
        if (screenPosition[offsetProperty] > (containerRect[offsetProperty] + containerRect[sizeProperty] - 50)) {
            return 5;
        }
        else if (screenPosition[offsetProperty] < (containerRect[offsetProperty] + 50)) {
            return -5;
        }
        return 0;
    };
    dxScrollProcessor.prototype.getScrollOffset = function () {
        return this._scroll.scrollOffset();
    };
    dxScrollProcessor.prototype.processOffset = function (screenPosition) {
        var containerRect = this._container.getBoundingClientRect();
        this._currentOffsetY = this._calculateOffset(screenPosition, containerRect, 'y');
        this._currentOffsetX = this._calculateOffset(screenPosition, containerRect, 'x');
        if (!this._currentOffsetX && !this._currentOffsetY) {
            this._updateInterval && clearInterval(this._updateInterval);
            this._updateInterval = null;
        }
        else if (!this._updateInterval) {
            this._startUpdateScrollPosition();
        }
    };
    return dxScrollProcessor;
}(utils_1.Disposable));
exports.dxScrollProcessor = dxScrollProcessor;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(2);
var EventManager = (function (_super) {
    __extends(EventManager, _super);
    function EventManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._handlers = [];
        return _this;
    }
    EventManager.prototype.dispose = function () {
        this._handlers = [];
    };
    EventManager.prototype.call = function (type, args) {
        this._handlers.filter(function (x) { return x.type === type; }).forEach(function (x) { return x.value(args); });
    };
    EventManager.prototype.addHandler = function (type, listener) {
        this._handlers.push({
            type: type,
            value: listener
        });
    };
    EventManager.prototype.removeHandler = function (type, listener) {
        var item = this._handlers.filter(function (handler) { return handler.type === type && handler.value === listener; })[0];
        var index = this._handlers.indexOf(item);
        if (index !== -1) {
            this._handlers.splice(index, 1);
        }
    };
    return EventManager;
}(utils_1.Disposable));
exports.EventManager = EventManager;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var elementViewModel_1 = __webpack_require__(117);
var _getNameHelpers_1 = __webpack_require__(33);
var _utils_1 = __webpack_require__(5);
var _localization_1 = __webpack_require__(8);
var ControlsFactory = (function () {
    function ControlsFactory() {
        this.controlsMap = {};
    }
    ControlsFactory.prototype.getControlInfo = function (controlType) {
        var info = this.controlsMap[controlType] || null;
        return info;
    };
    ControlsFactory.prototype.getControlType = function (model) {
        var controlType = _getNameHelpers_1.getTypeNameFromFullName(model['@ControlType'] || '');
        return this.controlsMap[controlType] ? controlType : 'Unknown';
    };
    ControlsFactory.prototype.createControl = function (model, parent, serializer) {
        var controlType = this.getControlType(model);
        return new (this.controlsMap[controlType] && this.controlsMap[controlType].type || elementViewModel_1.ElementViewModel)(model, parent, serializer);
    };
    ControlsFactory.prototype.registerControl = function (typeName, metadata) {
        if (metadata.isToolboxItem !== undefined) {
            metadata.nonToolboxItem = !metadata.isToolboxItem;
        }
        Object.defineProperty(metadata, 'isToolboxItem', {
            get: function () {
                return !metadata.nonToolboxItem;
            },
            set: function (newVal) {
                metadata.nonToolboxItem = !newVal;
            },
            enumerable: true,
            configurable: true
        });
        this.controlsMap[typeName] = metadata;
        this.controlsMap[typeName].info = _utils_1.extend(true, [], metadata.info);
    };
    ControlsFactory.prototype._getPropertyInfo = function (info, path, position) {
        var propertyInfo = info.filter(function (x) { return _localization_1.getLocalization(x.displayName, x.localizationId) === path[position] || x.propertyName === path[position] || x.modelName === '@' + path[position] || x.modelName === path[position]; })[0];
        if (position === path.length - 1) {
            return propertyInfo || null;
        }
        else {
            if (propertyInfo.info) {
                return this._getPropertyInfo(propertyInfo.info, path, position + 1);
            }
            else if (propertyInfo.from) {
                var object = null;
                try {
                    object = propertyInfo.from({});
                }
                catch (e) {
                    return null;
                }
                var newInfo = object.getInfo && object.getInfo();
                if (newInfo) {
                    return this._getPropertyInfo(newInfo, path, position + 1);
                }
            }
        }
        return null;
    };
    ControlsFactory.prototype.getPropertyInfo = function (controlType, path) {
        var properties = path;
        if (!$.isArray(path)) {
            properties = path.split('.');
        }
        return this._getPropertyInfo(this.controlsMap[controlType].info, properties, 0);
    };
    return ControlsFactory;
}());
exports.ControlsFactory = ControlsFactory;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var _getNameHelpers_1 = __webpack_require__(33);
function floatFromModel(val) {
    return ko.observable(val === undefined || val === null ? null : parseFloat(val));
}
exports.floatFromModel = floatFromModel;
function fromEnum(value) {
    var shotEnumValueKey = _getNameHelpers_1.getShortTypeName(value);
    var valuesArrayItem = this.valuesArray && this.valuesArray.filter(function (item) { return item.value == shotEnumValueKey; })[0];
    return ko.observable((this.values && this.values[shotEnumValueKey] !== undefined || valuesArrayItem) ? shotEnumValueKey : value);
}
exports.fromEnum = fromEnum;
function parseBool(val) {
    return ko.observable(val !== void 0 ? String(val).toLowerCase() === 'true' : val);
}
exports.parseBool = parseBool;
function colorFromString(val) {
    var color = (val || '').split(',');
    var result = ko.observable(val);
    if (color.length === 3) {
        result = ko.observable('rgb(' + color.join(', ') + ')');
    }
    else if (color.length === 4) {
        var alpha = Math.round(parseFloat(color[0]) / 255 * 100) / 100;
        color.shift();
        color.push(alpha.toString());
        result = ko.observable('rgba(' + color.join(', ') + ')');
    }
    return result;
}
exports.colorFromString = colorFromString;
function saveAsInt(val) {
    return Math.round(val).toString();
}
exports.saveAsInt = saveAsInt;
function colorToInt(color) {
    var colorAsString = colorToString(color).split(',');
    return (parseInt(colorAsString[0]) << 24) + (parseInt(colorAsString[1]) << 16) + (parseInt(colorAsString[2]) << 8) + (parseInt(colorAsString[3]));
}
exports.colorToInt = colorToInt;
function intToColor(color, hasAlpha) {
    if (hasAlpha === void 0) { hasAlpha = true; }
    var r = Math.round((color >> 16) & 0xff);
    var g = Math.round((color >> 8) & 0xff);
    var b = Math.round((color) & 0xff);
    if (hasAlpha) {
        var a = Math.round((color >> 24) & 0xff);
        return colorFromString([a, r, g, b].join(', '))();
    }
    else {
        return colorFromString([r, g, b].join(', '))();
    }
}
exports.intToColor = intToColor;
function colorToString(val) {
    var color = (val || '').split(', ');
    var result = val;
    if (color.length === 3) {
        color[0] = color[0].split('(')[1];
        color[2] = color[2].split(')')[0];
        result = color.join(',');
    }
    else if (color.length === 4) {
        var alpha = Math.round(parseFloat(color[3]) * 255);
        color.pop();
        color[0] = color[0].split('(')[1];
        result = alpha.toString() + ',' + color.join(',');
    }
    return result;
}
exports.colorToString = colorToString;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var propertygrid_1 = __webpack_require__(21);
var tabPanel_1 = __webpack_require__(52);
var TabInfoWithPropertyGrid = (function (_super) {
    __extends(TabInfoWithPropertyGrid, _super);
    function TabInfoWithPropertyGrid(options) {
        var _this = _super.call(this, options) || this;
        _this.propertyGrid = new propertygrid_1.ObjectProperties(ko.observable(options.model), undefined, undefined, undefined, true);
        _this._disposables.push(ko.computed(function () {
            var someRendered = _this.propertyGrid.getEditors().some(function (editor) { return editor.visible && editor.isRendered(); });
            if (someRendered) {
                _this.keyboardHelper && _this.keyboardHelper.initialize();
                _this.focus();
            }
        }));
        _this._disposables.push(_this.propertyGrid);
        return _this;
    }
    return TabInfoWithPropertyGrid;
}(tabPanel_1.TabInfo));
exports.TabInfoWithPropertyGrid = TabInfoWithPropertyGrid;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _editor_1 = __webpack_require__(118);
var _internal_1 = __webpack_require__(4);
var templateUtils_1 = __webpack_require__(13);
ko.bindingHandlers['dxCollectionEditor'] = {
    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
        var values = valueAccessor(), gridViewModel = new _editor_1.CollectionEditorViewModel(values, viewModel.disabled), templateHtml = templateUtils_1.getTemplate(values.editorTemplate || '#dx-collectioneditor'), $templateHtml = $(templateHtml), itemTemplateName = values.info && values.info() && values.info()['template'] || values.template;
        if (itemTemplateName) {
            var itemTemplateHtml = templateUtils_1.getTemplate(itemTemplateName);
            $templateHtml.find('.dx-collection-item').append($(itemTemplateHtml));
        }
        else {
            $templateHtml.find('.dx-collection-item').append($(element).children());
        }
        var $element = $(element).append($templateHtml);
        var childContext = bindingContext.createChildContext(gridViewModel);
        ko.applyBindings(childContext, $element.children()[0]);
        _internal_1.addDisposeCallback(element, function () { return gridViewModel.dispose(); });
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(1);
var _editor_1 = __webpack_require__(119);
var localization_utils_1 = __webpack_require__(3);
var _utils_1 = __webpack_require__(9);
var _dxtInherit_1 = __webpack_require__(30);
var editor_prefix = 'dx-fileimage', EDITOR_INPUT_WRAPPER_CLASS = editor_prefix + '-input-wrapper';
var dxFileImagePicker = (function (_super) {
    __extends(dxFileImagePicker, _super);
    function dxFileImagePicker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    dxFileImagePicker.prototype.updateOptions = function (options) {
        options['placeholder'] = options['placeholder'] || localization_utils_1.getLocalization('(none)', 'DxDesignerStringId.None');
        _super.prototype.updateOptions.call(this, options);
    };
    dxFileImagePicker.prototype._getDisplayValue = function () {
        var knownPlaceholders = {
            'Image': 'AnalyticsCoreStringId.ImagePicker_Placeholder',
            'File': 'AnalyticsCoreStringId.FilePicker_Placeholder'
        };
        var placeholderId = this.option('placeholderId');
        if (this.option('value') && placeholderId)
            return localization_utils_1.getLocalization(placeholderId, knownPlaceholders[placeholderId]);
        else
            return this.option('value');
    };
    dxFileImagePicker.prototype._handleResult = function (result) {
        if (this.option('useFormat')) {
            this.option('format', result.format);
        }
        this.option('value', result.content);
    };
    dxFileImagePicker.prototype._renderInput = function (inputContainer) {
        var $inputContainer = inputContainer && $(inputContainer) || $('<div />');
        $inputContainer.addClass(EDITOR_INPUT_WRAPPER_CLASS);
        this['_inputContainer'] = $inputContainer.get(0);
        $(this.element()).append(this['_inputContainer']);
        _dxtInherit_1._getSuper(this)['_renderInput'].apply(this, [inputContainer]);
    };
    dxFileImagePicker.prototype._attachButtonEvents = function () {
        var _this = this;
        this._$button.off('click');
        if (!this.option('disabled')) {
            this._$button.on('click', function (e) {
                e.stopPropagation();
                e.preventDefault();
                _utils_1.uploadFile({
                    accept: _this.option('accept') || 'image/*',
                    readMode: _this.option('readMode')
                }).done(function (result) {
                    _this._handleResult(result);
                });
            });
        }
    };
    dxFileImagePicker.prototype._renderValue = function () {
        this.option('text', this._getDisplayValue());
        _dxtInherit_1._getSuper(this)['_renderValue'].apply(this);
    };
    return dxFileImagePicker;
}(_editor_1.dxEllipsisEditor));
exports.dxFileImagePicker = dxFileImagePicker;
_dxtInherit_1._registerDxtComponent('dxFileImagePicker', dxFileImagePicker);


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var rectangle_1 = __webpack_require__(50);
var _arrayutils_1 = __webpack_require__(32);
var utils_1 = __webpack_require__(2);
var $ = __webpack_require__(1);
var ReorderTreeListDragDropHelper = (function (_super) {
    __extends(ReorderTreeListDragDropHelper, _super);
    function ReorderTreeListDragDropHelper(dragHelperContent) {
        var _this = _super.call(this) || this;
        _this.dragHelperContent = dragHelperContent;
        _this.droppableClassName = 'dxrd-treelist-droppable';
        _this.approveClassName = 'dxrd-drop-approve';
        _this.classDropBefore = 'drop-before';
        _this.classDropAfter = 'drop-after';
        _this.started = false;
        return _this;
    }
    ReorderTreeListDragDropHelper.prototype._getElementViewModel = function (item) {
        return item && item.data && item.data['data'];
    };
    ReorderTreeListDragDropHelper.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._targetElement = null;
        this._target = null;
        this._draggable = null;
    };
    ReorderTreeListDragDropHelper.prototype.isDragToBottom = function () {
        var _this = this;
        return _arrayutils_1.find(this._draggable.parent.items(), function (item) { return item === _this._draggable || item === _this._target; }) === this._draggable;
    };
    ReorderTreeListDragDropHelper.prototype.start = function (draggable) {
        this.started = true;
        this._draggable = draggable;
        this._draggableModel = this._getElementViewModel(draggable);
    };
    ReorderTreeListDragDropHelper.prototype.canDrop = function () {
        return this._draggable !== this._target && this._draggable.parent === this._target.parent;
    };
    ReorderTreeListDragDropHelper.prototype.reorderSiblings = function (isDragToBottom) {
        if (isDragToBottom === void 0) { isDragToBottom = this.isDragToBottom(); }
        var siblings = this.getSiblings();
        if (siblings) {
            var _siblings = siblings.peek();
            var index = _siblings.indexOf(this._draggableModel);
            if (index > -1)
                _siblings.splice(index, 1);
            _siblings.splice(_siblings.indexOf(this._targetModel) + (isDragToBottom ? 1 : 0), 0, this._draggableModel);
            siblings.valueHasMutated();
        }
    };
    ReorderTreeListDragDropHelper.prototype.clearDroppableClasses = function () {
        this._removeClass(this._targetElement);
    };
    ReorderTreeListDragDropHelper.prototype.getDroppablePosition = function () {
        return this.isDragToBottom() ? this.classDropAfter : this.classDropBefore;
    };
    ReorderTreeListDragDropHelper.prototype.drag = function (elementModel, element) {
        this.clearDroppableClasses();
        this._target = elementModel;
        this._targetElement = $(element).closest('.dx-treelist-item').get(0);
        this._targetModel = this._getElementViewModel(this._target);
    };
    ReorderTreeListDragDropHelper.prototype.stop = function () {
        this.clearDroppableClasses();
        this.started = false;
    };
    ReorderTreeListDragDropHelper.prototype.helper = function (draggable, event) {
        var item = draggable;
        var target = $(event.target).closest('.ui-draggable');
        var rect = new rectangle_1.Rectangle(6, 6, null, target.height());
        rect.className = 'dxrd-image-ghost-report';
        this.dragHelperContent.reset();
        this.dragHelperContent.setContent(rect, {
            template: 'dxrd-drag-helper-source-reorder-treelist',
            data: {
                imageClassName: item.imageClassName,
                imageTemplateName: item.imageTemplateName,
                text: item.text
            }
        });
    };
    ReorderTreeListDragDropHelper.prototype.addDroppableClass = function () {
        var className = this.droppableClassName;
        if (this.canDrop()) {
            className = className + ' ' + this.approveClassName + ' ' + this.getDroppablePosition();
        }
        $(this._targetElement).addClass(className);
    };
    ReorderTreeListDragDropHelper.prototype._removeClass = function (target) {
        $(target).removeClass(this.droppableClassName + ' ' + this.approveClassName + ' ' + this.classDropBefore + ' ' + this.classDropAfter);
    };
    return ReorderTreeListDragDropHelper;
}(utils_1.Disposable));
exports.ReorderTreeListDragDropHelper = ReorderTreeListDragDropHelper;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dxtInherit_1 = __webpack_require__(30);
__webpack_require__(212);
var dxPopupWithAutoHeight = (function (_super) {
    __extends(dxPopupWithAutoHeight, _super);
    function dxPopupWithAutoHeight() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    dxPopupWithAutoHeight.prototype._setContentHeight = function () {
        this['_$popupContent'].css({
            height: '100%'
        });
    };
    dxPopupWithAutoHeight.prototype.getComponentName = function () {
        return 'dxPopup';
    };
    return dxPopupWithAutoHeight;
}(_dxtInherit_1._dxtInherit));
exports.dxPopupWithAutoHeight = dxPopupWithAutoHeight;
_dxtInherit_1._registerDxtComponent('dxPopupWithAutoHeight', dxPopupWithAutoHeight);


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
__webpack_require__(214);
var _utils_1 = __webpack_require__(5);
var _dxtInherit_1 = __webpack_require__(30);
var dxFieldListPicker = (function (_super) {
    __extends(dxFieldListPicker, _super);
    function dxFieldListPicker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._path = ko.observable('');
        _this._value = ko.observable('');
        _this._parentViewport = null;
        _this._itemsProvider = ko.observable(null);
        _this._hasDisplayNameOption = false;
        _this._defaultPosition = null;
        return _this;
    }
    dxFieldListPicker.prototype.updateOptions = function (options) {
        options.showClearButton = true;
    };
    dxFieldListPicker.prototype.ctor = function ($element, options) {
        var _$element = $($element);
        _$element.addClass('dx-fieldlistpicker');
        this.option('path') && this._path(this.option('path'));
        this.option('value') && this._value(this.option('value'));
        this.option('itemsProvider') && this._itemsProvider(this.option('itemsProvider'));
        this.option('valueChangeEvent', 'change');
        this.option('openOnFieldClick', this.option('acceptCustomValue') === false);
        this._parentViewport = _$element.parents('.dx-designer-viewport');
        if ('displayValue' in options) {
            this._hasDisplayNameOption = true;
            this.option('displayValue', options.displayValue);
            this._setTitle(this.option('displayValue'));
        }
    };
    dxFieldListPicker.prototype._showDropDown = function () {
        if (this['_popup']) {
            var $element = $(this.element());
            this['_popup'].option('width', $element.width());
            var popupPosition = _utils_1.extend(true, {}, this._defaultPosition, { boundary: this._parentViewport[0], boundaryOffset: '0 20', collision: 'none flip' });
            this['_popup'].option('position', popupPosition);
            this['_popup'].option('height', 'auto');
            this['_popup'].option('maxHeight', this._getMaxHeight());
            this['_popup'].repaint();
            $(this['_popup'].content())[0].style.height = 'auto';
            this['_popup']._renderPosition();
        }
    };
    dxFieldListPicker.prototype._getMaxHeight = function () {
        var $element = $(this.element()), offset = $element.offset(), windowHeight = $(window).height(), maxHeight = Math.max(offset.top, windowHeight - offset.top - $element.outerHeight());
        return Math.min(.5 * windowHeight, maxHeight);
    };
    dxFieldListPicker.prototype._closeOutsideDropDownHandler = function (e, ignoreContainerClicks) { _dxtInherit_1._getSuper(this)._closeOutsideDropDownHandler.apply(this, [e, true]); };
    dxFieldListPicker.prototype._hideOnBlur = function () { return false; };
    dxFieldListPicker.prototype._popupConfig = function () {
        var dxPolymorphWidget = this.option('integrationOptions').templates['dx-polymorph-widget'];
        var popuConfig = _dxtInherit_1._getSuper(this)._popupConfig.apply(this);
        this._defaultPosition = popuConfig.position;
        return _utils_1.extend(popuConfig, {
            container: this._parentViewport,
            contentTemplate: dxPolymorphWidget && dxPolymorphWidget._template,
            closeOnOutsideClick: true
        });
    };
    dxFieldListPicker.prototype._setTitle = function (text) {
        if (this.option('openOnFieldClick')) {
            $(this.element()).attr('title', text);
        }
    };
    dxFieldListPicker.prototype._renderDisplayText = function (newValue) { _dxtInherit_1._getSuper(this)._renderDisplayText.apply(this, [newValue]); };
    dxFieldListPicker.prototype._optionChanged = function (args) {
        var _this = this;
        var name = args.name, newValue = args.value;
        switch (name) {
            case 'value':
                this._value(newValue);
                if (!this._hasDisplayNameOption)
                    this._renderDisplayText(newValue);
                setTimeout($.proxy(function () {
                    _this.option('opened', false);
                }, this), 50);
                break;
            case 'path':
                this._path(newValue);
                break;
            case 'itemsProvider':
                this._itemsProvider(newValue);
                break;
            case 'displayValue':
                this._renderDisplayText(newValue);
                this._setTitle(newValue);
                break;
            default:
                _dxtInherit_1._getSuper(this)._optionChanged.apply(this, arguments);
                if (name === 'opened' && newValue) {
                    this['_showDropDown']();
                }
        }
    };
    dxFieldListPicker.prototype._clearValueHandler = function () {
        $(this['_input']()).val(null);
        _dxtInherit_1._getSuper(this)._clearValueHandler.apply(this, arguments);
    };
    dxFieldListPicker.prototype._renderPopupContent = function () {
        var _this = this;
        _dxtInherit_1._getSuper(this)._renderPopupContent.apply(this, arguments);
        var selectedPath = ko.pureComputed({
            read: function () {
                return _this._path() ? _this._path() + '.' + _this._value() : _this._value();
            },
            write: function (newVal) {
                if (_this._path() && _this._path().length > 0) {
                    _this._value(newVal.substr(_this._path().length + 1));
                    _this.option('value', _this._value());
                }
                else {
                    _this._value(newVal);
                    _this.option('value', _this._value());
                }
            }
        });
        var element = $('<div>').addClass('dx-treelist-wrapper').get(0);
        var scroll = this['_createComponent'](element, 'dxScrollView', { scrollByThumb: true });
        var self = this;
        var $scrollContent = $(scroll['content']());
        var $element = $(this.element());
        $scrollContent.append($('<div data-bind="treelist: options"></div>')[0]);
        var context = ko.contextFor($element.get(0));
        var treeListController = this.option('treeListController');
        var options = ko.computed(function () {
            return {
                itemsProvider: _this._itemsProvider(), onItemsVisibilityChanged: function () {
                    if (self['_popup']) {
                        self['_popup']._renderPosition();
                    }
                }, selectedPath: selectedPath, treeListController: treeListController, path: _this._path
            };
        });
        var childContext = context.createChildContext({ options: options });
        ko.applyBindingsToDescendants(childContext, $scrollContent.get(0));
        $(this['_popup'].content()).append(element);
    };
    dxFieldListPicker.prototype.getComponentName = function () {
        return 'dxDropDownBox';
    };
    return dxFieldListPicker;
}(_dxtInherit_1._dxtInherit));
exports.dxFieldListPicker = dxFieldListPicker;
_dxtInherit_1._registerDxtComponent('dxFieldListPicker', dxFieldListPicker);


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var utils_1 = __webpack_require__(2);
var localization_utils_1 = __webpack_require__(3);
var criteriaOperator_1 = __webpack_require__(6);
var unary_1 = __webpack_require__(12);
var unaryOperandSurface_1 = __webpack_require__(26);
var _popupService_1 = __webpack_require__(42);
var _displayNameProvider_1 = __webpack_require__(62);
var _expressioneditor_1 = __webpack_require__(37);
var _codeCompletor_1 = __webpack_require__(127);
var _utils_1 = __webpack_require__(22);
var _internal_1 = __webpack_require__(4);
var text_area_1 = __webpack_require__(222);
var _ace_available_1 = __webpack_require__(53);
var templateUtils_1 = __webpack_require__(13);
var group_1 = __webpack_require__(14);
var FilterEditor = (function (_super) {
    __extends(FilterEditor, _super);
    function FilterEditor(options, fieldListProvider, rtl, _displayNameProvider) {
        if (rtl === void 0) { rtl = false; }
        var _this = _super.call(this) || this;
        _this.options = options;
        _this._displayNameProvider = _displayNameProvider;
        _this._advancedMode = ko.observable(false);
        _this.textFocused = ko.observable(false);
        _this.aceAvailable = _ace_available_1.aceAvailable();
        _this.languageHelper = {
            getLanguageMode: function () { return 'ace/mode/criteria'; },
            createCompleters: function (editor, bindingContext, viewModel) {
                var path = ko.computed(function () { return _this.path && _this.path(); }), completor = new _codeCompletor_1.FilterEditorCodeCompletor({
                    editor: editor,
                    bindingContext: bindingContext,
                    fieldListProvider: viewModel.fieldListProvider(),
                    path: path,
                    getRealExpression: function (path, expression) {
                        return _this.displayExpressionConverter && _this.displayExpressionConverter.toRealExpression(path, expression) || $.Deferred().resolve(expression).promise();
                    }
                });
                completor._disposables.push(path);
                return [completor];
            }
        };
        _this.aceOptions = {
            showLineNumbers: false,
            showPrintMargin: false,
            enableBasicAutocompletion: true,
            enableLiveAutocompletion: true,
            showGutter: false
        };
        _this.additionalOptions = {
            onChange: function (session) { return _this.onValueChange(session.getValue()); },
            changeTimeout: 200,
            onFocus: function (_) { return _this.onFocus(); },
            onBlur: function (_) { return _this.onBlur(); }
        };
        _this.editorContainer = ko.observable();
        _this.textVisible = ko.observable(false);
        _this.getPopupContainer = function (el) {
            return _utils_1.getParentContainer(el, _this.options()['popupContainer']);
        };
        _this.timeout = null;
        _this.animationTimeout = null;
        _this.advancedMode = ko.computed({
            read: function () {
                return _this._advancedMode();
            },
            write: function (newVal) {
                _this.timeout && clearTimeout(_this.timeout);
                _this.animationTimeout && clearTimeout(_this.animationTimeout);
                if (newVal) {
                    _this.textVisible(true);
                    _this.timeout = setTimeout(function () {
                        _this._advancedMode(true);
                        _this.focusText();
                    }, 1);
                    _this.animationTimeout = setTimeout(function () {
                        _this.editorContainer() && _this.editorContainer().resize && _this.editorContainer().resize();
                    }, 210);
                }
                else {
                    _this._advancedMode(false);
                    _this.timeout = setTimeout(function () {
                        _this.textVisible(false);
                    }, 200);
                }
            },
        });
        _this.invalidMessage = function () { return localization_utils_1.getLocalization('Cannot create a tree for this expression', 'AnalyticsCoreStringId.FilterEditor_TreeCreationError'); };
        _this.advancedModeText = ko.observable(localization_utils_1.getLocalization('Advanced Mode', 'AnalyticsCoreStringId.FilterEditor_AdvancedMode'));
        _this.operandSurface = ko.observable(null);
        _this.operand = null;
        _this.popupVisible = ko.observable(false);
        _this.buttonItems = [];
        _this.popupService = new _popupService_1.PopupService();
        _this.rtl = rtl;
        options() && options().helper && (options().helper.rtl = rtl);
        _this._disposables.push(_this.disabled = ko.computed(function () {
            return ko.unwrap(_this.options() && _this.options().disabled());
        }));
        _this.value = ko.observable('');
        _this.displayExpressionConverter = _displayNameProvider && new _displayNameProvider_1.DisplayExpressionConverter(_displayNameProvider);
        _this.save = function () {
            _this.helper.onSave(_this.value());
            if (_this.operandSurface() && _this.isSurfaceValid()) {
                var value = options().helper.serializer.serialize(_this.operand, false);
                _this.options().value(value);
            }
            else {
                _this.options().value(_this.value());
            }
            _this.popupVisible(false);
        };
        _this.displayValue = _expressioneditor_1.wrapExpressionValue(_this.path, _this.value, _this.displayExpressionConverter, _this._disposables);
        var modelValue = ko.computed({
            read: function () {
                var options = _this.options();
                return options && options.value();
            },
            write: function (newVal) {
                var options = _this.options();
                options && options.value(newVal);
            }
        });
        _this.modelDisplayValue = _expressioneditor_1.wrapExpressionValue(_this.path, modelValue, _this.displayExpressionConverter, _this._disposables);
        _this.fieldListProvider = fieldListProvider;
        _this.modelValueIsValid = ko.computed(function () {
            return options() && _this._validateValue(options().value());
        });
        _this.isValid = ko.computed(function () {
            return _this._validateValue(_this.value());
        });
        _this.isSurfaceValid = ko.computed(function () {
            try {
                return _this.options() && _this.isValid() && _this.options().helper.criteriaTreeValidator.validateModel(_this.options().helper.serializer.deserialize(_this.value()));
            }
            catch (e) {
                return false;
            }
        });
        _this._disposables.push(modelValue);
        _this._disposables.push(_this.modelValueIsValid);
        _this._disposables.push(_this.isValid);
        _this._disposables.push(_this.isSurfaceValid);
        _this._disposables.push(_this.popupVisible.subscribe(function (newVal) {
            if (newVal) {
                _this.value(_this.options().value());
                if (_this.isSurfaceValid()) {
                    _this.operand = _this._generateOperand(_this.value());
                    _this.operandSurface(_this._generateSurface(_this.operand));
                }
                else {
                    _this.textVisible(true);
                    _this._advancedMode(true);
                    _this.editorContainer() && _this.focusText();
                }
                options().helper.onChange = function () {
                    _this.value(options().helper.serializer.serialize(_this.operand, false));
                };
            }
            else {
                _this.helper.onClosing();
                _this.value(null);
                _this.operandSurface() && _this.operandSurface().dispose();
                _this.operandSurface(null);
                _this.operand = null;
            }
        }));
        _this.createAddButton = function (criteria) { return options().helper.handlers.create(criteria, _this.popupService); };
        _this.createChangeType = function (criteria) { return options().helper.handlers.change(criteria, _this.popupService); };
        _this.createChangeProperty = function (criteria) { return options().helper.handlers.changeProperty(criteria, _this.popupService); };
        _this.createChangeParameter = function (criteria) { return options().helper.handlers.changeParameter(criteria, _this.popupService); };
        _this.createChangeValueType = function (criteria) { return options().helper.handlers.changeValueType(criteria, _this.popupService); };
        var saveDisabled = ko.computed(function () { return !_this.isValid(); });
        _this._disposables.push(saveDisabled);
        _this._disposables.push(_this.advancedMode);
        _this._createMainPopupButtons(saveDisabled);
        return _this;
    }
    FilterEditor.prototype._createMainPopupButtons = function (saveDisabled) {
        var self = this;
        this.buttonItems = [
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: localization_utils_1.getLocalization('Save', 'StringId.OK'), disabled: saveDisabled, onClick: function () { self.save(); } } },
            {
                toolbar: 'bottom', location: 'after', widget: 'dxButton', options: {
                    text: localization_utils_1.getLocalization('Cancel', 'StringId.Cancel'), onClick: function () {
                        self.popupVisible(false);
                    }
                }
            },
            { toolbar: 'bottom', location: 'before', widget: 'dxCheckBox', options: { value: self.advancedMode, text: self.advancedModeText() } }
        ];
    };
    FilterEditor.prototype._generateOperand = function (value) {
        return this.options().helper.serializer.deserialize(value);
    };
    FilterEditor.prototype._generateSurface = function (operand) {
        var type = null;
        if (operand instanceof unary_1.UnaryOperator) {
            type = this.options().helper.mapper.Unary;
        }
        else {
            type = this.options().helper.mapper.Group;
        }
        var surface = new type(operand, this, this.fieldListProvider, this.path);
        if (surface instanceof unaryOperandSurface_1.UnaryOperandSurface) {
            if (!(surface.model.operand instanceof group_1.GroupOperator)) {
                this.operand = new group_1.GroupOperator(group_1.GroupOperatorType.And, [this.operand]);
                surface.dispose();
                return this._generateSurface(this.operand);
            }
            surface.operand().canRemove = false;
        }
        surface.canRemove = false;
        return surface;
    };
    FilterEditor.prototype._validateValue = function (value) {
        try {
            if (this.options() && this.options().helper) {
                this.options().helper.serializer.deserialize(value);
                return true;
            }
            else {
                return false;
            }
        }
        catch (e) {
            return false;
        }
    };
    FilterEditor.prototype.change = function (type, surface) {
        this.operand = criteriaOperator_1.CriteriaOperator.create(type);
        this.operand.assignFrom(surface.model);
        var type = null;
        if (this.operand instanceof unary_1.UnaryOperator) {
            type = this.options().helper.mapper.Unary;
        }
        else {
            type = this.options().helper.mapper.Group;
        }
        var surface = new type(this.operand, this, this.fieldListProvider, this.path);
        surface.canRemove = false;
        if (surface instanceof unaryOperandSurface_1.UnaryOperandSurface) {
            surface.operand().canRemove = false;
        }
        this.operandSurface(surface);
    };
    Object.defineProperty(FilterEditor.prototype, "helper", {
        get: function () {
            return this.options() && this.options().helper;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FilterEditor.prototype, "path", {
        get: function () {
            return this.options() && this.options().path;
        },
        enumerable: true,
        configurable: true
    });
    FilterEditor.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.editorContainer(null);
        this.operandSurface() && this.operandSurface().dispose();
    };
    FilterEditor.prototype.onInput = function (s, e) {
        var self = this;
        this.timeout && clearTimeout(this.timeout);
        this.timeout = setTimeout(function () {
            self.onValueChange(s.component.option('text'));
        }, 200);
    };
    FilterEditor.prototype.onFocus = function () {
        this.textFocused(true);
    };
    FilterEditor.prototype.onBlur = function () {
        this.textFocused(false);
        this.helper.onEditorFocusOut(this.operand);
    };
    FilterEditor.prototype.cacheElement = function ($element) {
        this.editorContainer(text_area_1.default.getInstance($element.get(0)));
    };
    FilterEditor.prototype.updateCriteria = function () {
        if (this.isSurfaceValid()) {
            this.operand = this._generateOperand(this.value());
            this.operandSurface() && this.operandSurface().dispose();
            this.operandSurface(this._generateSurface(this.operand));
        }
    };
    FilterEditor.prototype.onValueChange = function (value) {
        var _this = this;
        if (this.displayValue() === value.trim())
            return;
        this.displayValue(value);
        if (this.displayExpressionConverter) {
            this.displayExpressionConverter.toRealExpression(this.path(), value).done(function (result) {
                _this.value(result);
                _this.updateCriteria();
            }).fail(function () {
                _this.value(value);
                _this.updateCriteria();
            });
        }
        else {
            this.updateCriteria();
        }
    };
    FilterEditor.prototype.focusText = function () {
        var focusFn = function (editor) {
            setTimeout(function (_) {
                if (editor.renderer)
                    editor.renderer.updateText();
                editor.focus();
            }, 1);
        };
        if (!this.editorContainer())
            var subscription = this.editorContainer.subscribe(function (editor) {
                subscription.dispose();
                focusFn(editor);
            });
        else
            focusFn(this.editorContainer());
    };
    return FilterEditor;
}(utils_1.Disposable));
exports.FilterEditor = FilterEditor;
ko.bindingHandlers['dxFilterEditor'] = {
    init: function (element, valueAccessor) {
        $(element).children().remove();
        $(element).addClass('dx-popup-general');
        var templateHtml = templateUtils_1.getTemplate('dx-filtereditor'), $element = $(element).append(templateHtml), values = valueAccessor();
        var itemsProvider = ko.observable(ko.unwrap(values.fieldListProvider));
        var computedFunctions = [];
        computedFunctions.push(ko.computed(function () {
            if (values.options() && values.options().itemsProvider) {
                itemsProvider(ko.unwrap(values.options().itemsProvider));
            }
            else {
                itemsProvider(ko.unwrap(values.fieldListProvider));
            }
        }));
        computedFunctions.push(ko.computed(function () {
            if (values.getDisplayNameByPath && values.options() && values.options().helper && !values.options().helper.getDisplayPropertyName) {
                values.options().helper.getDisplayPropertyName = values.getDisplayNameByPath;
            }
        }));
        var editor = new FilterEditor(values.options, itemsProvider, $(element).closest('.dx-rtl').length > 0, values.displayNameProvider);
        ko.applyBindingsToDescendants(editor, $element.children()[0]);
        _internal_1.addDisposeCallback($element.children()[0], function () {
            computedFunctions.forEach(function (x) { return x.dispose(); });
            editor.dispose();
        });
        return { controlsDescendantBindings: true };
    }
};
var FilterEditorPlain = (function (_super) {
    __extends(FilterEditorPlain, _super);
    function FilterEditorPlain(element, options, fieldListProvider, rtl, _displayNameProvider) {
        if (rtl === void 0) { rtl = false; }
        var _this = _super.call(this, options, fieldListProvider, rtl, _displayNameProvider) || this;
        _this.element = element;
        _this._contentMargins = 20;
        _this._topOffset = 30;
        _this._defaultActiveTextContentHeightPerc = 25;
        _this._defaultActiveTreeContentHeightPerc = 75;
        _this._currentActiveTextContentHeightPerc = _this._defaultActiveTextContentHeightPerc;
        _this._currentActiveTreeContentHeightPerc = _this._defaultActiveTreeContentHeightPerc;
        _this.plainContentHeightPerc = ko.observable('100%');
        _this.textContentHeightPerc = ko.observable(null);
        _this.treeContentHeightPerc = ko.observable(null);
        var $element = $(element);
        var updateHeight = function () {
            var currentHeight = $element.height();
            _this.plainContentHeightPerc((1 - _this._topOffset / currentHeight) * 100 + '%');
            var diffPerc = (_this._contentMargins / (currentHeight - _this._topOffset)) * 100 / 2;
            _this._currentActiveTextContentHeightPerc = _this._defaultActiveTextContentHeightPerc - diffPerc;
            _this._currentActiveTreeContentHeightPerc = _this._defaultActiveTreeContentHeightPerc - diffPerc;
            if (_this.advancedMode()) {
                _this.treeContentHeightPerc(_this._currentActiveTreeContentHeightPerc);
                _this.textContentHeightPerc(_this._currentActiveTextContentHeightPerc);
            }
        };
        updateHeight();
        _this._disposables.push(_this.advancedMode.subscribe(function (newVal) {
            if (newVal) {
                _this.treeContentHeightPerc(_this._currentActiveTreeContentHeightPerc + '%');
                _this.textContentHeightPerc(_this._currentActiveTextContentHeightPerc + '%');
            }
            else {
                _this.treeContentHeightPerc(null);
                _this.textContentHeightPerc(null);
            }
        }));
        window.addEventListener('resize', updateHeight);
        _internal_1.addDisposeCallback(element, function () {
            window.removeEventListener('resize', updateHeight);
            _this.dispose();
        });
        return _this;
    }
    return FilterEditorPlain;
}(FilterEditor));
exports.FilterEditorPlain = FilterEditorPlain;
ko.components.register('dx-filtereditor-plain', {
    viewModel: {
        createViewModel: function (params, componentInfo) {
            var viewModel = new FilterEditorPlain(componentInfo.element, params.options, ko.observable(params.fieldListProvider), undefined, params.displayNameProvider);
            viewModel.popupVisible(true);
            params.options().value.subscribe(function () {
                viewModel.popupVisible(false);
                viewModel.popupVisible(true);
            });
            return viewModel;
        }
    },
    template: templateUtils_1.getTemplate('dx-filtereditor-plain')
});
ko.components.register('dx-filtereditor-advanced', {
    viewModel: {
        createViewModel: function (params, componentInfo) {
            var viewModel = new FilterEditor(params.options, ko.observable(params.fieldListProvider), undefined, params.displayNameProvider);
            viewModel.advancedMode(true);
            viewModel.popupVisible(true);
            params.options().value.subscribe(function () {
                viewModel.popupVisible(false);
                viewModel.popupVisible(true);
            });
            return viewModel;
        }
    },
    template: templateUtils_1.getTemplate('dx-filtereditor-advanced')
});
ko.bindingHandlers['cacheElement'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var value = valueAccessor();
        value.action($(element));
    }
};


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var helper_1 = __webpack_require__(82);
var localization_utils_1 = __webpack_require__(3);
var FilterStringOptions = (function () {
    function FilterStringOptions(filterString, dataMember, disabled, title) {
        var _this = this;
        this.popupContainer = '.dx-designer-viewport';
        this.itemsProvider = null;
        this.resetValue = function () {
            _this.value('');
        };
        this.title = ko.pureComputed({
            read: function () {
                var title = _this._title();
                return localization_utils_1.getLocalization(title.text, title.localizationId);
            },
            write: function (value) {
                _this._title({ text: value });
            }
        });
        this.value = filterString;
        this.path = dataMember || ko.observable('');
        this.disabled = disabled || ko.observable(false);
        var filterEditorHelperType = helper_1.DefaultFilterEditorHelper();
        this.helper = new filterEditorHelperType();
        this._title = ko.observable(title || { text: localization_utils_1.getLocalization('Filter Editor', 'DataAccessUIStringId.FiltersView') });
    }
    return FilterStringOptions;
}());
exports.FilterStringOptions = FilterStringOptions;


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var utils_1 = __webpack_require__(2);
var _units_1 = __webpack_require__(38);
var _cssCalculator_1 = __webpack_require__(98);
var _arrayutils_1 = __webpack_require__(32);
var _hoverInfo_1 = __webpack_require__(100);
var point_1 = __webpack_require__(78);
var _utils_1 = __webpack_require__(5);
var SurfaceElementArea = (function (_super) {
    __extends(SurfaceElementArea, _super);
    function SurfaceElementArea(control, context, unitProperties) {
        var _this = _super.call(this) || this;
        _this._createSurface = function (item) {
            return item['surface'] || new (item.getControlFactory()).controlsMap[item.controlType].surfaceType(item, _this._context);
        };
        _this.preInitProperties(control, context, unitProperties);
        _this._control = control;
        _this._context = context;
        control['surface'] = _this;
        if (_this._context) {
            _units_1.createUnitProperties(control, _this, unitProperties, _this._context.measureUnit, _this._context.zoom, function (property) { _this._disposables.push(property); });
        }
        _this._x = _this._x || ko.observable(0);
        _this._y = _this._y || ko.observable(0);
        _this._width = _this._width || ko.observable(0);
        _this._height = _this._height || ko.observable(0);
        var container = ko.pureComputed(function () { return _this.container(); });
        _this._disposables.push(container);
        _this._container = container();
        _this._disposables.push(container.subscribe(function (value) {
            if (_this._container !== value && _this.rtlLayout()) {
                var x = _this._getX();
                _this._container = value;
                _this._setX(x);
            }
            else {
                _this._container = value;
            }
        }));
        var x = ko.computed({
            read: function () { return _this._getX(); },
            write: function (value) {
                _this._setX(value);
            }
        }), y = _this._y, width = _this._width, height = _this._height;
        _this['position'] = {
            top: y,
            left: x,
            width: width,
            height: height,
            lineHeight: height
        };
        _this._disposables.push(x);
        var _rect = ko.observable();
        _this._disposables.push(ko.computed(function () {
            if (!_this._control.update()) {
                _rect({ top: y(), left: x(), right: x() + width(), bottom: y() + height(), width: width(), height: height() });
            }
        }));
        _this._disposables.push(_this.rect = ko.pureComputed({
            read: function () {
                return _rect();
            },
            write: function (newRect) {
                newRect = _this.beforeRectUpdated(newRect);
                _this._control.update(true);
                try {
                    if (newRect.left !== undefined) {
                        _this._setX(newRect.left, newRect.width);
                    }
                    else if (newRect.width !== undefined) {
                        _this._setX(x(), newRect.width);
                    }
                    if (newRect.top !== undefined) {
                        y(newRect.top);
                    }
                    if (newRect.right !== undefined && newRect.left === undefined && newRect.width === undefined) {
                        width(newRect.right - x());
                    }
                    if (newRect.bottom !== undefined && newRect.top === undefined) {
                        height(newRect.bottom - y());
                    }
                    if (newRect.right !== undefined && newRect.left !== undefined && newRect.width === undefined) {
                        width(newRect.right - newRect.left);
                    }
                    if (newRect.bottom !== undefined && newRect.top !== undefined) {
                        height(newRect.bottom - newRect.top);
                    }
                    if (newRect.width !== undefined) {
                        width(newRect.width);
                    }
                    if (newRect.height !== undefined) {
                        height(newRect.height);
                    }
                }
                finally {
                    _this._control.update(false);
                }
            }
        }));
        return _this;
    }
    SurfaceElementArea.prototype._getX = function () {
        if (this.rtlLayout() && this._container) {
            return this._container.rect().width - this._x() - this._width();
        }
        else {
            return this._x();
        }
    };
    SurfaceElementArea.prototype._setX = function (value, width) {
        width = width || this._width();
        if (this.rtlLayout() && this._container) {
            this._x(this._container.rect().width - value - width);
        }
        else {
            this._x(value);
        }
    };
    SurfaceElementArea.prototype.getRoot = function () {
        return this._context;
    };
    SurfaceElementArea.prototype.preInitProperties = function (control, context, unitProperties) { };
    SurfaceElementArea.prototype.container = function () {
        return this['parent'];
    };
    SurfaceElementArea.prototype.beforeRectUpdated = function (rect) {
        rect.left = rect.left < 0 ? 0 : rect.left;
        rect.top = rect.top < 0 ? 0 : rect.top;
        return rect;
    };
    SurfaceElementArea.prototype.rtlLayout = function () {
        return !!ko.unwrap(this._context.rtl);
    };
    SurfaceElementArea.prototype.getControlModel = function () {
        return this._control;
    };
    return SurfaceElementArea;
}(utils_1.Disposable));
exports.SurfaceElementArea = SurfaceElementArea;
var SurfaceElementBase = (function (_super) {
    __extends(SurfaceElementBase, _super);
    function SurfaceElementBase(control, context, unitProperties) {
        var _this = _super.call(this, control, context, unitProperties) || this;
        _this._countSelectedChildren = ko.observable(0);
        _this.focused = ko.observable(false);
        _this.selected = ko.observable(false);
        _this.underCursor = ko.observable(new _hoverInfo_1.HoverInfo());
        _this.allowMultiselect = true;
        _this.absolutePosition = new point_1.Point(0, 0);
        _this.getControlModel = function () {
            return control;
        };
        _this.cssCalculator = new _cssCalculator_1.CssCalculator(control, context.rtl);
        if (_this._getChildrenHolderName() && control[_this._getChildrenHolderName()]) {
            var collection = ko.observableArray();
            if (_this._getChildrenHolderName() === 'controls') {
                _this._disposables.push(_arrayutils_1.createObservableReverseArrayMapCollection(control[_this._getChildrenHolderName()], collection, _this._createSurface));
            }
            else {
                _this._disposables.push(_arrayutils_1.createObservableArrayMapCollection(control[_this._getChildrenHolderName()], collection, _this._createSurface));
            }
            _this[_this._getChildrenHolderName()] = collection;
            _this._disposables.push(_this.isSelected = ko.pureComputed(function () {
                if (!(_this.focused() || _this.selected())) {
                    return collection().some(function (item) {
                        return item.isSelected();
                    });
                }
                return true;
            }));
        }
        else {
            _this._disposables.push(_this.isSelected = ko.pureComputed(function () {
                return _this.focused() || _this.selected();
            }));
        }
        _this._disposables.push(_this.css = ko.pureComputed(function () {
            return _utils_1.extend({}, _this.cssCalculator.fontCss(), _this.cssCalculator.foreColorCss(), _this.cssCalculator.backGroundCss(), _this.cssCalculator.textAlignmentCss());
        }));
        _this._disposables.push(_this.contentCss = ko.pureComputed(function () {
            return _utils_1.extend({}, _this.cssCalculator.fontCss(), _this.cssCalculator.foreColorCss(), _this.cssCalculator.textAlignmentCss(), _this.cssCalculator.angle(), _this.cssCalculator.wordWrapCss(), _this.cssCalculator.paddingsCss());
        }));
        _this._disposables.push(ko.computed(function () {
            _this.updateAbsolutePosition();
        }));
        _this._disposables.push(_this.absoluteRect = ko.pureComputed(function () {
            var controlRect = _this.rect(), absolutePositionY = _this.absolutePosition.y(), absolutePositionX = _this.absolutePosition.x();
            return { top: absolutePositionY, left: absolutePositionX, right: absolutePositionX + controlRect.width, bottom: absolutePositionY + controlRect.height, width: controlRect.width, height: controlRect.height };
        }));
        _this.locked = control['lockedInUserDesigner'] ? control['lockedInUserDesigner']() : false;
        return _this;
    }
    Object.defineProperty(SurfaceElementBase.prototype, "parent", {
        get: function () {
            return this.getControlModel().parentModel() && this.getControlModel().parentModel().surface;
        },
        enumerable: true,
        configurable: true
    });
    SurfaceElementBase.prototype.checkParent = function (surfaceParent) {
        return this.parent === surfaceParent;
    };
    SurfaceElementBase.prototype._getChildrenHolderName = function () { return 'controls'; };
    SurfaceElementBase.prototype.getChildrenCollection = function () {
        return this._getChildrenHolderName() && this[this._getChildrenHolderName()] || ko.observableArray([]);
    };
    SurfaceElementBase.prototype.updateAbsolutePosition = function () {
        if (this.parent && this.parent.absolutePosition) {
            var parentX = this.parent.absolutePosition.x(), parentY = this.parent.absolutePosition.y(), newX = parentX + this.rect().left, newY = parentY + this.rect().top;
            this.absolutePosition.x(newX);
            this.absolutePosition.y(newY);
        }
        else {
            this.absolutePosition.x(0);
            this.absolutePosition.y(0);
        }
        this.afterUpdateAbsolutePosition();
    };
    SurfaceElementBase.prototype.canDrop = function () { return !this.locked && this._control.getMetaData().isContainer; };
    SurfaceElementBase.prototype.afterUpdateAbsolutePosition = function () {
    };
    SurfaceElementBase.prototype.findNextSelection = function () {
        var parentSurface = this.parent;
        var targetSurface = parentSurface;
        if (parentSurface) {
            var childrenCollection = parentSurface.getChildrenCollection()();
            var indexInCollection = childrenCollection.indexOf(this);
            if (indexInCollection === -1 && childrenCollection.length > 0) {
                targetSurface = childrenCollection[childrenCollection.length - 1];
            }
            else if (childrenCollection.length > 1 && indexInCollection === childrenCollection.length - 1) {
                targetSurface = childrenCollection[indexInCollection - 1];
            }
            else if (childrenCollection.length > 1 && indexInCollection === 0) {
                targetSurface = childrenCollection[childrenCollection.length - 1];
            }
            else if (childrenCollection.length > 1) {
                targetSurface = childrenCollection[childrenCollection.length - 1];
            }
            else if (indexInCollection === -1 && targetSurface.parent && targetSurface.parent.getChildrenCollection()().indexOf(targetSurface) === -1) {
                targetSurface = targetSurface.findNextSelection();
            }
        }
        return targetSurface;
    };
    return SurfaceElementBase;
}(SurfaceElementArea));
exports.SurfaceElementBase = SurfaceElementBase;


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var paddingModelMetaData_1 = __webpack_require__(75);
var Margins = (function () {
    function Margins(left, right, top, bottom) {
        this.bottom = ko.observable(bottom);
        this.left = ko.observable(left);
        this.right = ko.observable(right);
        this.top = ko.observable(top);
    }
    Margins.prototype.getInfo = function () {
        return paddingModelMetaData_1.paddingSerializationsInfo;
    };
    Margins.prototype.isEmpty = function () {
        return this.toString() === Margins.defaultVal;
    };
    Margins.fromString = function (value) {
        if (value === void 0) { value = Margins.defaultVal; }
        var components = value.split(',');
        return new Margins(parseInt(components[0]), parseInt(components[1]), parseInt(components[2]), parseInt(components[3]));
    };
    Margins.prototype.toString = function () {
        var result = Math.round(this.left()) + ', ' + Math.round(this.right()) + ', ' + Math.round(this.top()) + ', ' + Math.round(this.bottom());
        return result;
    };
    Margins.defaultVal = '100, 100, 100, 100';
    Margins.unitProperties = ['left', 'right'];
    return Margins;
}());
exports.Margins = Margins;


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(2);
var serializer_1 = __webpack_require__(51);
var SerializableModel = (function (_super) {
    __extends(SerializableModel, _super);
    function SerializableModel(model, serializer, info) {
        var _this = _super.call(this) || this;
        _this.preInitProperties(model, serializer, info);
        if (info) {
            _this.getInfo = function () {
                return info;
            };
        }
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(_this, model, info);
        return _this;
    }
    SerializableModel.prototype.preInitProperties = function (model, serializer, info) { };
    SerializableModel.prototype.getInfo = function () {
        return null;
    };
    return SerializableModel;
}(utils_1.Disposable));
exports.SerializableModel = SerializableModel;


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _localization_1 = __webpack_require__(8);
function loadMessages(messages) { _localization_1.loadMessages(messages); }
exports.loadMessages = loadMessages;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ace_1 = __webpack_require__(147);
__webpack_require__(146);
if (!!ace_1.default) {
    ace_1.default.define('ace/mode/criteria', ['require', 'exports', 'module', 'ace/lib/oop', 'ace/mode/text'], function (require, exports, module) {
        'use strict';
        var oop = ace_1.default.require('ace/lib/oop');
        var TextMode = ace_1.default.require('ace/mode/text').Mode;
        var CriteriaHighlightRules = ace_1.default.require('ace/mode/criteria_highlight_rules').CriteriaHighlightRules;
        var Mode = function () {
            this.HighlightRules = CriteriaHighlightRules;
        };
        oop.inherits(Mode, TextMode);
        exports.Mode = Mode;
    });
    ace_1.default.define('ace/mode/criteria_highlight_rules', ['require', 'exports', 'module', 'ace/lib/oop', 'ace/mode/text_highlight_rules'], function (require, exports, module) {
        'use strict';
        var oop = ace_1.default.require('ace/lib/oop');
        var TextHighlightRules = ace_1.default.require('ace/mode/text_highlight_rules').TextHighlightRules;
        var DocCommentHighlightRules = ace_1.default.require('ace/mode/doc_comment_highlight_rules').DocCommentHighlightRules;
        var CriteriaHighlightRules = function () {
            this.$rules = {
                'start': [
                    {
                        token: 'comment',
                        start: '/\\*',
                        end: '\\*/'
                    },
                    {
                        token: 'constant.other',
                        regex: /(?:#(?:[^\\\#]|(?:\\.))*#?)|(?:\{[-0-9A-Fa-f]*\}?)/
                    },
                    {
                        token: 'string.quoted.single',
                        regex: /N?'(?:\\.|[^'\\])*'?/,
                    },
                    {
                        token: 'constant.numeric',
                        regex: /[+\-]?\.?\d[\d.]*/i
                    },
                    {
                        token: 'support.other.aggregate',
                        regex: /\.([a-zA-Z_]\w*)?/
                    },
                    {
                        token: 'keyword.operator',
                        regex: /[+\-*/%|&^<>]|==|!=|<=|>=|In|Like|Between|And|Or|Not/i
                    },
                    {
                        token: 'constant.language',
                        regex: /True|False/i
                    },
                    {
                        token: 'support.context.start',
                        regex: /\[(?:[^\]\)])*\]\[/
                    },
                    {
                        token: 'support.variable.other',
                        regex: /\[(?:[^\]\,])*\]?/
                    },
                    {
                        token: 'support.variable.parameter',
                        regex: /\?\w+/
                    },
                    {
                        token: 'support.context.end',
                        regex: /\]/
                    },
                    {
                        token: 'support.function',
                        regex: /[_\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376-\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E-\u066F\u0671-\u06D3\u06D5\u06E5-\u06E6\u06EE-\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4-\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F-\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC-\u09DD\u09DF-\u09E1\u09F0-\u09F1\u0A05-\u0A0A\u0A0F-\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32-\u0A33\u0A35-\u0A36\u0A38-\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2-\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0-\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F-\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32-\u0B33\u0B35-\u0B39\u0B3D\u0B5C-\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99-\u0B9A\u0B9C\u0B9E-\u0B9F\u0BA3-\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60-\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0-\u0CE1\u0CF1-\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32-\u0E33\u0E40-\u0E46\u0E81-\u0E82\u0E84\u0E87-\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA-\u0EAB\u0EAD-\u0EB0\u0EB2-\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065-\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE-\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5-\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183-\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3006\u3031-\u3035\u303B-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5-\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40-\uFB41\uFB43-\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC][\d_\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376-\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E-\u066F\u0671-\u06D3\u06D5\u06E5-\u06E6\u06EE-\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4-\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F-\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC-\u09DD\u09DF-\u09E1\u09F0-\u09F1\u0A05-\u0A0A\u0A0F-\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32-\u0A33\u0A35-\u0A36\u0A38-\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2-\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0-\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F-\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32-\u0B33\u0B35-\u0B39\u0B3D\u0B5C-\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99-\u0B9A\u0B9C\u0B9E-\u0B9F\u0BA3-\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60-\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0-\u0CE1\u0CF1-\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32-\u0E33\u0E40-\u0E46\u0E81-\u0E82\u0E84\u0E87-\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA-\u0EAB\u0EAD-\u0EB0\u0EB2-\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065-\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE-\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5-\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183-\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3006\u3031-\u3035\u303B-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5-\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40-\uFB41\uFB43-\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]*/
                    }
                ],
                comment: [
                    {
                        token: 'comment',
                        regex: '\\*\\/',
                        next: 'no_regex'
                    },
                    {
                        defaultToken: 'comment'
                    }
                ]
            };
            this.embedRules(DocCommentHighlightRules, 'doc-', [DocCommentHighlightRules.getEndRule('start')]);
            this.normalizeRules();
        };
        oop.inherits(CriteriaHighlightRules, TextHighlightRules);
        exports.CriteriaHighlightRules = CriteriaHighlightRules;
    });
}


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _validator_1 = __webpack_require__(186);
_validator_1.checkIncludedScripts();
var _add_analytics_to_bundle_1 = __webpack_require__(187);
var DevExpress = window.DevExpress || {};
_add_analytics_to_bundle_1._addAnalyticsToBundle(DevExpress);
_validator_1.checkVersions();
module.exports = DevExpress['Analytics'];


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function checkIncludedScripts() {
    var ko = window['ko'];
    if (!ko) {
        console.error('The Knockout library is missing. Check whether a script is included on the page.');
    }
    else {
        if (!ko.bindingHandlers['dxPopup'])
            console.error('The DevExtreme library is missing. Check whether a script is included on the page.');
    }
    var $ = window['$'] || window['jQuery'];
    if (!$) {
        console.error('The jQuery library is missing. Check whether a script is included on the page.');
    }
    else {
        if (!$.ui || !$.ui.resizable || !$.ui.draggable)
            console.error('The jQuery UI library is missing or included before the jQuery library. Check whether a script is included on the page.');
    }
}
exports.checkIncludedScripts = checkIncludedScripts;
function checkVersions() {
    var DevExpress = window.DevExpress;
    var analyticsVersion = DevExpress['Analytics']['VERSION'];
    var devExtremeVersion = DevExpress['VERSION'];
    if (devExtremeVersion != analyticsVersion)
        console.warn("Analytics-Core (v" + analyticsVersion + ") and DevExtreme (v" + devExtremeVersion + ") versions do not match.");
}
exports.checkVersions = checkVersions;


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var AnalyticsInternal = __webpack_require__(188);
var Utils = __webpack_require__(207);
var WidgetsInternal = __webpack_require__(211);
var Widgets = __webpack_require__(217);
var WidgetsMetadata = __webpack_require__(226);
var WidgetsFiltering = __webpack_require__(227);
var Criteria = __webpack_require__(228);
var CriteriaUtils = __webpack_require__(229);
var WidgetsTreeList = __webpack_require__(230);
var Elements = __webpack_require__(231);
var ElementsMetadata = __webpack_require__(232);
var Tools = __webpack_require__(233);
var Localization = __webpack_require__(234);
var Ace = __webpack_require__(235);
var analytics_version_1 = __webpack_require__(152);
function _addAnalyticsToBundle(bundle) {
    bundle.Analytics = bundle.Analytics || {};
    bundle.Analytics.Internal = AnalyticsInternal;
    bundle.Analytics.Utils = Utils;
    bundle.Analytics.Widgets = Widgets;
    bundle.Analytics.Widgets.Ace = Ace;
    bundle.Analytics.Widgets.Metadata = WidgetsMetadata;
    bundle.Analytics.Widgets.Internal = WidgetsInternal;
    bundle.Analytics.Widgets.Filtering = WidgetsFiltering;
    bundle.Analytics.Widgets.TreeList = WidgetsTreeList;
    bundle.Analytics.Criteria = Criteria;
    bundle.Analytics.Criteria.Utils = CriteriaUtils;
    bundle.Analytics.Elements = Elements;
    bundle.Analytics.Elements.Metadata = ElementsMetadata;
    bundle.Analytics.Tools = Tools;
    bundle.Analytics.Localization = Localization;
    bundle.Analytics.VERSION = analytics_version_1.version;
    return bundle;
}
exports._addAnalyticsToBundle = _addAnalyticsToBundle;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(57);
__webpack_require__(189);
__webpack_require__(4);
__webpack_require__(5);
__webpack_require__(190);
__webpack_require__(8);
__webpack_require__(58);
__webpack_require__(9);
__webpack_require__(59);
__webpack_require__(60);
__webpack_require__(42);
__webpack_require__(85);
__webpack_require__(191);
__webpack_require__(22);
__webpack_require__(30);
__webpack_require__(62);
__webpack_require__(149);
__webpack_require__(193);
__webpack_require__(150);
__webpack_require__(87);
__webpack_require__(151);
__webpack_require__(196);
__webpack_require__(31);
__webpack_require__(48);
__webpack_require__(68);
__webpack_require__(39);
__webpack_require__(49);
__webpack_require__(71);
__webpack_require__(72);
__webpack_require__(73);
__webpack_require__(154);
__webpack_require__(155);
__webpack_require__(156);
__webpack_require__(92);
__webpack_require__(199);
__webpack_require__(93);
__webpack_require__(94);
__webpack_require__(95);
__webpack_require__(90);
__webpack_require__(74);
__webpack_require__(89);
__webpack_require__(97);
__webpack_require__(98);
__webpack_require__(157);
__webpack_require__(33);
__webpack_require__(158);
__webpack_require__(100);
__webpack_require__(101);
__webpack_require__(159);
__webpack_require__(160);
__webpack_require__(161);
__webpack_require__(66);
__webpack_require__(200);
__webpack_require__(102);
__webpack_require__(25);
__webpack_require__(103);
__webpack_require__(104);
__webpack_require__(105);
__webpack_require__(106);
__webpack_require__(77);
__webpack_require__(107);
__webpack_require__(108);
__webpack_require__(109);
__webpack_require__(110);
__webpack_require__(32);
__webpack_require__(163);
__webpack_require__(67);
__webpack_require__(38);
__webpack_require__(24);
__webpack_require__(164);
__webpack_require__(69);
__webpack_require__(204);
__webpack_require__(116);
__webpack_require__(113);
__webpack_require__(115);
__webpack_require__(70);
__webpack_require__(112);
__webpack_require__(167);
__webpack_require__(206);
__webpack_require__(168);
__export(__webpack_require__(57));
__export(__webpack_require__(4));
__export(__webpack_require__(5));
__export(__webpack_require__(8));
__export(__webpack_require__(58));
__export(__webpack_require__(9));
__export(__webpack_require__(59));
__export(__webpack_require__(60));
__export(__webpack_require__(42));
__export(__webpack_require__(85));
__export(__webpack_require__(30));
__export(__webpack_require__(22));
__export(__webpack_require__(62));
__export(__webpack_require__(149));
__export(__webpack_require__(150));
__export(__webpack_require__(87));
__export(__webpack_require__(151));
__export(__webpack_require__(31));
__export(__webpack_require__(48));
__export(__webpack_require__(68));
__export(__webpack_require__(39));
__export(__webpack_require__(49));
__export(__webpack_require__(71));
__export(__webpack_require__(72));
__export(__webpack_require__(73));
__export(__webpack_require__(154));
__export(__webpack_require__(155));
__export(__webpack_require__(156));
__export(__webpack_require__(92));
__export(__webpack_require__(93));
__export(__webpack_require__(94));
__export(__webpack_require__(95));
__export(__webpack_require__(90));
__export(__webpack_require__(74));
__export(__webpack_require__(89));
__export(__webpack_require__(97));
__export(__webpack_require__(98));
__export(__webpack_require__(157));
__export(__webpack_require__(33));
__export(__webpack_require__(158));
__export(__webpack_require__(100));
__export(__webpack_require__(101));
__export(__webpack_require__(159));
__export(__webpack_require__(160));
__export(__webpack_require__(161));
__export(__webpack_require__(66));
__export(__webpack_require__(102));
__export(__webpack_require__(25));
__export(__webpack_require__(103));
__export(__webpack_require__(104));
__export(__webpack_require__(105));
__export(__webpack_require__(106));
__export(__webpack_require__(77));
__export(__webpack_require__(107));
__export(__webpack_require__(108));
__export(__webpack_require__(109));
__export(__webpack_require__(110));
__export(__webpack_require__(32));
__export(__webpack_require__(163));
__export(__webpack_require__(67));
__export(__webpack_require__(38));
__export(__webpack_require__(24));
__export(__webpack_require__(164));
__export(__webpack_require__(69));
__export(__webpack_require__(116));
__export(__webpack_require__(113));
__export(__webpack_require__(115));
__export(__webpack_require__(70));
__export(__webpack_require__(112));
__export(__webpack_require__(167));
__export(__webpack_require__(168));


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 192 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.themes };

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 194 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.VERSION };

/***/ }),
/* 195 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.notify };

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 197 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxSelectBox };

/***/ }),
/* 198 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxMenu };

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
__webpack_require__(7);
__webpack_require__(7);
__webpack_require__(7);
__webpack_require__(7);
var _internal_1 = __webpack_require__(4);
var _dragDropHandler_1 = __webpack_require__(31);
var _utils_1 = __webpack_require__(24);
var _keyboardHelper_1 = __webpack_require__(48);
var _utils_2 = __webpack_require__(5);
var _utils_3 = __webpack_require__(9);
var templateUtils_1 = __webpack_require__(13);
ko.bindingHandlers['cssArray'] = {
    'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var value = ko.utils.unwrapObservable(valueAccessor());
        for (var i = 0; i < value.length; i++) {
            ko.bindingHandlers['css'].update(element, function () { return value[i]; });
        }
    }
};
ko.bindingHandlers['selectable'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var values = valueAccessor(), isUpdate = false, $element = $(element), selection = ko.unwrap(values.selection), options = _utils_2.extend({ filter: '.dxd-selectable', distance: 1 }, ko.unwrap(values), {
            selecting: function (event, ui) {
                var _event = { control: ko.dataFor(ui.selecting), cancel: false, ctrlKey: event.ctrlKey };
                selection.selecting(_event);
                if (_event.cancel) {
                    $(ui.selecting).removeClass('ui-selecting');
                }
            },
            start: function (event, ui) {
                selection.clickHandler(null, event);
                selection.started = true;
                event.stopPropagation();
            },
            stop: function () {
                selection.started = false;
                selection.applySelection();
            },
            unselecting: function (event, ui) {
                selection.unselecting(ko.dataFor(ui.unselecting));
            },
            classes: {
                'ui-selectable-helper': 'dxrd-selection-content'
            }
        });
        $element['selectable'](options);
        var subscriptions = [];
        var subscribeProperty = function (property, optionName) {
            if (property && ko.isSubscribable(property)) {
                subscriptions.push(property.subscribe(function (newVal) {
                    $element['selectable']('option', optionName, newVal);
                }));
            }
        };
        subscribeProperty(selection.disabled, 'disabled');
        subscribeProperty(values.zoom, 'zoom');
        _internal_1.addDisposeCallback(element, function () {
            if ($element.data('ui-selectable')) {
                $element['selectable']('destroy');
            }
            $element = null;
            subscribeProperty = null;
            subscriptions.forEach(function (x) { return x.dispose(); });
        });
    }
};
ko.bindingHandlers['updateTop'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var value = valueAccessor();
        var $element = $(element);
        var updateTop = function (value) {
            var scaleY = element.getBoundingClientRect().height / element.offsetHeight;
            var top = (value === 0 || !!value) ? value : ($element.prev().position().top / scaleY) + $element.prev().outerHeight();
            $element.css('top', top + 'px');
        };
        var subscription = value.subscribe(function (newVal) {
            updateTop(newVal);
        });
        updateTop(value());
        _internal_1.addDisposeCallback(element, function () {
            subscription.dispose();
        });
    }
};
ko.bindingHandlers['draggable'] = {
    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
        var values = valueAccessor();
        if (!values)
            return;
        var $element = $(element), $parent = values.parent && values.parent() || $element.closest('.dx-designer-viewport'), containment = values.containment || '.dxrd-ghost-container', $viewport, $ghostContainerOffset, $containmentOffset, initialScroll = { left: 0, top: 0 }, attachDelta = function (ui) {
            ui['delta'] = {
                left: ($ghostContainerOffset && $ghostContainerOffset.left || 0) - $containmentOffset.left,
                top: ($ghostContainerOffset && $ghostContainerOffset.top || 0) - $containmentOffset.top
            };
            ui['scroll'] = {
                left: $viewport.scrollLeft() - initialScroll.left,
                top: $viewport.scrollTop() - initialScroll.top
            };
        }, options = _utils_2.extend({}, ko.unwrap(values), {
            start: function (event, ui) {
                _dragDropHandler_1.DragDropHandler.started(true);
                var draggable = $element.data('ui-draggable');
                $viewport = $parent.find('.dxrd-viewport');
                $ghostContainerOffset = $parent.find('.dxrd-ghost-container').offset();
                $containmentOffset = $parent.find(containment).offset();
                initialScroll.left = $viewport.scrollLeft();
                initialScroll.top = $viewport.scrollTop();
                values.startDrag && values.startDrag(ko.dataFor(event.currentTarget || event.toElement));
            },
            stop: function (event, ui) {
                attachDelta(ui);
                values.stopDrag(ui, ko.dataFor(event.target), event);
                _dragDropHandler_1.DragDropHandler.started(false);
            },
            drag: function (event, ui) {
                attachDelta(ui);
                values.drag && values.drag(event, ui);
            },
            helper: function (event) {
                var $container;
                if (values.helper) {
                    $container = values.helper(ko.dataFor(event.currentTarget || event['toElement']), event);
                    if ($container)
                        return $container;
                }
                var templateHtml = templateUtils_1.getTemplate(bindingContext.$root.dragHelperContent.template);
                $container = $(templateHtml).css({ 'display': values.helper ? 'block' : 'none' });
                $container.prependTo($parent.find(options.containment));
                ko.applyBindingsToDescendants(bindingContext.$root.dragHelperContent, $container[0]);
                return $container;
            }
        });
        options.containment = $parent.find(options.containment);
        $element['draggable'](options);
        _internal_1.addDisposeCallback(element, function () {
            if ($element.data('ui-draggable'))
                $element['draggable']('destroy');
        });
    }
};
var trackCursorData = 'dxd-track-cursor-data';
var trackCursorClass = 'dxd-track-cursor';
var trackCursorSelector = '.' + trackCursorClass;
var dragHelperLineClass = 'dxrd-drag-helper-item';
ko.bindingHandlers['trackCursor'] = {
    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
        var $element = $(element);
        $element.addClass(trackCursorClass);
        var value = valueAccessor();
        var recalculateBounds = false;
        if (value['recalculateBounds']) {
            recalculateBounds = value['recalculateBounds'];
            value = value['underCursor'];
        }
        var bounds = element.getBoundingClientRect(), body = document.body, docElem = document.documentElement, overHandler = function (event) {
            if (!(bindingContext.$root.selection.started && bindingContext.$root.resizeHandler.started)) {
                if (!value().isNotDropTarget) {
                    bindingContext.$root.selection.dropTarget = bindingContext.$data;
                    event.stopPropagation();
                }
            }
        }, enterHandler = function (event) {
            value(_utils_2.extend(value(), { isOver: true }));
            if (!(bindingContext.$root.selection.started && bindingContext.$root.resizeHandler.started)) {
                bounds = element.getBoundingClientRect();
            }
        }, leaveHandler = function (event) {
            value(_utils_2.extend(value(), { isOver: false }));
        }, handler = function (event) {
            if (recalculateBounds)
                bounds = element.getBoundingClientRect();
            if (!(bindingContext.$root.selection.started && bindingContext.$root.resizeHandler.started)) {
                var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop, scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft, clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0, y = event.pageY - (bounds.top + scrollTop - clientTop), x = event.pageX - (bounds.left + scrollLeft - clientLeft);
                value(_utils_2.extend(value(), { x: x, y: y }));
            }
        };
        element.addEventListener('mousemove', handler);
        !recalculateBounds && element.addEventListener('mouseenter', enterHandler);
        element.addEventListener('mouseover', overHandler);
        element.addEventListener('mouseleave', leaveHandler);
        element.addEventListener('dragover', handler);
        _internal_1.addDisposeCallback(element, function () {
            element.removeEventListener('dragover', handler);
            element.removeEventListener('mousemove', handler);
            element.removeEventListener('mouseover', overHandler);
            element.removeEventListener('mouseleave', leaveHandler);
            !recalculateBounds && element.removeEventListener('mouseenter', enterHandler);
            $element.removeClass(trackCursorClass);
        });
    }
};
ko.bindingHandlers['templates'] = {
    init: function (element, valueAccessor) {
        var templateHtml = $(valueAccessor()).text(), $templateHtml = $(templateHtml);
        $(element).append($templateHtml);
        return { controlsDescendantBindings: true };
    }
};
ko.bindingHandlers['zoom'] = {
    update: function (element, valueAccessor) {
        var value = ko.unwrap(valueAccessor() || {});
        for (var i = 0; i < _utils_1.cssTransform.length; i++) {
            element.style[_utils_1.cssTransform[i]] = 'scale(' + (value) + ')';
        }
        $(element).addClass('dxrd-transform-origin-left-top');
    }
};
ko.bindingHandlers['keyDownActions'] = (function () {
    var handlersManager = new _keyboardHelper_1.KeyDownHandlersManager(window);
    return {
        init: function (element, valueAccessor) {
            var actionLists = valueAccessor(), handler = function (e) { actionLists.processShortcut(ko.unwrap(actionLists.toolbarItems), e); };
            if (ko.isSubscribable(actionLists.enabled)) {
                var subscribe = actionLists.enabled.subscribe(function (newVal) {
                    if (newVal)
                        handlersManager.bindHandler(element, handler);
                });
                _internal_1.addDisposeCallback(element, function () { return subscribe.dispose(); });
            }
            if (ko.unwrap(actionLists.enabled))
                handlersManager.bindHandler(element, handler);
        }
    };
})();
ko.bindingHandlers['accessibilityKeyboardHelper'] = (function () {
    return {
        init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
            var handlersManager = valueAccessor();
            if (handlersManager && (bindingContext.$root.accessibilityCompliant || handlersManager.accessibilityCompliantEnabled)) {
                var subscription = ko.bindingEvent.subscribe(element, 'childrenComplete', function () {
                    handlersManager.bindHandler(element);
                });
                _internal_1.addDisposeCallback(element, function () {
                    subscription.dispose();
                });
            }
        }
    };
})();
ko.bindingHandlers['dxAction'] = (function () {
    return {
        init: function (element, valueAccessor) {
            var values = valueAccessor();
            var clickHandler = function (e) {
                values.action.call(values.model, values.model, e);
            };
            var keyPressHandler = function (e) {
                if (e.key == _utils_3.KeyboardEnum.Enter || e.key == _utils_3.KeyboardEnum.Space) {
                    values.action.call(values.model, values.model, e);
                }
            };
            element.addEventListener('click', clickHandler);
            element.addEventListener('keydown', keyPressHandler);
            _internal_1.addDisposeCallback(element, function () {
                element.removeEventListener('click', clickHandler);
                element.removeEventListener('keydown', keyPressHandler);
            });
        }
    };
})();
ko.extenders.dxdnum = function (target, value) {
    target.subscribe(function (newValue) {
        if (value.max) {
            target(Math.min(newValue, value.max));
        }
        else if (value.min) {
            target(Math.max(newValue, value.min));
        }
    });
    return target;
};


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
__webpack_require__(7);
__webpack_require__(7);
__webpack_require__(7);
__webpack_require__(7);
var _surfaceHelpers_1 = __webpack_require__(25);
var size_1 = __webpack_require__(47);
var _dragDropHandler_1 = __webpack_require__(31);
var _internal_1 = __webpack_require__(4);
var _utils_1 = __webpack_require__(5);
ko.bindingHandlers['resizable'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var values = valueAccessor(), $element = $(element), $parent = $element.closest('.dx-designer'), currentDirection = null, $selectedNodes = null, resizableDirections = { 'north': 'n', 'east': 'e', 'south': 's', 'west': 'w' }, calculateSizes = [], absolutePosition = null;
        values.handles = ko.unwrap(values.handles);
        var options = _utils_1.extend({
            handles: values.handles || 'all', ghost: false,
            stop: function (event, ui) {
                $selectedNodes.each(function (_, el) {
                    var context = ko.contextFor(el), control = context.$data, surface = context.$root.surface(), $el = $(el);
                    var rect = control.rect();
                    var newRect = _surfaceHelpers_1.getControlRect($el, control, surface);
                    newRect = {
                        top: currentDirection.indexOf(resizableDirections.north) !== -1 ? newRect.top : rect.top,
                        left: currentDirection.indexOf(resizableDirections.west) !== -1 ? newRect.left : rect.left,
                        width: currentDirection.indexOf(resizableDirections.east) !== -1 || currentDirection.indexOf(resizableDirections.west) !== -1 ? newRect.width : rect.width,
                        height: currentDirection.indexOf(resizableDirections.south) !== -1 || currentDirection.indexOf(resizableDirections.north) !== -1 ? newRect.height : rect.height,
                    };
                    calculateSizes.push(function () {
                        if (control.canSetRect && !control.canSetRect(newRect)) {
                            var originalPosition = $el.data('originalPosition');
                            var originalSize = $el.data('originalSize');
                            if (originalPosition) {
                                $el.css('top', originalPosition.top + 'px');
                                $el.css('left', originalPosition.left + 'px');
                            }
                            if (originalSize) {
                                $el.css('width', originalSize.width + 'px');
                                $el.css('height', originalSize.height + 'px');
                            }
                            $el.removeData('originalPosition');
                            $el.removeData('originalSize');
                            return;
                        }
                        control.rect(newRect);
                        if (JSON.stringify(rect) === JSON.stringify(newRect)) {
                            $el.css({
                                left: rect.left,
                                top: rect.top,
                                width: rect.width,
                                height: rect.height
                            });
                        }
                        $el.removeData('originalPosition');
                        $el.removeData('originalSize');
                    });
                });
                calculateSizes.forEach(function (c) { return c(); });
                calculateSizes = [];
                currentDirection = null;
                values.stopped();
                values.started = false;
                if (values.snapHelper) {
                    values.snapHelper.deactivateSnapLines();
                }
            },
            start: function (event) {
                var currentClassList = event.originalEvent.target.classList;
                for (var i = 0; i < currentClassList.length; i++) {
                    if (currentClassList[i] !== 'ui-resizable-handle' && currentClassList[i].indexOf('ui-resizable-') === 0)
                        currentDirection = currentClassList[i].slice('ui-resizable-'.length, currentClassList[i].length);
                }
                values.started = true;
                values.starting();
                $selectedNodes = values.$selectedNodes || $('.dxrd-viewport .dxrd-selected').filter(':visible');
                $selectedNodes
                    .each(function (_, el) {
                    var $el = $(el);
                    var bounds = el.getBoundingClientRect();
                    $el.data('originalPosition', { top: parseFloat($el.css('top')), left: parseFloat($el.css('left')) });
                    $el.data('originalSize', { width: bounds.width, height: bounds.height });
                });
                var elementOffset = $element.offset();
                var ghostContainerOffset = $parent.find('.dxrd-ghost-container').offset();
                if (!ghostContainerOffset) {
                    absolutePosition = elementOffset;
                }
                else {
                    absolutePosition = {
                        top: elementOffset.top - ghostContainerOffset.top,
                        left: elementOffset.left - ghostContainerOffset.left
                    };
                }
                if (values.snapHelper) {
                    values.snapHelper.updateSnapLines(viewModel);
                }
            },
            resize: function (event, ui) {
                var dw = ui.size.width - ui.originalSize.width, dh = ui.size.height - ui.originalSize.height, dx = ui.position.left - ui.originalPosition.left, dy = ui.position.top - ui.originalPosition.top;
                if (values.forceResize) {
                    values.forceResize({ size: new size_1.Size(ui.size.width, ui.size.height), delta: { dx: dx, dy: dy, dw: dw, dh: dh } });
                }
                if (event.altKey) {
                    values.snapHelper && values.snapHelper.deactivateSnapLines();
                }
                else if (values.snapHelper && $selectedNodes.length === 1) {
                    var newAbsolutePosition = _surfaceHelpers_1.getControlNewAbsolutePositionOnResize(values.snapHelper, absolutePosition, ui, { x: dx, y: dy, width: dw, height: dh });
                    values.snapHelper.activateSnapLines(newAbsolutePosition);
                    $element.css({
                        left: ui.originalPosition.left + newAbsolutePosition.left - absolutePosition.left,
                        top: ui.originalPosition.top + newAbsolutePosition.top - absolutePosition.top,
                        width: newAbsolutePosition.right - newAbsolutePosition.left,
                        height: newAbsolutePosition.bottom - newAbsolutePosition.top
                    });
                }
                $selectedNodes
                    .each(function (key, el) {
                    if (el === event.target)
                        return;
                    var $el = $(el);
                    var originalPosition = $el.data('originalPosition'), originalSize = $el.data('originalSize');
                    $el.css({
                        left: originalPosition.left + dx,
                        top: originalPosition.top + dy,
                        width: originalSize.width + dw,
                        height: originalSize.height + dh
                    });
                });
            }
        }, ko.unwrap(values));
        var subscription = null;
        if (!values.disabled) {
            subscription = _dragDropHandler_1.DragDropHandler.started.subscribe(function (newVal) {
                $element['resizable']('option', 'disabled', newVal);
                newVal ? $element.children('.ui-resizable-handle').css('display', 'none') : $element.children('.ui-resizable-handle').css('display', 'block');
            });
        }
        $element['resizable'](options);
        var onResize = function (event) {
            event.stopPropagation();
        };
        $element['resizable']().on('resize', onResize);
        _internal_1.addDisposeCallback(element, function () {
            $element['resizable']().off('resize', onResize);
            if ($element.data('ui-resizable'))
                $element['resizable']('destroy');
            $element = null;
            subscription && subscription.dispose();
        });
    },
    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
        var $element = $(element);
        var disabled = !!(ko.unwrap(valueAccessor().disabled) || false || ko.unwrap(viewModel.locked));
        $element['resizable']('option', 'disabled', disabled);
        $element['resizable']('option', 'minHeight', ko.unwrap(valueAccessor().minimumHeight) || 1);
        $element['resizable']('option', 'minWidth', ko.unwrap(valueAccessor().minimumWidth) || 1);
        if (ko.unwrap(valueAccessor().handles) && $element['resizable']('option', 'handles') !== ko.unwrap(valueAccessor().handles)) {
            $element['resizable']('option', 'handles', ko.unwrap(valueAccessor().handles));
        }
        var maxWidth = ko.unwrap(valueAccessor().maximumWidth);
        if (maxWidth) {
            $element['resizable']('option', 'maxWidth', maxWidth);
        }
        disabled ? $element.children('.ui-resizable-handle').css('display', 'none') : $element.children('.ui-resizable-handle').css('display', 'block');
    }
};


/***/ }),
/* 201 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.data.ArrayStore };

/***/ }),
/* 202 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.data.CustomStore };

/***/ }),
/* 203 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.validationEngine };

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _bordereditor_1 = __webpack_require__(116);
var templateUtils_1 = __webpack_require__(13);
var _internal_1 = __webpack_require__(4);
ko.bindingHandlers['dxBorderEditor'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        $(element).children().remove();
        var templateHtml = templateUtils_1.getTemplate('dxrd-bordereditor'), $element = $(element).append(templateHtml);
        var model = new _bordereditor_1.BordersModel(valueAccessor());
        ko.applyBindings({ value: model }, $element.children()[0]);
        _internal_1.addDisposeCallback(element, function () { return model.dispose(); });
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 205 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxButton };

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(76);
__webpack_require__(2);
__webpack_require__(208);
__webpack_require__(51);
__webpack_require__(169);
__webpack_require__(3);
__webpack_require__(27);
__webpack_require__(209);
__webpack_require__(210);
__webpack_require__(170);
__webpack_require__(171);
__webpack_require__(88);
__webpack_require__(52);
__webpack_require__(172);
__webpack_require__(96);
__export(__webpack_require__(76));
__export(__webpack_require__(2));
__export(__webpack_require__(51));
__export(__webpack_require__(169));
__export(__webpack_require__(3));
__export(__webpack_require__(27));
__export(__webpack_require__(170));
__export(__webpack_require__(171));
__export(__webpack_require__(88));
__export(__webpack_require__(52));
__export(__webpack_require__(172));
__export(__webpack_require__(96));


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(19);
__webpack_require__(118);
__webpack_require__(173);
__webpack_require__(119);
__webpack_require__(174);
__webpack_require__(81);
__webpack_require__(79);
__webpack_require__(91);
__webpack_require__(20);
__webpack_require__(45);
__webpack_require__(53);
__webpack_require__(65);
__webpack_require__(54);
__webpack_require__(64);
__webpack_require__(46);
__webpack_require__(120);
__webpack_require__(121);
__webpack_require__(40);
__webpack_require__(123);
__webpack_require__(175);
__webpack_require__(54);
__webpack_require__(37);
__webpack_require__(124);
__webpack_require__(125);
__webpack_require__(63);
__webpack_require__(126);
__webpack_require__(55);
__webpack_require__(127);
__webpack_require__(135);
__webpack_require__(176);
__webpack_require__(213);
__webpack_require__(173);
__webpack_require__(136);
__webpack_require__(137);
__webpack_require__(177);
__webpack_require__(215);
__webpack_require__(153);
__webpack_require__(138);
__webpack_require__(216);
__export(__webpack_require__(19));
__export(__webpack_require__(118));
__export(__webpack_require__(119));
__export(__webpack_require__(174));
__export(__webpack_require__(81));
__export(__webpack_require__(79));
__export(__webpack_require__(91));
__export(__webpack_require__(20));
__export(__webpack_require__(45));
__export(__webpack_require__(53));
__export(__webpack_require__(65));
__export(__webpack_require__(54));
__export(__webpack_require__(64));
__export(__webpack_require__(46));
__export(__webpack_require__(120));
__export(__webpack_require__(121));
__export(__webpack_require__(40));
__export(__webpack_require__(123));
__export(__webpack_require__(175));
__export(__webpack_require__(54));
__export(__webpack_require__(37));
__export(__webpack_require__(124));
__export(__webpack_require__(125));
__export(__webpack_require__(63));
__export(__webpack_require__(126));
__export(__webpack_require__(55));
__export(__webpack_require__(127));
__export(__webpack_require__(135));
__export(__webpack_require__(176));
__export(__webpack_require__(136));
__export(__webpack_require__(137));
__export(__webpack_require__(177));
__export(__webpack_require__(138));


/***/ }),
/* 212 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxPopup };

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _treelistItem_1 = __webpack_require__(121);
var _treelistController_1 = __webpack_require__(40);
var _treeListSearchViewModel_1 = __webpack_require__(123);
var scroll_view_1 = __webpack_require__(80);
var _utils_1 = __webpack_require__(5);
var templateUtils_1 = __webpack_require__(13);
ko.bindingHandlers['treelist'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var treeListViewModel = null;
        var childContext = null;
        var callback = null;
        var values = valueAccessor(), options = ko.unwrap(values), pathArray, updateScrollBar = function () {
            var options = ko.unwrap(values);
            var scrollViewElt = $(element).closest('.dx-scrollview').get(0);
            var scrollView = scrollViewElt && scroll_view_1.default.getInstance(scrollViewElt);
            scrollView && scrollView['update']();
            if (options.onItemsVisibilityChanged) {
                options.onItemsVisibilityChanged();
            }
        }, updateTreeList = function (options) {
            pathArray && pathArray.dispose();
            var treeListController = options.treeListController || new _treelistController_1.TreeListController();
            options.treeListController = treeListController;
            treeListController.dragDropHandler = treeListController.dragDropHandler || bindingContext.$root.fieldDragHandler;
            options.factory = options.factory || new _treelistItem_1.DefaultTreeListItemFactory();
            options.itemsProvider = ko.unwrap(options.itemsProvider);
            options.pageSize = options.pageSize || -1;
            treeListViewModel && treeListViewModel.dispose();
            if (!options || !options.itemsProvider)
                return;
            if (!options.rtl) {
                options.rtl = $(element).closest('.dx-rtl').length > 0;
            }
            pathArray = ko.computed(function () {
                var result = ko.unwrap(options.path);
                if (!Array.isArray(result)) {
                    return !!result ? result.split('.') : [];
                }
                return result;
            });
            treeListViewModel = options.factory.createRootItem(options, pathArray, updateScrollBar, options.rtl);
            var treeListTemplate = options.templateHtml || templateUtils_1.getTemplate('dx-treelist');
            if (treeListController.root) {
                treeListController.searchEnabled = true;
                treeListController.searchOptions = treeListController.searchOptions || new _treeListSearchViewModel_1.TreeListSearchOptions();
                treeListController.root(treeListViewModel);
            }
            var $element = $(element).html(treeListTemplate);
            childContext = bindingContext.createChildContext(treeListViewModel);
            ko.applyBindings(childContext, $element.children()[0]);
            callback && ko.utils.domNodeDisposal.removeDisposeCallback(element, callback);
            callback = function () {
                treeListViewModel && treeListViewModel.dispose();
                treeListViewModel = null;
                subscription && subscription.dispose();
                pathArray && pathArray.dispose();
                callback = null;
                ko.utils.domNodeDisposal.removeDisposeCallback(element, callback);
            };
            ko.utils.domNodeDisposal.addDisposeCallback(element, callback);
        };
        updateTreeList(_utils_1.extend({}, options));
        var subscription = null;
        if (ko.isSubscribable(values)) {
            subscription = values.subscribe(function (newValue) {
                newValue && updateTreeList(_utils_1.extend({}, newValue));
            });
        }
        else if (ko.isSubscribable(values.itemsProvider)) {
            subscription = values.itemsProvider.subscribe(function (newValue) {
                newValue && updateTreeList(_utils_1.extend({}, values));
            });
        }
        return { controlsDescendantBindings: true };
    }
};
ko.bindingHandlers['treeListSearchPanel'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var values = valueAccessor();
        var template = ko.unwrap(values.template);
        var modelType = ko.unwrap(values.modelType);
        var controllers = ko.unwrap(values.controllers);
        if (!Array.isArray(controllers))
            controllers = [controllers];
        _treeListSearchViewModel_1.TreeListSearchViewModel.createController(element, controllers, modelType, template);
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 214 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxDropDownBox };

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _svgTemplateEngine_1 = __webpack_require__(20);
_svgTemplateEngine_1.SvgTemplatesEngine.addTemplates({
    'dxrd-bordereditor': '<div class="dxrd-bordereditor-content"> <!-- ko with: value--> <div class="dxrd-bordereditor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-borders-none" data-bind="template: \'dxrd-svg-properties-borders-none\', css: { \'dxd-state-active\': (!bottom() && !left() && !top() && !right()), \'dxrd-disabled-button\': disabled }, click: function() { setNone() }"></div> <div class="dxrd-bordereditor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-borders-all dxrd-bordereditor-right-margin" data-bind="template: \'dxrd-svg-properties-borders-all\', css: { \'dxd-state-active\': (bottom() && left() && top() && right()), \'dxrd-disabled-button\': disabled  }, click: function() { setAll() }"></div> <div class="dxrd-bordereditor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-borders-left" data-bind="template: \'dxrd-svg-properties-borders-left\', css: { \'dxd-state-active\': left(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'left\') }"></div> <div class="dxrd-bordereditor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-borders-top" data-bind="template: \'dxrd-svg-properties-borders-top\', css: { \'dxd-state-active\': top(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'top\') }"></div> <div class="dxrd-bordereditor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-borders-right" data-bind="template: \'dxrd-svg-properties-borders-right\', css: { \'dxd-state-active\': right(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'right\') }"></div> <div class="dxrd-bordereditor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-borders-bottom" data-bind="template: \'dxrd-svg-properties-borders-bottom\', css: { \'dxd-state-active\': bottom(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'bottom\') }"></div> <p></p> <!-- /ko --></div>',
    'dxrd-borders': '<div class="dxrd-bordereditor" data-bind="dxBorderEditor: { value: value, disabled: disabled }"></div>',
    'dxrd-colorpicker': '<div data-bind="dxColorBox: { value: displayValue, editAlphaChannel: true, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element), position: { at: \'left bottom\', collision: \'flipfit flipfit\', my: \'left top\', boundary: $root.getPopupContainer($element), of: $element } }, inputAttr: { \'aria-label\': displayName } }"></div>',
    'dxrd-expressionstring': '<!-- ko if: $data.value() --> <div data-bind="dxExpressionEditor: getOptions({ options: value, fieldListProvider: $root.dataBindingsProvider, displayNameProvider: $root.displayNameProvider && $root.displayNameProvider() })"></div> <!-- /ko -->',
    'dxrd-field': '<!-- ko displayNameExtender: { path: path, dataMember: value } --> <!-- ko if: visible --> <div data-bind="dxFieldListPicker: { path: path, acceptCustomValue: true, value: value, displayValue: $displayName, itemsProvider: $root.dataBindingsProvider, treeListController: treeListController, disabled: disabled }"></div> <!-- /ko --> <!-- /ko -->',
    'dxrd-filterstring': '<!-- ko if: $data.value() --> <div data-bind="dxFilterEditor: { options: value, fieldListProvider: $root.dataBindingsProvider, getDisplayNameByPath: $root.getDisplayNameByPath, displayNameProvider: $root.displayNameProvider && $root.displayNameProvider() }"></div> <!-- /ko -->',
    'dxrd-filterstringgroup': '<!-- ko if: $data.value() --> <div data-bind="dxFilterEditor: { options: value, fieldListProvider: $root.dataBindingsGroupProvider, getDisplayNameByPath: $root.getDisplayNameByPath, displayNameProvider: $root.displayNameProvider && $root.displayNameProvider() }"></div> <!-- /ko -->',
    'dxrd-formatstring': '<div data-bind="dxFormatEditor: { value: value, disabled: disabled, actions: $data.actions, customPatterns: $data.customPatterns }"></div>',
    'dxrd-guid': '<div data-bind="dxTextBox: getOptions({ value: value, disabled: disabled, inputAttr: { \'aria-label\': displayName } }), dxValidator: { validationRules: (validationRules || []) }"></div>',
    'dxrd-emptyHeader': ' ',
    'dxrd-objectEditorContent': '<!-- ko if: $data.visible() && $data.editorCreated() --> <div data-bind="template: { name: \'dx-propertieseditor\', data: viewmodel }"></div> <!-- /ko -->',
    'dxrd-objectEditor': '<div data-bind="dxPropertyGrid: { target: ko.observable($data), level: $parent.level, textToSearch: $parent.textToSearch }"></div>',
    'dxrd-commonCollectionItem': '<div data-bind="dxPropertyGrid: { target: value, level: editor.level + 1, parentDisabled: editor.disabled }"></div>',
    'dxrd-textalignment': '<div class="dxrd-textalignment-editor" data-bind="dxTextAlignmentEditor: { value: value, disabled: disabled }"></div>',
    'dxrd-objectVisitor': '<!-- ko if: options --> <div data-bind="treelist: options"></div> <!-- /ko -->',
    'dxd-snap-lines-holder': '<div class="dxd-snap-lines-holder"> <div class="dxd-snap-line dxd-snap-line-horizontal" data-bind="style: { transform: snapLineSurfaces[0].transform() }"></div> <div class="dxd-snap-line dxd-snap-line-horizontal" data-bind="style: { transform: snapLineSurfaces[1].transform() }"></div> <div class="dxd-snap-line dxd-snap-line-vertical" data-bind="style: { transform: snapLineSurfaces[2].transform() }"></div> <div class="dxd-snap-line dxd-snap-line-vertical" data-bind="style: { transform: snapLineSurfaces[3].transform() }"></div> </div>',
    'dxrd-surface-template-base': '<!-- ko ifnot: isLoading --> <!-- ko with: surface --> <div class="dxrd-surface-wrapper" data-bind="template: templateName, click: function(_, e) { !$root.selection.disabled() && $root.selection.clickHandler($data, e); e.stopPropagation(); }"> </div> <!-- /ko --> <!-- /ko --> <!-- ko if: isLoading --> <div class="dxrd-surface-wrapper"></div> <!-- /ko -->',
    'dxrd-designer': '<div tabindex="-1" data-bind="cssArray: [surfaceClass($element), { \'dx-accessibility\': $data.accessibilityCompliant } ]"> <div class="dxrd-designer-wrapper dx-editors dxd-surface-back-color dxd-scrollbar-color" data-bind="visible: (!$data.designMode || designMode()), cssArray: [$data.rootStyle, { \'dx-rtl\' : $data.rtl, \'dx-ltr\': !$data.rtl }]"> <!-- ko foreach: parts --> <!-- ko template: { name: templateName, data: model }--> <!-- /ko --> <!-- /ko --> </div> <!-- ko if: ($data.addOns) --> <!-- ko foreach: addOns --> <!-- ko template: { name: templateName, data: model } --> <!-- /ko --> <!-- /ko --> <!-- /ko --> <div id="dxrd-designer-last-focus-item-blank" class="dxrd-visually-hidden" tabindex=\'-1\'></div> </div>',
    'dxrd-textalignment-editor': '<div class="dxrd-textalignment-editor-content"> <!-- ko with: value--> <div> <div class="dxrd-textalignment-editor-label dx-field-label" data-bind="text: verticalString"></div> <div class="dxrd-textalignment-editor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-textAlignment-top" data-bind="template: \'dxrd-svg-properties-textAlignment-top\', css: { \'dxd-state-active\': top(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'top\', \'Vertical\') }"></div> <div class="dxrd-textalignment-editor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-textAlignment-middle" data-bind="template: \'dxrd-svg-properties-textAlignment-middle\', css: { \'dxd-state-active\': middle(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'middle\', \'Vertical\') }"></div> <div class="dxrd-textalignment-editor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-textAlignment-bottom" data-bind="template: \'dxrd-svg-properties-textAlignment-bottom\', css: { \'dxd-state-active\': bottom(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'bottom\', \'Vertical\') }"></div> </div> <div class="dxrd-textalignment-margin-top"> <br/> <div class="dxrd-textalignment-editor-label dx-field-label" data-bind="text: horizontalString"></div> <div class="dxrd-textalignment-editor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-textAlignment-left" data-bind="template: \'dxrd-svg-properties-textAlignment-left\', css: { \'dxd-state-active\': left(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'left\', \'Horizontal\') }"></div> <div class="dxrd-textalignment-editor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-textAlignment-center" data-bind="template: \'dxrd-svg-properties-textAlignment-center\', css: { \'dxd-state-active\': center(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'center\', \'Horizontal\') }"></div> <div class="dxrd-textalignment-editor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-textAlignment-right" data-bind="template: \'dxrd-svg-properties-textAlignment-right\', css: { \'dxd-state-active\': right(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'right\', \'Horizontal\') }"></div> <div class="dxrd-textalignment-editor-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dxrd-image-textAlignment-justify" data-bind="template: \'dxrd-svg-properties-textAlignment-justify\', css: { \'dxd-state-active\': justify(), \'dxrd-disabled-button\': disabled }, click: function() { setValue(\'justify\', \'Horizontal\') }"></div> </div> <!-- /ko --> </div>',
    'dxrd-collectionactions-template': '<div class="dxrd-action-items-container"></div> <div class="dx-treelist-action" data-bind="dxButtonWithTemplate: { onClick: togglePopoverVisible, disabled: disabled, icon: ko.unwrap($data.imageTemplateName), iconClass: ko.unwrap($data.imageClassName) }, attr: { id: id, title: text }"></div> <div data-bind="dxPopup: { width: 235, height: \'auto\', position: { my: $root.rtl ? \'left top\': \'right top\', at: \'bottom\', of: (\'#\' + id) }, showTitle: false, showCloseButton: false, animation: {}, closeOnOutsideClick: true, container: ($data.getContainer || function(_e, selector) { return selector; })($element, \'.dxrd-action-items-container\'), shading: false, visible: popoverVisible }"> <!-- ko if: $data.contentTemplate--> <!-- ko template: contentTemplate--> <!-- /ko --> <!-- /ko --> <!-- ko if: !$data.contentTemplate --> <!-- ko foreach: actions --> <div class="dxrd-action-item dxd-button-back-color dxd-state-normal dxd-back-highlighted" data-bind="dxclick: clickAction, css: { \'dxrd-disabled-button\': disabled }"> <div class="dxrd-action-item-image" data-bind="css: ko.unwrap($data.imageClassName), template: {name: ko.unwrap($data.imageTemplateName), if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: $data.displayText && $data.displayText() || text }"> </div> </div> <!-- /ko --> <!-- /ko --> </div>',
    'dxrd-drag-helper-source': '<div class="dxrd-drag-helper-source" data-bind="styleunit: { top: $data.top, left: $data.left, width: $data.width, height: $data.height }, css: { \'dxrd-locked\': $data.isLocked }"> <!-- ko foreach: $data.controls() --> <div class="dxrd-drag-helper-control" data-bind="styleunit: { left: $data.left, top: $data.top, width: $data.width, height: $data.height }, css: $data.className"> <!-- ko with: $parent.customData() --> <div data-bind="template: { name: $data.template, data: $data.data }"> </div> <!-- /ko --> </div> <!-- /ko --> </div>',
    'dxrd-menubutton-template-base': '<div class="dxrd-menu-container" style="position:relative; width:0; height:100%"></div> <div class="dxrd-menu-button dxd-toolbox-back-color dxd-border-primary dxd-back-primary2"> <div class="dxrd-menu-place" style="width:54px;"></div> <div class="dxrd-menu-button-image dxd-button-back-color dxd-state-normal dxd-back-highlighted" data-bind="dxclick: function(e) { if(stopPropagation) { stopPropagation = false; } else { toggleAppMenu() } }, template: \'dxrd-svg-menu-menu\', css: {\'dxd-state-active\': appMenuVisible }"></div> <div data-bind="dxPopup: { width: 250, wrapperAttr: { class: \'dxd-menu-back-color dxd-back-primary2\' }, height: \'100%\' , position: $data.rtl ? { my: \'right top\' , at: \'left top\' , offset: \'-10 0\' } : { my: \'left top\' , at: \'right top\' , offset: \'10 0\' }, showTitle: false, showCloseButton: false, container: getMenuPopupContainer($element), target: getMenuPopupTarget($element), animation: {}, closeOnOutsideClick: function(e) { var buttonClassName = \'dxrd-menu-button-image\'; var parentClassList = e.target.parentNode && e.target.parentNode.parentNode && e.target.parentNode.parentNode.classList; stopPropagation = (e.target.classList && e.target.classList.contains(buttonClassName)) || (parentClassList && parentClassList.contains(buttonClassName)); return true; }, shading: false, focusStateEnabled: false, visible: appMenuVisible }"> <div class="dxrd-menu-break dxd-popup-back-color dxd-back-primary2"></div> <!-- ko foreach: actionLists.menuItems --> <div class="dxrd-menu-item dxd-text-primary dxd-list-item-back-color dxd-back-highlighted" data-bind="dxclick: function(e) { if(disabled && !disabled() || !disabled) { $root.toggleAppMenu(); clickAction($root.model(), e); }}, css: { \'dxrd-disabled-button\': disabled }, visible: visible"> <div class="dxrd-menu-item-image" data-bind="css: ko.unwrap($data.imageClassName), template: {name: ko.unwrap($data.imageTemplateName), if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: $data.displayText && $data.displayText() || text }"> </div> <div class="dxrd-menu-item-text" data-bind="text: $data.displayText && $data.displayText() || text, attr: { title: $data.displayText && $data.displayText() || text}"></div> <div class="dxrd-menu-item-separator" data-bind="visible: $data.hasSeparator"></div> </div> <!-- /ko --> </div> </div>',
    'dxrd-top-grid': '<!-- ko if: popularVisible --> <div class="dx-fieldset"> <div data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dxrd-group-header dx-accordion-header" data-bind="css: { \'dxrd-group-header-collapsed dxd-border-primary\': collapsed() }"> <div class="dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }" style="display:inline-block;"></div> <span class="dxrd-group-header-text" data-bind="text: $root.actionsGroupTitle()"></span> </div> <div class="dx-accordion-content dxd-back-primary"> <!-- ko foreach: (contextActions || []) --> <!-- ko if: $data.templateName --> <!-- ko template: templateName  --> <!-- /ko --> <!-- /ko --> <!-- ko if: !$data.templateName --> <div class="dxrd-properties-grid-action" data-bind="dxclick: function() { if($data.disabled && !$data.disabled() || !$data.disabled) { clickAction($root.editableObject()); } }, css: { \'dxrd-disabled-button\': $data.disabled && $data.disabled() }, visible: (ko.unwrap($data.visible) == undefined) || ko.unwrap($data.visible)"> <div class="dxrd-properties-grid-action-image dxd-button-back-color dxd-state-normal dxd-back-highlighted" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: $data.displayText && $data.displayText() || text }"></div> </div> <!-- /ko --> <!-- /ko --> <!-- ko with: popularProperties --> <div style="position: relative" data-bind="template: { name: \'dx-propertieseditor\', data: $data }"></div> <!-- /ko --> </div> </div> </div> <!-- /ko -->',
    'dxrd-group-actions': '<div class="dxd-back-primary2 dxrd-property-grid-actions-group"> <!-- ko foreach: (groupActions || []) --> <div class="dxd-border-primary dxrd-properties-grid-actions-group-content" data-bind="visible: items.some(x => !x.visible || ko.unwrap(x.visible))"> <div class="dxd-text-primary dxrd-properties-grid-action-name" data-bind="text: group"></div> <!-- ko foreach: (items || []) --> <!-- ko template: { name: $data.templateName, if: $data.templateName }  --> <!-- /ko --> <!-- ko if: !$data.templateName --> <div class="dxrd-properties-grid-action" data-bind="dxclick: function() { if($data.disabled && !$data.disabled() || !$data.disabled) { clickAction($root.editableObject()); } }, css: { \'dxrd-disabled-button\': $data.disabled && $data.disabled() }, visible: (ko.unwrap($data.visible) == undefined) || ko.unwrap($data.visible)"> <div class="dxrd-properties-grid-action-image dxd-button-back-color dxd-state-normal dxd-back-highlighted" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: $data.displayText && $data.displayText() || text }"> </div> </div> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> </div>',
    'dx-propertygrid-searchbox': '<div class="dx-property-grid-search-group dx-property-gread-search-collapsed" data-bind="css: { \'dx-property-gread-search-collapsed\': !isSearching() }"> <div class="dx-property-grid-sorting-action dxd-button-back-color dxd-state-normal dxd-back-highlighted dxd-back-primary2" data-bind="css: { \'dxd-state-active\': isSearching }, dxButtonWithTemplate: { onClick: switchSearchBox, icon: \'dxrd-svg-properties-search\', iconClass: \'image-search\' }, attr: { title: $root.getLocalization(\'Search\', \'ASPxReportsStringId.SearchDialog_Header\') }"> </div> <div class="dx-property-grid-search-box" data-bind="dxTextBox: { value: textToSearch, valueChangeEvent: \'keyup\', placeholder: searchPlaceholder(), showClearButton: true }, cacheElement: { action: function(element) { searchBox(element); } }"></div> </div>',
    'dxrd-propertiestab': '<div class="dxrd-properties-wrapper" data-bind="visible: active() && visible()"> <div style="height:100%" class="dxd-text-primary"> <div class="dxrd-right-panel-header"> <span data-bind="text: text"></span> </div> <!-- ko with: model --> <!-- ko if: $root.controlsStore.visible() --> <div class="dx-property-grid-header"> <div class="dx-property-grid-header-content"> <div class="dx-property-grid-sorting-actions-group" data-bind="css: { \'dx-property-gread-search-collapsed\': isSearching }"> <div class="dxrd-properties-focused-item" data-bind="dxSelectBox: { dataSource: $root.controlsStore.dataSource, value: focusedItem, displayExpr: displayExpr, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true }"></div> <div class="dx-property-grid-sorting-actions-container"> <div class="dx-property-grid-sorting-action dxd-button-back-color dxd-state-normal dxd-back-highlighted dxd-back-primary2" data-bind="css: { \'dxd-state-active dxd-state-no-hover\': !isSortingByGroups() }, dxButtonWithTemplate: { onClick: function() { $data.isSortingByGroups(false); }, icon: \'dxrd-svg-properties-sortingbyalphabet\', iconClass: \'image-sortingbyalphabet\' }"></div> <div class="dx-property-grid-sorting-action dxd-button-back-color dxd-state-normal dxd-back-highlighted dxd-back-primary2" data-bind="css: { \'dxd-state-active dxd-state-no-hover\': isSortingByGroups }, dxButtonWithTemplate: { onClick: function() { $data.isSortingByGroups(true); }, icon: \'dxrd-svg-properties-sortingbygroups\', iconClass: \'image-sortingbygroups\' }"></div> </div> </div> <!-- ko template: \'dx-propertygrid-searchbox\' --> <!-- /ko --> </div> </div> <!-- /ko --> <div class="dxrd-properties-grid dxd-border-primary" data-bind="dxScrollView: { showScrollbar: \'onHover\', useNative: false, scrollByThumb: true }, styleunit: { top: $root.controlsStore.visible() ? 80 : 40 }"> <!-- ko template: { name: \'dxrd-group-actions\', data: { groupActions: $root.contextGroupActions } } --> <!-- /ko --> <!-- ko template: { name: \'dxrd-top-grid\', data: { contextActions: $root.contextActions, popularProperties: $root.popularProperties, collapsed: ko.observable(false), popularVisible: $root.popularVisible() && isSortingByGroups(), actionsGroupTitle: $root.actionsGroupTitle } } --> <!-- /ko --> <div data-bind="visible: isSortingByGroups"> <!-- ko foreach: groups --> <div class="dx-fieldset" data-bind="visible: visible"> <div data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dxrd-group-header dx-accordion-header" data-bind="css: { \'dxrd-group-header-collapsed dxd-border-primary\': collapsed() }"> <div class="dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }" style="display:inline-block;"></div> <span class="dxrd-group-header-text" data-bind="text: displayName()"></span> </div> <div class="dx-accordion-content dxd-back-primary"> <!-- ko ifnot: editorsCreated --> <div class="dx-accordion-content-loading-panel"> <div data-bind="dxLoadIndicator: { visible: !editorsCreated() }"></div> </div> <!-- /ko --> <!-- ko if: $data.editorsRendered() --> <div data-bind="visible: editorsCreated"> <div class="dx-editors"> <!-- ko foreach: editors --> <!-- ko template: editorTemplate --> <!-- /ko --> <!-- ko if: ($index() === $parent.editors().length - 1 && $parent.editorsCreated(true)) --> <!-- /ko --> <!-- /ko --> </div> </div> <!-- /ko --> </div> </div> </div> <!-- /ko --> </div> <div class="dx-fieldset dxd-back-primary" data-bind="visible: !isSortingByGroups()"> <div data-bind="dxLoadIndicator: { visible: !allEditorsCreated() }"></div> <!-- ko if: $data.editorsRendered() --> <div data-bind="visible: allEditorsCreated"> <div class="dx-editors"> <!-- ko foreach: $data.getEditors() --> <!-- ko template: editorTemplate --> <!-- /ko --> <!-- ko if: ($index() === $parent._editors().length - 1 && $parent.allEditorsCreated(true)) --> <!-- /ko --> <!-- /ko --> </div> </div> <!-- /ko --> </div> <!-- ko template: \'dx-propertygrid-popupservice\' --> <!-- /ko --> </div> <!-- /ko --> </div> </div>',
    'dx-propertygrid-popupservice': '<div data-bind="dxPopup: { width: 250, height: \'auto\', position: $data.rtl ? { my: \'left top\', at: \'right top\', of: popupService.target, collision: \'flipfit\' } : { my: \'right top\', at: \'left top\', of: popupService.target, collision: \'flipfit\' }, container: $root.getPopupContainer($element), target: popupService.target, showTitle: false, showCloseButton: false, animation: {}, closeOnOutsideClick: true, shading: false, visible: popupService.visible }"> <div data-options="dxTemplate: { name: \'content\' }"> <div class="dxrd-editor-menu-caption dxd-text-primary" data-bind="text: popupService.title, visible: popupService.title"></div> <div class="dxd-button-back-color" data-bind="dxMenu: { wrapperAttr: { class: \'dxd-button-back-color\' }, disabled: popupService.disabled, dataSource: popupService.actions, displayExpr: \'title\', cssClass: \'dxrd-editor-menu\', orientation: \'vertical\', showFirstSubmenuMode: \'onHover\', onSubmenuShowing: function(e) { e.submenu._overlay.option(\'container\', $root.getPopupContainer($element)) } }"> <div class="dxrd-editor-menu-item dxd-back-highlighted dxd-state-normal" data-options="dxTemplate: { name: \'item\' }" data-bind="dxclick: action"> <span class="dxd-text-primary dx-menu-item-text" data-bind="attr: { title: title }, text: title"></span> <div class="dx-menu-item-popout-container" data-bind="visible: $data.items && $data.items.length"><div class="dx-menu-item-popout"></div></div> <!--ko if: $data.customTemplate--> <!--ko template: $data.customTemplate--> <!--/ko--> <!--/ko--> </div> </div> </div> </div>',
    'dx-right-panel-lightweight': '<div class="dxrd-right-panel dx-shadow dx-shadow-right dxd-border-secondary dxd-property-grid-group-header-back-color dxd-back-primary2" data-bind="styleunit: { width: tabPanel.width }, css: tabPanel.cssClasses(), resizable: tabPanel.getResizableOptions($element, 1, 325)"> <!-- ko foreach: tabPanel.tabs --> <!-- ko lazy: { template: $data.template } --> <!-- /ko --> <!-- /ko --> </div>',
    'dxrd-right-panel-template-base': '<!-- ko with: tabPanel --> <div class="dx-shadow dx-shadow-right dxd-border-secondary dxrd-tab-panel-wrapper" data-bind="styleunit: { width: $data.headerWidth }, css: $data.cssClasses({\'dx-tab-panel-collapsed\':$data.collapsed }), accessibilityKeyboardHelper: $data.keyboardHelper"> <div class="dxrd-right-tabs dxd-side-panel-tabs-back-color dxd-back-contrast" data-bind="css: $data.cssClasses()"> <!-- ko foreach: $data.tabs --> <div role="button" class="dxrd-tab-item dx-accessibility-rightpanel-button dxd-side-panel-tab-back-color dxd-back-highlighted dx-accessibility-focus-border-accented" data-bind="dxAction: { model: $data, action: function(s) { $parent.toggleTabVisibility({ model: s }); }}, css: { \'dxd-state-active dxd-state-no-hover\': active, \'dxrd-tab-item-disabled\': disabled }, attr: { title: $data.text, \'aria-label\': $data.text, \'aria-expanded\': $data.active }, visible: visible"> <div class="dxrd-image-padding" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}"> </div> </div> <!-- /ko --> </div> <div class="dxrd-right-panel dxd-property-grid-group-header-back-color dxd-back-primary2" data-bind="styleunit: { width: $data.width }, css: $data.cssClasses(), resizable: $data.getResizableOptions($element, 50, 340)"> <!-- ko foreach: $data.tabs --> <!-- ko lazy: { template: $data.template } --> <!-- /ko --> <!-- /ko --> </div> </div> <!-- /ko -->',
    'dxrd-toolbar-template-base': '<div class="dxrd-toolbar-wrapper dxd-back-secondary-invariant dx-shadow-top"> <div class="dxrd-toolbar" data-bind="template: {name: \'dxrd-toolbar-tmplt\', data: actionLists.toolbarItems }"></div> </div>',
    'dxrd-toolbar-tmplt': '<!-- ko foreach: $data --> <!-- ko if: $data.templateName --> <!-- ko template: { name: $data.templateName, data: $data.contentData || $data } --> <!-- /ko --> <!-- /ko --> <!-- ko if: !$data.templateName --> <div class="dxrd-toolbar-item" data-bind="visible: visible, class: \'dxrd-toolbar-item-\' + $index(), css: {\'dxrd-toolbar-item-with-separator dxd-border-primary\': $data.hasSeparator } "> <div role="button" class="dx-accessibility-toolbar-item dx-accessibility-focus-border-accented" data-bind="attr: { \'aria-label\': $data.displayText && $data.displayText() || text, \'aria-hidden\': ko.unwrap($data.visible) ? \'false\' : \'true\', \'aria-disabled\': ko.unwrap($data.disabled) ? \'true\' : \'false\', \'aria-checked\': $data.selected ? ($data.selected() ? \'true\' : \'false\') : null }" > <div data-bind="template: { name: ko.unwrap($data.imageTemplateName), if: !!ko.unwrap($data.imageTemplateName)}, attr: { class: \'dxrd-toolbar-item-image dxd-state-normal dxd-icon-highlighted \' + (ko.unwrap($data.imageClassName) || \'\'), title: $data.displayText && $data.displayText() || text }, }, dxclick: function() { if((typeof $data.disabled === \'function\') && !disabled() || !disabled) { clickAction($root.model && $root.model()); } }, css: {\'dxrd-disabled-button\': disabled, \'dxd-button-back-color dxd-back-highlighted dxd-state-active\': $data.selected }"> </div> <div class="dxrd-toolbar-item-separator dxd-toolbar-separator-color dxd-border-secondary" data-bind="visible: $data.hasSeparator"></div> </div> </div> <!-- /ko --> <!-- /ko -->',
    'dxrd-toolbox-template-base': '<div class="dxrd-toolbox-wrapper dxd-toolbox-back-color dxd-back-primary2 dx-shadow dx-shadow-left" data-bind="dxScrollView: { showScrollbar: \'onHover\', scrollByContent: false, bounceEnabled: false, useNative: false, scrollByThumb: true }"> <!-- ko foreach: toolboxItems --> <div class="dxrd-toolbox-item dxd-icon-highlighted" data-bind="attr: { title: displayName }"> <div class="dxrd-image-padding dx-fontsize-reestablished" data-bind="template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, css: $data.imageClassName, draggable: $root.toolboxDragHandler"> </div> </div> <!-- /ko --> </div>',
    'dxrd-grouped-toolbox-template-base': '<div class="dxrd-toolbox-wrapper dxd-toolbox-back-color dxd-back-primary2-invariant toolbox-grouped dx-shadow dx-shadow-left" data-bind="dxScrollView: { showScrollbar: \'onHover\', scrollByContent: false, bounceEnabled: false, useNative: false, scrollByThumb: true }"> <!-- ko foreach: groupedToolboxItems --> <div class="dxrd-toolbox-group dxd-border-primary"> <!-- ko foreach: items --> <div class="dxrd-toolbox-item dxd-icon-highlighted" data-bind="attr: { title: displayName }"> <div class="dxrd-image-padding dx-fontsize-reestablished" data-bind="template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, css: $data.imageClassName, draggable: $root.toolboxDragHandler"> </div> </div> <!-- /ko --> </div> <!-- /ko --> </div>',
    'dxrd-zoom-select-template': '<div class="dxrd-toolbar-item-zoom" data-bind="visible: visible"> <div class="dxrd-toolbar-item-zoom-editor" data-bind="dxSelectBox: { items: zoomLevels, value: $data.zoom, displayExpr: function(val) { return Math.round((val || this.option(\'value\')) * 100) + \'%\'; }, displayCustomValue: true, acceptCustomValue: true, onCustomItemCreating: onCustomItemCreating, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) }, useItemTextAsTitle: true }"></div> </div>',
    'dx-editor-addons': '<div class="dxrd-editormenu-boxes"> <!-- ko foreach: $data --> <!-- ko if: $data.visible --> <!-- ko if: !ko.unwrap($data.imageTemplateName) --> <div class="dxrd-editormenu-box dxd-property-grid-menu-box-color dxd-back-contrast" data-bind="dxclick: function(_, element) { showPopup(_, element) }, css: editorMenuButtonCss, attr: { title: hint }"> <div class="dxrd-editormenu-box-inside dxd-back-secondary"></div> </div> <!-- /ko --> <!-- ko if: ko.unwrap($data.imageTemplateName) --> <div class="dxrd-editormenu-box dxd-property-grid-menu-box-color dxrd-editor-box-image" data-bind="dxclick: function(_, element) { showPopup(_, element) }, attr: { title: hint }, css: editorMenuButtonCss"> <div class="dxrd-editor-box-image-content" data-bind="template: { name: $data.imageTemplateName, if: ko.unwrap($data.imageTemplateName) }"></div> </div> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div>',
    'dx-collectioneditor': '<div class="dx-collectioneditor"> <div data-bind="dxdAccordion: { collapsed: collapsed, alwaysShow: alwaysShow }"> <div class="dx-collectioneditor-header dx-accordion-header"> <div class="dx-editor-header"> <div role="tab" class="dx-field dx-accessibility-focus-border-accented dxrd-accessibility-accordion-trigger" data-bind=", attr: {\'aria-expanded\': !collapsed() ? \'true\' : \'false\' }"> <!-- ko if: showButtons--> <div class="dx-collectioneditor-actions-wrapper"> <!-- ko if: isVisibleButton(\'up\') --> <div class="dx-collectioneditor-action dx-accessibility-focus-border-accented" data-bind="dxButtonWithTemplate: { onClick: up, disabled: isDisabledButton(\'up\'), icon: \'dxrd-svg-operations-moveup\', iconClass: \'dx-image-moveup\' }, attr: { title: getDisplayTextButton(\'up\') }"></div> <!-- /ko --> <!-- ko if: isVisibleButton(\'down\') --> <div class="dx-collectioneditor-action dx-accessibility-focus-border-accented" data-bind="dxButtonWithTemplate: { onClick: down, disabled: isDisabledButton(\'down\'), icon: \'dxrd-svg-operations-movedown\', iconClass: \'dx-image-movedown\' }, attr: { title: getDisplayTextButton(\'down\') }"></div> <!-- /ko --> <div class="dx-collectioneditor-action-separator"></div> <!-- ko if: isVisibleButton(\'add\') --> <div class="dx-collectioneditor-action dx-accessibility-focus-border-accented" data-bind="dxButtonWithTemplate: { onClick: add, disabled: isDisabledButton(\'add\'), icon: \'dxrd-svg-operations-add\', iconClass: \'dx-image-add\' }, attr: { title: getDisplayTextButton(\'add\') }"></div> <!-- /ko --> <!-- ko if: isVisibleButton(\'delete\') --> <div class="dx-collectioneditor-action dx-accessibility-focus-border-accented" data-bind="dxButtonWithTemplate: { onClick: remove, disabled: isDisabledButton(\'delete\'), icon: \'dxrd-svg-operations-remove\', iconClass: \'dx-image-remove\' }, attr: { title: getDisplayTextButton(\'delete\') }"></div> <!-- /ko --> </div> <!-- /ko --> <!-- ko if: displayName --> <div class="dx-collectioneditor-header-text dxd-text-primary" data-bind="styleunit: { \'paddingLeft\': padding }"> <div class="propertygrid-editor-collapsed dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }"></div> <div class="dx-group-header-font dxd-text-primary" data-bind="text: displayName, attr: { title: displayName }"></div> </div> <!-- /ko --> </div> </div> </div> <div role="tabpanel" class="dx-accordion-content" data-bind="attr:{\'aria-hidden\': collapsed() ? \'true\' : \'false\'}"> <div data-bind="visible: !disabled(), dxScrollView: { showScrollbar: \'onHover\', disabled: !showScroll, useNative: false, scrollByThumb: true, onInitialized: function(e) { e.component.option(\'useKeyboard\', false); } }"> <!-- ko if: values().length === 0 && showButtons --> <div class="dx-collectioneditor-empty dxd-empty-area-placeholder-text-color dxd-text-info"> <span class="dx-collectioneditor-empty-text" data-bind="text: getDisplayTextEmptyArray()"></span> </div> <!-- /ko --> <!-- ko if: values().length !== 0 --> <div class="dx-collectioneditor-items" data-bind="foreach: values"> <div data-bind="with: $parent.createCollectionItemWrapper($parents[1], $index, $element)"> <div class="dx-collectioneditor-item-container dxd-button-back-color dxd-state-normal dxd-back-highlighted dx-accessibility-list-item dx-accessibility-focus-border-accented" data-bind="attr: { \'aria-selected\': $parents[1].selectedIndex() === $index() }, dxAction: { model: $data, action: $parents[1].select }, css: { \'dxd-state-selected\' : $parents[1].selectedIndex() === $index() }"> <div class="dx-collection-item"></div> </div> </div> </div> <!-- /ko --> </div> </div> </div> </div>',
    'dx-boolean': '<div class="propertygrid-editor-checkbox" data-bind="dxCheckBox: getOptions({ value: value, disabled: disabled, elementAttr: { \'aria-label\': displayName } }), dxValidator: { validationRules: validationRules || [] }"></div>',
    'dx-boolean-select': '<div data-bind="dxLocalizedSelectBox: { dataSource: [ { val: true, text: $root.getLocalization(\'Yes\', \'AnalyticsCoreStringId.ParametersPanel_True\') }, { val: false, text: $root.getLocalization(\'No\', \'AnalyticsCoreStringId.ParametersPanel_False\') }], inputAttr: { \'aria-label\': displayName }, valueExpr: \'val\', displayExpr: \'text\', value: value, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) } }, dxValidator: { validationRules: validationRules || [] }"></div>',
    'dx-commonCollection': '<div class="dx-editor" data-bind="visible: visible"> <div data-bind="dxCollectionEditor: { values: value, displayName: displayName, level: level, info: info }"> </div> </div>',
    'dx-commonCollectionItem': '<div data-bind="dxPropertyGrid: { target: value, level: editor.level + 1, parentDisabled: editor.disabled }"></div>',
    'item-with-title': '<div class="dx-listitem-with-title" data-bind="text: $data.display, attr: { title: $data.display }"></div>',
    'dx-combobox': '<div data-bind="dxLocalizedSelectBox: { dataSource: values, value: value, valueExpr: \'value\', displayExpr: \'displayValue\', displayCustomValue: true, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) }, popupPosition: { boundary: $root.getPopupContainer($element) }, inputAttr: { \'aria-label\': displayName }}, dxValidator: getValidatorOptions($data.validatorOptions || { validationRules: $data.validationRules || [] })"> </div>',
    'dx-combobox-editable': '<div data-bind="dxSelectBox: getOptions({ items: values, value: value, valueExpr: \'value\', displayExpr: \'displayValue\', disabled: disabled, useItemTextAsTitle: true, placeholder: $root.dx._static.selectPlaceholder(), noDataText: $root.dx._static.noDataText(), acceptCustomValue: true, onCustomItemCreating: function(arg) { return { value: arg.text, displayValue: arg.text }; }, dropDownOptions: { container: $root.getPopupContainer($element) } })"></div>',
    'dx-combobox-undo': '<div data-bind="dxLocalizedSelectBox: { dataSource: values, value: generateValue($root.undoEngine), valueExpr: \'value\', displayExpr: \'displayValue\', displayCustomValue: true, disabled: disabled, dropDownOptions: { container: $root.getPopupContainer($element) } }, dxValidator: getValidatorOptions($data.validatorOptions || { validationRules: validationRules || [] })"> </div>',
    'dx-property-editor': '<div class="dx-editor" data-bind="visible: visible"> <div class="dx-group" data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dx-editor-header"> <div class="dx-field" data-bind="attr: { role: isComplexEditor && \'tab\', \'id\': isComplexEditor && getIdByDisplayName(\'dxrd-accordion-trigger\'), \'aria-controls\': isComplexEditor && getIdByDisplayName(\'dxrd-accordion-pannel\'), \'aria-expanded\': isComplexEditor && (!collapsed() ? \'true\' : \'false\') }, css: {\'dxrd-accessibility-accordion-trigger dx-accessibility-focus-border-accented\': isComplexEditor}"> <div class="dx-field-label dx-accordion-header dxd-text-primary" data-bind="styleunit: padding, css: { \'dx-accordion-empty\': templateName === \'dx-emptyHeader\' }"> <!-- ko if: isComplexEditor --> <div data-bind="enable: templateName === \'dx-emptyHeader\'"> <div class="propertygrid-editor-collapsed dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }"></div> <!-- ko if: !!$data.textToSearch --> <div class="dx-group-header-font" data-bind="searchHighlighting: { text: displayName, textToSearch: textToSearch }, attr: { \'title\': displayName }"></div> <!-- /ko --> <!-- ko ifnot: !!$data.textToSearch --> <div class="dx-group-header-font" data-bind="text: displayName, attr: { \'title\': displayName }"></div> <!-- /ko --> </div> <!-- /ko --> <!-- ko if: !isComplexEditor --> <!-- ko if: !!$data.textToSearch --> <div class="propertygrid-editor-displayName" data-bind="searchHighlighting: { text: displayName, textToSearch: textToSearch }, attr: { \'title\': displayName }, css: { \'dx-field-label-required\': isRequired }, style: { fontWeight: isPropertyModified() ? \'Bold\' : \'\'}"></div> <!-- /ko --> <!-- ko ifnot: !!$data.textToSearch --> <div class="propertygrid-editor-displayName" data-bind="text: displayName, attr: { \'title\': displayName }, css: { \'dx-property-required\': isRequired }, style: { fontWeight: isPropertyModified() ? \'Bold\' : \'\'}"></div> <!-- /ko --> <!-- /ko --> </div> <div class="dx-field-value" data-bind="css: { \'dxd-border-accented\': $data.isPropertyHighlighted }"> <div data-bind="service: { name: \'createEditorAddOn\' }"></div> <!-- ko if: templateName !== \'dx-emptyHeader\' --> <!-- ko lazy: { innerBindings: { template: templateName }, isResolved: $data.isRendered } --> <!-- /ko --> <!-- /ko --> </div> </div> </div> <!-- ko if: isComplexEditor --> <div class="dx-editor-content dx-accordion-content" role="tabpanel" data-bind="attr:{\'aria-labelledby\': getIdByDisplayName(\'dxrd-accordion-trigger\'), \'id\': getIdByDisplayName(\'dxrd-accordion-pannel\'), \'aria-hidden\': collapsed() ? \'true\' : \'false\' }"> <!-- ko if: (!$data.editorCreated || editorCreated) --> <!-- ko template: contentTemplateName --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> </div> </div>',
    'dx-emptyHeader': ' ',
    'dx-date': '<div class="dx-datebox-container"> <div data-bind=" dxDateBox: getOptions({ value: value, closeOnValueChange: true, type: \'datetime\', disabled: disabled, inputAttr: { \'aria-label\': displayName }, dropDownOptions: { container: $root.getPopupContainer($element), position: { at: \'left bottom\', collision: \'flipfit flip\', my: \'left top\', boundary: $root.getPopupContainer($element), of: $element } } }), dxValidator: { validationRules: validationRules || [] }"></div> </div>',
    'dx-file': '<div data-bind="dxFileImagePicker: { value: value, placeholderId: \'File\', disabled: disabled }"></div>',
    'dx-modificators': '<div class="dx-font-content"> <div class="dx-field"> <div class="dx-field-label dxd-text-primary" data-bind="styleunit: { \'paddingLeft\': padding }"></div> <!-- ko with: value --> <div class="dx-field-value"> <div class="dx-font-styles-content"> <div class="dx-font-style-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dx-image-fontstyle-bold" data-bind="css: { \'dxd-state-active\': bold(), \'dx-disabled-button\': $parent.disabled }, click: function() { if(!$parent.disabled()) { bold(!bold()); } }"><!-- ko template: \'dxrd-svg-fontstyle-bold\'--><!-- /ko --></div> <div class="dx-font-style-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dx-image-fontstyle-italic" data-bind="css: { \'dxd-state-active\': italic(), \'dx-disabled-button\': $parent.disabled }, click: function() { if(!$parent.disabled()) { italic(!italic()); } }"><!-- ko template: \'dxrd-svg-fontstyle-italic\'--><!-- /ko --></div> <div class="dx-font-style-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dx-image-fontstyle-underline" data-bind="css: { \'dxd-state-active\': underline(), \'dx-disabled-button\': $parent.disabled }, click: function() { if(!$parent.disabled()) { underline(!underline()); } }"><!-- ko template: \'dxrd-svg-fontstyle-underline\'--><!-- /ko --></div> <div class="dx-font-style-button dxd-button-back-color dxd-state-normal dxd-back-highlighted dx-image-fontstyle-strikeout" data-bind="css: { \'dxd-state-active\': strikeout(), \'dx-disabled-button\': $parent.disabled }, click: function() { if(!$parent.disabled()) { strikeout(!strikeout()); } }"><!-- ko template: \'dxrd-svg-fontstyle-strikeout\'--><!-- /ko --></div> </div> </div> <!-- /ko --> </div> </div>',
    'dx-image': '<div data-bind="dxFileImagePicker: { value: value, placeholderId: \'Image\', accept: \'image/*\', type: \'img\', disabled: disabled }"></div>',
    'dx-numeric': '<div data-bind="dxNumberBox: getOptions({ value:value, showSpinButtons:true, disabled:disabled, inputAttr: { \'aria-label\': displayName } }), dxValidator: { validationRules: validationRules || [] }"></div>',
    'dx-number-editor': '<div data-bind="dxTextBox: getOptions({ value: value, disabled: disabled, inputAttr: { \'aria-label\': displayName } }), dxValidator: { validationRules: validationRules || [] }"></div>',
    'dx-text': '<!-- ko if: $data.validationRules --> <div data-bind="dxTextBox: getOptions({ value: value, disabled: disabled, inputAttr: { \'aria-label\': displayName }}), dxValidator: getValidatorOptions($data.validatorOptions || { validationRules: validationRules || [] })"></div> <!-- /ko --> <!-- ko if: !$data.validationRules --> <div data-bind="dxTextBox: getOptions({ value: value, disabled: disabled, inputAttr: { \'aria-label\': displayName }})"></div> <!-- /ko -->',
    'dx-string-array': '<div class="dx-field" data-bind="css: { \'dxd-border-accented\': $data.isPropertyHighlighted }"> <div class="dx-string-array-container dx-texteditor dx-editor-outlined dx-multiline"> <textarea class="dx-string-array-textarea dx-texteditor-input" data-bind="value: value, disable: disabled"></textarea> </div> </div>',
    'dx-propertieseditor': '<div data-bind="css: { \'dx-rtl\' : rtl }"> <div class="dx-editors"> <div class="dx-fieldset"> <!-- ko foreach: getEditors() --> <!-- ko template: editorTemplate --> <!-- /ko --> <!-- /ko --> </div> </div> </div>',
    'dx-objectEditorContent': '<!-- ko if: visible --> <div data-bind="template: { name: \'dx-propertieseditor\', data: viewmodel }"></div> <!-- /ko -->',
    'dx-expressioneditor-main': '<div class="dx-expression-tree"> <!-- ko if: !aceAvailable --> <div class="dx-expressioneditor-textarea dxd-border-secondary dxd-back-primary2" data-bind="dxTextArea: { value: textAreaValue, isValid: isValid, spellcheck: false, onKeyUp: function() { isValid(true); } }"></div> <!-- /ko --> <!-- ko if: aceAvailable --> <div class="dx-expressioneditor-textarea dxd-border-secondary dxd-back-primary2" data-bind="dxAceEditor: { value: textAreaValue, editorContainer: editorContainer, theme: theme, options: aceOptions, additionalOptions: additionalOptions, callbacks: callbacks }"></div> <!-- /ko --> <div class="dx-expressioneditor-tools"> <!-- ko with: tools--> <div class="dx-expressioneditor-tools-tabs"> <!-- ko foreach: toolBox--> <div class="dx-expressioneditor-tools-tab dxd-back-primary2" data-bind="style: { width: width }, visible: visible"> <!-- ko if: $data.templateName --> <!-- ko template: { name: $data.templateName }--> <!-- /ko --> <!-- /ko --> </div> <!-- /ko--> </div> <!-- /ko--> </div> </div>',
    'dx-expressioneditor': '<div> <div class="no-margin-right" data-bind="dxEllipsisEditor: { value: displayValue, buttonAction: function() { popupVisible(true); }, disabled: disabled, isValid: modelValueValid, warningMessage: modelValueWarning }"></div> <!-- ko template: \'dx-expressioneditor-popup\'--> <!--/ko--> </div>',
    'dx-expressioneditor-popup': '<div data-bind="dxPopup: { showTitle: true, wrapperAttr: { class: \'dx-expressioneditor dx-popup-general\' }, title: title(), visible: popupVisible, toolbarItems: buttonItems, showCloseButton: true, fullScreen: false, maxHeight: \'600px\', height: \'90%\', width: \'645px\', container: getPopupContainer($element), position: { of: getPopupContainer($element)}, onShowing: onShowing, onHiding: onHiding, onShown: onShown }"> <!-- ko if: popupVisible --> <div data-bind="dxScrollView: { showScrollbar: \'onHover\', height: \'100%\', width: \'100%\' }"> <!-- ko template: "dx-expressioneditor-main" --> <!-- /ko --> </div> <!-- /ko --> </div>',
    'dx-expressioneditor-categories': '<div class="dx-expressioneditor-tools-tab-content-wrapper dxd-border-secondary " data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <!-- ko foreach: content --> <!-- ko if: $data.templateName --> <!-- ko template: $data.templateName--> <!-- /ko --> <!-- /ko --> <!-- ko ifnot: $data.templateName --> <div class="dx-expressioneditor-tools-tab-category dxd-list-item-back-color dxd-back-highlighted" data-bind="css: {\'dxd-state-selected\': content.isSelected }, text: displayName, dxclick: function() { $parent.click($data.content) }"> </div> <!-- /ko --> <!-- /ko --> </div>',
    'dx-expressioneditor-category-accordion': '<div class="dx-fieldset" style="margin: 0;"> <div data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dx-accordion-header dx-expressioneditor-tools-tab-accordion-header dxd-list-item-back-color dxd-back-highlighted" data-bind="css: {\'dxd-state-selected\': $data.isSelected }, dxclick: function() { $data.updateContent($data.allItems(), $data.isSelected); $parent.click($data.content) }"> <div class=" dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }" style="display:inline-block;"></div> <span class="dx-expressioneditor-tools-tab-header" data-bind="text: displayName"></span> </div> <div class="dx-accordion-content"> <!-- ko foreach: items--> <div class="dx-expressioneditor-tools-tab-item dxd-text-primary dxd-list-item-back-color dxd-back-highlighted" data-bind="css: {\'dxd-state-selected\': isSelected }, text: $data.display, dxclick: function() { $parent.updateContent($data.data, $data.isSelected); $parents[1].click($parent.content); }"></div> <!-- /ko --> </div> </div> </div>',
    'dx-expressioneditor-description': '<div class="dx-expressioneditor-tools-tab-content-wrapper dxd-border-secondary " data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <div class="dx-expressioneditor-description dxd-text-primary" data-bind="text: content"></div> </div>',
    'dx-expressioneditor-fields': '<div class="dx-expressioneditor-fields"> <div data-bind="treeListSearchPanel: { controllers: [ ko.unwrap($data.parameters) ? ko.unwrap($data.parameters).treeListController : ko.unwrap($data.parameters), ko.unwrap($data.fields) ? ko.unwrap($data.fields).treeListController : ko.unwrap($data.fields) ] }"> </div> <div class="dx-expressioneditor-tools-tab-content-wrapper dxd-border-secondary " data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <!-- ko if: fields --> <div class="dx-treelist-wrapper" data-bind="treelist: fields"></div> <!-- /ko --> <!-- ko if: $data.parameters --> <div class="dx-treelist-wrapper" data-bind="treelist: parameters"></div> <!-- /ko --> </div> </div>',
    'dx-ee-treelist-item': '<div class="dx-treelist-item dxd-list-item-back-color dxd-back-highlighted" data-bind="visible: visible, event: { dblclick: function() { actions[0].clickAction($element); }}, styleunit: padding, css: { \'dx-treelist-item-selected dxd-state-selected\': isSelected }"> <div class="dx-treelist-item-images"> <!-- ko if: hasItems --> <div class="dx-treelist-collapsedbutton" data-bind="css: nodeImageClass, template: \'dxrd-svg-collapsed\', click: toggleCollapsed"></div> <!-- /ko --> <!-- ko ifnot: hasItems --> <div class="dx-treelist-collapsedbutton"></div> <!-- /ko --> <div class="dx-treelist-image" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: text }"> </div> </div> <div class="dx-treelist-caption"> <div class="dx-treelist-selectedcontent" data-bind="click: toggleSelected"> <!-- ko template: { name: \'dx-treelist-item-text-content\' } --> <!-- /ko --> </div> </div> </div>',
    'dx-expressioneditor-selectedcontent': '<!-- ko with: content --> <!-- ko template: $data--> <!-- /ko --> <!-- /ko -->',
    'dx-expressioneditor-collection': '<div class="dx-expressioneditor-tools-tab-content-wrapper dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <!-- ko foreach: items --> <div data-bind="attr: { class: \'dx-expressioneditor-tools-tab-item dxd-list-item-back-color dxd-text-primary dxd-back-highlighted \' + ($data.class ? $data.class : \'\') }, text: $data.displayName || $data.text, css: { \'dx-expressioneditor-state-selected dxd-state-selected\': $parent.selectedItem() === $data }, dxclick: function() { $parent.selectedItem($data); $parents[2].click($data); }, event: { dblclick: function() { $parents[2].dblclick($data, $element); } }"></div> <!-- /ko --> </div>',
    'dx-expressioneditor-collection-function': '<div class="dx-expressioneditor-collection-function"> <div class="dx-expressioneditor-collection-function-search"> <div data-bind="dxTextBox: { value: textToSearch, showClearButton: true, valueChangeEvent: \'keyup\', placeholder: $parents[2].searchPlaceholder() }"></div> </div> <div class="dx-expressioneditor-collection-function-items dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <!-- ko foreach: availableItems --> <div class="dx-expressioneditor-tools-tab-item dxd-list-item-back-color dxd-text-primary dxd-back-highlighted" data-bind="css: { \'dx-expressioneditor-state-selected dxd-state-selected\': $parent.selectedItem() === $data }, dxclick: function() { $parent.selectedItem($data); $parents[2].click($data); }, event: { dblclick: function() { $parents[2].dblclick($data, $element); } }, searchHighlighting: { text: $data.displayName || $data.text, textToSearch: $parent.textToSearch }"></div> <!-- /ko --> </div> </div>',
    'dx-filtereditor-content': '<div class="dx-filtereditor-tree-container" data-bind="css: { \'advanced\': advancedMode }"> <!-- ko template: \'dx-filtereditor-content-tree\' --> <!-- /ko --> </div> <div class="dx-filtereditor-text-container" data-bind="css: { \'advanced\': advancedMode }, visible: textVisible"> <!-- ko template: \'dx-filtereditor-content-text\'--> <!-- /ko --> </div>',
    'dx-filtereditor-content-plain': '<div class="dx-filtereditor-plain-advanced" data-bind="dxCheckBox: { value: advancedMode, text: advancedModeText }"></div> <div class="dx-filtereditor-plain-content" data-bind="style: { height: plainContentHeightPerc }"> <div class="dx-filtereditor-text-container" data-bind="css: { \'advanced\': advancedMode }, style: { height: textContentHeightPerc }"> <!-- ko template: \'dx-filtereditor-content-text\'--> <!-- /ko --> </div> <div class="dx-filtereditor-tree-container" data-bind="css: { \'advanced\': advancedMode }, style: { height: treeContentHeightPerc }"> <!-- ko template: \'dx-filtereditor-content-tree\' --> <!-- /ko --> </div> </div>',
    'dx-filtereditor-content-text': '<!-- ko if: !aceAvailable --> <div class="dx-filtereditor-text" data-bind="dxTextArea: { value: displayValue, isValid: isValid, onInput: onInput, spellcheck: false }, cacheElement: { action: function(element) { cacheElement(element) } }"></div> <!-- /ko --> <!-- ko if: aceAvailable --> <div class="dx-filtereditor-text dx-texteditor dx-textarea dx-editor-outlined" data-bind="css: {\'dx-invalid\': !$data.isValid(), \'dx-state-focused\': textFocused }"> <div class="dx-texteditor-container"> <div class="dx-filtereditor-ace dxd-back-primary2" data-bind="dxAceEditor: { value: $data.displayValue, theme: helper.aceTheme, editorContainer: editorContainer, options: aceOptions, additionalOptions: additionalOptions }"></div> <div class="dx-texteditor-buttons-container"></div> </div> </div> <!-- /ko -->',
    'dx-filtereditor-content-tree': '<div class="dx-filtereditor-tree dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', direction: \'both\' }"> <!-- ko with: operandSurface --> <!-- ko template: { name: $data.templateName, data: $data, if: $parent.isSurfaceValid }--> <!-- /ko --> <!-- /ko --> </div> <!-- ko ifnot: isSurfaceValid --> <div class="dx-filtereditor-tree-lockscreen" data-bind="dxclick: function() { $data.advancedMode(true); }"> <div class="dx-filtereditor-tree-lockscreen-content"> <div class="dx-filtereditor-tree-lockscreen-content-text" data-bind="text: invalidMessage()"> </div> </div> </div> <!-- /ko -->',
    'dx-filtereditor': '<div> <div class="no-margin-right" data-bind="dxEllipsisEditor: { value: modelDisplayValue, isValid: modelValueIsValid, disabled: disabled, buttonAction: function() { popupVisible(true); } }"></div> <!-- ko template: \'dx-filtereditor-popup\' --> <!-- /ko --> </div>',
    'dx-filtereditor-advanced': '<div class="dx-filtereditor" style="width: 100%; height: 100%;" data-bind="style: { pointerEvents: $data.options().disabled() ? \'none\' : \'\' }"> <!-- ko template: \'dx-filtereditor-content\' --> <!-- /ko --> <!-- ko template: \'dx-filtereditor-content-popups\' --> <!-- /ko --> </div>',
    'dx-filtereditor-plain': '<div class="dx-filtereditor" style="width: 100%; height: 100%;" data-bind="style: { pointerEvents: $data.options().disabled() ? \'none\' : \'\' }"> <!-- ko template: \'dx-filtereditor-content-plain\' --> <!-- /ko --> <!-- ko template: \'dx-filtereditor-content-popups\' --> <!-- /ko --> </div>',
    'dx-filtereditor-aggregate-common': '<!-- ko with: property--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> <div data-bind="service: { name: \'createChangeType\' }"></div> <!-- ko if: $data.aggregatedExpression() --> <div class="criteria-operator-text dxd-filter-editor-text-color">(</div> <!-- ko with: aggregatedExpression--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> <div class="criteria-operator-text dxd-filter-editor-text-color">)</div> <!-- /ko -->',
    'dx-filtereditor-aggregate': '<div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-action" data-bind="dxclick: function() {  $data.remove && $data.remove(); }"> <div class="criteria-operator-action-image dx-image-filtereditor-remove" data-bind="visible: !!$data.canRemove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> </div> <!-- ko template: { name: \'dx-filtereditor-aggregate-common\' }--> <!-- /ko --> </div> <div class="criteria-operator-content"> <!-- ko with: condition--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dx-filtereditor-between': '<div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-action" data-bind="dxclick: function() {  $data.remove && $data.remove(); }"> <div class="criteria-operator-action-image dx-image-filtereditor-remove" data-bind="visible: !!$data.canRemove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> </div> <!-- ko with: property--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> <div data-bind="service: { name: \'createChangeType\' }"></div> <!-- ko with: begin--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> <div class="criteria-operator-text dxd-filter-editor-text-color">and</div> <!-- ko with: end--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dx-filtereditor-binary': '<div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-action" data-bind="dxclick: function() {  $data.remove && $data.remove(); }"> <div class="criteria-operator-action-image dx-image-filtereditor-remove" data-bind="visible: !!$data.canRemove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> </div> <!-- ko with: leftOperand--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> <div data-bind="service: { name: \'createChangeType\' }"></div> <!-- ko with: rightOperand--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dx-filtereditor-common': '<!-- ko template: contentTemplateName --> <!-- /ko --> <!-- ko if: $data.leftPart && $data.leftPart.condition --> <div class="criteria-operator-content"> <!-- ko with: leftPart--> <!-- ko with: condition--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko -->',
    'dx-filtereditor-function-lightweight': '<div class="criteria-operator-text dxd-filter-editor-text-color" data-bind="css: css"> <div class="criteria-operator-text dxd-filter-editor-text-color" data-bind="text: displayType"></div> <div data-bind="service: { name: \'createChangeValueType\' }"></div> </div>',
    'dx-filtereditor-function': '<div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-action" data-bind="dxclick: function() {  $data.remove && $data.remove(); }"> <div class="criteria-operator-action-image dx-image-filtereditor-remove" data-bind="visible: !!$data.canRemove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> </div> <!-- ko template: { name: $data.leftPart.templateName, data: $data.leftPart }--> <!-- /ko --> <div data-bind="service: { name: \'createChangeType\' }"></div> <!-- ko foreach: rightPart --> <!-- ko template: { name: $data.templateName, data: $data }--> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dx-filtereditor-group': '<div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-action" data-bind="dxclick: function() {  $data.remove && $data.remove(); }"> <div class="criteria-operator-action-image dx-image-filtereditor-remove" data-bind="visible: !!$data.canRemove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> </div> <div class="criteria-operator-item"> <div data-bind="service: { name: \'createChangeType\' }"></div> </div> <div data-bind="service: { name: \'createAddButton\' }"></div> </div> <div class="criteria-operator-content"> <!-- ko foreach: operands --> <!-- ko template: { name: templateName, data: $data } --> <!-- /ko--> <!-- /ko --> </div> </div>',
    'dx-filtereditor-in': '<div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-action" data-bind="dxclick: function() {  $data.remove && $data.remove(); }"> <div class="criteria-operator-action-image dx-image-filtereditor-remove" data-bind="visible: !!$data.canRemove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> </div> <!-- ko with: criteriaOperator--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko --> <div data-bind="service: { name: \'createChangeType\' }"></div> <!-- ko if: $data.operands().length > 1--> <div class="criteria-operator-item criteria-operator-text dxd-filter-editor-text-color">(</div> <div class="criteria-operator-item"> <!-- ko foreach: $data.operands() --> <!-- ko template: { name: $data.templateName, data: $data }--> <!-- /ko --> <div class="criteria-operator-item criteria-operator-text dxd-filter-editor-text-color">,</div> <!-- /ko --> </div> <div class="criteria-operator-item criteria-operator-text dxd-filter-editor-text-color">)</div> <!-- /ko --> <!-- ko if: $data.operands().length == 1--> <!-- ko template: { name: $data.operands()[0].templateName, data: $data.operands()[0] }--> <!-- /ko --> <!-- /ko --> <div class="criteria-operator-action" data-bind="dxclick: addValue"> <div class="criteria-operator-action-image dx-image-filtereditor-add"><!-- ko template: \'dxrd-svg-filtereditor-add\' --><!-- /ko --></div> </div> </div> </div>',
    'dx-filtereditor-parameter': '<div class="criteria-operator-text dxd-filter-editor-text-color" data-bind="css: css"> <div data-bind="service: { name: \'createChangeParameter\' }"></div> <!-- ko if: $data.canChange --> <div data-bind="service: { name: \'createChangeValueType\' }"></div> <!-- /ko --> </div>',
    'dx-filtereditor-property': '<div class="criteria-operator-text dxd-filter-editor-text-color" data-bind="css: css"> <div data-bind="service: { name: \'createChangeProperty\' }"></div> <!-- ko if: $data.canChange --> <div data-bind="service: { name: \'createChangeValueType\' }"></div> <!-- /ko --> </div>',
    'dx-filtereditor-unary': '<!-- ko if: $data.operand().reverse --> <!-- ko template: {name: $data.operand().templateName, data: $data.operand() }--> <!-- /ko --> <!-- /ko --> <!-- ko ifnot: $data.operand().reverse --> <div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-action" data-bind="dxclick: function() {  $data.remove && $data.remove(); }"> <div class="criteria-operator-action-image dx-image-filtereditor-remove" data-bind="visible: !!$data.canRemove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> </div> <!-- ko with: operand--> <div class="criteria-operator-item"> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> </div> <!-- /ko --> <div data-bind="service: { name: \'createChangeType\' }"></div> </div> </div> <!-- /ko -->',
    'dx-filtereditor-not': '<!-- ko with: operand--> <!-- ko template: { name: templateName, data: $data }--> <!-- /ko --> <!-- /ko -->',
    'dx-filtereditor-value': '<div class="criteria-operator-item" data-bind="visible: isEditable"> <!-- ko if: $data.items.length === 0 --> <!-- ko if: $data.specifics() === "string" || $data.specifics() === "guid" --> <div class="criteria-operator-item-editor" data-bind="dxTextBox: { value: _value, onFocusOut: function() { isEditable(false); } }, focus: { on: isEditable }"></div> <!-- /ko --> <!-- ko if: $data.specifics() === "bool" --> <div class="criteria-operator-item-editor" data-bind="focus: isEditable, dxLocalizedSelectBox: { dataSource: [ { val: \'True\', text: \'Yes\', localizationId: \'AnalyticsCoreStringId.ParametersPanel_True\' }, { val: \'False\', text: \'No\', localizationId: \'AnalyticsCoreStringId.ParametersPanel_False\' }], valueExpr: \'val\', displayExpr: \'text\', value: _value, onFocusOut: function() { isEditable(false); }, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div> <!-- /ko --> <!-- ko if: $data.specifics() === "date" --> <div class="criteria-operator-item-editor" data-bind="focus: isEditable, dxDateBox: { value: _value, closeOnValueChange: true, type: \'date\', onFocusOut: function() { isEditable(false); }, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div> <!-- /ko --> <!-- ko if: $data.specifics() !== "string" && $data.specifics() !== "bool" && $data.specifics() !== "date" && $data.specifics() !== "guid" --> <div class="criteria-operator-item-editor" data-bind="dxTextBox: getNumberEditorOptions(), focus: { on: isEditable }"></div> <!-- /ko --> <!-- /ko --> <!-- ko if: $data.items.length > 0 && typeof $data.items[0] === "object" --> <div class="criteria-operator-item-editor" data-bind="focus: isEditable, dxSelectBox: { value: _value, dataSource: dataSource, valueExpr: \'value\', displayExpr: \'display\', useItemTextAsTitle: true, searchEnabled: true, onFocusOut: function() { isEditable(false); }}, dropDownOptions: { container: $root.getPopupContainer($element) }"></div> <!-- /ko --> <!-- ko if: $data.items.length > 0 && typeof $data.items[0] !== "object" --> <div class="criteria-operator-item-editor" data-bind="focus: isEditable, dxSelectBox: { value: _value, dataSource: dataSource, acceptCustomValue: true, searchEnabled: true, useItemTextAsTitle: true, onFocusOut: function() { isEditable(false); }, dropDownOptions: { container: $root.getPopupContainer($element) }}"></div> <!-- /ko --> </div> <div class="criteria-operator-text dxd-filter-editor-text-color criteria-operator-item-value dxd-filter-editor-value-back-color" data-bind="visible: !isEditable()"> <div class="criteria-operator-text dxd-filter-editor-text-color clickable" data-bind="text: value, click: function() { isEditable(true); }, css: { \'default\': $data.isDefaultDisplay() } "></div> <div data-bind="service: { name: \'createChangeValueType\' }"></div> </div>',
    'dx-filtereditor-popup': '<div data-bind="dxPopup: { showTitle: true, wrapperAttr: { class: \'dx-filtereditor dx-popup-general\' }, width: \'95%\', height: \'95%\', title: options() && options().title(), visible: popupVisible, onShown: function() { $data.focusText() }, toolbarItems: buttonItems, showCloseButton: true, container: getPopupContainer($element), position: { of: getPopupContainer($element) } }"> <!-- ko template: \'dx-filtereditor-content\' --> <!-- /ko --> </div> <!-- ko template: \'dx-filtereditor-content-popups\' --> <!-- /ko -->',
    'dx-filtereditor-create': '<div class="criteria-operator-action" data-bind="dxclick: showPopup"> <div class="criteria-operator-action-image dx-image-filtereditor-add"><!-- ko template: \'dxrd-svg-filtereditor-add\' --><!-- /ko --></div> </div>',
    'dx-filtereditor-change': '<div class="criteria-operator-text dxd-filter-editor-text-color clickable" data-bind="text: target.displayType, dxclick: showPopup, css: target.css"></div>',
    'dx-filtereditor-changeParameter': '<div class="criteria-operator-text dxd-filter-editor-text-color clickable " data-bind="text: target.parameterName(), dxclick: showPopup, css: { \'dxd-state-selected\': target.isSelected }"></div>',
    'dx-filtereditor-changeProperty': '<div class="criteria-operator-text dxd-filter-editor-text-color clickable" data-bind="text: target.displayName, dxclick: showPopup, css: { \'dxd-state-selected\': target.isSelected }"></div>',
    'dx-filtereditor-changeValueType': '<div class="criteria-operator-action" data-bind="dxclick: showPopup"> <div class="criteria-operator-action-image-edit dx-image-filtereditor-edit"><!-- ko template: \'dxrd-svg-filtereditor-edit\' --><!-- /ko --></div> </div>',
    'dx-filtereditor-content-popups': '<div class="dx-selectbox-popup-wrapper dx-dropdownlist-popup-wrapper dx-filtereditor-criteriaoperator-popup dx-dropdowneditor-overlay" data-bind="dxPopupWithAutoHeight: { minWidth:\'170px\', maxWidth:\'500px\', width: \'auto\', height: \'300px\', wrapperAttr: { class: \'dx-selectbox-popup-wrapper dx-dropdownlist-popup-wrapper dx-filtereditor-criteriaoperator-popup dx-dropdowneditor-overlay\' }, focusStateEnabled: false, position: $data.rtl ? { my: \'right top\', at: \'right bottom\', of: popupService.target} : { my: \'left top\', at: \'left bottom\', of: popupService.target }, container: options().popupContainer, target: popupService.target, showTitle: false, showCloseButton: false, animation: {}, closeOnOutsideClick: true, shading: false, visible: popupService.visible }"> <!-- ko with: popupService--> <!-- ko with: data --> <!-- ko template: template--> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div>',
    'dx-filtereditor-search-panel': '<div class="dx-filtereditor-popup-item dx-filtereditor-search dx-item dx-list-item dxd-list-item-back-color dxd-back-highlighted"> <div class="dx-item-content dxd-border-secondary dxd-text-primary dx-list-item-content" data-bind="dxTextBox: { activeStateEnabled:false, focusStateEnabled:false, hoverStateEnabled:false, placeholder: searchPlaceholder(), value: ($data.value || $data.filterString), height: \'100%\', stylingMode: \'underlined\', valueChangeEvent: \'keyup\' }"> </div> </div>',
    'dx-filtereditor-popup-common': '<!-- ko if: $data.isFiltered --> <div data-bind="template: { name: \'dx-filtereditor-search-panel\', data: $data }"></div> <!-- /ko --> <div class="dx-widget" data-bind="dxScrollView: { showScrollbar: \'onHover\' }, style: {\'height\': $data.height }"> <!-- ko foreach: data --> <!-- ko if: !$data.hidden --> <!-- ko ifnot: $parent.isFiltered --> <div class="dx-filtereditor-popup-item dx-item dx-list-item dxd-list-item-back-color dxd-back-highlighted"> <span class="dx-item-content dx-list-item-content" data-bind="text: $data.displayText || $data.name, click: function() { $parent.click($data); } "></span> </div> <!-- /ko --> <!-- ko if: $parent.isFiltered --> <div class="dx-filtereditor-popup-item dx-item dx-list-item dxd-list-item-back-color dxd-back-highlighted"> <div class="dx-item-content dx-list-item-content" data-bind="searchHighlighting: { text: $data.displayText || $data.name, textToSearch: $parent.filterString }, click: function() { $parent.click($data); } "> </div> </div> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div>',
    'dx-filtereditor-popup-treelist': '<div class="dx-filtereditor-search" data-bind="treeListSearchPanel: { controllers: data().treeListController, template: \'dx-filtereditor-search-panel\' } "></div> <div class="dx-widget" data-bind="dxScrollView: { showScrollbar: \'onHover\' }, style: {\'height\': $data.height} "> <div class="dx-treelist-wrapper" data-bind="treelist: data"></div> </div>',
    'dx-format-string-list': '<div class="dx-format-string-list dxd-format-string-editor-border-color dxd-border-secondary"> <div data-bind="dxList: { items: $data.items, selectedItems: $data.selectedItems, onItemClick: $data.action, selectionMode: \'single\', activeStateEnabled: false }"> <div data-options="dxTemplate: { name: \'item\' }" class="dx-theme-border-color"> <div class="dx-image-filtereditor-remove" data-bind="click: $parent.removeItem, visible: $data.canRemove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> <div class="dx-format-string-list-item" data-bind="text: $data.displayName"></div> </div> </div> </div>',
    'dx-format-string-edit-area': '<div class="dx-format-string-content-area-title dxd-text-primary" data-bind="text: getDisplayText(\'types\')"></div> <div class="dx-format-string-formats"> <!-- ko template: { name: \'dx-format-string-list\', data: { items: patternList, action: setFormat, removeItem: removeCustomFormat, selectedItems: selectedFormats } } --> <!-- /ko --> <div class="dx-format-string-customization"> <div class="dx-format-string-customization-add" data-bind="dxButton:{ onClick: addCustomFormat, text: getDisplayText(\'add\'), disabled: !canAddCustomFormat() }"></div> <div class="dx-format-string-customization-value dx-format-string-value dxd-back-primary" data-bind="dxTextBox: { value: formatResult, onInput: function(e) { updateInputText(\'formatResult\', e.component); }  }"></div> </div> </div>',
    'dx-format-string-edit-area-general': '<div class="dx-format-string-content-area-title dxd-text-primary" data-bind="text: getDisplayText(\'prefix\')"></div> <div class="dx-format-string-customization-general-value dx-format-string-value" data-bind="dxTextBox: { value: formatPrefix, onInput: function(e) { updateInputText(\'formatPrefix\', e.component); } }"></div> <div class="dx-format-string-content-area-title dxd-text-primary" data-bind="text: getDisplayText(\'suffix\')"></div> <div class="dx-format-string-customization-general-value dx-format-string-value" data-bind="dxTextBox: { value: formatSuffix, onInput: function(e) { updateInputText(\'formatSuffix\', e.component); } }"></div>',
    'dx-format-string': '<div> <div class="no-margin-right" data-bind="dxEllipsisEditor: { value: value, disabled: disabled, buttonAction: function() { popupVisible(true); } }"></div> <div data-bind="dxPopup: { wrapperAttr: { class: \'dx-format-string dx-popup-general\' }, showTitle: true, width: \'95%\', height: \'95%\', minWidth: 650, title: getDisplayText(\'title\'), visible: popupVisible, toolbarItems: buttonItems, showCloseButton: true, container: getPopupContainer($element), position: { of: getPopupContainer($element) } }"> <div class="dx-format-string-content"> <div class="dx-format-string-content-area-left"> <div class="dx-format-string-content-area-title dxd-text-primary" data-bind="text: getDisplayText(\'category\')"></div> <!-- ko template: { name: \'dx-format-string-list\', data: { items: types, action: setType, selectedItems: selectedTypes } } --> <!-- /ko --> </div> <div class="dx-format-string-content-area-right"> <!-- ko if: !isGeneralType --> <!-- ko template: \'dx-format-string-edit-area\' --> <!-- /ko --> <!-- /ko --> <!-- ko if: isGeneralType --> <!-- ko template: \'dx-format-string-edit-area-general\' --> <!-- /ko --> <!-- /ko --> <div class="dx-format-string-preview-area" data-bind="css: { \'dx-format-general\': isGeneralType }"> <div class="dx-format-string-preview-area-caption dxd-text-primary" data-bind="text: getDisplayText(\'preview\')"></div> <div class="dx-format-string-preview-value dxd-format-string-editor-border-color dxd-text-primary dxd-back-primary dxd-border-secondary"> <span class="dx-format-string-preview-value-inner" data-bind="text: previewString"></span> </div> </div> </div> </div> </div> </div>',
    'dx-treelist-item-actions': '<!-- ko foreach: actions --> <!-- ko if: $data.templateName --> <!-- ko template: templateName  --> <!-- /ko --> <!-- /ko --> <!-- ko if: !$data.templateName --> <div class="dx-treelist-action" data-bind="dxButtonWithTemplate: { onClick: function() { clickAction($parent); }, icon: ko.unwrap($data.imageTemplateName), iconClass: $data.imageClassName, visible: (ko.unwrap($data.visible) == undefined) || ko.unwrap($data.visible), disabled: $data.disabled && $data.disabled() }, attr: { title: $data.displayText && $data.displayText() || text }"></div> <!-- /ko --> <!-- /ko -->',
    'dx-treelist-edit-action': '<div class="dx-treelist-action-edit dx-accordion-button" data-bind="dxButtonWithTemplate: { icon: \'dxrd-svg-operations-edit\', iconClass: \'dx-image-edit\',  onClick: function() { $parent.collapsed(!$parent.collapsed()); } }, visible: $parent.hasContent, attr: { title: $data.displayText() }"></div>',
    'dx-treelist-item-actions-with-edit': '<!-- ko template: { name: \'dx-treelist-edit-action\', data: treeListEditAction() }  --> <!-- /ko --> <!-- ko template: \'dx-treelist-item-actions\'  --> <!-- /ko -->',
    'dx-treelist-item-ellipsis': '<div class="dx-treelist-item dxd-list-item-back-color dxd-back-highlighted" data-bind="styleunit: padding, click: renderNext"> <div class="dx-treelist-collapsedbutton"></div> <div class="dx-treelist-caption"> <div class="dx-treelist-selectedcontent"> <div class="dx-treelist-text-wrapper"> <div class="dx-treelist-ellipsis-text dxd-text-accented dxd-hyperlink-color" data-bind="text: $data.text()"></div> </div> </div> </div> </div>',
    'dx-treelist-item': '<!-- ko if: visible --> <!-- ko if: hasContent --> <!-- ko template: "dx-treelist-accordion-item" --> <!-- /ko --> <!-- /ko --> <!-- ko ifnot: hasContent --> <!-- ko template: "dx-treelist-header-item" --> <!-- /ko --> <!-- /ko --> <!-- /ko -->',
    'dx-treelist-accordion-item': '<div data-bind="dxdAccordionExt: { collapsed: collapsed, lazyContentRendering: true }"> <!-- ko template: "dx-treelist-header-item" --> <!-- /ko --> <div class="dx-fieldset dx-accordion-content dxd-back-primary"> <!-- ko with: data --> <!-- ko template: { name: contenttemplate } --> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dx-treelist-header-item': '<div role="treeitem" class="dx-treelist-item dxd-list-item-back-color dxd-back-highlighted dx-accessibility-treelist-item dx-accessibility-focus-border-accented" data-bind="event: { dblclick: function() { $data.dblClickHandler ? $data.dblClickHandler($data) : $data.toggleCollapsed() } }, styleunit: padding, css: { \'dx-treelist-item-selected dxd-state-selected\': isSelected() || isMultiSelected() }, attr: { \'aria-expanded\': (hasItems && (!collapsed() ? \'true\' : \'false\')), \'aria-selected\': (isSelected() || isMultiSelected()) ? \'true\' : \'false\', \'aria-level\':level + 1, \'aria-label\': text, \'aria-setsize\': parent.items().length, \'aria-posinset\': parent.items.indexOf($data) + 1 }"> <!-- ko if: $data.hasItems--> <div class="dx-treelist-collapsedbutton" data-bind="css: nodeImageClass, template: \'dxrd-svg-collapsed\', click: toggleCollapsed"></div> <!-- /ko --> <div class="dx-treelist-caption" data-bind="style: { \'padding-left\': $data.hasItems ? \'0px\': \'18px\' }"> <!-- ko if: actions && actions.length > 0 --> <div class="dx-treelist-action-container" data-bind="visible: isSelected"> <!-- ko template: actionsTemplate() --> <!-- /ko --> </div> <!-- /ko  --> <!-- ko if: isDraggable --> <div class="dx-treelist-selectedcontent" data-bind="click: toggleSelected, draggable: dragDropHandler"> <!-- ko template: { name: \'dx-treelist-header-item-caption-content\' } --> <!-- /ko --> </div> <!-- /ko --> <!-- ko ifnot: isDraggable --> <div class="dx-treelist-selectedcontent" data-bind="click: toggleSelected"> <!-- ko template: { name: \'dx-treelist-header-item-caption-content\' } --> <!-- /ko --> </div> <!-- /ko --> </div> </div>',
    'dx-treelist-item-text-content': '<div class="dx-treelist-text-wrapper"> <!--ko if: treeListController.searchEnabled --> <div class="dx-treelist-text dx-highlighted-search-text" data-bind="searchHighlighting: { text: text, textToSearch: treeListController.textToSearch, searchOptions: treeListController.searchOptions }, attr: { title: text }"></div> <!-- /ko  --> <!--ko ifnot: treeListController.searchEnabled --> <div class="dx-treelist-text" data-bind="text: text, attr: { title: text }"></div> <!-- /ko  --> </div>',
    'dx-treelist-header-item-caption-content': '<div class="dx-treelist-image" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: text }"> </div> <!-- ko template: { name: \'dx-treelist-item-text-content\' } --> <!-- /ko -->',
    'dx-treelist-item-with-hover': '<div data-bind="visible: visible"> <!-- ko if: hasContent --> <!-- ko template: "dx-treelist-accordion-item-with-hover" --> <!-- /ko --> <!-- /ko --> <!-- ko ifnot: hasContent --> <!-- ko template: "dx-treelist-header-item-with-hover" --> <!-- /ko --> <!-- /ko --> </div>',
    'dx-treelist-accordion-item-with-hover': '<div data-bind="dxdAccordionExt: { collapsed: collapsed, lazyContentRendering: true }"> <!-- ko template: "dx-treelist-header-item-with-hover" --> <!-- /ko --> <div class="dx-fieldset dx-accordion-content dxd-back-primary"> <!-- ko with: data --> <!-- ko template: { name: contenttemplate } --> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dx-treelist-header-item-with-hover': '<div class="dx-background-inheritor dxd-back-highlighted dxd-state-selected"> <div class="dx-treelist-item dx-fontsize-reestablished dxd-list-item-back-color" data-bind="event: { dblclick: function() { $data.dblClickHandler ? $data.dblClickHandler($data) : $data.toggleCollapsed() }, mouseenter: mouseenter, mouseleave: mouseleave }, styleunit: padding, css: { \'dx-treelist-item-selected dxd-state-selected dxd-back-secondary\': isSelected() || isMultiSelected() }"> <div class="dx-treelist-collapsedbutton" data-bind="css: nodeImageClass, template: \'dxrd-svg-collapsed\', click: toggleCollapsed, style: { \'visibility\': hasItems ? \'visible\' : \'hidden\' }"></div> <div class="dx-treelist-caption"> <!-- ko if: actions && actions.length > 0 --> <div class="dx-treelist-action-container" data-bind="visible: $data.isSelected() || $data.isHovered()"> <!-- ko template: actionsTemplate() --> <!-- /ko --> </div> <!-- /ko  --> <div class="dx-treelist-selectedcontent" data-bind="click: toggleSelected,  draggable: isDraggable ? dragDropHandler : null"> <div class="dx-treelist-image" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: text }"> </div> <div class="dx-treelist-text-wrapper"> <div class="dx-treelist-text" data-bind="text: text, attr: { title: text }"></div> </div> </div> </div> </div> </div>',
    'dx-treelist': '<div role="group" class="dx-treelist dxd-text-primary"> <!-- ko template: $data.visibleItems !== undefined ? \'dx-treelist-paginate\' : \'dx-treelist-common\' --> <!-- /ko --> </div>',
    'dx-treelist-search-panel': '<div class="dxrd-treelist-search-panel" data-bind="dxTextBox: { mode: \'search\',  value:value, activeStateEnabled:false, focusStateEnabled:false, hoverStateEnabled:false, valueChangeEvent: \'keyup\', showClearButton: true, placeholder: searchPlaceholder()}"></div>',
    'dx-treelist-common': '<!-- ko foreach: items --> <!-- ko lazy: { resolver: resolver, innerBindings: { template: templateName } } --> <!-- /ko --> <!-- ko if: !$data.collapsed() --> <!-- ko template: { name: \'dx-treelist\', data: $data } --> <!-- /ko --> <!-- /ko --> <!-- /ko -->',
    'dx-treelist-paginate': '<!-- ko foreach: visibleItems --> <!-- ko template: templateName --> <!-- /ko --> <!-- ko if: !$data.collapsed() --> <!-- ko template: { name: \'dx-treelist\', data: $data } --> <!-- /ko --> <!-- /ko --> <!-- /ko -->',
});


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _textAlignmentEditor_1 = __webpack_require__(138);
var templateUtils_1 = __webpack_require__(13);
var _internal_1 = __webpack_require__(4);
ko.bindingHandlers['dxTextAlignmentEditor'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        $(element).children().remove();
        var templateHtml = templateUtils_1.getTemplate('dxrd-textalignment-editor'), $element = $(element).append(templateHtml);
        var model = new _textAlignmentEditor_1.TextAlignmentModel(valueAccessor());
        ko.applyBindings({ value: model }, $element.children()[0]);
        _internal_1.addDisposeCallback(element, function () { return model.dispose(); });
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(17);
__webpack_require__(34);
__webpack_require__(114);
__webpack_require__(21);
__webpack_require__(218);
__webpack_require__(139);
__webpack_require__(140);
__webpack_require__(220);
__webpack_require__(142);
__webpack_require__(221);
__webpack_require__(82);
__webpack_require__(178);
__webpack_require__(179);
__webpack_require__(143);
__webpack_require__(223);
__webpack_require__(144);
__webpack_require__(84);
__webpack_require__(145);
var registerDesignerEditors_1 = __webpack_require__(224);
var registerBaseEdtior_1 = __webpack_require__(225);
__webpack_require__(13);
registerBaseEdtior_1.registerBaseEditors();
registerDesignerEditors_1.registerDesignerEditors();
__export(__webpack_require__(17));
__export(__webpack_require__(34));
__export(__webpack_require__(114));
__export(__webpack_require__(21));
__export(__webpack_require__(139));
__export(__webpack_require__(140));
__export(__webpack_require__(142));
__export(__webpack_require__(82));
__export(__webpack_require__(178));
__export(__webpack_require__(179));
__export(__webpack_require__(143));
__export(__webpack_require__(144));
__export(__webpack_require__(84));
__export(__webpack_require__(145));
__export(__webpack_require__(13));


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var propertygrid_1 = __webpack_require__(21);
var _internal_1 = __webpack_require__(4);
var _codeResolver_1 = __webpack_require__(59);
var _localization_1 = __webpack_require__(8);
var localization_utils_1 = __webpack_require__(3);
var scroll_view_1 = __webpack_require__(80);
var events = __webpack_require__(219);
var templateUtils_1 = __webpack_require__(13);
ko.bindingHandlers['dxPropertyGrid'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        $(element).children().remove();
        var templateHtml = templateUtils_1.getTemplate('dx-propertieseditor'), $element = $(element).append(templateHtml);
        var value = valueAccessor();
        var model = new propertygrid_1.ObjectProperties(value.target, value.editorsInfo, value.level, value.parentDisabled, value.recreateEditors, value.textToSearch);
        ko.applyBindings(bindingContext.createChildContext(model), $element.children()[0]);
        _internal_1.addDisposeCallback(element, function () {
            model.dispose();
        });
        return { controlsDescendantBindings: true };
    }
};
ko.virtualElements.allowedBindings['lazy'] = true;
ko.bindingHandlers['lazy'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var parsedBindings = valueAccessor();
        var resolver = parsedBindings.resolver || _codeResolver_1.globalResolver;
        var isResolved = parsedBindings.isResolved || ko.observable(false);
        if (parsedBindings.innerBindings) {
            parsedBindings = parsedBindings.innerBindings;
        }
        var isDisposed = false;
        var tasks = [];
        $.each(parsedBindings, function (innerBindingKey, innerBindingParameters) {
            var innerBinding = ko.bindingHandlers[innerBindingKey];
            tasks.push(resolver.execute(function () {
                if (!isDisposed) {
                    var isInitialized = false;
                    ko.computed({
                        read: function () {
                            if (!isInitialized && innerBinding.init) {
                                innerBinding.init(element, function () { return innerBindingParameters; }, allBindings, viewModel, bindingContext);
                                isInitialized = true;
                            }
                            if (innerBinding.update) {
                                innerBinding.update(element, function () { return innerBindingParameters; }, allBindings, viewModel, bindingContext);
                            }
                        },
                        disposeWhenNodeIsRemoved: element
                    });
                    isResolved(true);
                }
            }, 1));
        });
        _internal_1.addDisposeCallback(element, function () {
            isDisposed = true;
            tasks.forEach(function (x) { return x.dispose(); });
            tasks = [];
        });
        return { controlsDescendantBindings: true };
    }
};
ko.bindingHandlers['dxdAccordion'] = {
    init: function (element, valueAccessor) {
        var options = valueAccessor(), $element = $(element), $accordionContent = $element.find('.dx-accordion-content').first(), scrollUpdateCallback = function () {
            var $scroll = $element.parents('.dx-scrollview');
            if ($scroll.length > 0) {
                var scrollView = scroll_view_1.default.getInstance($scroll.get(0));
                scrollView && scrollView['update']();
            }
        };
        var accordionButton = $element
            .find('.dx-accordion-header,.dx-accordion-button').get(0);
        events.off(accordionButton, 'dxclick');
        events.on(accordionButton, 'dxclick', function () {
            options.collapsed(ko.unwrap(options.alwaysShow) ? false : !options.collapsed());
        });
        options.collapsed() ? $accordionContent.hide() : $accordionContent.show();
        var subscription = options.collapsed.subscribe(function (newVal) {
            $accordionContent.slideToggle(options.timeout, function () { return scrollUpdateCallback(); });
        });
        _internal_1.addDisposeCallback(element, function () { return subscription.dispose(); });
    }
};
ko.bindingHandlers['dxdAccordionExt'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var options = valueAccessor(), $element = $(element), scrollUpdateCallback = function () {
            var $scroll = $element.parents('.dx-scrollview');
            if ($scroll.length > 0) {
                var scrollView = scroll_view_1.default.getInstance($scroll.get(0));
                scrollView && scrollView['update']();
            }
        }, $accordionContent = $element.find('.dx-accordion-content').first(), accordionContentHTML = null;
        if (options.collapsed() && options.lazyContentRendering === true) {
            accordionContentHTML = $accordionContent.html();
            $accordionContent.empty();
        }
        options.collapsed.subscribe(function (newVal) {
            if (newVal) {
                $accordionContent.slideUp(options.timeout, function () {
                    scrollUpdateCallback();
                });
            }
            else {
                if (accordionContentHTML) {
                    $accordionContent.html(accordionContentHTML);
                    ko.applyBindingsToDescendants(bindingContext, $accordionContent.get(0));
                    accordionContentHTML = null;
                }
                $accordionContent.slideDown(options.timeout, function () {
                    scrollUpdateCallback();
                });
            }
        });
        options.collapsed() ? $accordionContent.hide() : $accordionContent.show();
    }
};
ko.bindingHandlers['dxLocalizedSelectBox'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var options = valueAccessor();
        var prevDisplayExpr = options.displayExpr;
        options['placeholder'] = options['placeholder'] || _localization_1.selectPlaceholder();
        options['noDataText'] = options['noDataText'] || _localization_1.noDataText();
        options.displayExpr = function (value) {
            if (!value)
                return value;
            if (!prevDisplayExpr)
                return localization_utils_1.getLocalization(value, value.localizationId);
            return localization_utils_1.getLocalization($.isFunction(prevDisplayExpr) ? prevDisplayExpr(value) : value[prevDisplayExpr], value.localizationId);
        };
        options.itemTemplate = function (itemData, itemIndex, itemElement) {
            var context = bindingContext.createChildContext({
                display: options.displayExpr(itemData)
            });
            $(itemElement).children().remove();
            var templateHtml = templateUtils_1.getTemplate('item-with-title'), $element = $(itemElement).append(templateHtml);
            ko.applyBindingsToDescendants(context, $element[0]);
            return itemElement;
        };
        var extendedOptions = viewModel.getOptions ? viewModel.getOptions(options) : options;
        ko.bindingHandlers['dxSelectBox'].init(element, function () { return extendedOptions; }, allBindings, viewModel, bindingContext);
        return { controlsDescendantBindings: true };
    }
};
ko.bindingHandlers['styleunit'] = {
    'update': function (element, valueAccessor) {
        var value = ko.utils.unwrapObservable(valueAccessor() || {});
        $.each(value, function (styleName, styleValue) {
            styleValue = ko.utils.unwrapObservable(styleValue) || 0;
            element.style[styleName] = styleValue + 'px';
        });
    }
};
ko.bindingHandlers['service'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var value = ko.unwrap(valueAccessor() || {}), findService = function (serviceName) {
            var context = bindingContext.$parents.filter(function (item) { return item[serviceName] !== undefined; })[0];
            if (context) {
                return context[serviceName];
            }
            return null;
        }, service = findService(value.name), entity = service && service(viewModel);
        if (entity) {
            var childContext = bindingContext.createChildContext(entity.data);
            ko.renderTemplate(entity.templateName, childContext, {}, element, 'replaceNode');
        }
    }
};


/***/ }),
/* 219 */
/***/ (function(module, exports) {

module.exports = DevExpress.events;

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _internal_1 = __webpack_require__(4);
ko.bindingHandlers['focus'] = {
    init: function (element, valueAccessor) {
        var visible = valueAccessor().on || valueAccessor();
        var subscription = visible.subscribe(function (newVal) {
            if (newVal) {
                setTimeout(function () {
                    $(element).find(':input').focus();
                }, 1);
            }
        });
        _internal_1.addDisposeCallback(element, function () {
            subscription.dispose();
        });
    }
};
ko.bindingHandlers['svgAttrs'] = {
    update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
        element.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
        element.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');
    }
};


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var expressioneditor_1 = __webpack_require__(142);
var _internal_1 = __webpack_require__(4);
ko.bindingHandlers['dxExpressionEditor'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var $element = $(element);
        $element.children().remove();
        var values = valueAccessor();
        $(element).addClass(values.wrapper ? 'dx-expressioneditor-content' : 'dx-popup-general');
        var templateName = values.editorTemplateName || 'dx-expressioneditor';
        var optionSubscription = null;
        var editor = new expressioneditor_1.ExpressionEditor(ko.unwrap(values.options), values.fieldListProvider, viewModel.disabled, $(element).closest('.dx-rtl').length > 0, values.displayNameProvider, values.popupVisible);
        if (ko.isSubscribable(values.options)) {
            optionSubscription = values.options.subscribe(function (newOptions) {
                newOptions && editor.koOptions(newOptions);
            });
        }
        values.wrapper && values.wrapper.editor(editor);
        var childContext = bindingContext.createChildContext(editor);
        var child = document.createElement('div'), $element = $element.append(child);
        ko.renderTemplate(templateName, childContext, {}, child, 'replaceNode');
        var callback = function () {
            editor.dispose();
            editor = null;
            values.wrapper && values.wrapper.editor(null);
            optionSubscription && optionSubscription.dispose();
        };
        _internal_1.addDisposeCallback(element, callback);
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 222 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.ui.dxTextArea };

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var formatstringeditor_1 = __webpack_require__(143);
var _internal_1 = __webpack_require__(4);
var templateUtils_1 = __webpack_require__(13);
ko.bindingHandlers['dxFormatEditor'] = {
    init: function (element, valueAccessor) {
        $(element).children().remove();
        $(element).addClass('dx-popup-general');
        var templateHtml = templateUtils_1.getTemplate('dx-format-string'), $element = $(element).append(templateHtml), values = valueAccessor();
        var formatEditor = new formatstringeditor_1.FormatStringEditor(values.value, values['disabled'], values['standardPatterns'], values['customPatterns'], values['actions'], values['rtl'], values['popupContainer']);
        ko.applyBindings(formatEditor, $element.children()[0]);
        _internal_1.addDisposeCallback(element, function () {
            formatEditor.dispose();
        });
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorsInfo_1 = __webpack_require__(17);
var guideditor_1 = __webpack_require__(139);
var _requiredNullableEditor_1 = __webpack_require__(137);
var propertygrid_1 = __webpack_require__(21);
var fieldListEditor_1 = __webpack_require__(84);
var dataMemberEditor_1 = __webpack_require__(145);
var colorPickerEditor_1 = __webpack_require__(144);
function registerDesignerEditors() {
    editorsInfo_1.editorTemplates.registerEditors({
        guid: { header: 'dxrd-guid', editorType: guideditor_1.GuidEditor },
        date: { header: 'dx-date', editorType: _requiredNullableEditor_1.RequiredNullableEditor },
        borders: { header: 'dxrd-borders' },
        textAlignment: { header: 'dxrd-textalignment' },
        objecteditorCustom: { custom: 'dxrd-objectEditorContent', editorType: propertygrid_1.PropertyGridEditor },
        field: { header: 'dxrd-field', editorType: fieldListEditor_1.FieldListEditor },
        dataMember: { header: 'dxrd-field', editorType: dataMemberEditor_1.DataMemberEditor },
        filterEditor: { header: 'dxrd-filterstring' },
        formatEditor: { header: 'dxrd-formatstring' },
        expressionEditor: { header: 'dxrd-expressionstring' },
        customColorEditor: { header: 'dxrd-colorpicker', editorType: colorPickerEditor_1.ColorPickerEditor },
        sbyte: _requiredNullableEditor_1.createNumericEditor('System.SByte', 'integer'),
        decimal: _requiredNullableEditor_1.createNumericEditor('System.Decimal', 'float'),
        int64: _requiredNullableEditor_1.createNumericEditor('System.Int64', 'integer'),
        int32: _requiredNullableEditor_1.createNumericEditor('System.Int32', 'integer'),
        int16: _requiredNullableEditor_1.createNumericEditor('System.Int16', 'integer'),
        single: _requiredNullableEditor_1.createNumericEditor('System.Single', 'float'),
        double: _requiredNullableEditor_1.createNumericEditor('System.Double', 'float'),
        byte: _requiredNullableEditor_1.createNumericEditor('System.Byte', 'integer'),
        uint16: _requiredNullableEditor_1.createNumericEditor('System.UInt16', 'integer'),
        uint32: _requiredNullableEditor_1.createNumericEditor('System.UInt32', 'integer'),
        uint64: _requiredNullableEditor_1.createNumericEditor('System.UInt64', 'integer')
    });
}
exports.registerDesignerEditors = registerDesignerEditors;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorsInfo_1 = __webpack_require__(17);
var editor_1 = __webpack_require__(140);
var propertygrid_1 = __webpack_require__(21);
function registerBaseEditors() {
    editorsInfo_1.editorTemplates.registerEditors({
        'bool': { header: 'dx-boolean' },
        'boolSelect': { header: 'dx-boolean-select' },
        'numeric': { header: 'dx-numeric' },
        'modificators': { custom: 'dx-modificators' },
        'combobox': { header: 'dx-combobox' },
        'comboboxEditable': { header: 'dx-combobox-editable' },
        'text': { header: 'dx-text' },
        'image': { header: 'dx-image' },
        'file': { header: 'dx-file' },
        'commonCollection': { custom: 'dx-commonCollection' },
        'stringArray': { header: 'dx-emptyHeader', content: 'dx-string-array' },
        'font': { header: 'dx-emptyHeader', content: 'dx-objectEditorContent', editorType: editor_1.FontEditor },
        'objecteditor': { header: 'dx-emptyHeader', content: 'dx-objectEditorContent', editorType: propertygrid_1.PropertyGridEditor },
        'inplaceObjectEditor': { custom: 'dx-objectEditorContent', editorType: propertygrid_1.PropertyGridEditorFlat }
    });
}
exports.registerBaseEditors = registerBaseEditors;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(141);
__export(__webpack_require__(141));


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(18);
__webpack_require__(56);
__webpack_require__(131);
__webpack_require__(132);
__webpack_require__(41);
__webpack_require__(133);
__webpack_require__(130);
__webpack_require__(134);
__webpack_require__(128);
__webpack_require__(83);
__webpack_require__(129);
__webpack_require__(26);
__export(__webpack_require__(18));
__export(__webpack_require__(56));
__export(__webpack_require__(131));
__export(__webpack_require__(132));
__export(__webpack_require__(41));
__export(__webpack_require__(133));
__export(__webpack_require__(130));
__export(__webpack_require__(134));
__export(__webpack_require__(128));
__export(__webpack_require__(83));
__export(__webpack_require__(129));
__export(__webpack_require__(26));


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(86);
__webpack_require__(6);
__webpack_require__(15);
__webpack_require__(43);
__webpack_require__(11);
__webpack_require__(36);
__webpack_require__(23);
__webpack_require__(10);
__webpack_require__(44);
__webpack_require__(16);
__webpack_require__(14);
__webpack_require__(35);
__webpack_require__(61);
__webpack_require__(29);
__webpack_require__(12);
__export(__webpack_require__(86));
__export(__webpack_require__(6));
__export(__webpack_require__(15));
__export(__webpack_require__(43));
__export(__webpack_require__(11));
__export(__webpack_require__(36));
__export(__webpack_require__(23));
__export(__webpack_require__(10));
__export(__webpack_require__(44));
__export(__webpack_require__(16));
__export(__webpack_require__(14));
__export(__webpack_require__(35));
__export(__webpack_require__(61));
__export(__webpack_require__(29));
__export(__webpack_require__(12));


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(28);
__export(__webpack_require__(28));


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(122);
__export(__webpack_require__(122));


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(50);
__webpack_require__(180);
__webpack_require__(117);
__webpack_require__(181);
__webpack_require__(99);
__webpack_require__(78);
__webpack_require__(182);
__webpack_require__(47);
__export(__webpack_require__(50));
__export(__webpack_require__(180));
__export(__webpack_require__(117));
__export(__webpack_require__(181));
__export(__webpack_require__(99));
__export(__webpack_require__(78));
__export(__webpack_require__(182));
__export(__webpack_require__(47));


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(75);
__export(__webpack_require__(75));


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(111);
__export(__webpack_require__(111));


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(183);
__export(__webpack_require__(183));


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(146);
__webpack_require__(184);
__webpack_require__(236);


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(0);
var $ = __webpack_require__(1);
var _utils_1 = __webpack_require__(22);
var _internal_1 = __webpack_require__(4);
var ace_1 = __webpack_require__(147);
var _ace_available_1 = __webpack_require__(53);
var ext_language_tools_1 = __webpack_require__(237);
var mode_sql_1 = __webpack_require__(238);
var mode_text_1 = __webpack_require__(239);
var mode_json_1 = __webpack_require__(240);
var theme_ambiance_1 = __webpack_require__(241);
var theme_dreamweaver_1 = __webpack_require__(242);
_ace_available_1.aceAvailable(!!ace_1.default);
if (!window['ace'] && _ace_available_1.aceAvailable()) {
    ace_1.default.config.setModuleUrl('ace/ext/language_tools', ext_language_tools_1.default);
    ace_1.default.config.setModuleUrl('ace/mode/sql', mode_sql_1.default);
    ace_1.default.config.setModuleUrl('ace/mode/text', mode_text_1.default);
    ace_1.default.config.setModuleUrl('ace/mode/json', mode_json_1.default);
    ace_1.default.config.setModuleUrl('ace/theme/ambiance', theme_ambiance_1.default);
    ace_1.default.config.setModuleUrl('ace/theme/dreamweaver', theme_dreamweaver_1.default);
}
__webpack_require__(146);
__webpack_require__(184);
ko.bindingHandlers['dxAceEditor'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var values = valueAccessor(), text = values.value, editorContainer = values.editorContainer, editor, shouldProcessOnChangeEvent = true, _setEditorText = function (editorInstance, text) {
            shouldProcessOnChangeEvent = false;
            editorInstance.getSession().setValue((text && text.toString()) || '');
            editorInstance.clearSelection();
            editorInstance.getSession().getUndoManager().reset();
            shouldProcessOnChangeEvent = true;
        };
        if (ace_1.default) {
            var showGutter = values.options.showGutter != undefined ? values.options.showGutter : true;
            var additionalOptions = values.additionalOptions;
            var langTools = ace_1.default.require('ace/ext/language_tools');
            editor = ace_1.default.edit(element);
            var guid = ko.observable(null);
            var theme = values.theme;
            if (!theme)
                theme = _utils_1.isDarkTheme() ? 'ace/theme/ambiance' : 'ace/theme/dreamweaver';
            editor.setTheme(theme);
            editor.$blockScrolling = Infinity;
            var languageMode = viewModel.languageHelper.getLanguageMode();
            var session = editor.getSession();
            session.gutterRenderer = {
                getWidth: function (session, lastLineNumber, config) {
                    return lastLineNumber.toString().length * config.characterWidth;
                },
                getText: function (session, row) {
                    return row + 1;
                }
            };
            session.setMode(languageMode);
            var onBlur = function () { editor.completer && editor.completer.popup && editor.completer.popup.hide(); }, onChange, onFocus, onChangeAnnotation;
            if (additionalOptions) {
                if (additionalOptions.onChange) {
                    var timer = null;
                    onChange = function (e) {
                        if (timer !== null)
                            clearTimeout(timer);
                        if (shouldProcessOnChangeEvent) {
                            timer = setTimeout(function () {
                                if (text() !== session.getValue() || (session.getAnnotations() || []).some(function (x) { return x.type === 'error'; })) {
                                    additionalOptions.onChange(session);
                                }
                            }, additionalOptions && additionalOptions.changeTimeout || 1000);
                        }
                    };
                    session.on('change', onChange);
                }
                if (additionalOptions.overrideEditorFocus) {
                    editor.focus = function (a, e) {
                        editor.textInput.getElement().focus();
                    };
                }
                if (additionalOptions.onFocus) {
                    onFocus = function () { additionalOptions.onFocus(session); };
                    editor.on('focus', onFocus);
                }
                if (additionalOptions.onBlur) {
                    onBlur = function () {
                        editor.completer && editor.completer.popup && editor.completer.popup.hide();
                        return additionalOptions.onBlur(session);
                    };
                }
                if (additionalOptions.onChangeAnnotation) {
                    onChangeAnnotation = function (a, e) {
                        additionalOptions.onChangeAnnotation(e);
                    };
                    session.on('changeAnnotation', onChangeAnnotation);
                }
            }
            editor.on('blur', onBlur);
            var completers = viewModel.languageHelper.createCompleters(editor, bindingContext, viewModel);
            langTools.setCompleters(completers);
            editor.setOptions(values.options);
            if (additionalOptions && 'setUseWrapMode' in additionalOptions) {
                editor.getSession().setUseWrapMode(additionalOptions.setUseWrapMode);
            }
            if (!showGutter) {
                editor.renderer.setShowGutter(showGutter);
            }
            if (editor.renderer.$gutter) {
                var gutterClassName = editor.renderer.$gutter.className + ' dxd-border-primary dxd-text-primary dxd-back-primary';
                editor.renderer.$gutter.className = gutterClassName;
            }
            var oldMouseMove = editor._defaultHandlers.guttermousemove;
            editor._defaultHandlers.guttermousemove = function (e) {
                var rect = element.getBoundingClientRect();
                e.x = e.x - rect.left;
                e.y = e.y - rect.top;
                oldMouseMove(e);
            };
            if (ko.isSubscribable(text)) {
                var subscription = text.subscribe(function (newText) {
                    if (newText !== session.getValue()) {
                        _setEditorText(editor, newText);
                    }
                    if (additionalOptions && additionalOptions.onValueChange)
                        additionalOptions.onValueChange(editor);
                });
            }
            _setEditorText(editor, ko.unwrap(text));
            if (values.callbacks)
                values.callbacks.focus = function () {
                    setTimeout(function () {
                        editor.textInput.getElement().focus();
                    }, 10);
                };
            _internal_1.addDisposeCallback(element, function () {
                editor.completers && editor.completers.splice(0);
                editor._defaultHandlers.guttermousemove = oldMouseMove;
                subscription.dispose();
                if (values.callbacks)
                    values.callbacks.focus = $.noop;
                completers.forEach(function (x) { return x.dispose && x.dispose(); });
                onBlur && editor.off('blur', onBlur);
                onFocus && editor.off('focus', onFocus);
                onChange && session.off('change', onChange);
                onChangeAnnotation && session.off('changeAnnotation', onChangeAnnotation);
                editor.destroy();
            });
        }
        if (ko.isObservable(editorContainer)) {
            editorContainer(editor);
        }
    }
};


/***/ }),
/* 237 */
/***/ (function(module, exports) {

module.exports = { default: '' };

/***/ }),
/* 238 */
/***/ (function(module, exports) {

module.exports = { default: "/mode-sql" };

/***/ }),
/* 239 */
/***/ (function(module, exports) {

module.exports = { default: "/mode-text" };

/***/ }),
/* 240 */
/***/ (function(module, exports) {

module.exports = { default: "/mode-json" };

/***/ }),
/* 241 */
/***/ (function(module, exports) {

module.exports = { default: "/theme-ambiance" };

/***/ }),
/* 242 */
/***/ (function(module, exports) {

module.exports = { default: "/theme-dreamweaver"  };

/***/ })
/******/ ]);
/**
* DevExpress Analytics (dist\js\dx-querybuilder.js)
* Version:  21.2.8-build-22150-1702
* Build date: May 30, 2022
* Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 174);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Internal;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Utils;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = ko;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = jQuery;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Elements;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DataSourceWizardPageId = {
    ChooseDataSourceTypePage: 'chooseDataSourceTypePage',
    ConfigureMasterDetailRelationshipsPage: 'configureMasterDetailRelationshipsPage'
};
exports.SqlDataSourceWizardPageId = {
    ChooseConnectionPage: 'chooseSqlConnectionPage',
    ConfigureQueryPage: 'configureSqlQueryPage',
    ConfigureParametersPage: 'configureSqlParametersPage',
    MultiQueryConfigurePage: 'multiSqlQueryConfigurePage',
    MultiQueryConfigureParametersPage: 'multiSqlQueryConfigureParametersPage'
};
exports.JsonDataSourceWizardPageId = {
    ChooseJsonSourcePage: 'chooseJsonSourcePage',
    ChooseJsonSchemaPage: 'chooseJsonSchemaPage',
    ChooseConnectionPage: 'chooseJsonConnectionPage',
    SpecifyJsonConnectionPage: 'specifyJsonConnectionPage'
};
exports.ObjectDataSourceWizardPageId = {
    ChooseTypesPage: 'chooseObjectDataSourceTypesPage',
    ChooseDataMembersPage: 'chooseObjectDataSourceDataMembersPage',
    ConfigureParametersPage: 'configureObjectDataSourceParametersPage'
};
exports.FullscreenDataSourceWizardPageId = {
    ChooseDataSourceTypePage: exports.DataSourceWizardPageId.ChooseDataSourceTypePage,
    SpecifySqlDataSourceSettingsPage: 'specifySqlDataSourceSettingsPage',
    SpecifyJsonDataSourceSettingsPage: 'specifyJsonDataSourceSettingsPage',
    SpecifyObjectDataSourceSettingsPage: 'specifyObjectDataSourceSettingsPage'
};
exports.FullscreenDataSourceWizardSectionId = {
    SpecifyJsonConnectionPage: exports.JsonDataSourceWizardPageId.SpecifyJsonConnectionPage,
    ChooseJsonSchemaPage: exports.JsonDataSourceWizardPageId.ChooseJsonSchemaPage,
    ChooseJsonSourcePage: exports.JsonDataSourceWizardPageId.ChooseJsonSourcePage,
    ChooseSqlConnectionPage: exports.SqlDataSourceWizardPageId.ChooseConnectionPage,
    ConfigureQueryPage: exports.SqlDataSourceWizardPageId.MultiQueryConfigurePage,
    ConfigureQueryParametersPage: exports.SqlDataSourceWizardPageId.MultiQueryConfigureParametersPage,
    ConfigureMasterDetailRelationshipsPage: exports.DataSourceWizardPageId.ConfigureMasterDetailRelationshipsPage
};


/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Widgets;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var utils_1 = __webpack_require__(1);
var WizardPageBase = (function (_super) {
    __extends(WizardPageBase, _super);
    function WizardPageBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.changeAlways = false;
        _this._onChange = function () { return void 0; };
        return _this;
    }
    WizardPageBase.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this._onChange = function () { return void 0; };
    };
    WizardPageBase.prototype.commit = function () {
        return $.Deferred().resolve().promise();
    };
    WizardPageBase.prototype.onChange = function (callback) {
        this._onChange = callback;
    };
    WizardPageBase.prototype.initialize = function (state, stateChanged) {
        return $.Deferred().resolve().promise();
    };
    WizardPageBase.prototype.canNext = function () {
        return true;
    };
    WizardPageBase.prototype.canFinish = function () {
        return false;
    };
    return WizardPageBase;
}(utils_1.Disposable));
exports.WizardPageBase = WizardPageBase;
var _WrappedWizardPage = (function (_super) {
    __extends(_WrappedWizardPage, _super);
    function _WrappedWizardPage(pageId, page, template, description) {
        var _this = _super.call(this) || this;
        _this.pageId = pageId;
        _this.page = page;
        _this.template = template;
        _this.description = description;
        _this._isInitialized = false;
        _this._initDef = null;
        _this.isChanged = true;
        if (page.onChange) {
            _this.onChange = function (callback) { return page.onChange(callback); };
        }
        return _this;
    }
    _WrappedWizardPage.prototype.dispose = function () {
        this.onChange = null;
        this[wizard_1.BaseWizard.__loadingStateFunctionName] = null;
        this.page.dispose();
        this._initDef && this._initDef.reject();
        this._initDef = null;
    };
    _WrappedWizardPage.prototype.resetCommitedState = function () {
        this._lastCommitedState = null;
    };
    _WrappedWizardPage.prototype.commit = function () {
        var _this = this;
        return this.page.commit().done(function (result) {
            _this.isChanged = JSON.stringify(_this._lastCommitedState) !== JSON.stringify(result);
            _this._lastCommitedState = result;
        });
    };
    _WrappedWizardPage.prototype.initialize = function (state, force, stateChanged) {
        var _this = this;
        if (force === void 0) { force = false; }
        if (stateChanged === void 0) { stateChanged = false; }
        this._initDef && this._initDef.reject();
        this._initDef = $.Deferred();
        if (!this._isInitialized || force) {
            this._isInitialized = true;
            this.page.initialize(state, stateChanged).fail(function () {
                _this._isInitialized = false;
                _this._initDef && _this._initDef.reject();
            }).done(function (result) {
                _this._initDef && _this._initDef.resolve(result);
            });
        }
        else {
            this._initDef.resolve();
        }
        return this._initDef.promise();
    };
    return _WrappedWizardPage;
}(utils_1.Disposable));
exports._WrappedWizardPage = _WrappedWizardPage;
var wizard_1 = __webpack_require__(14);


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(0);
var initializer_1 = __webpack_require__(70);
var serializer_1 = __webpack_require__(1);
var _requestwrapper_1 = __webpack_require__(16);
var RequestWrapper = (function () {
    function RequestWrapper() {
    }
    RequestWrapper.prototype.sendRequest = function (action, arg) {
        return _utils_1.ajax(initializer_1.HandlerUri(), action, arg);
    };
    RequestWrapper.prototype._sendRequest = function (settings) {
        return _utils_1.ajax(settings);
    };
    RequestWrapper.prototype.getDbSchema = function (connection, tables) {
        var requestModel = {
            connectionJSON: _requestwrapper_1.serializeDataConnection(connection),
            tables: null,
            views: null
        };
        if (tables && tables.length > 0) {
            requestModel.tables = (tables || []).filter(function (x) { return !x.isView; }).map(function (x) { return x.name; });
            requestModel.views = (tables || []).filter(function (x) { return x.isView; }).map(function (x) { return x.name; });
        }
        return this.sendRequest('getDBSchema', encodeURIComponent(JSON.stringify(requestModel)));
    };
    RequestWrapper.prototype.getDbStoredProcedures = function (connection) {
        var requestJson = JSON.stringify({
            connectionJSON: _requestwrapper_1.serializeDataConnection(connection)
        });
        return this.sendRequest('getDBStoredProcedures', encodeURIComponent(requestJson));
    };
    RequestWrapper.prototype.getSelectStatement = function (connection, queryJSON) {
        var requestJson = JSON.stringify({
            connectionJSON: _requestwrapper_1.serializeDataConnection(connection),
            sqlQueryJSON: queryJSON
        });
        return this.sendRequest('getSelectStatement', encodeURIComponent(requestJson));
    };
    RequestWrapper.prototype.getDataPreview = function (connection, queryJSON) {
        var requestJson = JSON.stringify({
            connectionJSON: _requestwrapper_1.serializeDataConnection(connection),
            sqlQueryJSON: queryJSON
        });
        return this.sendRequest('getDataPreview', encodeURIComponent(requestJson));
    };
    RequestWrapper.prototype.rebuildResultSchema = function (dataSource, queryName, relationsEditing) {
        if (relationsEditing === void 0) { relationsEditing = false; }
        var requestJson = JSON.stringify({
            sqlDataSourceJSON: JSON.stringify({ 'SqlDataSource': new serializer_1.ModelSerializer().serialize(dataSource) }),
            queryName: queryName,
            relationsEditing: relationsEditing
        });
        return this.sendRequest('rebuildResultSchema', encodeURIComponent(requestJson));
    };
    RequestWrapper.prototype.validateJsonUri = function (jsonDataSource) {
        var uriJsonSourceJSON = JSON.stringify(jsonDataSource.source.serialize(true));
        var requestJson = JSON.stringify({
            uriJsonSourceJSON: uriJsonSourceJSON
        });
        var ajaxSettings = {
            uri: initializer_1.HandlerUri(),
            action: 'validateJsonEndPoint',
            arg: encodeURIComponent(requestJson),
            ignoreError: function () { return true; }
        };
        return this._sendRequest(ajaxSettings);
    };
    RequestWrapper.prototype.saveJsonSource = function (connectionName, jsonDataSource) {
        var jsonSource = jsonDataSource.source;
        var jsonSourceJSON = JSON.stringify(jsonSource.serialize(true));
        var requestString = JSON.stringify({
            connectionName: connectionName,
            customJson: jsonSource.json(),
            uriJsonSourceJSON: jsonSourceJSON
        });
        return this.sendRequest('saveJsonSource', encodeURIComponent(requestString));
    };
    RequestWrapper.prototype.getJsonSchema = function (jsonDataSource, parameters) {
        var jsonSource = jsonDataSource.source;
        var jsonSourceJSON = JSON.stringify(jsonSource.serialize(true));
        var requestString = JSON.stringify({
            connectionName: jsonDataSource.connectionName(),
            customJson: jsonSource.json(),
            uriJsonSourceJSON: jsonSourceJSON,
            parameters: parameters
        });
        return this.sendRequest('getJsonSchema', encodeURIComponent(requestString));
    };
    RequestWrapper.prototype.getObjectTypeDescriptions = function (context) {
        return this.sendRequest('getObjectSchema', context);
    };
    return RequestWrapper;
}());
exports.RequestWrapper = RequestWrapper;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SqlQueryType = {
    customSqlQuery: 'CustomSqlQuery',
    tableQuery: 'SelectQuery',
    storedProcQuery: 'StoredProcQuery'
};
exports.JsonSourceType = {
    fileJsonSource: 'FileJsonSource',
    customJsonSource: 'CustomJsonSource',
    uriJsonSource: 'UriJsonSource'
};


/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Widgets.Internal;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var _utils_1 = __webpack_require__(0);
var _utils_2 = __webpack_require__(0);
var dbColumn_1 = __webpack_require__(18);
var _localization_1 = __webpack_require__(0);
var utils_1 = __webpack_require__(1);
var _editorTypeMapper_1 = __webpack_require__(0);
var dataSourceParameterMeta_1 = __webpack_require__(33);
var expressionFunctions_1 = __webpack_require__(111);
var serializer_1 = __webpack_require__(1);
var _utils_3 = __webpack_require__(0);
function integerValueConverter(val, defaultVal, type) {
    return _utils_1.integerValueConverter(val, defaultVal, type);
}
function floatValueConverter(val, defaultVal, type) {
    return _utils_1.floatValueConverter(val, defaultVal, type);
}
function expressionValueConverter(val) {
    if (val instanceof Date) {
        var prependZero = function (x) { return (x < 10 ? '0' : '') + x; };
        return _utils_2.formatUnicorn('#{0}/{1}/{2} {3}:{4}#', prependZero(val.getMonth() + 1), prependZero(val.getDate()), val.getFullYear(), prependZero(val.getHours()), prependZero(val.getMinutes()));
    }
    return (val || '').toString();
}
var DataSourceParameterTypeValue = (function () {
    function DataSourceParameterTypeValue(name, defaultValue, _valueConverter, realTypeName) {
        var _this = this;
        this.name = name;
        this.defaultValue = defaultValue;
        this.realTypeName = realTypeName;
        if (_valueConverter)
            this.valueConverter = function (val) { return _valueConverter(val, defaultValue, _this.name); };
    }
    Object.defineProperty(DataSourceParameterTypeValue.prototype, "specifics", {
        get: function () {
            return dbColumn_1.DBColumn.GetSpecific(this.realTypeName || this.name);
        },
        enumerable: true,
        configurable: true
    });
    return DataSourceParameterTypeValue;
}());
var tryParseDate = function (val) {
    var date;
    try {
        date = _localization_1.parseDate(val);
    }
    catch (e) {
        date = dateDefaultValue();
    }
    return date;
};
var dateDefaultValue = function () {
    var date = new Date();
    date.setHours(0, 0, 0, 0);
    return date;
};
var DataSourceParameter = (function (_super) {
    __extends(DataSourceParameter, _super);
    function DataSourceParameter(model, serializer, _serializationsInfo) {
        if (_serializationsInfo === void 0) { _serializationsInfo = dataSourceParameterMeta_1.dsParameterSerializationInfo; }
        var _this = _super.call(this) || this;
        _this._serializationsInfo = _serializationsInfo;
        _this._valueInfo = ko.observable(dataSourceParameterMeta_1.parameterValueSerializationsInfo);
        _this._parametersFunctions = expressionFunctions_1.expressionFunctions;
        _this.isValid = ko.observable(true);
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(_this, _utils_3.extend(model, { '@ItemType': 'Parameter' }));
        _this.name = ko.pureComputed({
            read: function () { return _this._name(); },
            write: function (value) { if (DataSourceParameter.validateName(value))
                _this._name(value); }
        });
        _this._expressionValue = ko.observable({
            value: _this._value,
            functions: _this._parametersFunctions
        });
        _this._disposables.push(_this.type.subscribe(function (val) {
            if (_editorTypeMapper_1.IsDataAccessExpression(val)) {
                _this.resultType(_this._previousResultType);
            }
            else {
                _this.resultType(null);
                _this._previousResultType = val;
            }
            _this._updateValueInfo(val);
        }));
        _this._previousResultType = (_editorTypeMapper_1.IsDataAccessExpression(_this.type.peek()))
            ? _this.resultType()
            : _this.type();
        _this.value = ko.pureComputed({
            read: function () {
                return _editorTypeMapper_1.IsDataAccessExpression(_this.type()) ? _this._expressionValue() : _this._value();
            },
            write: function (val) {
                _this._value(val);
            }
        });
        _this._updateValueInfo(_this.type.peek());
        return _this;
    }
    DataSourceParameter._getTypeValue = function (typeName, resultType) {
        if (resultType === void 0) { resultType = null; }
        var result = DataSourceParameter._typeValues.filter(function (type) { return type.name === typeName; });
        if (result.length > 0) {
            if (resultType && _editorTypeMapper_1.IsDataAccessExpression(typeName))
                result[0].realTypeName = resultType;
            return result[0];
        }
        return { name: typeName, defaultValue: null, specifics: 'String', disableEditor: true };
    };
    DataSourceParameter.prototype._getTypeValue = function (typeName) {
        return DataSourceParameter._getTypeValue(typeName, this.resultType());
    };
    DataSourceParameter.prototype._tryConvertValue = function (value, typeValue) {
        if (!DataSourceParameter._isValueValid(value))
            return typeValue.defaultValue;
        var converter = typeValue.valueConverter || (function (val) { return val; }), newValue = converter(value);
        return DataSourceParameter._isValueValid(newValue) ? newValue : typeValue.defaultValue;
    };
    DataSourceParameter._isValueValid = function (value) {
        return value !== void 0 && value !== null && !isNaN(typeof value === 'string' ? '' : value);
    };
    DataSourceParameter.prototype.getEditorType = function (type) {
        return _editorTypeMapper_1.getEditorType(type);
    };
    DataSourceParameter.prototype._updateValueInfo = function (newType) {
        var _this = this;
        var typeValue = this._getTypeValue(newType);
        var newValue = this._tryConvertValue(this._value(), typeValue);
        var expressionOptions = this._expressionValue.peek();
        this._expressionValue(null);
        this._value(null);
        this._valueInfo(_utils_3.extend({}, dataSourceParameterMeta_1.parameterValueSerializationsInfo, {
            editor: this.getEditorType(typeValue.name),
            disabled: typeValue.disableEditor === true,
            editorOptions: {
                onFocusOut: function (params) {
                    _this.isValid(params.component.option('isValid'));
                }
            }
        }));
        this._expressionValue(expressionOptions);
        this._value(newValue);
    };
    Object.defineProperty(DataSourceParameter.prototype, "specifics", {
        get: function () {
            var realTypeName = (_editorTypeMapper_1.IsDataAccessExpression(this.type.peek()))
                ? this.resultType()
                : this.type();
            var result = DataSourceParameter._typeValues.filter(function (type) { return type.name === realTypeName; });
            if (result.length > 0)
                return result[0].specifics;
            return 'string';
        },
        enumerable: true,
        configurable: true
    });
    DataSourceParameter.validateName = function (nameCandidate) {
        return nameCandidate && !nameCandidate.match(/[~`!"№;%\^:\?*\(\)&\-\+={}\[\]\|\\\/,\.<>'\s]/);
    };
    DataSourceParameter.prototype.getInfo = function () {
        if (this.type) {
            var info = _utils_3.extend(true, [], this._serializationsInfo);
            info.splice(info.indexOf(info.filter(function (prop) { return prop.propertyName === 'value'; })[0]), 1, this._valueInfo());
            return info;
        }
        return this._serializationsInfo;
    };
    DataSourceParameter.prototype.isPropertyVisible = function (propName) {
        if (propName === 'resultType')
            return _editorTypeMapper_1.IsDataAccessExpression(this.type());
        return true;
    };
    DataSourceParameter._typeValues = [
        new DataSourceParameterTypeValue('System.DateTime', dateDefaultValue(), tryParseDate),
        new DataSourceParameterTypeValue('System.String', ''),
        new DataSourceParameterTypeValue('System.SByte', '0', integerValueConverter),
        new DataSourceParameterTypeValue('System.Int16', '0', integerValueConverter),
        new DataSourceParameterTypeValue('System.Int32', '0', integerValueConverter),
        new DataSourceParameterTypeValue('System.Int64', '0', integerValueConverter),
        new DataSourceParameterTypeValue('System.Byte', '0', integerValueConverter),
        new DataSourceParameterTypeValue('System.UInt16', '0', integerValueConverter),
        new DataSourceParameterTypeValue('System.UInt32', '0', integerValueConverter),
        new DataSourceParameterTypeValue('System.UInt64', '0', integerValueConverter),
        new DataSourceParameterTypeValue('System.Decimal', '0', floatValueConverter),
        new DataSourceParameterTypeValue('System.Double', '0', floatValueConverter),
        new DataSourceParameterTypeValue('System.Single', '0', floatValueConverter),
        new DataSourceParameterTypeValue('System.Boolean', false, function (val) { return val !== void 0 ? String(val).toLowerCase() === 'true' : val; }),
        new DataSourceParameterTypeValue('System.Guid', '00000000-0000-0000-0000-000000000000'),
        new DataSourceParameterTypeValue(_editorTypeMapper_1.ExpressionType, '', expressionValueConverter),
        new DataSourceParameterTypeValue('System.Char', ''),
    ];
    return DataSourceParameter;
}(utils_1.Disposable));
exports.DataSourceParameter = DataSourceParameter;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var chooseDataSourceTypePage_1 = __webpack_require__(36);
var configureQueryPage_1 = __webpack_require__(24);
var serializer_1 = __webpack_require__(1);
var masterDetailRelation_1 = __webpack_require__(51);
var _utils_1 = __webpack_require__(0);
var jsonDataSource_1 = __webpack_require__(50);
var objectDataSource_1 = __webpack_require__(23);
var _defaultRestoreSqlDataSourceFromState = function (state, requestWrapper, dataSourceId) {
    var _a, _b;
    var wrapper = new configureQueryPage_1._SqlDataSourceWrapper(state.sqlDataSourceJSON, state.queryName, requestWrapper);
    state.name && wrapper.sqlDataSource.connection.name(state.name);
    var serializer = new serializer_1.ModelSerializer();
    if (state.customQueries && state.customQueries.length > 0) {
        wrapper.customQueries = state.customQueries.map(function (query) {
            return wrapper.sqlDataSource.createQuery(JSON.parse(query), serializer);
        });
        (_a = wrapper.sqlDataSource.queries).push.apply(_a, wrapper.customQueries);
    }
    if (state.relations && state.relations.length > 0) {
        (_b = wrapper.sqlDataSource.relations).push.apply(_b, state.relations.map(function (relation) {
            return new masterDetailRelation_1.MasterDetailRelation(JSON.parse(relation), serializer);
        }));
    }
    wrapper.sqlDataSource.id = dataSourceId || _utils_1.guid().replace(/-/g, '');
    return wrapper;
};
exports._restoreSqlDataSourceFromState = _defaultRestoreSqlDataSourceFromState;
exports._setRestoreSqlDataSourceFromState = function (func) { return exports._restoreSqlDataSourceFromState = func; };
exports._resetRestoreSqlDataSourceFromState = function () { return exports._restoreSqlDataSourceFromState = _defaultRestoreSqlDataSourceFromState; };
var _defaultRestoreJsonDataSourceFromState = function (state, requestWrapper, dataSourceId) {
    var jsonDataSource = new jsonDataSource_1.JsonDataSource({
        'Source': state.jsonSource && JSON.parse(state.jsonSource) || {},
        'Schema': state.jsonScheme && JSON.parse(state.jsonScheme) || {},
        '@RootElement': state.rootElement || ''
    }, undefined, requestWrapper);
    state.connectionName && jsonDataSource.connectionName(state.connectionName);
    state.dataSourceName && jsonDataSource.name(state.dataSourceName);
    jsonDataSource.id = dataSourceId || _utils_1.guid().replace(/-/g, '');
    return jsonDataSource;
};
exports._restoreJsonDataSourceFromState = _defaultRestoreJsonDataSourceFromState;
function _setRestoreJsonDataSourceFromState(func) { exports._restoreJsonDataSourceFromState = func; }
exports._setRestoreJsonDataSourceFromState = _setRestoreJsonDataSourceFromState;
function _resetRestoreJsonDataSourceFromState() { exports._restoreJsonDataSourceFromState = _defaultRestoreJsonDataSourceFromState; }
exports._resetRestoreJsonDataSourceFromState = _resetRestoreJsonDataSourceFromState;
function _restoreObjectDataSourceFromState(state, requestWrapper, dataSourceId) {
    var objectDataSource = new objectDataSource_1.ObjectDataSource();
    objectDataSource.setState(state);
    if (dataSourceId)
        objectDataSource.id = dataSourceId;
    return objectDataSource;
}
exports._restoreObjectDataSourceFromState = _restoreObjectDataSourceFromState;
function _createDefaultDataSourceWizardState(sqlDataSourceWizardState, jsonDataSourceWizardState, objectDataSourceWizardState) {
    if (sqlDataSourceWizardState === void 0) { sqlDataSourceWizardState = {}; }
    if (jsonDataSourceWizardState === void 0) { jsonDataSourceWizardState = { jsonSource: '' }; }
    if (objectDataSourceWizardState === void 0) { objectDataSourceWizardState = {}; }
    return {
        dataSourceType: chooseDataSourceTypePage_1.DataSourceType.Sql,
        jsonDataSourceWizard: jsonDataSourceWizardState,
        sqlDataSourceWizard: sqlDataSourceWizardState,
        objectDataSourceWizard: objectDataSourceWizardState,
        dataSourceId: _utils_1.guid().replace(/-/g, '')
    };
}
exports._createDefaultDataSourceWizardState = _createDefaultDataSourceWizardState;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var _treelistItem_1 = __webpack_require__(10);
var fullscreenWizardPage_1 = __webpack_require__(38);
var CustomQueryTreeListItem = (function (_super) {
    __extends(CustomQueryTreeListItem, _super);
    function CustomQueryTreeListItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.queryName = ko.computed({
            read: function () { return _this.data && _this.data.name; },
            write: function (newVal) {
                if (_this.data && _this.data.name !== newVal) {
                    _this.data.name = newVal;
                    _this.data['_afterCheckToggled'] && _this.data['_afterCheckToggled'](_this.data);
                }
            }
        });
        _this.editingMode = ko.observable(false);
        return _this;
    }
    CustomQueryTreeListItem.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.queryName.dispose();
    };
    CustomQueryTreeListItem.prototype._getTemplateName = function () {
        return this._getCustomizedTemplateName(true);
    };
    CustomQueryTreeListItem.prototype._getCustomizedTemplateName = function (isEditable) {
        return isEditable ? 'dxd-custom-query-treelisitem' : _super.prototype._getTemplateName.call(this);
    };
    return CustomQueryTreeListItem;
}(_treelistItem_1.TreeListItemViewModel));
exports.CustomQueryTreeListItem = CustomQueryTreeListItem;
var MultiQueryTreeListItemFactory = (function (_super) {
    __extends(MultiQueryTreeListItemFactory, _super);
    function MultiQueryTreeListItemFactory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MultiQueryTreeListItemFactory.prototype.createItem = function (options, path, onItemsVisibilityChanged, rtl, resolver) {
        if (path[0] === 'queries') {
            return new CustomQueryTreeListItem(options, path, onItemsVisibilityChanged, rtl, resolver);
        }
        return _super.prototype.createItem.call(this, options, path, onItemsVisibilityChanged, rtl, resolver);
    };
    return MultiQueryTreeListItemFactory;
}(_treelistItem_1.DefaultTreeListItemFactory));
exports.MultiQueryTreeListItemFactory = MultiQueryTreeListItemFactory;
function getSectionStyle(position, defaultMargin, isVisible) {
    if (defaultMargin === void 0) { defaultMargin = 30; }
    if (isVisible === void 0) { isVisible = true; }
    var _clearStyle = 'inherit';
    var _defaultHalfMargin = '-' + (defaultMargin / 2) + 'px';
    var _fullSize = 100;
    var _defaultSize = _fullSize / 2;
    var _inPercent = function (size) {
        return size + '%';
    };
    if (!position) {
        return {
            top: _defaultHalfMargin,
            bottom: _defaultHalfMargin,
            left: _defaultHalfMargin,
            right: _defaultHalfMargin,
            width: _clearStyle,
            height: _clearStyle,
            display: isVisible ? 'block' : 'none'
        };
    }
    return {
        top: (position === fullscreenWizardPage_1.WizardSectionPosition.Left || position === fullscreenWizardPage_1.WizardSectionPosition.Right || position === fullscreenWizardPage_1.WizardSectionPosition.Top || position === fullscreenWizardPage_1.WizardSectionPosition.TopLeft || position === fullscreenWizardPage_1.WizardSectionPosition.TopRight) ? _defaultHalfMargin : _clearStyle,
        bottom: (position === fullscreenWizardPage_1.WizardSectionPosition.Left || position === fullscreenWizardPage_1.WizardSectionPosition.Right || position === fullscreenWizardPage_1.WizardSectionPosition.Bottom || position === fullscreenWizardPage_1.WizardSectionPosition.BottomLeft || position === fullscreenWizardPage_1.WizardSectionPosition.BottomRight) ? _defaultHalfMargin : _clearStyle,
        left: (position === fullscreenWizardPage_1.WizardSectionPosition.Top || position === fullscreenWizardPage_1.WizardSectionPosition.Bottom || position === fullscreenWizardPage_1.WizardSectionPosition.Left || position === fullscreenWizardPage_1.WizardSectionPosition.TopLeft || position === fullscreenWizardPage_1.WizardSectionPosition.BottomLeft) ? _defaultHalfMargin : _clearStyle,
        right: (position === fullscreenWizardPage_1.WizardSectionPosition.Top || position === fullscreenWizardPage_1.WizardSectionPosition.Bottom || position === fullscreenWizardPage_1.WizardSectionPosition.Right || position === fullscreenWizardPage_1.WizardSectionPosition.TopRight || position === fullscreenWizardPage_1.WizardSectionPosition.BottomRight) ? _defaultHalfMargin : _clearStyle,
        width: (position === fullscreenWizardPage_1.WizardSectionPosition.Top || position === fullscreenWizardPage_1.WizardSectionPosition.Bottom) ? _clearStyle : _inPercent(_defaultSize),
        height: (position === fullscreenWizardPage_1.WizardSectionPosition.Left || position === fullscreenWizardPage_1.WizardSectionPosition.Right) ? _clearStyle : _inPercent(_defaultSize),
        display: isVisible ? 'block' : 'none'
    };
}
exports.getSectionStyle = getSectionStyle;
function subscribeArray(array, subscribeItem, onChange) {
    array().forEach(function (item) { return subscribeItem(item, onChange); });
    return array.subscribe(function (changeSet) {
        changeSet.forEach(function (change) {
            if (change.status === 'added') {
                subscribeItem(change.value, onChange);
            }
            else if (change.status === 'deleted') {
                change.value['dispose'] && change.value['dispose']();
            }
        });
        onChange();
    }, null, 'arrayChange');
}
exports.subscribeArray = subscribeArray;
function subscribeProperties(properties, onChange) {
    var subscriptions = [];
    properties.forEach(function (property) {
        if (property && property.subscribe) {
            subscriptions.push(property.subscribe(function (val) { return onChange(val); }));
        }
    });
    return subscriptions;
}
exports.subscribeProperties = subscribeProperties;
function subscribeObject(object, subscribeProperties, onChange) {
    subscribeProperties(object(), onChange);
    return object.subscribe(function (newVal) {
        subscribeProperties(newVal, onChange);
        onChange();
    });
}
exports.subscribeObject = subscribeObject;
function _createBeforeInitializePageEventArgs(page, self) {
    return {
        page: page.page,
        pageId: page.pageId,
        wizard: self,
        state: self.stateManager.getPageState(page.pageId)
    };
}
exports._createBeforeInitializePageEventArgs = _createBeforeInitializePageEventArgs;
function _createPageEventArgs(page, self) {
    return {
        page: page.page,
        pageId: page.pageId,
        wizard: self
    };
}
exports._createPageEventArgs = _createPageEventArgs;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(1);
var stateManager_1 = __webpack_require__(76);
var pageIterator_1 = __webpack_require__(37);
var eventManager_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(13);
var BaseWizard = (function (_super) {
    __extends(BaseWizard, _super);
    function BaseWizard(pageFactory, finishCallback) {
        var _this = _super.call(this) || this;
        _this.pageFactory = pageFactory;
        _this.events = new eventManager_1.EventManager();
        _this._loadingTimeout = null;
        _this.isLoading = ko.observable(false);
        _this._currentPage = ko.observable();
        _this.isVisible = ko.observable(false);
        _this._finishCallback = finishCallback;
        _this._disposables.push(_this.events);
        return _this;
    }
    BaseWizard.prototype._createLoadingState = function (page) {
        var _this = this;
        if (!page[BaseWizard.__loadingStateFunctionName]) {
            page[BaseWizard.__loadingStateFunctionName] = function (newVal) { return _this._loadingState(newVal); };
        }
    };
    BaseWizard.prototype._createNextAction = function (page) {
        var _this = this;
        if (!page[BaseWizard.__nextActionFunctionName]) {
            page[BaseWizard.__nextActionFunctionName] = function () { return _this.nextAction(); };
        }
    };
    BaseWizard.prototype._loadingState = function (active) {
        var _this = this;
        if (active) {
            this._loadingTimeout && clearTimeout(this._loadingTimeout);
            this._loadingTimeout = setTimeout(function () {
                _this.isLoading(true);
            }, 100);
        }
        else {
            this._loadingTimeout && clearTimeout(this._loadingTimeout);
            this.isLoading(false);
        }
    };
    BaseWizard.prototype._callBeforeFinishHandler = function (state, wizardModel) {
        this.events.call('beforeFinish', { state: state });
    };
    BaseWizard.prototype._callAfterFinishHandler = function (state, result) {
        this.events.call('afterFinish', { state: state });
    };
    BaseWizard.prototype.onFinish = function () {
        this.iterator.dispose();
    };
    BaseWizard.prototype.initialize = function (state, createIterator) {
        if (state === void 0) { state = {}; }
        if (createIterator === void 0) { createIterator = function (pageFactory, stateManager) { return new pageIterator_1.PageIterator(pageFactory, stateManager); }; }
        this.events.call('beforeInitialize', { wizard: this, state: state });
        this.stateManager = new stateManager_1.StateManager(state, this.pageFactory);
        this.iterator = createIterator(this.pageFactory, this.stateManager);
        this.events.call('afterInitialize', { wizard: this });
    };
    BaseWizard.prototype.isFirstPage = function () {
        return this._currentPage() && this._currentPage().pageId == this.iterator.getNextPageId();
    };
    BaseWizard.prototype.canNext = function () {
        return !this.isLoading() && this._currentPage() && this.pageFactory.getMetadata(this._currentPage().pageId).canNext(this._currentPage().page);
    };
    BaseWizard.prototype.canFinish = function () {
        return !this.isLoading() && this._currentPage() && this.pageFactory.getMetadata(this._currentPage().pageId).canFinish(this._currentPage().page);
    };
    BaseWizard.prototype._initPage = function (page) {
        this.events.call('beforePageInitialize', _utils_1._createBeforeInitializePageEventArgs(page, this));
        this._createLoadingState(page.page);
        this._createNextAction(page.page);
        return page.initialize(this.stateManager.getPageState(page.pageId));
    };
    BaseWizard.prototype.start = function () {
        var _this = this;
        this.events.call('beforeStart', { wizard: this });
        this._loadingState(true);
        var startPage = this.iterator._getStartPage();
        this._initPage(startPage).done(function () {
            _this._currentPage(startPage);
            _this.events.call('afterPageInitialize', _utils_1._createPageEventArgs(startPage, _this));
        }).always(function () { return _this._loadingState(false); }).fail(function () {
            _this.isVisible(false);
        });
    };
    BaseWizard.prototype.canRunWizard = function () {
        return true;
    };
    BaseWizard.prototype.nextAction = function () {
        var _this = this;
        if (!this.canNext())
            return;
        var currentPage = this.iterator._getCurrentPage();
        this._loadingState(true);
        var revertPreviosPage = function () { return _this.iterator._getPreviousPage().always(function () {
            _this.iterator._resetPages();
            _this._loadingState(false);
        }); };
        currentPage.commit().done(function (result) {
            if (currentPage.isChanged)
                _this.stateManager.setPageState(currentPage.pageId, result);
            _this.iterator._getNextPage().done(function (page) {
                if (page) {
                    _this._initPage(page).done(function () {
                        _this._currentPage(page);
                        _this.events.call('afterPageInitialize', _utils_1._createPageEventArgs(page, _this));
                        _this._loadingState(false);
                    }).fail(function () { return revertPreviosPage(); });
                }
                else
                    revertPreviosPage();
            }).fail(function () { return _this._loadingState(false); });
        }).fail(function () { return _this._loadingState(false); });
    };
    BaseWizard.prototype.previousAction = function () {
        var _this = this;
        if (this.isFirstPage())
            return;
        this._loadingState(true);
        this.iterator._getPreviousPage().done(function (page) {
            if (page) {
                _this._currentPage(page);
            }
        }).always(function () { return _this._loadingState(false); });
    };
    BaseWizard.prototype.goToPage = function (pageId) {
        var _this = this;
        this._loadingState(true);
        this.iterator._goToPage(pageId).done(function (page) {
            if (page) {
                _this._currentPage(page);
            }
        }).always(function () { return _this._loadingState(false); });
    };
    BaseWizard.prototype.finishAction = function () {
        var _this = this;
        if (!this.canFinish())
            return;
        this._loadingState(true);
        var currentPage = this.iterator._getCurrentPage();
        currentPage.commit().done(function (result) {
            _this.stateManager.setPageState(currentPage.pageId, result);
            _this.iterator._resetPages();
            if (_this._finishCallback) {
                var currentState = _this.stateManager.getCurrentState();
                _this._callBeforeFinishHandler(currentState);
                _this._finishCallback(currentState)
                    .done(function (result) {
                    _this.onFinish();
                    _this._callAfterFinishHandler(currentState, result);
                    _this.isVisible(false);
                })
                    .always(function () {
                    _this._loadingState(false);
                });
            }
            else {
                _this._loadingState(false);
                _this.isVisible(false);
            }
        });
    };
    BaseWizard.__loadingStateFunctionName = '__loadingState';
    BaseWizard.__nextActionFunctionName = '__nextAction';
    return BaseWizard;
}(utils_1.Disposable));
exports.BaseWizard = BaseWizard;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var elementViewModel_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(1);
var metadata_1 = __webpack_require__(20);
var _utils_1 = __webpack_require__(0);
var DiagramElementBaseViewModel = (function (_super) {
    __extends(DiagramElementBaseViewModel, _super);
    function DiagramElementBaseViewModel(control, parent, serializer) {
        return _super.call(this, control, parent, serializer) || this;
    }
    DiagramElementBaseViewModel.prototype.getControlFactory = function () {
        return controlsFactory_1.diagramControlsFactory;
    };
    return DiagramElementBaseViewModel;
}(elementViewModel_1.ElementViewModel));
exports.DiagramElementBaseViewModel = DiagramElementBaseViewModel;
var DiagramElementViewModel = (function (_super) {
    __extends(DiagramElementViewModel, _super);
    function DiagramElementViewModel(control, parent, serializer) {
        var _this = _super.call(this, _utils_1.extend({ '@ControlType': 'DiagramElement' }, control), parent, serializer) || this;
        _this.connectingPoints = utils_1.deserializeArray(control && control.ConnectingPoints || [], function (item) { return new connectingPointModel_1.ConnectingPointViewModel(item, _this, serializer); });
        if (_this.text() === undefined) {
            _this.text(_this.name());
        }
        return _this;
    }
    return DiagramElementViewModel;
}(DiagramElementBaseViewModel));
exports.DiagramElementViewModel = DiagramElementViewModel;
exports.diagramElementSerializationInfo = [metadata_1.size, metadata_1.location, metadata_1.name, metadata_1.text, { propertyName: 'type', modelName: '@Type' }];
var connectingPointModel_1 = __webpack_require__(30);
var controlsFactory_1 = __webpack_require__(47);


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var requestwrapper_1 = __webpack_require__(8);
var serializer_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(0);
function wrapGetSelectStatement(callback) {
    return function (connection, queryJSON) {
        if (callback)
            return callback(connection, queryJSON);
        return new requestwrapper_1.RequestWrapper().getSelectStatement(connection, queryJSON);
    };
}
exports.wrapGetSelectStatement = wrapGetSelectStatement;
function wrapRebuildResultSchema(callback) {
    return function (dataSource, queryName, relationsEditing) {
        if (callback)
            return callback(dataSource, queryName, relationsEditing);
        return new requestwrapper_1.RequestWrapper().rebuildResultSchema(dataSource, queryName, relationsEditing);
    };
}
exports.wrapRebuildResultSchema = wrapRebuildResultSchema;
function serializeDataConnection(connection) {
    var serializer = new serializer_1.ModelSerializer();
    var data = { 'DataConnection': serializer.serialize(connection) };
    if (!!connection.options)
        _utils_1.extend(data, { 'ConnectionOptions': serializer.serialize(connection.options) });
    return JSON.stringify(data);
}
exports.serializeDataConnection = serializeDataConnection;


/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = { default: "" };

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DBColumnType;
(function (DBColumnType) {
    DBColumnType[DBColumnType["Unknown"] = 0] = "Unknown";
    DBColumnType[DBColumnType["Boolean"] = 1] = "Boolean";
    DBColumnType[DBColumnType["Byte"] = 2] = "Byte";
    DBColumnType[DBColumnType["SByte"] = 3] = "SByte";
    DBColumnType[DBColumnType["Char"] = 4] = "Char";
    DBColumnType[DBColumnType["Decimal"] = 5] = "Decimal";
    DBColumnType[DBColumnType["Double"] = 6] = "Double";
    DBColumnType[DBColumnType["Single"] = 7] = "Single";
    DBColumnType[DBColumnType["Int32"] = 8] = "Int32";
    DBColumnType[DBColumnType["UInt32"] = 9] = "UInt32";
    DBColumnType[DBColumnType["Int16"] = 10] = "Int16";
    DBColumnType[DBColumnType["UInt16"] = 11] = "UInt16";
    DBColumnType[DBColumnType["Int64"] = 12] = "Int64";
    DBColumnType[DBColumnType["UInt64"] = 13] = "UInt64";
    DBColumnType[DBColumnType["String"] = 14] = "String";
    DBColumnType[DBColumnType["DateTime"] = 15] = "DateTime";
    DBColumnType[DBColumnType["Guid"] = 16] = "Guid";
    DBColumnType[DBColumnType["TimeSpan"] = 17] = "TimeSpan";
    DBColumnType[DBColumnType["ByteArray"] = 18] = "ByteArray";
})(DBColumnType = exports.DBColumnType || (exports.DBColumnType = {}));
var DBColumn = (function () {
    function DBColumn(model) {
        this.name = model['Name'];
        this.type = model['ColumnType'];
        this.size = model['Size'];
    }
    DBColumn.GetType = function (dbColumnType) {
        switch (dbColumnType) {
            case DBColumnType.Boolean:
                return 'System.Boolean';
            case DBColumnType.Byte:
                return 'System.Byte';
            case DBColumnType.SByte:
                return 'System.SByte';
            case DBColumnType.Char:
                return 'System.Char';
            case DBColumnType.Decimal:
                return 'System.Decimal';
            case DBColumnType.Double:
                return 'System.Double';
            case DBColumnType.Single:
                return 'System.Single';
            case DBColumnType.Int32:
                return 'System.Int32';
            case DBColumnType.UInt32:
                return 'System.UInt32';
            case DBColumnType.Int16:
                return 'System.Int16';
            case DBColumnType.UInt16:
                return 'System.UInt16';
            case DBColumnType.Int64:
                return 'System.Int64';
            case DBColumnType.UInt64:
                return 'System.UInt64';
            case DBColumnType.String:
                return 'System.String';
            case DBColumnType.DateTime:
                return 'System.DateTime';
            case DBColumnType.Guid:
                return 'System.Guid';
            case DBColumnType.TimeSpan:
                return 'System.TimeSpan';
            case DBColumnType.ByteArray:
                return 'System.Byte[]';
            default:
                return 'System.Object';
        }
    };
    DBColumn.GetSpecific = function (type) {
        switch (type) {
            case 'System.Boolean':
                return 'Bool';
            case 'System.Byte':
            case 'System.SByte':
            case 'System.Int16':
            case 'System.UInt16':
            case 'System.Int32':
            case 'System.UInt32':
            case 'System.Int64':
            case 'System.UInt64':
                return 'Integer';
            case 'System.Char':
            case 'System.Guid':
            case 'System.ByteArray':
            case 'System.String':
                return 'String';
            case 'System.Double':
            case 'System.Single':
            case 'System.Decimal':
                return 'Float';
            case 'System.DateTime':
            case 'System.TimeSpan':
                return 'Date';
            default:
                return 'String';
        }
    };
    return DBColumn;
}());
exports.DBColumn = DBColumn;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function deserializeToCollection(model, createItem, collection) {
    var collection = collection || [];
    if (model) {
        model.forEach(function (value) {
            collection.push(createItem(value));
        });
    }
    return collection;
}
exports.deserializeToCollection = deserializeToCollection;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorsInfo_1 = __webpack_require__(6);
var _validation_1 = __webpack_require__(0);
var size_1 = __webpack_require__(4);
var point_1 = __webpack_require__(4);
exports.name = { propertyName: 'name', modelName: '@Name', displayName: 'Name', editor: editorsInfo_1.editorTemplates.getEditor('text'), validationRules: _validation_1.nameValidationRules };
exports.text = { propertyName: 'text', modelName: '@Text', displayName: 'Text', editor: editorsInfo_1.editorTemplates.getEditor('text') };
exports.size = { propertyName: 'size', modelName: '@Size', defaultVal: '100,50', from: size_1.Size.fromString, displayName: 'Size', editor: editorsInfo_1.editorTemplates.getEditor('objecteditor') };
exports.location = { propertyName: 'location', modelName: '@Location', from: point_1.Point.fromString, displayName: 'Location', editor: editorsInfo_1.editorTemplates.getEditor('objecteditor') };
exports.sizeLocation = [exports.size, exports.location];
exports.unknownSerializationsInfo = [exports.name].concat(exports.sizeLocation);


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var routedConnectorModel_1 = __webpack_require__(31);
var PointSide;
(function (PointSide) {
    PointSide[PointSide["East"] = 0] = "East";
    PointSide[PointSide["South"] = 1] = "South";
    PointSide[PointSide["North"] = 2] = "North";
    PointSide[PointSide["West"] = 3] = "West";
})(PointSide = exports.PointSide || (exports.PointSide = {}));
function determineConnectingPoints(startObject, endObject) {
    var result = { start: null, end: null };
    if (endObject.leftConnectionPoint.location.x() > startObject.rightConnectionPoint.location.x() + routedConnectorModel_1.RoutedConnectorViewModel.GRID_SIZE * 2) {
        result.start = startObject.rightConnectionPoint;
        result.end = endObject.leftConnectionPoint;
    }
    else if (startObject.leftConnectionPoint.location.x() > endObject.rightConnectionPoint.location.x() + routedConnectorModel_1.RoutedConnectorViewModel.GRID_SIZE * 2) {
        result.start = startObject.leftConnectionPoint;
        result.end = endObject.rightConnectionPoint;
    }
    else {
        var startCenter = (startObject.rightConnectionPoint.location.x() + startObject.rightConnectionPoint.location.x()) / 2;
        var endCenter = (endObject.rightConnectionPoint.location.x() + endObject.rightConnectionPoint.location.x()) / 2;
        if (startCenter > endCenter) {
            result.start = startObject.rightConnectionPoint;
            result.end = endObject.rightConnectionPoint;
        }
        else {
            result.start = startObject.leftConnectionPoint;
            result.end = endObject.leftConnectionPoint;
        }
    }
    return result;
}
exports.determineConnectingPoints = determineConnectingPoints;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var baseSurface_1 = __webpack_require__(4);
var ConnectionPointSurface = (function (_super) {
    __extends(ConnectionPointSurface, _super);
    function ConnectionPointSurface(control, context) {
        var _this = _super.call(this, control, context, ConnectionPointSurface._unitProperties) || this;
        _this.template = 'dx-diagram-connection-point';
        _this.selectiontemplate = 'dx-diagram-connection-point';
        _this.relativeX = ko.pureComputed(function () {
            return _this.rect().left - _this.parent.rect().left;
        });
        _this.relativeY = ko.pureComputed(function () {
            return _this.rect().top - _this.parent.rect().top;
        });
        return _this;
    }
    ConnectionPointSurface.prototype.container = function () {
        return this.getRoot();
    };
    ConnectionPointSurface._unitProperties = {
        _x: function (o) {
            return o.location.x;
        },
        _y: function (o) {
            return o.location.y;
        }
    };
    return ConnectionPointSurface;
}(baseSurface_1.SurfaceElementBase));
exports.ConnectionPointSurface = ConnectionPointSurface;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(0);
var ObjectDataSource = (function (_super) {
    __extends(ObjectDataSource, _super);
    function ObjectDataSource() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = ko.observable();
        return _this;
    }
    ObjectDataSource.prototype.setState = function (state) {
        this.ctor = state.ctor;
        this.dataMember = state.dataMember;
        this.selectedType = state.selectedType;
        this.id = _utils_1.guid().replace(/-/g, '');
        this.name(state.dataSourceName);
    };
    return ObjectDataSource;
}(utils_1.Disposable));
exports.ObjectDataSource = ObjectDataSource;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var sqlDataSource_1 = __webpack_require__(74);
var utils_1 = __webpack_require__(9);
var serializer_1 = __webpack_require__(1);
var wizardPage_1 = __webpack_require__(7);
var dataSourceWizardState_1 = __webpack_require__(12);
var _storedProceduresQueryControl_1 = __webpack_require__(77);
var _selectStatementQueryControl_1 = __webpack_require__(121);
var _utils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var _selectQuerySqlTextProvider_1 = __webpack_require__(78);
var _requestwrapper_1 = __webpack_require__(16);
var wizard_1 = __webpack_require__(14);
var _queryBuilderPopup_1 = __webpack_require__(79);
var tableQuery_1 = __webpack_require__(34);
var storedProcQuery_1 = __webpack_require__(35);
var customSqlQuery_1 = __webpack_require__(32);
var _utils_2 = __webpack_require__(75);
var pageId_1 = __webpack_require__(5);
var _localization_1 = __webpack_require__(0);
var _localizationStringIds_1 = __webpack_require__(0);
var _SqlDataSourceWrapper = (function () {
    function _SqlDataSourceWrapper(sqlDataSourceJSON, queryName, requestWrapper) {
        var _this = this;
        this.sqlDataSourceJSON = sqlDataSourceJSON;
        this.customQueries = [];
        this.sqlDataSource = new sqlDataSource_1.SqlDataSource(sqlDataSourceJSON ? JSON.parse(sqlDataSourceJSON) : {}, undefined, requestWrapper);
        if (queryName) {
            this.sqlDataSource.queries().some(function (value, index) {
                if (value.name() === queryName) {
                    _this._queryIndex = index;
                    return true;
                }
                return false;
            });
        }
        else {
            this._queryIndex = this.sqlDataSource.queries().length;
        }
    }
    Object.defineProperty(_SqlDataSourceWrapper.prototype, "sqlQuery", {
        get: function () {
            return this.sqlDataSource.queries()[this._queryIndex];
        },
        set: function (val) {
            if (val)
                val.parent = this.sqlDataSource;
            this.sqlDataSource.queries()[this._queryIndex] = val;
        },
        enumerable: true,
        configurable: true
    });
    _SqlDataSourceWrapper.prototype.saveCustomQueries = function () {
        var serializer = new serializer_1.ModelSerializer();
        return this.customQueries.length > 0 && this.customQueries.map(function (x) { return JSON.stringify(serializer.serialize(x)); });
    };
    _SqlDataSourceWrapper.prototype.save = function () {
        return JSON.stringify(new serializer_1.ModelSerializer().serialize(this.sqlDataSource));
    };
    return _SqlDataSourceWrapper;
}());
exports._SqlDataSourceWrapper = _SqlDataSourceWrapper;
var ConfigureQueryPage = (function (_super) {
    __extends(ConfigureQueryPage, _super);
    function ConfigureQueryPage(_options) {
        var _this = _super.call(this) || this;
        _this._options = _options;
        _this._connection = function () {
            return _this._dataSource().connection;
        };
        _this._dataSource = function () {
            return _this._dataSourceWrapper && _this._dataSourceWrapper.sqlDataSource;
        };
        _this.queryNameCaption = function () { return localization_utils_1.getLocalization('Query Name', 'AnalyticsCoreStringId.SqlDSWizard_QueryName') + ':'; };
        _this.queryControl = ko.observable();
        _this.runQueryBuilderBtnText = ko.pureComputed(function () {
            return (!_this._selectStatementControl.sqlString() || _this._selectStatementControl.getQuery().type() === utils_1.SqlQueryType.tableQuery) ?
                localization_utils_1.getLocalization('Run Query Builder...', 'DataAccessUIStringId.Button_QueryBuilder') :
                localization_utils_1.getLocalization('Create New Query...', 'AnalyticsCoreStringId.SqlDSWizard_CreateNewQuery');
        }).extend({ deferred: true });
        _this.placeholder = function () {
            var queryControl = _this.queryControl();
            var query = queryControl && queryControl.getQuery();
            var queryName = _this.initialName || (query && query.generateName());
            return queryName ? _utils_1.formatUnicorn(localization_utils_1.getLocalization('Type custom query name (current name: {0})', 'AnalyticsCoreStringId.SqlDSWizard_QueryNamePlaceholder'), queryName) : queryName;
        };
        _this.queryName = ko.observable('');
        _this.queryTypeItems = [ConfigureQueryPage.QUERY_TEXT, ConfigureQueryPage.SP_TEXT];
        _this.selectedQueryType = ko.observable();
        _this.initialName = '';
        _this._proceduresList = new _storedProceduresQueryControl_1.StoredProceduresQueryControl();
        _this._disposables.push(_this._selectStatementControl = new _selectStatementQueryControl_1.SelectStatementQueryControl(new _selectQuerySqlTextProvider_1.SelectQuerySqlTextProvider(_requestwrapper_1.wrapGetSelectStatement(_this._options.callbacks.selectStatement), _this._connection), _this._options.disableCustomSql));
        _this._disposables.push(_this.selectedQueryType.subscribe(function (value) {
            if (value === ConfigureQueryPage.SP_TEXT) {
                _this[wizard_1.BaseWizard.__loadingStateFunctionName] && _this[wizard_1.BaseWizard.__loadingStateFunctionName](true);
                _this._dataSource().dbSchemaProvider.getDbStoredProcedures().done(function (procedures) {
                    _this._proceduresList.storedProcedures([]);
                    _this._proceduresList.storedProcedures(procedures);
                }).always(function (x) { return _this[wizard_1.BaseWizard.__loadingStateFunctionName] && _this[wizard_1.BaseWizard.__loadingStateFunctionName](false); });
                _this.queryControl(_this._proceduresList);
            }
            else {
                _this.queryControl(_this._selectStatementControl);
            }
        }));
        _this.selectedQueryType(ConfigureQueryPage.QUERY_TEXT);
        _this.popupQueryBuilder = new _queryBuilderPopup_1.QueryBuilderPopup(function (newQuery, isInProcess) {
            _this.queryName(newQuery.name() || newQuery.generateName());
            return _this._selectStatementControl.setQuery(newQuery, isInProcess);
        }, _this._options.rtl, _this._options.callbacks.customizeQBInitData);
        return _this;
    }
    ConfigureQueryPage.prototype.canNext = function () {
        return !this.queryControl().isNextDisabled();
    };
    ConfigureQueryPage.prototype.canFinish = function () {
        return !this.queryControl().isFinishDisabled() || !this.queryControl().isNextDisabled();
    };
    ConfigureQueryPage.prototype.runQueryBuilder = function () {
        var query = this.queryControl().getQuery();
        if (query && query.type() === utils_1.SqlQueryType.tableQuery) {
            query.name(this.queryName());
            this.popupQueryBuilder.show(query, this._dataSource());
        }
        else {
            this.popupQueryBuilder.show(new tableQuery_1.TableQuery({ '@Name': this.queryName() }, this._dataSource()), this._dataSource());
        }
    };
    ConfigureQueryPage.prototype.localizeQueryType = function (queryTypeString) {
        return ConfigureQueryPage.QUERY_TEXT === queryTypeString ?
            localization_utils_1.getLocalization(ConfigureQueryPage.QUERY_TEXT, 'DataAccessUIStringId.WizardPageConfigureQuery_Query') :
            localization_utils_1.getLocalization(ConfigureQueryPage.SP_TEXT, 'DataAccessUIStringId.WizardPageConfigureQuery_StoredProcedure');
    };
    ConfigureQueryPage.prototype.initialize = function (state) {
        this._dataSourceWrapper = dataSourceWizardState_1._restoreSqlDataSourceFromState(state, this._options.requestWrapper);
        this._proceduresList.setQuery(new storedProcQuery_1.StoredProcQuery({}, this._dataSource()));
        this._selectStatementControl.setQuery(new customSqlQuery_1.CustomSqlQuery({}, this._dataSource()));
        this.popupQueryBuilder.isVisible(false);
        if (this._dataSourceWrapper.sqlQuery) {
            this.initialName = this._dataSourceWrapper.sqlQuery.name();
            this.queryName(this.initialName);
            this.selectedQueryType(this._dataSourceWrapper.sqlQuery.type() === utils_1.SqlQueryType.storedProcQuery ? ConfigureQueryPage.SP_TEXT : ConfigureQueryPage.QUERY_TEXT);
            return this.queryControl().setQuery(this._dataSourceWrapper.sqlQuery);
        }
        else {
            this.selectedQueryType(ConfigureQueryPage.QUERY_TEXT);
        }
        return $.Deferred().resolve().promise();
    };
    ConfigureQueryPage.prototype.commit = function () {
        var query = this.queryControl().getQuery();
        if (query) {
            var newQueryName = this.queryName() || this.initialName;
            newQueryName && query.name(newQueryName);
            if (!query.name() || !this._dataSourceWrapper.sqlQuery || this._dataSourceWrapper.sqlQuery.name() !== query.name())
                query.name(_utils_2.generateQueryUniqueName(this._dataSource().queries(), query));
            this._dataSourceWrapper.sqlQuery = query;
        }
        return $.Deferred().resolve({
            queryName: this._dataSourceWrapper.sqlQuery.name(),
            sqlDataSourceJSON: this._dataSourceWrapper.save()
        }).promise();
    };
    ConfigureQueryPage.QUERY_TEXT = 'Query';
    ConfigureQueryPage.SP_TEXT = 'Stored Procedure';
    return ConfigureQueryPage;
}(wizardPage_1.WizardPageBase));
exports.ConfigureQueryPage = ConfigureQueryPage;
function _registerConfigureQueryPage(factory, dataSourceWizardOptions) {
    factory.registerMetadata(pageId_1.SqlDataSourceWizardPageId.ConfigureQueryPage, {
        create: function () {
            return new ConfigureQueryPage(dataSourceWizardOptions);
        },
        setState: function (data, state) {
            state.queryName = data.queryName;
            state.sqlDataSourceJSON = data.sqlDataSourceJSON;
        },
        getState: function (state) {
            return state.sqlDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.sqlDataSourceJSON = defaultState.sqlDataSourceJSON;
            state.queryName = defaultState.queryName;
        },
        template: 'dxrd-wizard-create-query-page',
        description: _localization_1.isCustomizedWithUpdateLocalizationMethod('Create a query or select a stored procedure') || localization_utils_1.getLocalization('Create a query or select a stored procedure.', _localizationStringIds_1.StringId.WizardPageConfigureQuery)
    });
}
exports._registerConfigureQueryPage = _registerConfigureQueryPage;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorsInfo_1 = __webpack_require__(6);
exports.editorTemplates = new editorsInfo_1.EditorTemplates();


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(44);
var editorTemplates_1 = __webpack_require__(25);
exports.AggregationType = {
    None: 'None',
    Count: 'Count',
    Max: 'Max',
    Min: 'Min',
    Avg: 'Avg',
    Sum: 'Sum',
    CountDistinct: 'CountDistinct',
    AvgDistinct: 'AvgDistinct',
    SumDistinct: 'SumDistinct'
};
exports.columnSerializationInfo = [
    metadata_1.name,
    { propertyName: 'displayType', displayName: 'Type', localizationId: 'DataAccessUIStringId.ParametersColumn_Type', disabled: true, editor: editorTemplates_1.editorTemplates.getEditor('text') },
    { propertyName: 'alias', displayName: 'Alias', localizationId: 'DataAccessUIStringId.QueryBuilderColumns_Alias', editor: editorTemplates_1.editorTemplates.getEditor('text') },
    metadata_1.selected,
    {
        propertyName: 'sortingType',
        displayName: 'Sort Type',
        editor: editorTemplates_1.editorTemplates.getEditor('combobox'),
        defaultVal: 'Unsorted',
        valuesArray: [
            { value: 'Unsorted', displayValue: 'Unsorted', localizationId: 'DataAccessUIStringId.SortingTypeNone' },
            { value: 'Ascending', displayValue: 'Ascending', localizationId: 'DataAccessUIStringId.SortingTypeAscending' },
            { value: 'Descending', displayValue: 'Descending', localizationId: 'DataAccessUIStringId.SortingTypeDescending' }
        ],
        localizationId: 'AnalyticsCoreStringId.QueryBuilder_SortType'
    },
    { propertyName: 'sortOrder', displayName: 'Sort Order', editor: editorTemplates_1.editorTemplates.getEditor('numeric'), localizationId: 'DataAccessUIStringId.QueryBuilderColumns_SortOrder' },
    { propertyName: 'groupBy', displayName: 'Group By', editor: editorTemplates_1.editorTemplates.getEditor('bool'), defaultVal: false, localizationId: 'DataAccessUIStringId.QueryBuilderColumns_GroupBy' },
    {
        propertyName: 'aggregate',
        displayName: 'Aggregate',
        editor: editorTemplates_1.editorTemplates.getEditor('comboboxUndo'),
        values: exports.AggregationType,
        defaultVal: exports.AggregationType.None,
        localizationId: 'DataAccessUIStringId.QueryBuilderColumns_Aggregate'
    }
];


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var controlsFactory_1 = __webpack_require__(1);
exports.controlsFactory = new controlsFactory_1.ControlsFactory();


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var elementViewModel_1 = __webpack_require__(4);
var controlsFactory_1 = __webpack_require__(27);
var QueryElementBaseViewModel = (function (_super) {
    __extends(QueryElementBaseViewModel, _super);
    function QueryElementBaseViewModel(control, parent, serializer) {
        return _super.call(this, control, parent, serializer) || this;
    }
    QueryElementBaseViewModel.prototype.getControlFactory = function () {
        return controlsFactory_1.controlsFactory;
    };
    return QueryElementBaseViewModel;
}(elementViewModel_1.ElementViewModel));
exports.QueryElementBaseViewModel = QueryElementBaseViewModel;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var baseSurface_1 = __webpack_require__(4);
var _utils_1 = __webpack_require__(0);
var DiagramElementBaseSurface = (function (_super) {
    __extends(DiagramElementBaseSurface, _super);
    function DiagramElementBaseSurface(control, context, unitProperties) {
        var _this = _super.call(this, control, context, _utils_1.extend({}, DiagramElementBaseSurface._unitProperties, unitProperties)) || this;
        _this.template = 'dx-diagram-element';
        _this.selectiontemplate = 'dx-diagram-element-selection';
        _this.contenttemplate = 'dx-diagram-element-content';
        _this.margin = ko.observable(0);
        _this._disposables.push(_this.positionWidthWithoutMargins = ko.pureComputed(function () {
            return _this['position'].width() - _this.margin() * 2;
        }));
        _this._disposables.push(_this.positionLineHeightWithoutMargins = ko.pureComputed(function () {
            return _this['position'].lineHeight() - _this.margin() * 2;
        }));
        return _this;
    }
    DiagramElementBaseSurface._unitProperties = {
        _height: function (o) {
            return o.size.height;
        },
        _width: function (o) {
            return o.size.width;
        },
        _x: function (o) {
            return o.location.x;
        },
        _y: function (o) {
            return o.location.y;
        }
    };
    return DiagramElementBaseSurface;
}(baseSurface_1.SurfaceElementBase));
exports.DiagramElementBaseSurface = DiagramElementBaseSurface;
var DiagramElementSurface = (function (_super) {
    __extends(DiagramElementSurface, _super);
    function DiagramElementSurface(control, context) {
        var _this = _super.call(this, control, context, null) || this;
        _this.contenttemplate = 'dxdd-element-content-with-connecting-points';
        return _this;
    }
    DiagramElementSurface.prototype._getChildrenHolderName = function () { return 'connectingPoints'; };
    return DiagramElementSurface;
}(DiagramElementBaseSurface));
exports.DiagramElementSurface = DiagramElementSurface;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var point_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(21);
var diagramElementModel_1 = __webpack_require__(15);
var size_1 = __webpack_require__(4);
var parsers_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(0);
var ConnectingPointViewModel = (function (_super) {
    __extends(ConnectingPointViewModel, _super);
    function ConnectingPointViewModel(control, parent, serializer) {
        var _this = _super.call(this, _utils_1.extend({ '@ControlType': 'ConnectingPoint' }, control), parent, serializer) || this;
        _this.side = ko.pureComputed(function () {
            if (_this.percentOffsetY() >= _this.percentOffsetX()) {
                if (_this.percentOffsetY() > 1 - _this.percentOffsetX()) {
                    return utils_1.PointSide.South;
                }
                else {
                    return utils_1.PointSide.West;
                }
            }
            else {
                if (_this.percentOffsetY() > 1 - _this.percentOffsetX()) {
                    return utils_1.PointSide.East;
                }
                else {
                    return utils_1.PointSide.North;
                }
            }
        });
        _this.size = new size_1.Size(7, 7);
        _this.location = new point_1.Point(0, 0);
        _this.location.x = ko.pureComputed(function () {
            var parentModel = _this.parentModel();
            return parentModel.location.x() + parentModel.size.width() * _this.percentOffsetX();
        });
        _this.location.y = ko.pureComputed(function () {
            var parentModel = _this.parentModel();
            return parentModel.location.y() + parentModel.size.height() * _this.percentOffsetY();
        });
        return _this;
    }
    return ConnectingPointViewModel;
}(diagramElementModel_1.DiagramElementBaseViewModel));
exports.ConnectingPointViewModel = ConnectingPointViewModel;
exports.connectingPointSerializationInfo = [
    { propertyName: 'percentOffsetX', modelName: '@PercentOffsetX', defaultVal: 0.5, from: parsers_1.floatFromModel },
    { propertyName: 'percentOffsetY', modelName: '@PercentOffsetY', defaultVal: 0.5, from: parsers_1.floatFromModel }
];


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var connectorModel_1 = __webpack_require__(64);
var point_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(21);
var _utils_1 = __webpack_require__(0);
var RoutedConnectorViewModel = (function (_super) {
    __extends(RoutedConnectorViewModel, _super);
    function RoutedConnectorViewModel(control, parent, serializer) {
        var _this = _super.call(this, _utils_1.extend({ '@ControlType': 'RoutedConnector' }, control), parent, serializer) || this;
        _this._isUpdating = false;
        _this._getPower = function (_n) {
            for (var i = 0; i < 10; i++) {
                if (_n >= Math.pow(2, i) && _n < Math.pow(2, i + 1)) {
                    return i + 1;
                }
            }
            return 1;
        };
        _this.seriesNumber = ko.observable(1);
        _this.routePoints = ko.observable([]);
        _this.freezeRoute = ko.observable(false);
        _this._disposables.push(ko.computed(function () {
            var freezeRoute = !(1 + _this.startPoint().location.x() + _this.startPoint().location.y()
                + _this.endPoint().location.x() + _this.endPoint().location.y());
            if (!_this._isUpdating) {
                _this.freezeRoute(freezeRoute);
            }
        }));
        _this._disposables.push(ko.computed(function () {
            if (!_this.freezeRoute()) {
                var result = [];
                var startPointSide = _this._getStartPointSide();
                var endPointSide = _this._getEndPointSide();
                var startPoint = new point_1.Point(_this.startPoint().location.x(), _this.startPoint().location.y()), endPoint = new point_1.Point(_this.endPoint().location.x(), _this.endPoint().location.y());
                if (_this.startPoint().connectingPoint()) {
                    _this._fixPoint(startPoint, _this.startPoint().connectingPoint().side());
                    result.push(startPoint);
                }
                if (_this.endPoint().connectingPoint()) {
                    _this._fixPoint(endPoint, _this.endPoint().connectingPoint().side());
                }
                var baseX = Math.min(startPoint.x(), endPoint.x()), baseY = Math.min(startPoint.y(), endPoint.y()), width = Math.abs(startPoint.x() - endPoint.x()), height = Math.abs(startPoint.y() - endPoint.y());
                var number = _this.seriesNumber();
                var ratio = _this._getRatio(number);
                var indent = (number - 1) * RoutedConnectorViewModel.GRID_SIZE;
                if (startPoint.y() - endPoint.y() > 0) {
                    if (startPoint.x() - endPoint.x() > 0) {
                        if (startPointSide === utils_1.PointSide.North || startPointSide === utils_1.PointSide.East) {
                            if (endPointSide === utils_1.PointSide.North || endPointSide === utils_1.PointSide.East) {
                                if (number !== 1) {
                                    width += indent;
                                    result.push(new point_1.Point(baseX + width, baseY + height));
                                }
                                result.push(new point_1.Point(baseX + width, baseY));
                            }
                            else {
                                result.push(new point_1.Point(baseX + width, baseY + height * ratio));
                                result.push(new point_1.Point(baseX, baseY + height * ratio));
                            }
                        }
                        else {
                            if (endPointSide === utils_1.PointSide.South || endPointSide === utils_1.PointSide.West) {
                                result.push(new point_1.Point(baseX, baseY + height));
                            }
                            else {
                                result.push(new point_1.Point(baseX + width * ratio, baseY + height));
                                result.push(new point_1.Point(baseX + width * ratio, baseY));
                            }
                        }
                    }
                    else {
                        if (startPointSide === utils_1.PointSide.North || startPointSide === utils_1.PointSide.West) {
                            if (endPointSide === utils_1.PointSide.North || endPointSide === utils_1.PointSide.West) {
                                if (number !== 1) {
                                    baseX -= indent;
                                    result.push(new point_1.Point(baseX, baseY + height));
                                }
                                result.push(new point_1.Point(baseX, baseY));
                            }
                            else {
                                result.push(new point_1.Point(baseX, baseY + height * ratio));
                                result.push(new point_1.Point(baseX + width, baseY + height * ratio));
                            }
                        }
                        else {
                            if (endPointSide === utils_1.PointSide.South || endPointSide === utils_1.PointSide.East) {
                                result.push(new point_1.Point(baseX + width, baseY + height));
                            }
                            else {
                                result.push(new point_1.Point(baseX + width * ratio, baseY + height));
                                result.push(new point_1.Point(baseX + width * ratio, baseY));
                            }
                        }
                    }
                }
                else {
                    if (startPoint.x() - endPoint.x() > 0) {
                        if (startPointSide === utils_1.PointSide.South || startPointSide === utils_1.PointSide.East) {
                            if (endPointSide === utils_1.PointSide.South || endPointSide === utils_1.PointSide.East) {
                                if (number !== 1) {
                                    width += indent;
                                    result.push(new point_1.Point(baseX + width, baseY));
                                }
                                result.push(new point_1.Point(baseX + width, baseY + height));
                            }
                            else {
                                result.push(new point_1.Point(baseX + width, baseY + height * ratio));
                                result.push(new point_1.Point(baseX, baseY + height * ratio));
                            }
                        }
                        else {
                            if (endPointSide === utils_1.PointSide.North || endPointSide === utils_1.PointSide.West) {
                                result.push(new point_1.Point(baseX, baseY));
                            }
                            else {
                                result.push(new point_1.Point(baseX + width * ratio, baseY));
                                result.push(new point_1.Point(baseX + width * ratio, baseY + height));
                            }
                        }
                    }
                    else {
                        if (startPointSide === utils_1.PointSide.South || startPointSide === utils_1.PointSide.West) {
                            if (endPointSide === utils_1.PointSide.South || endPointSide === utils_1.PointSide.West) {
                                if (number !== 1) {
                                    baseX -= indent;
                                    result.push(new point_1.Point(baseX, baseY));
                                }
                                result.push(new point_1.Point(baseX, baseY + height));
                            }
                            else {
                                result.push(new point_1.Point(baseX, baseY + height * ratio));
                                result.push(new point_1.Point(baseX + width, baseY + height * ratio));
                            }
                        }
                        else {
                            if (endPointSide === utils_1.PointSide.North || endPointSide === utils_1.PointSide.East) {
                                result.push(new point_1.Point(baseX + width, baseY));
                            }
                            else {
                                result.push(new point_1.Point(baseX + width * ratio, baseY));
                                result.push(new point_1.Point(baseX + width * ratio, baseY + height));
                            }
                        }
                    }
                }
                if (_this.endPoint().connectingPoint()) {
                    result.push(endPoint);
                }
                _this.routePoints(result);
            }
        }));
        return _this;
    }
    RoutedConnectorViewModel.prototype.getX = function () {
        var result = _super.prototype.getX.call(this);
        this.routePoints && this.routePoints().forEach(function (point) {
            if (point.x() < result) {
                result = point.x();
            }
        });
        return result;
    };
    RoutedConnectorViewModel.prototype.getY = function () {
        var result = _super.prototype.getY.call(this);
        this.routePoints && this.routePoints().forEach(function (point) {
            if (point.y() < result) {
                result = point.y();
            }
        });
        return result;
    };
    RoutedConnectorViewModel.prototype.getWidth = function () {
        var result = _super.prototype.getWidth.call(this);
        var baseX = this.getX();
        this.routePoints && [this.startPoint().location, this.endPoint().location].concat(this.routePoints()).forEach(function (point) {
            if (point.x() - baseX > result) {
                result = point.x() - baseX;
            }
        });
        return result;
    };
    RoutedConnectorViewModel.prototype.getHeight = function () {
        var result = _super.prototype.getHeight.call(this);
        var baseY = this.getY();
        this.routePoints && [this.startPoint().location, this.endPoint().location].concat(this.routePoints()).forEach(function (point) {
            if (point.y() - baseY > result) {
                result = point.y() - baseY;
            }
        });
        return Math.round(result);
    };
    RoutedConnectorViewModel.prototype._fixPoint = function (point, side) {
        switch (side) {
            case utils_1.PointSide.North:
                point.y(point.y() - RoutedConnectorViewModel.GRID_SIZE);
                break;
            case utils_1.PointSide.East:
                point.x(point.x() + RoutedConnectorViewModel.GRID_SIZE);
                break;
            case utils_1.PointSide.West:
                point.x(point.x() - RoutedConnectorViewModel.GRID_SIZE);
                break;
            case utils_1.PointSide.South:
                point.y(point.y() + RoutedConnectorViewModel.GRID_SIZE);
        }
    };
    RoutedConnectorViewModel.prototype._getStartPointSide = function () {
        if (this.startPoint().connectingPoint()) {
            return this.startPoint().connectingPoint().side();
        }
        if (this.startPoint().location.y() !== this.endPoint().location.y()) {
            if (this.startPoint().location.y() > this.endPoint().location.y()) {
                return utils_1.PointSide.North;
            }
            else {
                return utils_1.PointSide.South;
            }
        }
        else {
            if (this.startPoint().location.x() > this.endPoint().location.x()) {
                return utils_1.PointSide.West;
            }
            else {
                return utils_1.PointSide.East;
            }
        }
    };
    RoutedConnectorViewModel.prototype._getEndPointSide = function () {
        if (this.endPoint().connectingPoint()) {
            return this.endPoint().connectingPoint().side();
        }
        if (this.startPoint().location.y() !== this.endPoint().location.y()) {
            if (this.startPoint().location.y() > this.endPoint().location.y()) {
                return utils_1.PointSide.South;
            }
            else {
                return utils_1.PointSide.North;
            }
        }
        else {
            if (this.startPoint().location.x() > this.endPoint().location.x()) {
                return utils_1.PointSide.East;
            }
            else {
                return utils_1.PointSide.West;
            }
        }
    };
    RoutedConnectorViewModel.prototype._getRatio = function (n) {
        var pow2Delimiter = this._getPower(n);
        var delimiter = Math.pow(2, pow2Delimiter);
        var halfDelimeter = Math.pow(2, pow2Delimiter - 1);
        var arr = [];
        for (var i = 1; i < halfDelimeter; i++) {
            if (i % 2 == 0) {
                continue;
            }
            arr.push(delimiter - i);
            arr.push(i);
        }
        arr.reverse();
        var delta = n - halfDelimeter;
        var number = arr[delta] || 1;
        return number / delimiter;
    };
    RoutedConnectorViewModel.prototype.beginUpdate = function () { this._isUpdating = true; };
    RoutedConnectorViewModel.prototype.endUpdate = function () { this._isUpdating = false; };
    RoutedConnectorViewModel.GRID_SIZE = 10;
    return RoutedConnectorViewModel;
}(connectorModel_1.ConnectorViewModel));
exports.RoutedConnectorViewModel = RoutedConnectorViewModel;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(9);
var serializer_1 = __webpack_require__(1);
var utils_2 = __webpack_require__(1);
var dataSourceParameter_1 = __webpack_require__(11);
var customSqlQueryMeta_1 = __webpack_require__(112);
var _utils_1 = __webpack_require__(0);
var CustomSqlQuery = (function () {
    function CustomSqlQuery(model, parent, serializer) {
        this.parent = parent;
        (serializer || new serializer_1.ModelSerializer()).deserialize(this, _utils_1.extend(model, { '@ItemType': 'Query' }));
        this.type = ko.pureComputed(function () { return utils_1.SqlQueryType.customSqlQuery; });
        this.parameters = utils_2.deserializeArray(model['Parameters'], function (item) {
            return new dataSourceParameter_1.DataSourceParameter(item, serializer);
        });
    }
    CustomSqlQuery.prototype.getInfo = function () {
        return customSqlQueryMeta_1.customQuerySerializationsInfo;
    };
    CustomSqlQuery.prototype.generateName = function () {
        return 'CustomSqlQuery';
    };
    return CustomSqlQuery;
}());
exports.CustomSqlQuery = CustomSqlQuery;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var dataSourceParameter_1 = __webpack_require__(11);
var localization_utils_1 = __webpack_require__(1);
var editorsInfo_1 = __webpack_require__(6);
var _editorTypeMapper_1 = __webpack_require__(0);
var _utils_1 = __webpack_require__(0);
exports.dsParameterNameValidationRules = [{
        type: 'custom',
        validationCallback: function (options) { return dataSourceParameter_1.DataSourceParameter.validateName(options.value); },
        get message() {
            return localization_utils_1.getLocalization('Name is required and should be a valid identifier.', 'AnalyticsCoreStringId.NameIsRequired_Error');
        }
    }];
exports.parameterValueSerializationsInfo = { propertyName: 'value', displayName: 'Value', localizationId: 'DevExpress.DataAccess.Parameter.Value', editor: editorsInfo_1.editorTemplates.getEditor('text') };
var dsParameterName = { propertyName: 'name', displayName: 'Name', localizationId: 'DevExpress.DataAccess.Parameter.Name', validationRules: exports.dsParameterNameValidationRules, editor: editorsInfo_1.editorTemplates.getEditor('text') };
var dsParameterType = {
    propertyName: 'type', displayName: 'Type', localizationId: 'DevExpress.DataAccess.Parameter.Type', modelName: '@Type', editor: editorsInfo_1.editorTemplates.getEditor('combobox'), valuesArray: [
        { value: 'System.String', displayValue: 'String', localizationId: 'AnalyticsCoreStringId.Parameter_Type_String' },
        { value: 'System.DateTime', displayValue: 'Date', localizationId: 'AnalyticsCoreStringId.Parameter_Type_DateTime' },
        { value: 'System.Int16', displayValue: 'Number (16 bit integer)', localizationId: 'AnalyticsCoreStringId.Parameter_Type_Int16' },
        { value: 'System.Int32', displayValue: 'Number (32 bit integer)', localizationId: 'AnalyticsCoreStringId.Parameter_Type_Int32' },
        { value: 'System.Int64', displayValue: 'Number (64 bit integer)', localizationId: 'AnalyticsCoreStringId.Parameter_Type_Int64' },
        { value: 'System.Single', displayValue: 'Number (floating-point)', localizationId: 'AnalyticsCoreStringId.Parameter_Type_Float' },
        { value: 'System.Double', displayValue: 'Number (double-precision floating-point)', localizationId: 'AnalyticsCoreStringId.Parameter_Type_Double' },
        { value: 'System.Decimal', displayValue: 'Number (decimal)', localizationId: 'AnalyticsCoreStringId.Parameter_Type_Decimal' },
        { value: 'System.Boolean', displayValue: 'Boolean', localizationId: 'AnalyticsCoreStringId.Parameter_Type_Boolean' },
        { value: 'System.Guid', displayValue: 'Guid', localizationId: 'AnalyticsCoreStringId.Parameter_Type_Guid' },
        { value: _editorTypeMapper_1.ExpressionType, displayValue: 'Expression', localizationId: 'DataAccessUIStringId.ParametersColumn_Expression' }
    ]
};
var dsExpressionResultType = {
    propertyName: 'resultType',
    displayName: 'Result Type',
    localizationId: 'DataAccessWebStringId.QueryBuilder_ResultType',
    modelName: '@ResultType',
    editor: editorsInfo_1.editorTemplates.getEditor('combobox'),
    valuesArray: dsParameterType.valuesArray.filter(function (x) { return !_editorTypeMapper_1.IsDataAccessExpression(x.value); })
};
var baseDSParamterSerializationsInfo = [
    { propertyName: '_name', modelName: '@Name' },
    { propertyName: '_value', modelName: '#text' },
    exports.parameterValueSerializationsInfo,
    { propertyName: 'itemType', modelName: '@ItemType' }
];
exports.dsParameterSerializationInfo = [dsParameterName, dsParameterType, dsExpressionResultType].concat(baseDSParamterSerializationsInfo);
var storedProcAdditionValuesArray = [
    { value: 'System.Byte', displayValue: 'Non-negative number (8 bit integer)', localizationId: 'DataAccessStringId.Type_Byte' },
    { value: 'System.SByte', displayValue: 'Number (8 bit integer)', localizationId: 'DataAccessStringId.Type_SByte' },
    { value: 'System.UInt32', displayValue: 'Non-negative number (32 bit integer)', localizationId: 'DataAccessStringId.Type_UInt' },
    { value: 'System.UInt16', displayValue: 'Non-negative number (16 bit integer)', localizationId: 'DataAccessStringId.Type_UShort' },
    { value: 'System.UInt64', displayValue: 'Non-negative number (64 bit integer)', localizationId: 'DataAccessStringId.Type_ULong' },
    { value: 'System.Char', displayValue: 'Char', localizationId: 'DataAccessStringId.Type_Char' },
    { value: 'System.Object', displayValue: 'Object', localizationId: 'DataAccessStringId.Type_Object' },
    { value: 'System.Byte[]', displayValue: 'Byte array', localizationId: 'DataAccessStringId.Type_ByteArray' },
    { value: 'System.TimeSpan', displayValue: 'Time interval', localizationId: 'DataAccessStringId.Type_TimeSpan' },
];
function storedProcParameterSerializationsInfo(type) {
    var copyParamType = _utils_1.extend(true, {}, dsParameterType);
    var newValuesArray = [];
    newValuesArray.push(dsParameterType.valuesArray.filter(function (item) { return item.value === type; })[0] || storedProcAdditionValuesArray.filter(function (item) { return item.value === type; })[0]);
    newValuesArray.push(dsParameterType.valuesArray.filter(function (item) { return _editorTypeMapper_1.IsDataAccessExpression(item.value); })[0]);
    copyParamType.valuesArray = newValuesArray;
    var copyResultType = _utils_1.extend(true, {}, dsExpressionResultType);
    copyResultType.valuesArray = newValuesArray.slice(0, 0);
    copyResultType.disabled = true;
    return [
        _utils_1.extend({ disabled: true }, dsParameterName),
        copyParamType,
        copyResultType
    ].concat(baseDSParamterSerializationsInfo);
}
exports.storedProcParameterSerializationsInfo = storedProcParameterSerializationsInfo;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(9);
var serializer_1 = __webpack_require__(1);
var utils_2 = __webpack_require__(1);
var dataSourceParameter_1 = __webpack_require__(11);
var tableQueryMeta_1 = __webpack_require__(115);
var _utils_1 = __webpack_require__(0);
var TableQuery = (function () {
    function TableQuery(model, parent, serializer) {
        this.parent = parent;
        (serializer || new serializer_1.ModelSerializer()).deserialize(this, _utils_1.extend(model, { '@ItemType': 'Query' }));
        this.type = ko.pureComputed(function () { return utils_1.SqlQueryType.tableQuery; });
        this.parameters = utils_2.deserializeArray(model['Parameters'], function (item) { return new dataSourceParameter_1.DataSourceParameter(item, serializer); });
    }
    TableQuery.prototype.tables = function () {
        return this['_tablesObject']['tables']();
    };
    TableQuery.prototype.getInfo = function () {
        return tableQueryMeta_1.tableQuerySerializationsInfo;
    };
    TableQuery.prototype.generateName = function () {
        return this.tables().length > 0 ? (this.tables()[0].alias() || this.tables()[0].name()) : 'SelectQuery';
    };
    return TableQuery;
}());
exports.TableQuery = TableQuery;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(9);
var serializer_1 = __webpack_require__(1);
var utils_2 = __webpack_require__(1);
var dataSourceParameter_1 = __webpack_require__(11);
var _editorTypeMapper_1 = __webpack_require__(0);
var dataSourceParameterMeta_1 = __webpack_require__(33);
var storedProcQueryMeta_1 = __webpack_require__(116);
var _utils_1 = __webpack_require__(0);
var StoredProcQuery = (function () {
    function StoredProcQuery(model, parent, serializer) {
        this.parent = parent;
        (serializer || new serializer_1.ModelSerializer()).deserialize(this, _utils_1.extend(model, { '@ItemType': 'Query' }));
        this.type = ko.pureComputed(function () { return utils_1.SqlQueryType.storedProcQuery; });
        this.parameters = utils_2.deserializeArray(model['Parameters'], function (item) {
            var parameterValueType = item['@Type'];
            if (_editorTypeMapper_1.IsDataAccessExpression(parameterValueType))
                parameterValueType = item['@ResultType'] || parameterValueType;
            return new dataSourceParameter_1.DataSourceParameter(item, serializer, dataSourceParameterMeta_1.storedProcParameterSerializationsInfo(parameterValueType));
        });
    }
    StoredProcQuery.prototype.getInfo = function () {
        return storedProcQueryMeta_1.storedProcQuerySerializationsInfo;
    };
    StoredProcQuery.prototype.generateName = function () {
        return this.procName() || 'Query';
    };
    return StoredProcQuery;
}());
exports.StoredProcQuery = StoredProcQuery;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var localization_utils_1 = __webpack_require__(1);
var wizardPage_1 = __webpack_require__(7);
var wizard_1 = __webpack_require__(14);
var _arrayutils_1 = __webpack_require__(0);
var pageId_1 = __webpack_require__(5);
var DataSourceType;
(function (DataSourceType) {
    DataSourceType[DataSourceType["NoData"] = 0] = "NoData";
    DataSourceType[DataSourceType["Sql"] = 1] = "Sql";
    DataSourceType[DataSourceType["Json"] = 2] = "Json";
    DataSourceType[DataSourceType["Object"] = 3] = "Object";
})(DataSourceType = exports.DataSourceType || (exports.DataSourceType = {}));
var TypeItem = (function () {
    function TypeItem(textDefault, textID, imageClassName, imageTemplateName, type) {
        this.text = localization_utils_1.getLocalization(textDefault, textID);
        this.imageClassName = imageClassName;
        this.imageTemplateName = imageTemplateName;
        this.type = type;
    }
    return TypeItem;
}());
exports.TypeItem = TypeItem;
var ChooseDataSourceTypePage = (function (_super) {
    __extends(ChooseDataSourceTypePage, _super);
    function ChooseDataSourceTypePage(_dataSourceTypeOptions) {
        var _this = _super.call(this) || this;
        _this._dataSourceTypeOptions = _dataSourceTypeOptions;
        _this._itemClick = function (item) {
            _this.selectedItem(item);
        };
        _this._IsSelected = function (item) {
            return _this.selectedItem().type === item.type;
        };
        _this.selectedItem = ko.observable();
        _this.typeItems = _this._createTypeItems();
        _this._disposables.push(_this.selectedItem.subscribe(function () { return _this._onChange(); }));
        _this._extendCssClass = $.noop;
        return _this;
    }
    ChooseDataSourceTypePage.prototype.canNext = function () {
        return this.selectedItem() != null;
    };
    ChooseDataSourceTypePage.prototype.canFinish = function () {
        return false;
    };
    ChooseDataSourceTypePage.prototype._goToNextPage = function () {
        this[wizard_1.BaseWizard.__nextActionFunctionName] && this[wizard_1.BaseWizard.__nextActionFunctionName]();
    };
    ChooseDataSourceTypePage.prototype.commit = function () {
        return $.Deferred().resolve({ dataSourceType: this.selectedItem().type }).promise();
    };
    ChooseDataSourceTypePage.prototype._createTypeItems = function () {
        var typeItems = [];
        if (this._dataSourceTypeOptions.sqlDataSourceAvailable) {
            typeItems.push(new TypeItem('Database', 'DataAccessUIStringId.DSTypeSql', 'sqldatasource', 'dxrd-svg-wizard-SqlDataSource', DataSourceType.Sql));
        }
        if (this._dataSourceTypeOptions.jsonDataSourceAvailable) {
            typeItems.push(new TypeItem('JSON', 'DataAccessUIStringId.DSTypeJson', 'jsondatasource', 'dxrd-svg-wizard-JsonDataSource', DataSourceType.Json));
        }
        if (this._dataSourceTypeOptions.objectDataSourceAvailable) {
            typeItems.push(new TypeItem('Object', 'DataAccessUIStringId.DSTypeObject', 'objectdatasource', 'dxrd-svg-wizard-ObjectDataSource', DataSourceType.Object));
        }
        return typeItems;
    };
    ChooseDataSourceTypePage.prototype.initialize = function (state) {
        if (!this.typeItems || this.typeItems.length === 0) {
            this.selectedItem(null);
        }
        else {
            var type = state.dataSourceType !== undefined ? state.dataSourceType : this.typeItems[0].type;
            this.selectedItem(_arrayutils_1.findFirstItemMatchesCondition(this.typeItems, function (item) { return item.type === type; }));
        }
        return $.Deferred().resolve().promise();
    };
    return ChooseDataSourceTypePage;
}(wizardPage_1.WizardPageBase));
exports.ChooseDataSourceTypePage = ChooseDataSourceTypePage;
function _registerChooseDataSourceTypePage(factory, dataSourceTypeOptions) {
    factory.registerMetadata(pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage, {
        setState: function (data, state) {
            state.dataSourceType = data.dataSourceType;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.dataSourceType = defaultState.dataSourceType;
        },
        create: function () {
            return new ChooseDataSourceTypePage(dataSourceTypeOptions);
        },
        description: localization_utils_1.getLocalization('Select the data source type.', 'DataAccessUIStringId.WizardPageChooseDSType'),
        template: 'dxrd-page-choose-datasource-type'
    });
}
exports._registerChooseDataSourceTypePage = _registerChooseDataSourceTypePage;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var utils_1 = __webpack_require__(1);
var wizardPage_1 = __webpack_require__(7);
var PageIterator = (function (_super) {
    __extends(PageIterator, _super);
    function PageIterator(pageFactory, stateManager, _onResetPage) {
        if (_onResetPage === void 0) { _onResetPage = function () { return void 0; }; }
        var _this = _super.call(this) || this;
        _this.pageFactory = pageFactory;
        _this.stateManager = stateManager;
        _this._onResetPage = _onResetPage;
        _this._pages = [];
        _this._currentIndex = 0;
        return _this;
    }
    PageIterator.prototype.dispose = function () {
        this._pages.forEach(function (x) { return x.dispose(); });
        this._pages = [];
    };
    PageIterator.prototype.__resetPages = function (fromIndex) {
        if (fromIndex < this._pages.length) {
            for (var index = this._pages.length - 1; index >= fromIndex; index--) {
                this.stateManager.resetPageState(this._pages[index].pageId);
                this._onResetPage(this._pages[index]);
                this._pages[index].dispose();
                this._pages.splice(index, 1);
            }
        }
    };
    PageIterator.prototype._nextPage = function () {
        return this._pages[this._currentIndex + 1];
    };
    PageIterator.prototype._getNextExistingPage = function () {
        this._currentIndex += 1;
        var deferred = $.Deferred();
        deferred.resolve(this._pages[this._currentIndex]);
        return deferred.promise();
    };
    PageIterator.prototype._resetPages = function () {
        this.__resetPages(this._currentIndex + 1);
    };
    PageIterator.prototype._getNextNewPage = function (nextPageId) {
        this._currentIndex += 1;
        var deferred = $.Deferred();
        this.__resetPages(this._currentIndex);
        var pageMetadata = this.pageFactory.getMetadata(nextPageId);
        var newPage = new wizardPage_1._WrappedWizardPage(nextPageId, pageMetadata.create(), pageMetadata.template, pageMetadata.description);
        this._pages.push(newPage);
        deferred.resolve(newPage);
        return deferred.promise();
    };
    PageIterator.prototype._getStartPage = function (pageId) {
        pageId = pageId || this.getNextPageId();
        var pageMetadata = this.pageFactory.getMetadata(pageId);
        var startPage = new wizardPage_1._WrappedWizardPage(pageId, pageMetadata.create(), pageMetadata.template, pageMetadata.description);
        this._pages.push(startPage);
        return startPage;
    };
    PageIterator.prototype._getNextPage = function () {
        var currentPage = this._getCurrentPage();
        if (currentPage.isChanged || !this._nextPage()) {
            var nextPageId = this.getNextPageId(this._getCurrentPage().pageId);
            if (!nextPageId)
                return $.Deferred().reject().promise();
            currentPage.isChanged = false;
            return this._getNextNewPage(nextPageId);
        }
        else
            return this._getNextExistingPage();
    };
    PageIterator.prototype._getPreviousPage = function () {
        var deferred = $.Deferred();
        if (this._currentIndex - 1 < 0) {
            deferred.reject(null);
        }
        else {
            this._currentIndex -= 1;
            deferred.resolve(this._pages[this._currentIndex]);
        }
        return deferred.promise();
    };
    PageIterator.prototype._goToPage = function (pageId) {
        var deferred = $.Deferred();
        var page = this._pages.filter(function (page) { return page.pageId === pageId; })[0];
        if (page) {
            this._currentIndex = this._pages.indexOf(page);
            deferred.resolve(page);
        }
        else {
            deferred.reject(null);
        }
        return deferred.promise();
    };
    PageIterator.prototype._getCurrentPage = function () {
        return this._pages[this._currentIndex];
    };
    PageIterator.prototype._getCurrentState = function () {
        return this.stateManager.getCurrentState();
    };
    PageIterator.prototype.getNextPageId = function (pageId) {
        return '';
    };
    return PageIterator;
}(utils_1.Disposable));
exports.PageIterator = PageIterator;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var _utils_1 = __webpack_require__(13);
var _wizardPageSectionFactory_1 = __webpack_require__(117);
var _wizardPageProcessor_1 = __webpack_require__(118);
var wizard_1 = __webpack_require__(14);
var eventManager_1 = __webpack_require__(1);
var _utils_2 = __webpack_require__(0);
var WizardSectionPosition;
(function (WizardSectionPosition) {
    WizardSectionPosition[WizardSectionPosition["Left"] = 1] = "Left";
    WizardSectionPosition[WizardSectionPosition["TopLeft"] = 2] = "TopLeft";
    WizardSectionPosition[WizardSectionPosition["BottomLeft"] = 3] = "BottomLeft";
    WizardSectionPosition[WizardSectionPosition["Right"] = 4] = "Right";
    WizardSectionPosition[WizardSectionPosition["TopRight"] = 5] = "TopRight";
    WizardSectionPosition[WizardSectionPosition["BottomRight"] = 6] = "BottomRight";
    WizardSectionPosition[WizardSectionPosition["Top"] = 7] = "Top";
    WizardSectionPosition[WizardSectionPosition["Bottom"] = 8] = "Bottom";
})(WizardSectionPosition = exports.WizardSectionPosition || (exports.WizardSectionPosition = {}));
var FullscreenWizardPage = (function (_super) {
    __extends(FullscreenWizardPage, _super);
    function FullscreenWizardPage() {
        var _this = _super.call(this) || this;
        _this._sectionsToUnregister = [];
        _this._sectionsToRegister = [];
        _this._sectionPositions = [];
        _this._initInProgress = ko.observable(false);
        _this._defaultMargin = 30;
        _this._parentMarginOffset = _this._defaultMargin + _this._defaultMargin / 2;
        _this._className = '';
        _this._pageCss = {};
        _this.events = new eventManager_1.EventManager();
        _this._factory = new _wizardPageSectionFactory_1.WizardPageSectionFactory();
        _this._sectionsProcessor = new _wizardPageProcessor_1.WizardPageProcessor(_this._factory, function (state) {
            _this[wizard_1.BaseWizard.__loadingStateFunctionName] && _this[wizard_1.BaseWizard.__loadingStateFunctionName](state);
        }, function () { return _this[wizard_1.BaseWizard.__nextActionFunctionName] && _this[wizard_1.BaseWizard.__nextActionFunctionName](); });
        _this._sectionsProcessor.events.addHandler('beforeStart', function () {
            _this._sections = _this._sectionsProcessor.sections;
            _this._beforeStart();
            _this._patchOnChange();
        });
        _this._sectionsProcessor.events.addHandler('beforePageInitialize', function (args) {
            _this.events.call('beforeSectionInitialize', {
                section: args.page,
                sectionId: args.pageId,
                page: _this,
                state: args.state
            });
        });
        _this._sectionsProcessor.events.addHandler('afterPageInitialize', function (args) {
            _this.events.call('afterSectionInitialize', {
                section: args.page,
                sectionId: args.pageId,
                page: _this
            });
        });
        return _this;
    }
    FullscreenWizardPage.prototype.dispose = function () {
        this._sectionsProcessor.dispose();
        this._factory.reset();
        this._sections = [];
    };
    FullscreenWizardPage.prototype._patchOnChange = function () {
        var _this = this;
        Object.keys(this._factory.metadata).forEach(function (key) {
            _this._factory.metadata[key].onChange = function () { return _this._onChange(); };
        });
    };
    FullscreenWizardPage.prototype._getPageStyle = function (position, isVisible) {
        if (isVisible === void 0) { isVisible = true; }
        return _utils_1.getSectionStyle(position, this._defaultMargin, isVisible);
    };
    FullscreenWizardPage.prototype._applyCustomizations = function () {
        this._sectionsToUnregister.forEach(function (x) { return x(); });
        this._sectionsToUnregister = [];
        this._sectionPositions.forEach(function (x) { return x(); });
        this._sectionPositions = [];
        this._sectionsToRegister.forEach(function (x) { return x(); });
        this._sectionsToRegister = [];
    };
    FullscreenWizardPage.prototype._setSectionPosition = function (pageId, position) {
        this._pageCss[pageId] = ko.observable(this._getPageStyle(position));
    };
    FullscreenWizardPage.prototype.registerSections = function () { };
    FullscreenWizardPage.prototype.canNext = function () {
        return this._sectionsProcessor.sections.every(this._sectionCondition);
    };
    FullscreenWizardPage.prototype._sectionCondition = function (section) {
        if (section.metadata.required)
            return section.page() && section.metadata.canNext(section.page().page);
        else {
            return !section.page() || section.metadata.canNext(section.page().page);
        }
    };
    FullscreenWizardPage.prototype.canFinish = function () {
        for (var i = this._sections.length - 1; i >= 0; i--) {
            if (this._sections[i].page() && this._sections[i].metadata.canFinish(this._sections[i].page().page))
                return true;
        }
        return false;
    };
    FullscreenWizardPage.prototype.setSectionPosition = function (sectionId, position) {
        var _this = this;
        this._sectionPositions.push(function () {
            _this._setSectionPosition(sectionId, position);
        });
    };
    FullscreenWizardPage.prototype.registerSection = function (sectionId, metadata) {
        var _this = this;
        this._sectionsToRegister.push(function () {
            _this._factory.registerMetadata(sectionId, metadata);
        });
    };
    FullscreenWizardPage.prototype.unregisterSection = function (sectionId) {
        var _this = this;
        this._sectionsToUnregister.push(function () { return _this._factory.unregisterMetadata(sectionId); });
    };
    FullscreenWizardPage.prototype._loadPanelViewModel = function (element) {
        return false;
    };
    FullscreenWizardPage.prototype.getNextSectionId = function (sectionId) { return undefined; };
    FullscreenWizardPage.prototype.initialize = function (state, stateChanged) {
        var _this = this;
        this.registerSections();
        this._applyCustomizations();
        this._sectionsProcessor.initialize(_utils_2.extend(true, {}, state));
        this._stateManager = this._sectionsProcessor.stateManager;
        this._sectionsProcessor.iterator.getNextPageId = function (pageId) { return _this.getNextSectionId(pageId); };
        this._sectionsProcessor.start();
        return $.Deferred().resolve().promise();
    };
    FullscreenWizardPage.prototype._beforeStart = function () { };
    FullscreenWizardPage.prototype.commit = function () {
        var _this = this;
        var deferred = $.Deferred();
        this._sectionsProcessor.finishAction().done(function () {
            deferred.resolve(_utils_2.extend(true, {}, _this._stateManager.getCurrentState()));
        });
        return deferred.promise();
    };
    FullscreenWizardPage.prototype._getPageDescription = function (index, page) {
        return (index + 1) + '. ' + page.metadata.description;
    };
    FullscreenWizardPage.prototype._showPageDescription = function () {
        return this._sections.length > 1;
    };
    return FullscreenWizardPage;
}(wizardPage_1.WizardPageBase));
exports.FullscreenWizardPage = FullscreenWizardPage;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PageFactory = (function () {
    function PageFactory() {
        this.metadata = {};
    }
    PageFactory.prototype.registerMetadata = function (pageId, metadata) {
        if (!metadata.canFinish)
            metadata.canFinish = function (page) { return page.canFinish(); };
        if (!metadata.canNext)
            metadata.canNext = function (page) { return page.canNext(); };
        this.metadata[pageId] = metadata;
    };
    PageFactory.prototype.getMetadata = function (pageId) {
        return this.metadata[pageId];
    };
    PageFactory.prototype.unregisterMetadata = function (pageId) {
        delete this.metadata[pageId];
    };
    PageFactory.prototype.reset = function () {
        this.metadata = {};
    };
    return PageFactory;
}());
exports.PageFactory = PageFactory;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var dataSourceWizardState_1 = __webpack_require__(12);
var _jsonSourceSettings_1 = __webpack_require__(85);
var requestwrapper_1 = __webpack_require__(8);
var jsonDataSource_1 = __webpack_require__(50);
var serializer_1 = __webpack_require__(1);
var localization_utils_1 = __webpack_require__(1);
var pageId_1 = __webpack_require__(5);
var ChooseJsonSourcePage = (function (_super) {
    __extends(ChooseJsonSourcePage, _super);
    function ChooseJsonSourcePage(_requestWrapper, itemsProvider) {
        if (_requestWrapper === void 0) { _requestWrapper = new requestwrapper_1.RequestWrapper(); }
        var _this = _super.call(this) || this;
        _this._requestWrapper = _requestWrapper;
        _this.__validationGroup = null;
        _this.__validationSummary = null;
        _this._jsonSourceTitle = localization_utils_1.getLocalization('JSON Source:', 'DataAccessUIStringId.WizardPageChooseJsonSource_SourceType');
        _this._jsonConnectionTitle = localization_utils_1.getLocalization('Connection Name:', 'AnalyticsCoreStringId.ReportDesigner_Wizard_Json_ConnectionName');
        _this._connectionNameValidationRules = [{
                type: 'required',
                get message() {
                    return _jsonSourceSettings_1.getLocalizedValidationErrorMessage(null, this._jsonConnectionTitle);
                }
            }];
        _this._connectionName = ko.observable('');
        _this._validationGroup = {
            onInitialized: function (args) { return _this._onValidationGroupInitialized(args); },
            onDisposing: function (args) { return _this._onValidationGroupDisposing(args); }
        };
        _this._validationSummary = {
            onInitialized: function (args) { return _this._onValidationSummaryInitialized(args); },
            onDisposing: function (args) { return _this._onValidationSummaryDisposing(args); }
        };
        _this._sources = [];
        _this._disposables.push(_this._jsonStringSettings = new _jsonSourceSettings_1.JsonDataSourceJsonSourcePageStringSettings());
        _this._jsonStringSettings.onChange(function () { return _this._onChange(); });
        _this._disposables.push(_this._jsonUriSetting = new _jsonSourceSettings_1.JsonDataSourceJsonSourcePageUriSettings(_this._requestWrapper, itemsProvider));
        _this._jsonUriSetting.onChange(function () { return _this._onChange(); });
        _this._sources = [
            { value: _this._jsonUriSetting, displayValue: 'Web Service Endpoint (URI)', localizationId: 'DataAccessUIStringId.WizardPageChooseJsonSource_SourceType_Uri' },
            { value: _this._jsonStringSettings, displayValue: 'JSON String', localizationId: 'DataAccessUIStringId.WizardPageChooseJsonSource_SourceType_Custom' }
        ];
        var selectedSource = ko.observable();
        _this._selectedSource = ko.pureComputed({
            read: function () { return selectedSource(); },
            write: function (newVal) {
                if (selectedSource() === newVal)
                    return;
                selectedSource(newVal);
                newVal._validatorsReady && newVal._validatorsReady(false);
                setTimeout(function () {
                    newVal._validate && newVal._validate();
                }, 1);
                _this._onChange();
            }
        });
        _this._selectedSource(_this._sources[0].value);
        _this._disposables.push(_this._selectedSource);
        _this._disposables.push(_this._connectionName.subscribe(function () { return _this._onChange(); }));
        return _this;
    }
    ChooseJsonSourcePage.prototype._onValidationGroupInitialized = function (e) {
        this.__validationGroup = e.component;
    };
    ChooseJsonSourcePage.prototype._onValidationGroupDisposing = function (e) {
        this.__validationGroup = null;
    };
    ChooseJsonSourcePage.prototype._onValidationSummaryInitialized = function (e) {
        var _this = this;
        this.__validationSummary = e.component;
        this.__validationGroup && this.__validationSummary && this._connectionName && this._connectionName() && setTimeout(function () {
            _this.__validationGroup && _this.__validationGroup.validate();
        }, 1);
    };
    ChooseJsonSourcePage.prototype._onValidationSummaryDisposing = function (e) {
        this.__validationSummary = null;
    };
    ChooseJsonSourcePage.prototype.canNext = function () {
        var connectionNameNotEmpty = !!this._connectionName();
        var isCurrentSourceValid = this._selectedSource().isValid();
        var isCurrentSourceEmpty = this._selectedSource().isEmpty();
        return connectionNameNotEmpty && isCurrentSourceValid && !isCurrentSourceEmpty;
    };
    ChooseJsonSourcePage.prototype.commit = function () {
        var jsonDataSource = new jsonDataSource_1.JsonDataSource({});
        this._selectedSource().applySettings(jsonDataSource);
        var serialized = new serializer_1.ModelSerializer().serialize(jsonDataSource);
        return $.Deferred().resolve({
            jsonSource: JSON.stringify(serialized.Source),
            newConnectionName: this._connectionName()
        }).promise();
    };
    ChooseJsonSourcePage.prototype.initialize = function (state) {
        this.__validationGroup = null;
        this.__validationSummary = null;
        var jsonDataSource = dataSourceWizardState_1._restoreJsonDataSourceFromState(state);
        if (jsonDataSource.source.uri()) {
            this._selectedSource(this._jsonUriSetting);
        }
        else if (jsonDataSource.source.json()) {
            this._selectedSource(this._jsonStringSettings);
        }
        this._selectedSource().setValue(jsonDataSource);
        return $.Deferred().resolve().promise();
    };
    return ChooseJsonSourcePage;
}(wizardPage_1.WizardPageBase));
exports.ChooseJsonSourcePage = ChooseJsonSourcePage;
function _registerChooseJsonSourcePage(factory, requestWrapper, getItemsProviderCallback) {
    factory.registerMetadata(pageId_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage, {
        setState: function (data, state) {
            state.jsonSource = data.jsonSource;
            state.newConnectionName = data.newConnectionName;
        },
        getState: function (state) {
            return state.jsonDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.jsonSource = defaultState.jsonSource;
        },
        create: function () {
            return new ChooseJsonSourcePage(requestWrapper, getItemsProviderCallback && getItemsProviderCallback());
        },
        description: localization_utils_1.getLocalization('Create a data connection.', 'AnalyticsCoreStringId.JsonDSWizard_CreateNewConnectionPage_Description'),
        template: 'dxrd-page-jsonsource'
    });
}
exports._registerChooseJsonSourcePage = _registerChooseJsonSourcePage;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var localization_utils_1 = __webpack_require__(1);
var utils_1 = __webpack_require__(1);
exports.defaultObjectDataSourceItemSpecifics = 'Default';
var TreeNodeBase = (function (_super) {
    __extends(TreeNodeBase, _super);
    function TreeNodeBase(name, displayName, specifics, isChecked, afterCheckToggled) {
        if (isChecked === void 0) { isChecked = false; }
        var _this = _super.call(this) || this;
        _this.name = name;
        _this.displayName = displayName;
        _this.specifics = specifics;
        _this.checked = ko.pureComputed(function () { return _this._checked(); });
        _this.isList = false;
        _this._checked = ko.observable(isChecked);
        _this._afterCheckToggled = afterCheckToggled || $.noop;
        return _this;
    }
    TreeNodeBase.prototype.unChecked = function () {
        return this.checked() === false;
    };
    TreeNodeBase.prototype.toggleChecked = function () {
        this.setChecked(!this.checked.peek());
        this._afterCheckToggled(this);
    };
    TreeNodeBase.prototype.setChecked = function (value) {
        this._checked(value);
    };
    return TreeNodeBase;
}(utils_1.Disposable));
exports.TreeNodeBase = TreeNodeBase;
var TreeLeafNode = (function (_super) {
    __extends(TreeLeafNode, _super);
    function TreeLeafNode(name, displayName, specifics, isChecked, nodeArguments, afterCheckToggled) {
        if (isChecked === void 0) { isChecked = false; }
        if (nodeArguments === void 0) { nodeArguments = null; }
        var _this = _super.call(this, name, displayName, specifics, isChecked, afterCheckToggled) || this;
        _this.name = name;
        _this.displayName = displayName;
        _this.specifics = specifics;
        _this.hasQuery = false;
        _this.arguments = nodeArguments;
        return _this;
    }
    return TreeLeafNode;
}(TreeNodeBase));
exports.TreeLeafNode = TreeLeafNode;
var TreeNode = (function (_super) {
    __extends(TreeNode, _super);
    function TreeNode(name, displayName, specifics, isChecked, afterCheckToggled) {
        var _this = _super.call(this, name, displayName, specifics, isChecked, afterCheckToggled) || this;
        _this.countChecked = ko.pureComputed(function () {
            var count = 0;
            for (var i = 0; i < _this.children().length; i++) {
                if (!_this.children()[i].unChecked()) {
                    if (count > 1)
                        break;
                    count++;
                }
            }
            return count;
        });
        _this.isList = true;
        _this.children = ko.observableArray([]);
        _this.checked = ko.pureComputed({
            read: function () {
                if (!_this.initialized()) {
                    return _this._checked();
                }
                else {
                    var selectedItems = 0;
                    var partiallySelectedItems = 0;
                    _this.children().forEach(function (item) {
                        if (item.checked() === true) {
                            selectedItems++;
                        }
                        else if (item.checked() !== false) {
                            partiallySelectedItems++;
                        }
                    });
                    if (selectedItems === 0 && partiallySelectedItems === 0) {
                        return false;
                    }
                    if (selectedItems === _this.children.peek().length) {
                        return true;
                    }
                    return undefined;
                }
            }
        });
        return _this;
    }
    TreeNode.prototype.initialized = function () {
        return this.children().length > 0;
    };
    TreeNode.prototype.setChecked = function (value) {
        this._checked(value);
        this.children.peek().forEach(function (item) {
            item.setChecked(value);
        });
    };
    TreeNode.prototype.initializeChildren = function (children) {
        this.children(children || []);
    };
    return TreeNode;
}(TreeNodeBase));
exports.TreeNode = TreeNode;
var ParameterTreeNode = (function (_super) {
    __extends(ParameterTreeNode, _super);
    function ParameterTreeNode(name, displayName, specifics, isChecked, afterCheckToggled) {
        var _this = _super.call(this, name, displayName, specifics, isChecked, afterCheckToggled) || this;
        _this.countChecked = ko.pureComputed(function () {
            var count = 0;
            _this.hasParamsToEdit(false);
            for (var i = 0; i < _this.children().length; i++) {
                var child = _this.children()[i];
                if (!child.unChecked()) {
                    if (count > 1)
                        break;
                    count++;
                    if (child.arguments && child.arguments.length > 0)
                        _this.hasParamsToEdit(true);
                    if (child.specifics === 'query')
                        _this.hasParamsToEdit(true);
                }
            }
            return count;
        });
        _this.hasParamsToEdit = ko.observable(false);
        return _this;
    }
    return ParameterTreeNode;
}(TreeNode));
exports.ParameterTreeNode = ParameterTreeNode;
var QueriesTreeNode = (function (_super) {
    __extends(QueriesTreeNode, _super);
    function QueriesTreeNode(name, displayName, specifics, isChecked, callbacks, afterCheckToggled) {
        var _this = _super.call(this, name, displayName, specifics, isChecked, afterCheckToggled) || this;
        _this.addAction = {
            clickAction: function (item) {
                if (_this.disableCustomSql()) {
                    return _this.addQuery();
                }
                else {
                    return _this.showPopover();
                }
            },
            imageClassName: 'dxrd-image-add',
            imageTemplateName: 'dxrd-svg-operations-add',
            templateName: 'dx-treelist-action-with-popover',
            text: localization_utils_1.getLocalization('Add query', 'AnalyticsCoreStringId.SqlDSWizard_AddQuery')
        };
        _this.itemClickAction = function (e) {
            _this.popoverVisible(false);
            e.itemData.addAction();
        };
        _this.popoverVisible = ko.observable(false);
        _this.addQuery = function () {
            callbacks().showQbCallBack();
        };
        _this.addCustomQuery = function () {
            callbacks().showQbCallBack(null, true);
        };
        _this.disableCustomSql = function () { return callbacks && callbacks().disableCustomSql; };
        return _this;
    }
    QueriesTreeNode.prototype.getActions = function (context) {
        var result = [];
        if (context.path.indexOf('queries') === 0) {
            result.push(this.addAction);
        }
        return result;
    };
    QueriesTreeNode.prototype.popoverListItems = function () {
        var _this = this;
        return [
            {
                name: localization_utils_1.getLocalization('Run Query Builder', 'DataAccessUIStringId.Button_QueryBuilder'),
                addAction: function () { return _this.addQuery(); }
            },
            {
                name: localization_utils_1.getLocalization('Write Custom SQL', 'AnalyticsCoreStringId.SqlDSWizard_WriteCustomSQL'),
                addAction: function () { return _this.addCustomQuery(); }
            }
        ];
    };
    QueriesTreeNode.prototype.showPopover = function () {
        this.popoverVisible(true);
    };
    return QueriesTreeNode;
}(ParameterTreeNode));
exports.QueriesTreeNode = QueriesTreeNode;
var TreeQueryNode = (function (_super) {
    __extends(TreeQueryNode, _super);
    function TreeQueryNode(name, displayName, specifics, isChecked, parameters, callbacks, afterCheckToggled, query) {
        var _this = _super.call(this, name, displayName, specifics, isChecked, null, afterCheckToggled) || this;
        _this.query = query;
        _this.editAction = {
            clickAction: function (item) {
                return _this.editQuery();
            },
            imageClassName: 'dx-image-edit',
            imageTemplateName: 'dxrd-svg-operations-edit',
            text: localization_utils_1.getLocalization('Edit query', 'AnalyticsCoreStringId.SqlDSWizard_EditQuery')
        };
        _this.removeAction = {
            clickAction: function (item) {
                _this.removeQuery({ model: item.data });
            },
            imageClassName: 'dxrd-image-recycle-bin',
            imageTemplateName: 'dxrd-svg-operations-recycle_bin',
            text: localization_utils_1.getLocalization('Remove query', 'AnalyticsCoreStringId.SqlDSWizard_RemoveQuery')
        };
        _this.parameters = parameters;
        _this.removeQuery = function (e) {
            if (!e.model.unChecked()) {
                e.model.toggleChecked();
            }
            callbacks().deleteAction(e.model.name);
        };
        _this.editQuery = function (e) {
            callbacks().showQbCallBack(_this.name);
        };
        _this.hasQuery = true;
        return _this;
    }
    TreeQueryNode.prototype.setObservableName = function (name) {
        var _this = this;
        this._name = name;
        ['name', 'displayName'].forEach(function (propertyName) {
            return Object.defineProperty(_this, propertyName, {
                get: function () {
                    return this._name();
                },
                set: function (newVal) {
                    return this._name(newVal);
                },
                configurable: true
            });
        });
    };
    TreeQueryNode.prototype.getActions = function (context) {
        var result = [];
        result.push(this.removeAction);
        result.push(this.editAction);
        return result;
    };
    return TreeQueryNode;
}(TreeLeafNode));
exports.TreeQueryNode = TreeQueryNode;
var FieldTreeNode = (function (_super) {
    __extends(FieldTreeNode, _super);
    function FieldTreeNode(name, displayName, specifics, isChecked, path, afterCheckToggled, isDraggable) {
        if (isDraggable === void 0) { isDraggable = false; }
        var _this = _super.call(this, name, displayName, specifics, isChecked, afterCheckToggled) || this;
        _this.visible = ko.observable(true);
        _this.disabled = ko.observable(false);
        _this.path = path;
        _this.isComplex = specifics === exports.defaultObjectDataSourceItemSpecifics;
        if (isDraggable)
            _this.dragData = { noDragable: false };
        return _this;
    }
    return FieldTreeNode;
}(TreeNodeBase));
exports.FieldTreeNode = FieldTreeNode;
var DataMemberTreeNode = (function (_super) {
    __extends(DataMemberTreeNode, _super);
    function DataMemberTreeNode(name, displayName, specifics, isChecked, path, afterCheckToggled) {
        var _this = _super.call(this, name, displayName, specifics, isChecked, afterCheckToggled) || this;
        _this.visible = ko.observable(true);
        _this.path = path;
        _this.isComplex = _this.isList && specifics === exports.defaultObjectDataSourceItemSpecifics;
        _this.checked = ko.pureComputed({
            read: function () {
                if (!_this.initialized()) {
                    return _this._checked();
                }
                else {
                    var selectedItems = 0;
                    var partiallySelectedItems = 0;
                    var visibleChildren = _this.children().filter(function (item) { return item.visible(); });
                    visibleChildren.forEach(function (item) {
                        if (item.checked() === true) {
                            selectedItems++;
                        }
                        else if (item.checked() !== false) {
                            partiallySelectedItems++;
                        }
                    });
                    if (selectedItems === 0 && partiallySelectedItems === 0) {
                        return false;
                    }
                    if (selectedItems === visibleChildren.length) {
                        return true;
                    }
                    return undefined;
                }
            }
        });
        return _this;
    }
    DataMemberTreeNode.prototype.setChecked = function (value) {
        _super.prototype.setChecked.call(this, this.visible() ? value : false);
    };
    return DataMemberTreeNode;
}(TreeNode));
exports.DataMemberTreeNode = DataMemberTreeNode;
var SingleCheckedDataMemberTreeNode = (function (_super) {
    __extends(SingleCheckedDataMemberTreeNode, _super);
    function SingleCheckedDataMemberTreeNode(name, displayName, specifics, isChecked, path, afterCheckToggled) {
        var _this = _super.call(this, name, displayName, specifics, isChecked, path, afterCheckToggled) || this;
        _this.checked = ko.pureComputed({
            read: function () {
                return _this._checked();
            }
        });
        return _this;
    }
    return SingleCheckedDataMemberTreeNode;
}(DataMemberTreeNode));
exports.SingleCheckedDataMemberTreeNode = SingleCheckedDataMemberTreeNode;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizard_1 = __webpack_require__(14);
var localization_utils_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(0);
var templateUtils_1 = __webpack_require__(6);
var PopupWizard = (function (_super) {
    __extends(PopupWizard, _super);
    function PopupWizard(pageFactory, finishCallback) {
        var _this = _super.call(this, pageFactory, finishCallback) || this;
        _this.height = ko.observable(505);
        _this.width = ko.observable(690);
        _this._extendCssClass = '';
        _this._container = _utils_1.getParentContainer;
        _this.itemsProvider = ko.observable();
        _this.nextButton = {
            text: localization_utils_1.getLocalization('Next', 'AnalyticsCoreStringId.Wizard_Next'),
            disabled: ko.computed(function () { return !_this.canNext(); }),
            onClick: function () { return _this.nextAction(); }
        };
        _this.cancelButton = {
            text: localization_utils_1.getLocalization('Cancel', 'AnalyticsCoreStringId.SearchDialog_Cancel'),
            onClick: function () { return _this.isVisible(false); }
        };
        _this.previousButton = {
            text: localization_utils_1.getLocalization('Previous', 'AnalyticsCoreStringId.Wizard_Previous'),
            disabled: ko.computed(function () { return _this.isFirstPage(); }),
            onClick: function () { return _this.previousAction(); }
        };
        _this.finishButton = {
            text: localization_utils_1.getLocalization('Finish', 'AnalyticsCoreStringId.Wizard_Finish'),
            disabled: ko.computed(function () {
                return !_this.canFinish();
            }),
            onClick: function () { return _this.finishAction(); }
        };
        _this._titleTemplate = templateUtils_1.getTemplate('dx-wizard-headerNew');
        _this.title = 'Popup Wizard';
        return _this;
    }
    PopupWizard._getLoadPanelViewModel = function (element, observableVisible) {
        var $container = $(element).closest('.dxrd-wizard-content');
        return {
            animation: {
                show: { type: 'fade', from: 0, to: 1, duration: 700 },
                hide: { type: 'fade', from: 1, to: 0, duration: 700 }
            },
            deferRendering: false,
            message: localization_utils_1.getLocalization('Loading...', 'AnalyticsCoreStringId.Loading'),
            visible: observableVisible,
            shading: true,
            shadingColor: 'transparent',
            position: { of: $container },
            container: $container
        };
    };
    PopupWizard.prototype.start = function () {
        _super.prototype.start.call(this);
        this.isVisible(true);
    };
    PopupWizard.prototype._wizardPopupPosition = function (element) {
        return {
            of: _utils_1.getParentContainer(element)
        };
    };
    PopupWizard.prototype._loadPanelViewModel = function (element) {
        return this._getLoadPanelViewModel(element, this.isLoading);
    };
    PopupWizard.prototype._getLoadPanelViewModel = function (element, observableVisible) {
        return PopupWizard._getLoadPanelViewModel(element, observableVisible);
    };
    return PopupWizard;
}(wizard_1.BaseWizard));
exports.PopupWizard = PopupWizard;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var columnModelMeta_1 = __webpack_require__(26);
var _arrayutils_1 = __webpack_require__(0);
function isAggregatedExpression(object) {
    return object.aggregate() !== columnModelMeta_1.AggregationType.None;
}
exports.isAggregatedExpression = isAggregatedExpression;
var QueryBuilderObjectsProvider = (function () {
    function QueryBuilderObjectsProvider(query, objectFilter) {
        this.getItems = function (pathRequest) {
            var result = $.Deferred();
            var items = [];
            if (pathRequest.fullPath === '') {
                items = objectFilter.filterTables(query().tables())
                    .map(QueryBuilderObjectsProvider._createTableInfo);
            }
            else {
                var table = _arrayutils_1.findFirstItemMatchesCondition(query().tables(), function (table) { return table.actualName() === pathRequest.fullPath; });
                items = objectFilter.filterColumns(table && table.columns() || [])
                    .map(function (column) { return QueryBuilderObjectsProvider._createColumnInfo(column, objectFilter); });
            }
            result.resolve(items);
            return result.promise();
        };
        this.hasParameter = function (name) {
            return query().parameters().filter(function (parameter) { return parameter.name() === name; }).length > 0;
        };
        this.getColumnInfo = function (propertyName) {
            if (propertyName) {
                var table = _arrayutils_1.find(query().tables(), function (t) { return propertyName.indexOf(t.actualName() + '.') === 0; });
                if (table) {
                    var column = _arrayutils_1.find(objectFilter.filterColumns(table.columns() || []), function (c) { return propertyName === (table.actualName() + '.' + objectFilter.getColumnName(c)); });
                    return column ? QueryBuilderObjectsProvider._createColumnInfo(column, objectFilter) : null;
                }
            }
            return null;
        };
    }
    QueryBuilderObjectsProvider._createTableInfo = function (table) {
        return {
            displayName: table.actualName(),
            name: table.actualName(),
            isList: true,
            specifics: 'Default',
            collapsed: ko.observable(true)
        };
    };
    QueryBuilderObjectsProvider._createColumnInfo = function (column, objectFilter) {
        return {
            displayName: objectFilter.getColumnName(column),
            isList: false,
            specifics: objectFilter.getSpecifics(column),
            dataType: objectFilter.getDataType(column),
            name: objectFilter.getColumnName(column)
        };
    };
    QueryBuilderObjectsProvider.whereClauseObjectsFilter = {
        filterColumns: function (columns) { return columns; },
        filterTables: function (tables) { return tables; },
        getColumnName: function (column) { return column.name.peek(); },
        getSpecifics: function (column) { return column.specifics; },
        getDataType: function (column) { return column.dataType.peek(); }
    };
    QueryBuilderObjectsProvider.groupByObjectsFilter = {
        filterColumns: function (columns) { return columns.filter(isAggregatedExpression); },
        filterTables: function (tables) { return tables.filter(function (table) { return table.columns().some(isAggregatedExpression); }); },
        getColumnName: function (column) { return column.actualName.peek(); },
        getSpecifics: function (column) {
            switch (column.aggregate()) {
                case columnModelMeta_1.AggregationType.Avg:
                case columnModelMeta_1.AggregationType.AvgDistinct:
                    return 'Float';
                case columnModelMeta_1.AggregationType.Count:
                case columnModelMeta_1.AggregationType.CountDistinct:
                    return 'Integer';
                default:
                    return column.specifics;
            }
        },
        getDataType: function (column) { return null; }
    };
    return QueryBuilderObjectsProvider;
}());
exports.QueryBuilderObjectsProvider = QueryBuilderObjectsProvider;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorTemplates_1 = __webpack_require__(25);
var size_1 = __webpack_require__(4);
var point_1 = __webpack_require__(4);
exports.name = { propertyName: 'name', modelName: '@Name', displayName: 'Name', localizationId: 'DevExpress.DataAccess.Sql.SqlQuery.Name', disabled: true, editor: editorTemplates_1.editorTemplates.getEditor('text') };
exports.alias = { propertyName: 'alias', modelName: '@Alias', displayName: 'Alias', localizationId: 'DataAccessUIStringId.QueryBuilderColumns_Alias', defaultVal: '', editor: editorTemplates_1.editorTemplates.getEditor('text') };
exports.text = { propertyName: 'text', modelName: '@Text', displayName: 'Text', editor: editorTemplates_1.editorTemplates.getEditor('text') };
exports.selected = { propertyName: 'selected', displayName: 'Output', editor: editorTemplates_1.editorTemplates.getEditor('bool'), localizationId: 'DataAccessUIStringId.QueryBuilderColumns_Output' };
exports.size = { propertyName: 'size', modelName: '@Size', defaultVal: '100,125', from: size_1.Size.fromString };
exports.location = { propertyName: 'location', modelName: '@Location', from: point_1.Point.fromString };
exports.sizeLocation = [exports.size, exports.location];
exports.unknownSerializationsInfo = [exports.name].concat(exports.sizeLocation);


/***/ }),
/* 45 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Criteria;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ParametersMode = {
    ReadWrite: 'ReadWrite',
    Read: 'Read',
    Disabled: 'Disabled'
};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var controlsFactory_1 = __webpack_require__(1);
var metadata_1 = __webpack_require__(20);
var elementViewModel_1 = __webpack_require__(4);
var baseSurface_1 = __webpack_require__(4);
var connectorSurface_1 = __webpack_require__(100);
var diagramElementModel_1 = __webpack_require__(15);
var diagramElementSurface_1 = __webpack_require__(29);
var connectorModel_1 = __webpack_require__(64);
var routedConnectorSurface_1 = __webpack_require__(48);
var routedConnectorModel_1 = __webpack_require__(31);
var connectionPointModel_1 = __webpack_require__(65);
var connectionPointSurface_1 = __webpack_require__(22);
var diagramModel_1 = __webpack_require__(66);
var diagramSurface_1 = __webpack_require__(67);
var connectingPointModel_1 = __webpack_require__(30);
var connectingPointSurface_1 = __webpack_require__(63);
var editorsInfo_1 = __webpack_require__(6);
exports.diagramControlsFactory = new controlsFactory_1.ControlsFactory();
function registerControls() {
    exports.diagramControlsFactory.registerControl('Unknown', {
        info: metadata_1.unknownSerializationsInfo,
        type: elementViewModel_1.ElementViewModel,
        nonToolboxItem: true,
        surfaceType: baseSurface_1.SurfaceElementBase
    });
    exports.diagramControlsFactory.registerControl('Connector', {
        info: [
            metadata_1.name,
            { propertyName: 'location', displayName: 'Location', editor: editorsInfo_1.editorTemplates.getEditor('objecteditor') },
            { propertyName: 'startPoint', modelName: '@StartPoint', link: true },
            { propertyName: 'endPoint', modelName: '@EndPoint', link: true }
        ],
        surfaceType: connectorSurface_1.ConnectorSurface,
        type: connectorModel_1.ConnectorViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    exports.diagramControlsFactory.registerControl('RoutedConnector', {
        info: [
            metadata_1.name,
            { propertyName: 'location', displayName: 'Location', editor: editorsInfo_1.editorTemplates.getEditor('objecteditor') },
            { propertyName: 'startPoint', modelName: '@StartPoint', link: true },
            { propertyName: 'endPoint', modelName: '@EndPoint', link: true }
        ],
        surfaceType: routedConnectorSurface_1.RoutedConnectorSurface,
        type: routedConnectorModel_1.RoutedConnectorViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    exports.diagramControlsFactory.registerControl('ConnectionPoint', {
        info: connectionPointModel_1.connectionPointSerializationInfo,
        surfaceType: connectionPointSurface_1.ConnectionPointSurface,
        type: connectionPointModel_1.ConnectionPointViewModel,
        elementActionsTypes: [],
        nonToolboxItem: true
    });
    exports.diagramControlsFactory.registerControl('Diagram', {
        info: diagramModel_1.diagramSerializationsInfo,
        surfaceType: diagramSurface_1.DiagramSurface,
        popularProperties: ['name'],
        type: diagramModel_1.DiagramViewModel,
        elementActionsTypes: [],
        isContainer: true,
        nonToolboxItem: true
    });
    exports.diagramControlsFactory.registerControl('DiagramElement', {
        info: diagramElementModel_1.diagramElementSerializationInfo,
        defaultVal: {
            '@SizeF': '150,50',
            'ConnectingPoints': {
                'Item1': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '1',
                    '@PercentOffsetY': '0.5',
                },
                'Item2': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '1',
                },
                'Item3': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '0',
                },
                'Item4': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0',
                    '@PercentOffsetY': '0.5',
                }
            }
        },
        surfaceType: diagramElementSurface_1.DiagramElementSurface,
        popularProperties: ['text'],
        type: diagramElementModel_1.DiagramElementViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    exports.diagramControlsFactory.registerControl('Ellipse', {
        info: diagramElementModel_1.diagramElementSerializationInfo,
        defaultVal: {
            '@SizeF': '150,50',
            '@Type': 'Ellipse',
            'ConnectingPoints': {
                'Item1': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '1',
                    '@PercentOffsetY': '0.5',
                },
                'Item2': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '1',
                },
                'Item3': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '0',
                },
                'Item4': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0',
                    '@PercentOffsetY': '0.5',
                }
            }
        },
        surfaceType: diagramElementSurface_1.DiagramElementSurface,
        popularProperties: ['text'],
        type: diagramElementModel_1.DiagramElementViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    exports.diagramControlsFactory.registerControl('Condition', {
        info: diagramElementModel_1.diagramElementSerializationInfo,
        defaultVal: {
            '@SizeF': '150,50',
            '@Type': 'Condition',
            'ConnectingPoints': {
                'Item1': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '1',
                    '@PercentOffsetY': '0.5',
                },
                'Item2': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '1',
                },
                'Item3': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0.5',
                    '@PercentOffsetY': '0',
                },
                'Item4': {
                    '@ControlType': 'ConnectingPoint',
                    '@PercentOffsetX': '0',
                    '@PercentOffsetY': '0.5',
                }
            }
        },
        surfaceType: diagramElementSurface_1.DiagramElementSurface,
        popularProperties: ['text'],
        type: diagramElementModel_1.DiagramElementViewModel,
        elementActionsTypes: [],
        nonToolboxItem: false
    });
    exports.diagramControlsFactory.registerControl('ConnectingPoint', {
        info: connectingPointModel_1.connectingPointSerializationInfo,
        surfaceType: connectingPointSurface_1.ConnectingPointSurface,
        type: connectingPointModel_1.ConnectingPointViewModel,
        elementActionsTypes: [],
        nonToolboxItem: true
    });
}
exports.registerControls = registerControls;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var diagramElementSurface_1 = __webpack_require__(29);
var connectionPointSurface_1 = __webpack_require__(22);
var RoutedConnectorSurface = (function (_super) {
    __extends(RoutedConnectorSurface, _super);
    function RoutedConnectorSurface(control, context) {
        var _this = _super.call(this, control, context, null) || this;
        _this.template = 'dxdd-routed-connector';
        _this.selectiontemplate = 'dxdd-routed-connector-selection';
        _this.showArrow = ko.observable(false);
        _this.showRightArrow = ko.observable(false);
        _this.isVisible = ko.observable(true);
        _this.routePoints = ko.observableArray();
        _this.routePointsSet = ko.pureComputed(function () {
            var points = [];
            _this.routePoints().forEach(function (point) {
                points.push(point.x() + ' ' + point.y());
            });
            return points.join(', ');
        });
        _this.routeLineWrappers = ko.pureComputed(function () {
            var result = [];
            for (var i = 1; i < _this.routePoints().length; i++) {
                result.push(_this._createRouteLineWrapper(_this.routePoints()[i - 1], _this.routePoints()[i], i === 1 || i === _this.routePoints().length - 1));
            }
            return result;
        });
        _this.connectorID = function () { return _this._connectorID; };
        _this._connectorID = RoutedConnectorSurface._connectorsCount++;
        _this.startPoint = ko.pureComputed(function () {
            return new connectionPointSurface_1.ConnectionPointSurface(control.startPoint(), context);
        });
        _this.endPoint = ko.pureComputed(function () {
            return new connectionPointSurface_1.ConnectionPointSurface(control.endPoint(), context);
        });
        _this._disposables.push(control.routePoints.subscribe(function (routePoints) {
            _this._updateRoutePoints();
        }));
        _this._updateRoutePoints();
        return _this;
    }
    RoutedConnectorSurface.prototype._createRoutePoint = function (point, base) {
        var _this = this;
        return {
            x: ko.pureComputed(function () {
                if (_this._context.rtl()) {
                    return Math.round(_this.getControlModel().size.width() - (point.x() - base.x()));
                }
                else {
                    return Math.round(point.x() - base.x());
                }
            }),
            y: ko.pureComputed(function () { return Math.round(point.y() - base.y()); }),
            modelPoint: point
        };
    };
    RoutedConnectorSurface.prototype._createRouteLineWrapper = function (point1, point2, isLocked) {
        var _this = this;
        if (isLocked === void 0) { isLocked = false; }
        var _self = this, isVerticalLine = Math.abs(point1.x.peek() - point2.x.peek()) < 1, absoluteTop = point1.modelPoint.y.peek(), absoluteLeft = point1.modelPoint.x.peek(), position = {
            top: Math.min(point1.y.peek(), point2.y.peek()) - 2,
            left: Math.min(point1.x.peek(), point2.x.peek()) - 2,
            width: Math.abs(point1.x.peek() - point2.x.peek()) + 6,
            height: Math.abs(point1.y.peek() - point2.y.peek()) + 6
        }, resizeHandler = function (params) {
            _self._control.freezeRoute(true);
            try {
                _self._control.beginUpdate();
                if (isVerticalLine) {
                    if (_this._context.rtl()) {
                        var newX = absoluteLeft - params.delta.dx;
                    }
                    else {
                        var newX = absoluteLeft + params.delta.dx;
                    }
                    point1.modelPoint.x(newX);
                    point2.modelPoint.x(newX);
                }
                else {
                    var newY = absoluteTop + params.delta.dy;
                    point1.modelPoint.y(newY);
                    point2.modelPoint.y(newY);
                }
            }
            finally {
                _self._control.endUpdate();
            }
        };
        return {
            position: position,
            isVerticalLine: isVerticalLine,
            resizeHandler: resizeHandler,
            resizeStopped: function () {
                _self._control.routePoints.notifySubscribers(_self._control.routePoints());
            },
            isLocked: ko.observable(isLocked)
        };
    };
    RoutedConnectorSurface.prototype._updateRoutePoints = function () {
        var _this = this;
        var points = [], control = this.getControlModel(), base = control.location;
        points.push(this._createRoutePoint(control.startPoint().location, base));
        control.routePoints().forEach(function (point) {
            points.push(_this._createRoutePoint(point, base));
        });
        points.push(this._createRoutePoint(control.endPoint().location, base));
        this.routePoints(points);
    };
    RoutedConnectorSurface._connectorsCount = 0;
    return RoutedConnectorSurface;
}(diagramElementSurface_1.DiagramElementBaseSurface));
exports.RoutedConnectorSurface = RoutedConnectorSurface;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var serializer_1 = __webpack_require__(1);
var _dbSchema_1 = __webpack_require__(19);
var localization_utils_1 = __webpack_require__(1);
var parsers_1 = __webpack_require__(1);
var JsonNodeType;
(function (JsonNodeType) {
    JsonNodeType[JsonNodeType["Object"] = 0] = "Object";
    JsonNodeType[JsonNodeType["Array"] = 1] = "Array";
    JsonNodeType[JsonNodeType["Property"] = 2] = "Property";
})(JsonNodeType = exports.JsonNodeType || (exports.JsonNodeType = {}));
var JsonNode = (function () {
    function JsonNode(model, serializer) {
        this.nodes = [];
        if (!model)
            return;
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(this, model);
        var innerNodes = model['Node'];
        var currentNodes = innerNodes instanceof Array ?
            _dbSchema_1.deserializeToCollection(innerNodes, function (nodeModel) { return new JsonNode(nodeModel); }).sort(function (a, b) { return a.name().localeCompare(b.name()); })
            : !innerNodes ? [] : [new JsonNode(innerNodes)];
        this.nodes = currentNodes;
    }
    JsonNode.from = function (model, serializer) {
        return new JsonNode(model, serializer);
    };
    JsonNode.toJsonNodes = function (value, serializer, refs) {
        return (value || []).map(function (item) { return JsonNode.toJsonNode(item, serializer, refs); });
    };
    JsonNode.toJsonNode = function (value, serializer, refs, recoursive) {
        if (recoursive === void 0) { recoursive = true; }
        var obj = serializer.serialize(value, jsonSchemaNodeSerializationInfo, refs);
        var nodes = recoursive ? JsonNode.toJsonNodes(value.nodes, serializer, refs) : [];
        if (nodes.length > 0)
            obj['Node'] = nodes;
        return obj;
    };
    JsonNode.prototype.getInfo = function () {
        return jsonSchemaNodeSerializationInfo;
    };
    return JsonNode;
}());
exports.JsonNode = JsonNode;
var JsonSchemaNode = (function (_super) {
    __extends(JsonSchemaNode, _super);
    function JsonSchemaNode(model, serializer) {
        var _this = _super.call(this, model['Node'], serializer) || this;
        _this.nodeType = JsonNodeType[JsonNodeType.Object];
        _this.valueType = 'Unknown';
        _this.displayName = localization_utils_1.getLocalization('root');
        _this.selected = ko.observable(false);
        return _this;
    }
    JsonSchemaNode.from = function (model, serializer) {
        return new JsonSchemaNode(model || {}, serializer);
    };
    JsonSchemaNode.toJson = function (value, serializer, refs) {
        if (!value)
            return {};
        var obj = { Node: JsonNode.toJsonNode(value, serializer, refs, false) };
        obj.Node['Node'] = JsonNode.toJsonNodes(value.nodes, serializer, refs);
        return obj;
    };
    JsonSchemaNode.prototype.getInfo = function () {
        return jsonSchemaNodeSerializationInfo;
    };
    return JsonSchemaNode;
}(JsonNode));
exports.JsonSchemaNode = JsonSchemaNode;
var JsonSchemaRootNode = (function (_super) {
    __extends(JsonSchemaRootNode, _super);
    function JsonSchemaRootNode(model, serializer) {
        var _this = _super.call(this, model) || this;
        _this._rootElementList = null;
        return _this;
    }
    JsonSchemaRootNode.from = function (model, serializer) {
        return new JsonSchemaRootNode(model, serializer);
    };
    JsonSchemaRootNode.toJson = function (value, serializer, refs) {
        return JsonSchemaNode.toJson(value.nodes[0], serializer, refs);
    };
    JsonSchemaRootNode.prototype.getInfo = function () {
        return jsonSchemaRootNodeSerializationInfo;
    };
    JsonSchemaRootNode.prototype.getRootElementPartList = function (allowObjectRootElements) {
        if (allowObjectRootElements === void 0) { allowObjectRootElements = true; }
        if (this._rootElementList)
            return this._rootElementList;
        if (this.nodes.length === 0)
            return [];
        this._rootElementList = [];
        var node = this.nodes[0];
        var currentPath = {
            fullPath: ko.unwrap(node.name),
            path: '',
            pathParts: [ko.unwrap(node.name)]
        };
        this._fillRootElementList(node, currentPath, allowObjectRootElements);
        this._rootElementList.sort(function (a, b) { return a.fullPath.localeCompare(b.fullPath); });
        return this._rootElementList;
    };
    JsonSchemaRootNode.prototype._fillRootElementList = function (node, currentPath, allowObjectRootElements) {
        var _this = this;
        if (node === void 0) { node = this.nodes[0]; }
        if (currentPath === void 0) { currentPath = { fullPath: 'root', path: '', pathParts: ['root'] }; }
        if (!node)
            return this._rootElementList;
        var nodeType = ko.unwrap(node.nodeType);
        if (nodeType == JsonNodeType[JsonNodeType.Property])
            return;
        if (nodeType === JsonNodeType[JsonNodeType.Array]) {
            this._rootElementList.push(currentPath);
            return;
        }
        if ((allowObjectRootElements && nodeType === JsonNodeType[JsonNodeType.Object])) {
            this._rootElementList.push(currentPath);
        }
        (node.nodes || []).forEach(function (x) {
            var nextPath = _this._getNextPath(currentPath, x.name());
            _this._fillRootElementList(x, nextPath, allowObjectRootElements);
        });
        return this._rootElementList;
    };
    JsonSchemaRootNode.prototype._getNextPath = function (currentPath, nodeName) {
        var _nodeName = !currentPath.fullPath ? nodeName : [currentPath.fullPath, nodeName].join('.');
        return {
            pathParts: currentPath.pathParts.concat(nodeName),
            fullPath: _nodeName,
            path: nodeName
        };
    };
    return JsonSchemaRootNode;
}(JsonNode));
exports.JsonSchemaRootNode = JsonSchemaRootNode;
var jsonSchemaNodeSerializationInfo = [
    { propertyName: 'nodes', modelName: 'Node', from: JsonNode.from, toJsonObject: JsonNode.toJsonNodes },
    { propertyName: 'name', modelName: '@Name' },
    { propertyName: 'selected', modelName: '@Selected', from: parsers_1.parseBool },
    { propertyName: 'nodeType', modelName: '@NodeType' },
    { propertyName: 'type', modelName: '@Type' }
];
var jsonSchemaRootNodeSerializationInfo = [
    { propertyName: 'nodes', modelName: 'Node', from: JsonSchemaRootNode.from, toJsonObject: JsonSchemaRootNode.toJsonNodes }
];


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var utils_1 = __webpack_require__(1);
var serializer_1 = __webpack_require__(1);
var requestwrapper_1 = __webpack_require__(8);
var jsonSchemaProvider_1 = __webpack_require__(108);
var jsonSchemaNode_1 = __webpack_require__(49);
var jsonSource_1 = __webpack_require__(107);
var JsonDataSource = (function (_super) {
    __extends(JsonDataSource, _super);
    function JsonDataSource(model, serializer, requestWrapper) {
        if (requestWrapper === void 0) { requestWrapper = new requestwrapper_1.RequestWrapper(); }
        var _this = _super.call(this) || this;
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this.jsonSchemaProvider = new jsonSchemaProvider_1.JsonSchemaProvider(_this, requestWrapper);
        _this.source && _this._disposables.push(_this.source);
        _this._disposables.push(_this.connectionName.subscribe(function () {
            _this.source.resetSource();
        }));
        return _this;
    }
    JsonDataSource.prototype.getInfo = function () {
        return jsonDataSourceSerializationInfo;
    };
    JsonDataSource.prototype.clone = function (serializer) {
        var serializer = serializer || new serializer_1.ModelSerializer();
        var serialized = serializer.serialize(this);
        return new JsonDataSource(serialized);
    };
    JsonDataSource.from = function (model, serializer) {
        return new JsonDataSource(model, serializer);
    };
    JsonDataSource.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, jsonDataSourceSerializationInfo, refs);
    };
    JsonDataSource.prototype.getSchema = function (parameters) {
        var _this = this;
        if (parameters === void 0) { parameters = []; }
        var deferred = $.Deferred();
        this.jsonSchemaProvider.getJsonSchema(parameters)
            .done(function (schema) {
            _this.schema = schema;
            deferred.resolve(schema);
        })
            .fail(function () {
            _this.schema = null;
            deferred.reject();
        });
        return deferred.promise();
    };
    return JsonDataSource;
}(utils_1.Disposable));
exports.JsonDataSource = JsonDataSource;
var jsonDataSourceSerializationInfo = [
    { propertyName: 'name', modelName: '@Name' },
    { propertyName: 'connectionName', modelName: '@ConnectionName' },
    { propertyName: 'rootElement', modelName: '@RootElement', defaultVal: 'root' },
    { propertyName: 'schema', modelName: 'Schema', from: jsonSchemaNode_1.JsonSchemaRootNode.from, toJsonObject: jsonSchemaNode_1.JsonSchemaRootNode.toJson },
    { propertyName: 'source', modelName: 'Source', from: jsonSource_1.JsonSource.from, toJsonObject: jsonSource_1.JsonSource.toJson }
];


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(1);
var serializer_1 = __webpack_require__(1);
var masterDetailRelationMeta_1 = __webpack_require__(113);
var _utils_1 = __webpack_require__(0);
var MasterDetailRelation = (function (_super) {
    __extends(MasterDetailRelation, _super);
    function MasterDetailRelation(model, serializer) {
        var _this = _super.call(this) || this;
        _this.name = ko.pureComputed({
            read: function () {
                return _this._customName() || _this.masterQuery() + _this.detailQuery();
            },
            write: function (value) {
                _this._customName(value);
            },
            deferEvaluation: true
        });
        (serializer || new serializer_1.ModelSerializer()).deserialize(_this, _utils_1.extend(model, { '@ItemType': 'Relation' }));
        _this._disposables.push(_this.name);
        return _this;
    }
    MasterDetailRelation.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.keyColumns);
    };
    MasterDetailRelation.prototype.createKeyColumn = function () {
        var newKeyColumn = {
            masterColumn: ko.observable(),
            detailColumn: ko.observable(),
            itemType: 'KeyColumn'
        };
        this.keyColumns.push(newKeyColumn);
    };
    MasterDetailRelation.prototype.getInfo = function () {
        return masterDetailRelationMeta_1.masterDetailRelationSerializationsInfo;
    };
    return MasterDetailRelation;
}(utils_1.Disposable));
exports.MasterDetailRelation = MasterDetailRelation;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var _dbSchema_1 = __webpack_require__(19);
var localization_utils_1 = __webpack_require__(1);
var ObjectDataMemberBase = (function () {
    function ObjectDataMemberBase(model) {
        var _this = this;
        model && (function () {
            _this.name = model.name;
            _this.displayName = model.displayName;
            _this.dataMember = model.dataMember;
        })();
    }
    return ObjectDataMemberBase;
}());
exports.ObjectDataMemberBase = ObjectDataMemberBase;
var ObjectParameter = (function (_super) {
    __extends(ObjectParameter, _super);
    function ObjectParameter(model) {
        var _this = _super.call(this, model) || this;
        model && (function () {
            _this.value = model.value;
            _this.type = model.type;
            _this.resultType = model.resultType;
        })();
        return _this;
    }
    return ObjectParameter;
}(ObjectDataMemberBase));
exports.ObjectParameter = ObjectParameter;
var ObjectDataSourceMethodBase = (function (_super) {
    __extends(ObjectDataSourceMethodBase, _super);
    function ObjectDataSourceMethodBase(model) {
        var _this = _super.call(this, model) || this;
        _this.parameters = _dbSchema_1.deserializeToCollection(model.parameters, function (parameters) { return new ObjectParameter(parameters); });
        return _this;
    }
    return ObjectDataSourceMethodBase;
}(ObjectDataMemberBase));
exports.ObjectDataSourceMethodBase = ObjectDataSourceMethodBase;
var ObjectDataMember = (function (_super) {
    __extends(ObjectDataMember, _super);
    function ObjectDataMember(model) {
        var _this = _super.call(this, model) || this;
        _this.disabled = ko.observable(false);
        _this.memberType = model && model.memberType;
        _this.isStatic = model.isStatic;
        return _this;
    }
    ObjectDataMember.empty = function () {
        return new ObjectDataMember({
            displayName: ObjectDataMember.entireObject(),
            name: ObjectDataMember.entireObject(),
            parameters: []
        });
    };
    ObjectDataMember.prototype.isEntireObject = function () {
        return this.name == ObjectDataMember.entireObject() && this.displayName == ObjectDataMember.entireObject();
    };
    ObjectDataMember.prototype.isAvailable = function () {
        return !this.disabled();
    };
    ObjectDataMember.entireObject = function () { return localization_utils_1.getLocalization('Entire Object', 'AnalyticsCoreStringId.ObjectDSWizard_ConfigureParameters_EntireObject'); };
    return ObjectDataMember;
}(ObjectDataSourceMethodBase));
exports.ObjectDataMember = ObjectDataMember;
var ObjectCtor = (function (_super) {
    __extends(ObjectCtor, _super);
    function ObjectCtor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ObjectCtor;
}(ObjectDataSourceMethodBase));
exports.ObjectCtor = ObjectCtor;
var ObjectType = (function (_super) {
    __extends(ObjectType, _super);
    function ObjectType(model) {
        var _this = _super.call(this, model) || this;
        _this.ctors = _dbSchema_1.deserializeToCollection(model.ctors, function (ctor) { return new ObjectCtor(ctor); });
        _this.members = _dbSchema_1.deserializeToCollection(model.members, function (member) { return new ObjectDataMember(member); });
        return _this;
    }
    ObjectType.prototype.updateMembers = function (selectedCtor) {
        this.members.forEach(function (member) {
            if (selectedCtor) {
                member.disabled(false);
            }
            else {
                member.disabled(member.isEntireObject() ? true : !member.isStatic);
            }
        });
    };
    return ObjectType;
}(ObjectDataMemberBase));
exports.ObjectType = ObjectType;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(168);
function createDefaultSQLAceOptions(readOnly) {
    if (readOnly === void 0) { readOnly = false; }
    return {
        showLineNumbers: false,
        showPrintMargin: false,
        enableBasicAutocompletion: false,
        enableLiveAutocompletion: false,
        readOnly: readOnly,
        highlightSelectedWord: readOnly,
        showGutter: false,
        highlightActiveLine: false
    };
}
exports.createDefaultSQLAceOptions = createDefaultSQLAceOptions;
function createDefaultSQLAdditionalOptions(value) {
    return {
        onChange: function (session) {
            value(session.getValue());
        },
        onValueChange: function (editor) {
            editor.resize(true);
        },
        changeTimeout: 200,
        overrideEditorFocus: true,
        setUseWrapMode: true
    };
}
exports.createDefaultSQLAdditionalOptions = createDefaultSQLAdditionalOptions;
function createDefaultSQLLanguageHelper() {
    return {
        getLanguageMode: function () { return 'ace/mode/sql'; },
        createCompleters: function () { return []; }
    };
}
exports.createDefaultSQLLanguageHelper = createDefaultSQLLanguageHelper;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var _arrayutils_1 = __webpack_require__(0);
var pageId_1 = __webpack_require__(5);
var _localization_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var ChooseSqlConnectionPage = (function (_super) {
    __extends(ChooseSqlConnectionPage, _super);
    function ChooseSqlConnectionPage(connectionStrings) {
        var _this = _super.call(this) || this;
        _this._connectionStrings = ko.observableArray([]);
        _this._selectedConnectionString = ko.observableArray([]);
        _this._connectionStrings = connectionStrings;
        _this._disposables.push(_this._selectedConnectionString.subscribe(function () { return _this._onChange(); }));
        return _this;
    }
    ChooseSqlConnectionPage.prototype.initialize = function (state) {
        var connectionStrings = this._connectionStrings();
        if (connectionStrings.length === 1) {
            this._selectedConnectionString([connectionStrings[0]]);
        }
        else {
            var selectedString = _arrayutils_1.getFirstItemByPropertyValue(connectionStrings, 'name', state.name) || connectionStrings[0];
            this._selectedConnectionString(selectedString ? [selectedString] : []);
        }
        return $.Deferred().resolve().promise();
    };
    ChooseSqlConnectionPage.prototype.canNext = function () {
        return this._selectedConnectionString().length !== 0;
    };
    ChooseSqlConnectionPage.prototype.commit = function () {
        var deferred = $.Deferred();
        if (this._selectedConnectionString()[0]) {
            deferred.resolve({
                name: this._selectedConnectionString()[0].name
            });
        }
        else {
            deferred.resolve();
        }
        return deferred.promise();
    };
    return ChooseSqlConnectionPage;
}(wizardPage_1.WizardPageBase));
exports.ChooseSqlConnectionPage = ChooseSqlConnectionPage;
function _registerChooseSqlConnectionPage(factory, connectionStrings) {
    factory.registerMetadata(pageId_1.SqlDataSourceWizardPageId.ChooseConnectionPage, {
        create: function () {
            return new ChooseSqlConnectionPage(connectionStrings);
        },
        setState: function (data, state) {
            state.name = data.name;
        },
        getState: function (state) {
            return state.sqlDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.name = defaultState.name;
        },
        template: 'dxrd-page-connectionstring',
        description: _localization_1.isCustomizedWithUpdateLocalizationMethod('Choose a data connection') || localization_utils_1.getLocalization('Choose a data connection.', 'AnalyticsCoreStringId.SqlDSWizard_PageChooseConnection')
    });
}
exports._registerChooseSqlConnectionPage = _registerChooseSqlConnectionPage;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var chooseAvailablePage_1 = __webpack_require__(124);
var _arrayutils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var pageId_1 = __webpack_require__(5);
var ChooseJsonConnectionPage = (function (_super) {
    __extends(ChooseJsonConnectionPage, _super);
    function ChooseJsonConnectionPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChooseJsonConnectionPage.prototype.commit = function () {
        return $.Deferred().resolve({
            connectionName: !this.selectedOperation().createNew ? this.selectedItems()[0].name : null
        }).promise();
    };
    ChooseJsonConnectionPage.prototype._getSelectedItem = function (data) {
        return _arrayutils_1.getFirstItemByPropertyValue(this.items(), 'name', data.connectionName) || _super.prototype._getSelectedItem.call(this);
    };
    Object.defineProperty(ChooseJsonConnectionPage.prototype, "createNewOperationText", {
        get: function () {
            return localization_utils_1.getLocalization("No, I'd like to create a new data connection", 'AnalyticsCoreStringId.JsonDSWizard_CreateNewConnection');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChooseJsonConnectionPage.prototype, "existingOperationText", {
        get: function () {
            return localization_utils_1.getLocalization('Yes, let me choose an existing data connection from the list', 'AnalyticsCoreStringId.JsonDSWizard_UseExistingConnection');
        },
        enumerable: true,
        configurable: true
    });
    return ChooseJsonConnectionPage;
}(chooseAvailablePage_1.ChooseAvailableItemPage));
exports.ChooseJsonConnectionPage = ChooseJsonConnectionPage;
function _registerChooseJsonConnectionPage(factory, wizardOptions) {
    factory.registerMetadata(pageId_1.JsonDataSourceWizardPageId.ChooseConnectionPage, {
        create: function () {
            return new ChooseJsonConnectionPage(wizardOptions.connectionStrings && wizardOptions.connectionStrings.json, wizardOptions.allowCreateNewJsonConnection);
        },
        description: wizardOptions.allowCreateNewJsonConnection ?
            localization_utils_1.getLocalization('Do you want to use an existing data connection?', 'AnalyticsCoreStringId.JsonDSWizard_ChooseConnection_Description') :
            localization_utils_1.getLocalization('Choose a data connection.', 'AnalyticsCoreStringId.SqlDSWizard_PageChooseConnection'),
        getState: function (state) { return state.jsonDataSourceWizard; },
        setState: function (data, state) { return state.connectionName = data.connectionName; },
        resetState: function (state, defaultState) {
            state.connectionName = defaultState.connectionName;
        },
        template: 'dxrd-page-selectitems'
    });
}
exports._registerChooseJsonConnectionPage = _registerChooseJsonConnectionPage;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var dataSourceWizardState_1 = __webpack_require__(12);
var _jsonTreeNodeItemsProvider_1 = __webpack_require__(128);
var jsonSchemaNode_1 = __webpack_require__(49);
var _treeListNode_1 = __webpack_require__(41);
var requestwrapper_1 = __webpack_require__(8);
var _fieldListProvider_1 = __webpack_require__(0);
var serializer_1 = __webpack_require__(1);
var localization_utils_1 = __webpack_require__(1);
var pageId_1 = __webpack_require__(5);
var ChooseJsonSchemaPage = (function (_super) {
    __extends(ChooseJsonSchemaPage, _super);
    function ChooseJsonSchemaPage(_requestWrapper, _allowObjectRootElements, _callbacks) {
        if (_requestWrapper === void 0) { _requestWrapper = new requestwrapper_1.RequestWrapper(); }
        if (_allowObjectRootElements === void 0) { _allowObjectRootElements = true; }
        var _this = _super.call(this) || this;
        _this._requestWrapper = _requestWrapper;
        _this._allowObjectRootElements = _allowObjectRootElements;
        _this._callbacks = _callbacks;
        _this._rootItems = ko.observableArray([]);
        _this._fieldListItemsProvider = ko.observable(null);
        _this._fieldSelectedPath = ko.observable(null);
        _this._cachedState = {
            connectionName: null,
            jsonSource: null
        };
        _this._createTreeNode = function (item, isChecked, path) {
            var node = new _treeListNode_1.DataMemberTreeNode(item.name, item.displayName, item.specifics, isChecked, path);
            _this._disposables.push(node.checked.subscribe(function () { return _this._onChange(); }));
            return node;
        };
        _this._createLeafTreeNode = function (item, isChecked, path) {
            var node = new _treeListNode_1.FieldTreeNode(item.name, item.displayName, item.specifics, isChecked, path);
            _this._disposables.push(node.checked.subscribe(function () { return _this._onChange(); }));
            return node;
        };
        _this._rootElementTitle = localization_utils_1.getLocalization('Root element:', 'DataAccessUIStringId.WizardPageChooseJsonSchema_RootElement');
        _this._rootElementList = ko.observable([]);
        _this._selectedRootElement = ko.observable(null);
        var rootElementSubscription = null;
        _this._disposables.push(_this._rootElementList.subscribe(function (rootElements) {
            rootElementSubscription && rootElementSubscription.dispose();
            rootElementSubscription = _this._selectedRootElement.subscribe(function (selectedPath) {
                if (!selectedPath)
                    return _this._rootItems([]);
                var rootNode = _this._getSchemaToDataMemberInfo(selectedPath);
                if (rootNode) {
                    _this._rootItems([{
                            name: ko.unwrap(rootNode.name),
                            isSelected: ko.unwrap(rootNode.selected),
                            displayName: ko.unwrap(rootNode.displayName) || ko.unwrap(rootNode.name),
                            data: rootNode,
                            specifics: rootNode.nodes.length > 0 ? 'List' : 'Default'
                        }]);
                }
            });
            _this._selectedRootElement(rootElements[0]);
        }));
        var fieldListProvider = new _fieldListProvider_1.FieldListProvider(_this._createFieldListCallback(), _this._rootItems);
        _this._fieldListItemsProvider(new _jsonTreeNodeItemsProvider_1.JsonTreeNodeItemsProvider(fieldListProvider, _this._rootItems, _this._createTreeNode, _this._createLeafTreeNode));
        _this._disposables.push(_this._fieldListItemsProvider());
        _this._fieldListModel = {
            expandRootItems: true,
            itemsProvider: _this._fieldListItemsProvider(),
            selectedPath: _this._fieldSelectedPath,
            treeListController: null,
            templateName: 'dxrd-treelist-with-checkbox'
        };
        return _this;
    }
    ChooseJsonSchemaPage.prototype._clear = function () {
        this._rootItems([]);
        this._fieldSelectedPath('');
        this._rootElementList([]);
        this._selectedRootElement(null);
        this._dataSource && this._dataSource.jsonSchemaProvider.reset();
        this._cachedState = {
            connectionName: null,
            jsonSource: null
        };
    };
    ChooseJsonSchemaPage.prototype._createFieldListCallback = function () {
        var _this = this;
        return function (pathRequest) {
            var parentNode = new jsonSchemaNode_1.JsonNode({});
            parentNode.nodes = [_this._rootItems()[0].data];
            var itemsByPath = _this._getInnerItemsByPath(pathRequest, parentNode);
            return $.Deferred().resolve(itemsByPath).promise();
        };
    };
    ChooseJsonSchemaPage.prototype._getSchemaToDataMemberInfo = function (path) {
        var nodeAcc = this._dataSource.schema;
        for (var i = 0; i < path.pathParts.length; i++) {
            nodeAcc = nodeAcc.nodes.filter(function (node) { return node.name() === path.pathParts[i]; })[0];
            if (!nodeAcc)
                return null;
        }
        return nodeAcc;
    };
    ChooseJsonSchemaPage.prototype._mapJsonNodesToTreelistItems = function (nodes) {
        return $.map((nodes || []), function (node) {
            var dataMemberInfo = {
                name: node.name(),
                displayName: node.displayName || node.name(),
                isSelected: node.selected(),
                isList: node.nodes && node.nodes.length > 0,
                specifics: 'Default'
            };
            return dataMemberInfo;
        });
    };
    ChooseJsonSchemaPage.prototype._getNodesByPath = function (pathRequest, parentNode) {
        if (!pathRequest.fullPath) {
            return parentNode.nodes;
        }
        else {
            var currentNodes = parentNode.nodes;
            for (var i = 0; i < pathRequest.pathParts.length; i++) {
                var pathPart = (currentNodes || []).filter(function (node) { return node.name() == pathRequest.pathParts[i]; })[0];
                if (!pathPart)
                    return [];
                currentNodes = pathPart.nodes;
            }
            return currentNodes;
        }
    };
    ChooseJsonSchemaPage.prototype._getInnerItemsByPath = function (pathRequest, parentNode) {
        var nodes = this._getNodesByPath(pathRequest, parentNode);
        return this._mapJsonNodesToTreelistItems(nodes);
    };
    ChooseJsonSchemaPage.prototype._beginInternal = function (state) {
        var _this = this;
        if ((state.connectionName && this._cachedState.connectionName === state.connectionName) ||
            (state.jsonSource && this._cachedState.jsonSource === state.jsonSource))
            return $.Deferred().resolve().promise();
        this._clear();
        this._cachedState = {
            connectionName: state.connectionName,
            jsonSource: state.jsonSource
        };
        var oldDataSourceId = this._dataSource && this._dataSource.id;
        this._dataSource = dataSourceWizardState_1._restoreJsonDataSourceFromState(state, this._requestWrapper);
        if ((oldDataSourceId && oldDataSourceId != this._dataSource.id) || !this._dataSource.schema.nodes.length) {
            return this._dataSource.getSchema(this._callbacks && this._callbacks.getParameters && this._callbacks.getParameters())
                .done(function (schema) { return _this._updatePage(schema); });
        }
        return $.Deferred().done(function (schema) { return _this._updatePage(schema); }).resolve(this._dataSource.schema).promise();
    };
    ChooseJsonSchemaPage.prototype._updatePage = function (jsonSchema) {
        var rootElementList = jsonSchema.getRootElementPartList(this._allowObjectRootElements);
        if (this._rootElementList() !== rootElementList) {
            this._rootElementList(this._filterRootElementList(rootElementList, jsonSchema));
        }
        if (this._dataSource.rootElement()) {
            var dataSourceRootElementPath = ['root', this._dataSource.rootElement()].join('.');
            var rootElementToSelect = this._rootElementList().filter(function (item) { return item.fullPath === dataSourceRootElementPath; })[0] || this._rootElementList()[0];
            this._selectedRootElement(rootElementToSelect);
        }
        this._onChange();
    };
    ChooseJsonSchemaPage.prototype._resetSelectionRecursive = function (currentNode, selectedRootElement) {
        var _this = this;
        if (currentNode === selectedRootElement) {
            return;
        }
        currentNode.selected && currentNode.selected(false);
        (currentNode.nodes || []).forEach(function (node) { return _this._resetSelectionRecursive(node, selectedRootElement); });
    };
    ChooseJsonSchemaPage.prototype._mapJsonSchema = function (jsonNode, path) {
        var _this = this;
        var treelistNode = this._fieldListItemsProvider().getNodeByPath(path);
        if (!treelistNode)
            return;
        jsonNode.selected(treelistNode.checked() !== false);
        (jsonNode.nodes || []).forEach(function (innerJsonNode) {
            var nextPathParts = path.pathParts.concat(innerJsonNode.name());
            var nextFullPath = nextPathParts.join('.');
            var nextPath = { fullPath: nextFullPath, path: innerJsonNode.name(), id: nextFullPath, pathParts: nextPathParts };
            _this._mapJsonSchema(innerJsonNode, nextPath);
        });
        return jsonNode;
    };
    ChooseJsonSchemaPage.prototype._filterRootElementList = function (rootElementList, jsonSchema) {
        return rootElementList;
    };
    ChooseJsonSchemaPage.prototype.canNext = function () {
        return false;
    };
    ChooseJsonSchemaPage.prototype.canFinish = function () {
        return this._fieldListItemsProvider().hasCheckedItems();
    };
    ChooseJsonSchemaPage.prototype.commit = function () {
        var rootItem = this._rootItems()[0];
        if (!rootItem)
            return;
        var currentRootNode = this._rootItems()[0].data;
        this._resetSelectionRecursive(this._dataSource.schema, currentRootNode);
        var currentRootPath = currentRootNode.name();
        var pathFromCurrentRoot = { fullPath: currentRootPath, path: '', id: currentRootPath, pathParts: [currentRootPath] };
        this._mapJsonSchema(this._rootItems()[0].data, pathFromCurrentRoot);
        var selectedRootElementPath = this._selectedRootElement().pathParts.slice(1).join('.');
        this._dataSource.rootElement(selectedRootElementPath);
        var serialized = new serializer_1.ModelSerializer().serialize(this._dataSource);
        return $.Deferred().resolve({
            connectionName: this._dataSource.connectionName(),
            dataSourceName: serialized['@Name'],
            jsonScheme: JSON.stringify(serialized.Schema),
            rootElement: serialized['@RootElement']
        }).promise();
    };
    ChooseJsonSchemaPage.prototype.initialize = function (state) {
        return this._beginInternal(state);
    };
    ChooseJsonSchemaPage.prototype.reset = function () {
        this._clear();
    };
    return ChooseJsonSchemaPage;
}(wizardPage_1.WizardPageBase));
exports.ChooseJsonSchemaPage = ChooseJsonSchemaPage;
function _registerChooseJsonSchemaPage(factory, requestWrapper, callbacks) {
    factory.registerMetadata(pageId_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage, {
        setState: function (data, state) {
            state.dataSourceName = data.dataSourceName;
            state.jsonScheme = data.jsonScheme;
            state.rootElement = data.rootElement;
        },
        getState: function (state) {
            return state.jsonDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.dataSourceName = defaultState.dataSourceName;
            state.jsonScheme = defaultState.jsonScheme;
            state.rootElement = defaultState.rootElement;
        },
        create: function () {
            return new ChooseJsonSchemaPage(requestWrapper, undefined, callbacks);
        },
        description: localization_utils_1.getLocalization('Select data fields.', 'DataAccessUIStringId.WizardPageChooseJsonSchema'),
        template: 'dxrd-jsondatasource-fields-page'
    });
}
exports._registerChooseJsonSchemaPage = _registerChooseJsonSchemaPage;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var dataSourceParameter_1 = __webpack_require__(11);
var _editorTypeMapper_1 = __webpack_require__(0);
var ParameterViewModel = (function (_super) {
    __extends(ParameterViewModel, _super);
    function ParameterViewModel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ParameterViewModel.prototype.getEditorType = function (type) {
        if (_editorTypeMapper_1.IsDataAccessExpression(type))
            return { header: 'dxqb-expressionstring' };
        return _editorTypeMapper_1.getEditorType(type);
    };
    return ParameterViewModel;
}(dataSourceParameter_1.DataSourceParameter));
exports.ParameterViewModel = ParameterViewModel;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var queryElementModel_1 = __webpack_require__(28);
var tableModel_1 = __webpack_require__(59);
var columnExpression_1 = __webpack_require__(60);
var dbColumn_1 = __webpack_require__(18);
var parameterModelMeta_1 = __webpack_require__(46);
var serializer_1 = __webpack_require__(1);
var utils_1 = __webpack_require__(1);
var columnExpressionMeta_1 = __webpack_require__(61);
var relationModel_1 = __webpack_require__(93);
var parameterModel_1 = __webpack_require__(57);
var _getNameHelpers_1 = __webpack_require__(0);
var _qbFilterStringOptions_1 = __webpack_require__(151);
var columnModelMeta_1 = __webpack_require__(26);
var _queryBuilderObjectsProvider_1 = __webpack_require__(43);
var _groupFilterEditorSerializer_1 = __webpack_require__(146);
var margins_1 = __webpack_require__(4);
var _utils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var _infoMessageHelpers_1 = __webpack_require__(0);
var queryModelMeta_1 = __webpack_require__(96);
var _initializer_1 = __webpack_require__(90);
var _arrayutils_1 = __webpack_require__(0);
var _utils_2 = __webpack_require__(0);
var QueryViewModel = (function (_super) {
    __extends(QueryViewModel, _super);
    function QueryViewModel(querySource, dbSchemaProvider, parametersMode, beforeSaveCallback, serializer) {
        if (parametersMode === void 0) { parametersMode = parameterModelMeta_1.ParametersMode.ReadWrite; }
        var _this = _super.call(this, _utils_2.extend(true, querySource, QueryViewModel.emptyModel, querySource), null, serializer) || this;
        _this.aggregatedColumnsCount = ko.observable(0);
        _this._findAncestorsRelations = function (table) {
            var result = { inner: 0, outer: 0, relations: [] };
            _this.relations().forEach(function (item) {
                if (item.nestedTable() === table) {
                    result.relations.push(item);
                    item.joinType() === 'LeftOuter' ? result.outer++ : result.inner++;
                    var parentResult = _this._findAncestorsRelations(item.parentTable());
                    result.inner += parentResult.inner;
                    result.outer += parentResult.outer;
                    result.relations.push.apply(result.relations, parentResult.relations);
                }
            });
            return result;
        };
        _this['type']('SelectQuery');
        _this.controlType = 'Query';
        _this.dbSchemaProvider = dbSchemaProvider;
        _this.onSave = beforeSaveCallback;
        _this.tables = utils_1.deserializeArray(querySource['Tables']['SelectedTables'], function (item) { return new tableModel_1.TableViewModel(item, _this, serializer); });
        _this.columns = utils_1.deserializeArray(querySource['Columns'], function (item) { return new columnExpression_1.ColumnExpression(item, _this, serializer); });
        _this.sorting = utils_1.deserializeArray(querySource['Sorting'], function (item) { return new columnExpression_1.ColumnExpression(item, _this, serializer); });
        _this.grouping = utils_1.deserializeArray(querySource['Grouping'], function (item) { return new columnExpression_1.ColumnExpression(item, _this, serializer); });
        _this.tables().forEach(function (table) {
            var columns = [];
            [_this.columns(), _this.sorting(), _this.grouping()].forEach(function (currentColumns) {
                currentColumns.forEach(function (column) {
                    if (table.name() === column.table() && column.itemType() === columnExpressionMeta_1.ColumnType.Column &&
                        columns.every(function (x) { return x.column() !== column.column(); })) {
                        columns.push(column);
                    }
                });
            });
            _this._addColumnsToTable(table, columns);
            _this._initializeTable(table);
        });
        _this.relations = utils_1.deserializeArray(querySource['Tables']['Relations'], function (item) { return new relationModel_1.RelationViewModel(item, _this, serializer); });
        _this['_tablesObject']['tables'] = _this.tables;
        _this['_tablesObject']['relations'] = _this.relations;
        _this.tables().reduce(function (posX, tableModel) {
            tableModel.location.x(posX);
            tableModel.location.y(65);
            return posX + tableModel.size.width() + tableModel.size.width() / 2;
        }, 30);
        var parameters = utils_1.deserializeArray(querySource['Parameters'], function (item) { return new parameterModel_1.ParameterViewModel(item, serializer); });
        if (parametersMode === parameterModelMeta_1.ParametersMode.ReadWrite) {
            _this.parameters = parameters;
            _this._disposables.push(_this.parameters.subscribe(function (changes) {
                changes.forEach(function (change) {
                    if (change.status === 'added' && !change.value.name())
                        change.value.name(_getNameHelpers_1.getUniqueName(_this.parameters().filter(function (x) { return x !== change.value; }).map(function (x) { return x.name(); }), 'parameter'));
                });
            }, null, 'arrayChange'));
        }
        else {
            _this.parameters = ko.computed(function () { return parameters(); });
        }
        _this.editableName = ko.observable(_this.name());
        _this.name = ko.pureComputed({
            read: _this.editableName,
            write: function (val) { }
        });
        _this.filterString = new _qbFilterStringOptions_1.QBFilterStringOptions(_this._filterString, null, ko.pureComputed(function () { return (_this.tables().length === 0) && (_this.filterString && _this.filterString.value().length === 0); }));
        _this.filterString.initializeFilterStringHelper(_this.parameters, parametersMode);
        var inProcess = false;
        _this._disposables.push(ko.computed(function () {
            if (!inProcess) {
                inProcess = true;
                var allColumns = _this.getAllColumns();
                var withoutAggregate = allColumns.filter(function (x) { return x.aggregate() === columnModelMeta_1.AggregationType.None; });
                _this.aggregatedColumnsCount(allColumns.length - withoutAggregate.length);
                if (allColumns.length !== withoutAggregate.length) {
                    withoutAggregate.filter(function (x) { return x.selected() && !x.groupBy.peek(); }).forEach(function (x) { return x.groupBy(true); });
                }
                else {
                    if (!allColumns.every(function (x) { return !x.selected.peek() || x.groupBy.peek(); })) {
                        allColumns.forEach(function (x) { if (x.groupBy.peek()) {
                            x.groupBy(false);
                        } });
                    }
                }
                inProcess = false;
            }
        }));
        _this.groupFilterString = new _qbFilterStringOptions_1.QBFilterStringOptions(_this._groupFilterString, null, ko.pureComputed(function () { return !_this.columns().some(_queryBuilderObjectsProvider_1.isAggregatedExpression) && (_this.groupFilterString && (_this.groupFilterString.value() || '').length === 0); }));
        _this.groupFilterString.initializeFilterStringHelper(_this.parameters, parametersMode, new _groupFilterEditorSerializer_1.GroupFilterEditorSerializer(_this.columns));
        var _pageWidth = ko.observable(0);
        _this.pageWidth = ko.pureComputed({
            read: function () {
                var result = 500;
                _this.tables().forEach(function (table) {
                    var right = table.location.x() + table.size.width();
                    if (right > result) {
                        result = right;
                    }
                });
                return Math.max(_pageWidth(), result);
            },
            write: function (value) {
                _pageWidth(value);
            }
        });
        _this.pageHeight = ko.pureComputed(function () {
            var result = 500;
            _this.tables().forEach(function (table) {
                var bottom = table.location.y() + table.size.height();
                if (bottom > result) {
                    result = bottom + QueryViewModel.pageMargin;
                }
            });
            return result;
        });
        _this.margins = margins_1.Margins.fromString();
        _this.isValid = ko.pureComputed(function () { return _this._validate(); });
        var isAllColumnsAllTablesExpression = function (column) { return !column.table() && column.itemType() === columnExpressionMeta_1.ColumnType.AllColumns; };
        _this.allColumnsInTablesSelected = ko.computed({
            read: function () { return _this.columns().some(isAllColumnsAllTablesExpression); },
            write: function (value) {
                if (value) {
                    _this.columns.push(new columnExpression_1.ColumnExpression({ '@ItemType': 'AllColumns' }, _this, serializer));
                }
                else {
                    _this.columns.remove(isAllColumnsAllTablesExpression);
                }
            }
        });
        return _this;
    }
    QueryViewModel.prototype._initializeTable = function (table) {
        this.dbSchemaProvider.getDbTable(table.name())
            .done(function (dbTable) {
            table.createColumns(dbTable);
        });
    };
    QueryViewModel.prototype._addColumnsToTable = function (table, columns) {
        table._initColumns(columns.map(function (x) {
            return new dbColumn_1.DBColumn({
                Name: x.column()
            });
        }));
    };
    QueryViewModel.prototype.isPropertyDisabled = function (name) {
        if (name === 'skip')
            return this.skip() === 0 && !this.sorting().length;
        return false;
    };
    QueryViewModel.prototype.canSave = function (showMessage) {
        if (showMessage === void 0) { showMessage = true; }
        var message = [];
        this.tables().forEach(function (t) {
            t.getInvalidColumns().forEach(function (column) {
                message.push(_utils_1.formatUnicorn(localization_utils_1.getLocalization('The schema does not contain the following column: "{0}"."{1}".', 'DataAccessStringId.ColumnNotInSchemaValidationException'), t.actualName(), column.actualName()));
            });
        });
        if (message.length > 0) {
            showMessage && _infoMessageHelpers_1.ShowMessage(message.join('\n'), 'error');
            return false;
        }
        return true;
    };
    QueryViewModel.prototype.getInfo = function () {
        return queryModelMeta_1.querySerializationsInfo;
    };
    QueryViewModel.prototype.createChild = function (info) {
        if (info['@ControlType'] !== 'Table') {
            return _super.prototype.createChild.call(this, info);
        }
        var table = new tableModel_1.TableViewModel(info, this);
        this._initializeTable(table);
        this.addChild(table);
        return table;
    };
    QueryViewModel.prototype.getAllColumns = function () {
        return [].concat.apply([], this.tables().map(function (x) { return x.columns(); }));
    };
    QueryViewModel.prototype.tryToCreateRelationsByFK = function (sourceTable) {
        var _this = this;
        if (_initializer_1.isJoinsResolvingDisabled)
            return;
        this.dbSchemaProvider.getDbSchema().done(function (dbSchema) {
            var dbSourceTable = dbSchema.tables.filter(function (item) { return item.name === sourceTable.name(); })[0];
            if (dbSourceTable) {
                dbSourceTable.foreignKeys.forEach(function (fk) {
                    var pkTable = _arrayutils_1.getFirstItemByPropertyValue(_this.tables.peek(), 'name', fk.primaryKeyTable);
                    if (pkTable) {
                        for (var i = 0; i < fk.primaryKeyColumns.length; i++) {
                            var column1 = _arrayutils_1.getFirstItemByPropertyValue(sourceTable.columns(), 'name', fk.columns[i]);
                            var column2 = _arrayutils_1.getFirstItemByPropertyValue(pkTable.columns(), 'name', fk.primaryKeyColumns[i]);
                            if (column1 && column2) {
                                _this.cerateJoinCondition(column1, column2);
                            }
                        }
                    }
                });
            }
            _this.tables.peek().forEach(function (table) {
                var dbTable = dbSchema.tables.filter(function (item) { return item.name === table.name(); })[0];
                if (dbTable) {
                    dbTable.foreignKeys.forEach(function (fk) {
                        if (fk.primaryKeyTable === sourceTable.name()) {
                            for (var i = 0; i < fk.primaryKeyColumns.length; i++) {
                                var column1 = _arrayutils_1.getFirstItemByPropertyValue(sourceTable.columns(), 'name', fk.primaryKeyColumns[i]);
                                var column2 = _arrayutils_1.getFirstItemByPropertyValue(table.columns(), 'name', fk.columns[i]);
                                if (column1 && column2) {
                                    _this.cerateJoinCondition(column2, column1);
                                }
                            }
                        }
                    });
                }
            });
        });
    };
    QueryViewModel.prototype.addChild = function (control) {
        if (control instanceof relationModel_1.RelationViewModel) {
            if (this.relations.indexOf(control) > -1)
                return;
            control.parentModel(this);
            this.relations.push(control);
        }
        else if (control instanceof tableModel_1.TableViewModel) {
            if (this.tables.indexOf(control) > -1)
                return;
            control.parentModel(this);
            if (_arrayutils_1.getFirstItemByPropertyValue(this.tables(), 'actualName', control.name()) !== null) {
                control.alias(_getNameHelpers_1.getUniqueName(this.tables().map(function (table) { return table.actualName(); }), control.name() + '_'));
            }
            this.tables.push(control);
        }
        else {
            _infoMessageHelpers_1.NotifyAboutWarning('Attempt to add wrong child control.');
        }
    };
    QueryViewModel.prototype.removeChild = function (control) {
        if (control instanceof relationModel_1.RelationViewModel) {
            if (this.relations().length < 1)
                return;
            var relation = control;
            var indexRelation = this.relations().indexOf(relation);
            while (relation.conditions().length > 0)
                relation.conditions.pop();
            this.relations.splice(indexRelation, 1);
        }
        else if (control instanceof tableModel_1.TableViewModel) {
            if (this.tables().length < 1)
                return;
            this.tables.splice(this.tables().indexOf(control), 1);
            var relations = this.relations();
            for (var i = relations.length - 1; i > -1; i--) {
                if (relations[i].parentTable() === control || relations[i].nestedTable() === control) {
                    this.removeChild(relations[i]);
                }
            }
            this.sorting.remove(function (item) { return item.isDepended(control.actualName()); });
            this.grouping.remove(function (item) { return item.isDepended(control.actualName()); });
            this.columns.remove(function (item) { return item.isDepended(control.actualName()); });
        }
        else {
            _infoMessageHelpers_1.NotifyAboutWarning('Attempt to remove wrong child control.');
        }
    };
    QueryViewModel.prototype.getTable = function (name) {
        return _arrayutils_1.findFirstItemMatchesCondition(this.tables(), function (item) { return item.actualName() === name; });
    };
    QueryViewModel.prototype._findTableInAncestors = function (child, probablyAncestor) {
        var _this = this;
        return this.relations().some(function (relation) {
            return relation.nestedTable() === child && (relation.parentTable() === probablyAncestor || _this._findTableInAncestors(relation.parentTable(), probablyAncestor));
        });
    };
    QueryViewModel.prototype._findHead = function (table) {
        var result = null;
        this.relations().some(function (relation) {
            if (relation.nestedTable() === table)
                result = relation;
            return !!result;
        });
        return result ? this._findHead(result.parentTable()) : table;
    };
    QueryViewModel.prototype._isHead = function (table) {
        return !this.relations().some(function (relation) { return relation.nestedTable() === table; });
    };
    QueryViewModel.prototype._reverseRelations = function (table, relationsToReverse) {
        relationsToReverse.forEach(function (item) {
            var tempTable = item.parentTable();
            item.parentTable(item.nestedTable());
            item.nestedTable(tempTable);
            item.conditions().forEach(function (condition) {
                var tempColumn = condition.parentColumnName();
                condition.parentColumnName(condition.nestedColumnName());
                condition.nestedColumnName(tempColumn);
            });
        });
    };
    QueryViewModel.prototype.cerateJoinCondition = function (parentColumn, nestedColumn) {
        var parentTable = parentColumn.parentModel();
        var nestedTable = nestedColumn.parentModel();
        if (parentTable === nestedTable)
            return null;
        var isColumnsReplaced = false;
        var relation = _arrayutils_1.findFirstItemMatchesCondition(this.relations(), function (relation) {
            isColumnsReplaced = relation.parentTable() === nestedTable && relation.nestedTable() === parentTable;
            return relation.parentTable() === parentTable && relation.nestedTable() === nestedTable || isColumnsReplaced;
        });
        if (relation) {
        }
        else if (this._findTableInAncestors(parentTable, nestedTable)) {
            isColumnsReplaced = true;
        }
        else if (this._findHead(parentTable) !== this._findHead(nestedTable) && !this._isHead(nestedTable)) {
            var parentRelations = this._findAncestorsRelations(parentTable);
            var nestedRelations = this._findAncestorsRelations(nestedTable);
            if (parentRelations.outer > nestedRelations.outer) {
                this._reverseRelations(nestedTable, nestedRelations.relations);
            }
            else if (parentRelations.outer < nestedRelations.outer) {
                this._reverseRelations(parentTable, parentRelations.relations);
                isColumnsReplaced = true;
            }
            else if (parentRelations.inner >= nestedRelations.inner) {
                this._reverseRelations(nestedTable, nestedRelations.relations);
            }
            else if (parentRelations.inner < nestedRelations.inner) {
                this._reverseRelations(parentTable, parentRelations.relations);
                isColumnsReplaced = true;
            }
        }
        if (isColumnsReplaced) {
            var tempTable = parentTable;
            parentTable = nestedTable;
            nestedTable = tempTable;
            var tempColumn = parentColumn;
            parentColumn = nestedColumn;
            nestedColumn = tempColumn;
        }
        relation = relation || this.createChild({
            '@ControlType': 'Relation',
            '@Parent': parentTable.actualName(),
            '@Nested': nestedTable.actualName(),
            '@Type': 'Inner'
        });
        var joinCondition = _arrayutils_1.findFirstItemMatchesCondition(relation.conditions(), function (condition) {
            return condition.parentColumn() === parentColumn && condition.nestedColumn() === nestedColumn;
        });
        if (!joinCondition) {
            joinCondition = relation.createChild({ '@ControlType': 'JoinCondition', '@Parent': parentColumn.name(), '@Nested': nestedColumn.name() });
        }
        return joinCondition;
    };
    QueryViewModel.prototype._validate = function () {
        if (this.tables().length === 0)
            return false;
        if (!(this.allColumnsInTablesSelected() || this.tables().some(function (t) { return t.asterisk.selected() || t.columns().some(function (c) { return c.selected(); }); })))
            return false;
        var tables = this.tables().map(function (table) { return table.actualName(); });
        this._validateTable(tables, tables[0]);
        return tables.length < 1;
    };
    QueryViewModel.prototype._validateTable = function (tables, tableName) {
        var _this = this;
        var index = tables.indexOf(tableName);
        if (index < 0)
            return;
        tables.splice(index, 1);
        var connectedTables = this.relations().map(function (relation) {
            if (relation.parentTableName() === tableName)
                return relation.nestedTableName();
            if (relation.nestedTableName() === tableName)
                return relation.parentTableName();
            return null;
        });
        connectedTables.forEach(function (item) { return _this._validateTable(tables, item); });
    };
    QueryViewModel.prototype.serialize = function (includeRootTag) {
        if (includeRootTag === void 0) { includeRootTag = false; }
        return includeRootTag ? { 'Query': this.serialize() } : (new serializer_1.ModelSerializer()).serialize(this);
    };
    QueryViewModel.prototype.save = function () {
        if (!this.canSave())
            return;
        var data = this.serialize(true);
        if (this.onSave) {
            this.onSave(data);
        }
        return data;
    };
    QueryViewModel.pageMargin = 20;
    QueryViewModel.emptyModel = { '@ItemType': 'Query', 'Tables': { 'SelectedTables': {}, 'Relations': {} }, 'Columns': {}, 'Sorting': {}, 'Grouping': {} };
    return QueryViewModel;
}(queryElementModel_1.QueryElementBaseViewModel));
exports.QueryViewModel = QueryViewModel;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var queryElementModel_1 = __webpack_require__(28);
var columnModel_1 = __webpack_require__(91);
var allColumnsModel_1 = __webpack_require__(153);
var size_1 = __webpack_require__(4);
var point_1 = __webpack_require__(4);
var tableModelMeta_1 = __webpack_require__(92);
var _arrayutils_1 = __webpack_require__(0);
var _utils_1 = __webpack_require__(0);
var TableViewModel = (function (_super) {
    __extends(TableViewModel, _super);
    function TableViewModel(model, parent, serializer) {
        var _this = _super.call(this, _utils_1.extend(model, { '@ControlType': 'Table', '@ItemType': 'Table' }), parent, serializer) || this;
        _this.serializer = serializer;
        _this._columnsConnectionPointLeftX = ko.pureComputed(function () { return _this.location.x(); });
        _this._columnsConnectionPointRightX = ko.pureComputed(function () { return _this.location.x() + _this.size.width(); });
        _this._columns = ko.observableArray();
        _this._initialized = ko.observable(false);
        _this.size = new size_1.Size(199, 123);
        _this.location = new point_1.Point(0, 0);
        _this.actualName = ko.pureComputed(function () { return _this.alias() || _this.name(); });
        _this.isReady = ko.observable(false);
        _this.allColumnsSelected = ko.computed({
            read: function () {
                var selectedColumns = _this.columns().filter(function (item) { return item.selected(); });
                if (selectedColumns.length === 0) {
                    return false;
                }
                if (selectedColumns.length === _this._columns.peek().length) {
                    return true;
                }
                return false;
            },
            deferEvaluation: true
        });
        _this.isInitialized = ko.pureComputed(function () { return _this._initialized(); });
        _this.size.height = ko.pureComputed({
            read: function () {
                if (_this._columns().length === 0) {
                    return TableViewModel.TABLE_DEFAULT_HEIGHT;
                }
                return TableViewModel.COLUMNS_OFFSET + (TableViewModel.COLUMN_HEIGHT + TableViewModel.COLUMN_MARGIN) * (_this._columns().length + 1);
            },
            write: function () {
            }
        });
        _this.asterisk = new allColumnsModel_1.AllColumnsViewModel(_this, _this.serializer);
        return _this;
    }
    TableViewModel.prototype.columns = function () {
        return this._columns();
    };
    TableViewModel.prototype.toggleSelectedColumns = function () {
        var value = !this.allColumnsSelected.peek();
        var query = (this.parentModel());
        this._columns.peek().forEach(function (column) { return column.toggleSelected(value, true); });
        query.columns.valueHasMutated();
    };
    TableViewModel.prototype.getColumnConnectionPoints = function (column) {
        var _this = this;
        var y = ko.pureComputed({
            read: function () {
                var index = _this._columns.indexOf(column) + 1;
                return _this.location.y() + TableViewModel.COLUMNS_OFFSET + TableViewModel.COLUMN_MARGIN * index + TableViewModel.COLUMN_HEIGHT * (index + 0.5);
            },
            deferEvaluation: true
        });
        return {
            left: { x: this._columnsConnectionPointLeftX, y: y },
            right: { x: this._columnsConnectionPointRightX, y: y }
        };
    };
    TableViewModel.prototype.getInfo = function () {
        return tableModelMeta_1.tableSerializationInfo;
    };
    TableViewModel.prototype.getInvalidColumns = function () {
        return this.columns().filter(function (x) { return x.isNotAvailable() && x.selected(); });
    };
    TableViewModel.prototype.getColumn = function (name) {
        return _arrayutils_1.getFirstItemByPropertyValue(this._columns(), 'name', name);
    };
    TableViewModel.prototype._initColumns = function (columns, update) {
        var _this = this;
        if (update === void 0) { update = false; }
        var result = [];
        columns.forEach(function (item) {
            result.push(new columnModel_1.ColumnViewModel({ '@Name': item.name }, item, _this, _this.serializer));
        });
        this._columns(update ? [].concat([], this.columns(), result) : result);
    };
    TableViewModel.prototype.createColumns = function (dbTable) {
        var _this = this;
        var notAvailableColumnsCount = 0;
        this.columns().forEach(function (column) {
            var expectedColumn = dbTable.columns.filter(function (x) { return x.name === column.name(); })[0];
            if (expectedColumn) {
                column._type(expectedColumn.type);
                column._size(expectedColumn.size);
            }
            else {
                column.isNotAvailable(dbTable.columns.every(function (x) { return x.name !== column.name(); }));
                notAvailableColumnsCount++;
            }
        });
        if (this.columns().length - notAvailableColumnsCount < dbTable.columns.length) {
            this._initColumns(dbTable.columns.filter(function (x) { return _this.columns().every(function (c) { return c.name() !== x.name; }); }), true);
        }
        this._initialized(true);
    };
    TableViewModel.COLUMNS_OFFSET = 37;
    TableViewModel.COLUMN_HEIGHT = 32;
    TableViewModel.COLUMN_MARGIN = 1;
    TableViewModel.TABLE_MIN_WIDTH = 80;
    TableViewModel.TABLE_DEFAULT_HEIGHT = 136;
    return TableViewModel;
}(queryElementModel_1.QueryElementBaseViewModel));
exports.TableViewModel = TableViewModel;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var criteriaOperator_1 = __webpack_require__(45);
var serializer_1 = __webpack_require__(1);
var utils_1 = __webpack_require__(147);
var property_1 = __webpack_require__(45);
var _arrayutils_1 = __webpack_require__(0);
var columnExpressionMeta_1 = __webpack_require__(61);
var ColumnExpression = (function () {
    function ColumnExpression(model, query, serializer) {
        var _this = this;
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(this, model);
        this._dependedTables = [];
        if (this.table()) {
            var tableRef = query.getTable(this.table());
            this.table = ko.pureComputed(function () { return tableRef.actualName(); });
            this._dependedTables.push(tableRef);
        }
        else if (this.expression()) {
            try {
                this._criteria = criteriaOperator_1.CriteriaOperator.parse(this.expression());
                utils_1.criteriaForEach(this._criteria, function (operand) {
                    if (operand instanceof property_1.OperandProperty) {
                        var dependedTable = _arrayutils_1.findFirstItemMatchesCondition(query.tables(), function (table) { return operand.propertyName.indexOf(table.actualName() + '.') === 0; });
                        dependedTable && _this._dependedTables.push(dependedTable);
                    }
                });
            }
            catch (e) {
            }
        }
    }
    ColumnExpression.prototype.actualName = function () {
        return this.alias() || this.column();
    };
    ColumnExpression.prototype.getInfo = function () {
        return columnExpressionMeta_1.columnExpressionSerializationsInfo;
    };
    ColumnExpression.prototype.isDepended = function (tableActualName) {
        return !!_arrayutils_1.findFirstItemMatchesCondition(this._dependedTables, function (depended) { return depended.actualName() === tableActualName; });
    };
    return ColumnExpression;
}());
exports.ColumnExpression = ColumnExpression;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var columnModelMeta_1 = __webpack_require__(26);
exports.ColumnType = {
    RecordsCount: 'RecordsCount',
    Column: 'Column',
    Expression: 'Expression',
    AllColumns: 'AllColumns'
};
exports.columnExpressionSerializationsInfo = [
    { propertyName: 'expression', modelName: '#text' },
    { propertyName: 'table', modelName: '@Table' },
    { propertyName: 'column', modelName: '@Name' },
    { propertyName: 'aggregate', modelName: '@Aggregate', defaultVal: columnModelMeta_1.AggregationType.None },
    { propertyName: 'alias', modelName: '@Alias' },
    { propertyName: 'descending', modelName: '@Descending', defaultVal: false },
    { propertyName: 'itemType', modelName: '@ItemType' }
];


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var baseSurface_1 = __webpack_require__(4);
var _queryBuilderObjectsProvider_1 = __webpack_require__(43);
var _dragDropHandler_1 = __webpack_require__(0);
var ColumnSurface = (function (_super) {
    __extends(ColumnSurface, _super);
    function ColumnSurface(control, context) {
        var _this = _super.call(this, control, context, null) || this;
        _this.template = 'dxqb-table-field';
        _this.toggleSelected = function () {
            _this.getControlModel().selected(!_this.getControlModel().selected());
        };
        _this.selectedWrapper = ko.pureComputed(function () {
            return _this.getControlModel().selected();
        });
        _this.isNotAvailable = ko.pureComputed(function () { return _this._control.isNotAvailable(); });
        _this.isAggregate = ko.pureComputed(function () { return _queryBuilderObjectsProvider_1.isAggregatedExpression(_this.getControlModel()); });
        _this.isAscending = ko.pureComputed(function () {
            return _this.getControlModel().sortingType() === 'Ascending';
        });
        _this.isDescending = ko.pureComputed(function () {
            return _this.getControlModel().sortingType() === 'Descending';
        });
        _this.cssClasses = function (query, columnDragHandler, parent) {
            if (!_this._isJoined) {
                _this._isJoined = ko.pureComputed(function () {
                    return query.isJoined(_this) || _this.getControlModel() === columnDragHandler.getDragColumn();
                });
            }
            if (!_this._isHovered) {
                _this._isHovered = ko.pureComputed(function () {
                    var isColumnDragStarted = !!columnDragHandler.getDragColumn();
                    var isCurrentTableNotParentForDraggedColumn = isColumnDragStarted && _this.getControlModel().parentModel() !== columnDragHandler.getDragColumn().parentModel();
                    return _this.underCursor().isOver && (!_dragDropHandler_1.DragDropHandler.started() || isCurrentTableNotParentForDraggedColumn);
                });
            }
            return {
                'dxd-state-invalid': _this.isNotAvailable,
                'dxd-state-active': _this.selected(),
                'dxd-state-joined': _this._isJoined,
                'dxd-state-hovered': _this._isHovered,
            };
        };
        return _this;
    }
    return ColumnSurface;
}(baseSurface_1.SurfaceElementBase));
exports.ColumnSurface = ColumnSurface;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var diagramElementSurface_1 = __webpack_require__(29);
var ConnectingPointSurface = (function (_super) {
    __extends(ConnectingPointSurface, _super);
    function ConnectingPointSurface(control, context) {
        var _this = _super.call(this, control, context, ConnectingPointSurface._unitProperties) || this;
        _this.template = 'dxdd-connecting-point';
        _this.selectiontemplate = 'dxdd-connection-point-selection';
        _this.contenttemplate = '';
        return _this;
    }
    ConnectingPointSurface._unitProperties = {
        _x: function (o) {
            return ko.pureComputed(function () { return o.location.x() - o.parentModel().location.x(); });
        },
        _y: function (o) {
            return ko.pureComputed(function () { return o.location.y() - o.parentModel().location.y(); });
        }
    };
    return ConnectingPointSurface;
}(diagramElementSurface_1.DiagramElementBaseSurface));
exports.ConnectingPointSurface = ConnectingPointSurface;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var diagramElementModel_1 = __webpack_require__(15);
var connectionPointModel_1 = __webpack_require__(65);
var point_1 = __webpack_require__(4);
var size_1 = __webpack_require__(4);
var _utils_1 = __webpack_require__(0);
var ConnectorViewModel = (function (_super) {
    __extends(ConnectorViewModel, _super);
    function ConnectorViewModel(control, parent, serializer) {
        var _this = _super.call(this, _utils_1.extend({ '@ControlType': 'Connector' }, control), parent, serializer) || this;
        _this.startPoint(_this.startPoint() || new connectionPointModel_1.ConnectionPointViewModel({ '@Location': '0, 0' }, _this, serializer));
        _this.endPoint(_this.endPoint() || new connectionPointModel_1.ConnectionPointViewModel({ '@Location': '150, 75' }, _this, serializer));
        _this.location = new point_1.Point(0, 0);
        _this.location.x = ko.pureComputed({
            read: function () {
                return _this.getX();
            },
            write: function (value) {
                var oldValue = _this.startPoint().location.x() < _this.endPoint().location.x() ? _this.startPoint().location.x() : _this.endPoint().location.x();
                var delta = value - oldValue;
                _this.startPoint().location.x(_this.startPoint().location.x() + delta);
                _this.endPoint().location.x(_this.endPoint().location.x() + delta);
            }
        });
        _this.location.y = ko.pureComputed({
            read: function () {
                return _this.getY();
            },
            write: function (value) {
                var oldValue = _this.startPoint().location.y() < _this.endPoint().location.y() ? _this.startPoint().location.y() : _this.endPoint().location.y();
                var delta = value - oldValue;
                _this.startPoint().location.y(_this.startPoint().location.y() + delta);
                _this.endPoint().location.y(_this.endPoint().location.y() + delta);
            }
        });
        _this.size = new size_1.Size(0, 0);
        _this.size.width = ko.pureComputed({
            read: function () {
                return _this.getWidth();
            },
            write: function (value) {
                if (_this.startPoint().location.x() < _this.endPoint().location.x()) {
                    _this.endPoint().location.x(_this.startPoint().location.x() + value);
                }
                else {
                    _this.startPoint().location.x(_this.endPoint().location.x() + value);
                }
            }
        });
        _this.size.height = ko.pureComputed({
            read: function () {
                return _this.getHeight();
            },
            write: function (value) {
                if (_this.startPoint().location.y() < _this.endPoint().location.y()) {
                    _this.endPoint().location.y(_this.startPoint().location.y() + value);
                }
                else {
                    _this.startPoint().location.y(_this.endPoint().location.y() + value);
                }
            }
        });
        return _this;
    }
    ConnectorViewModel.prototype.getX = function () {
        return this.startPoint().location.x() < this.endPoint().location.x() ? this.startPoint().location.x() : this.endPoint().location.x();
    };
    ConnectorViewModel.prototype.getY = function () {
        return this.startPoint().location.y() < this.endPoint().location.y() ? this.startPoint().location.y() : this.endPoint().location.y();
    };
    ConnectorViewModel.prototype.getWidth = function () {
        return Math.abs(this.startPoint().location.x() - this.endPoint().location.x()) || ConnectorViewModel.MIN_LINE_THICKNESS;
    };
    ConnectorViewModel.prototype.getHeight = function () {
        return Math.abs(this.startPoint().location.y() - this.endPoint().location.y()) || ConnectorViewModel.MIN_LINE_THICKNESS;
    };
    ConnectorViewModel.MIN_LINE_THICKNESS = 3;
    return ConnectorViewModel;
}(diagramElementModel_1.DiagramElementBaseViewModel));
exports.ConnectorViewModel = ConnectorViewModel;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var diagramElementModel_1 = __webpack_require__(15);
var metadata_1 = __webpack_require__(20);
var _utils_1 = __webpack_require__(0);
var ConnectionPointViewModel = (function (_super) {
    __extends(ConnectionPointViewModel, _super);
    function ConnectionPointViewModel(control, parent, serializer) {
        var _this = _super.call(this, _utils_1.extend(control, { '@ControlType': 'ConnectionPoint' }), parent, serializer) || this;
        var _x = _this.location.x, _y = _this.location.y;
        _this.location.x = ko.pureComputed({
            read: function () {
                return _this.connectingPoint() && _this.connectingPoint().location.x() || _x();
            },
            write: function (value) {
                _this.connectingPoint(null);
                _x(value);
            }
        });
        _this.location.y = ko.pureComputed({
            read: function () {
                return _this.connectingPoint() && _this.connectingPoint().location.y() || _y();
            },
            write: function (value) {
                _this.connectingPoint(null);
                _y(value);
            }
        });
        return _this;
    }
    return ConnectionPointViewModel;
}(diagramElementModel_1.DiagramElementBaseViewModel));
exports.ConnectionPointViewModel = ConnectionPointViewModel;
exports.connectionPointSerializationInfo = [
    metadata_1.location,
    { propertyName: 'connectingPoint', modelName: '@ConnectingPoint', link: true }
];


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var diagramElementModel_1 = __webpack_require__(15);
var serializer_1 = __webpack_require__(1);
var margins_1 = __webpack_require__(4);
var parsers_1 = __webpack_require__(1);
var metadata_1 = __webpack_require__(20);
var editorsInfo_1 = __webpack_require__(6);
var DiagramViewModel = (function (_super) {
    __extends(DiagramViewModel, _super);
    function DiagramViewModel(diagramSource) {
        var _this = this;
        var serializer = new serializer_1.ModelSerializer();
        _this = _super.call(this, diagramSource, null, serializer) || this;
        _this.controlType = 'Diagram';
        _this.controls = ko.observableArray();
        _this.name('Diagram');
        return _this;
    }
    DiagramViewModel.prototype.getInfo = function () {
        return exports.diagramSerializationsInfo;
    };
    return DiagramViewModel;
}(diagramElementModel_1.DiagramElementBaseViewModel));
exports.DiagramViewModel = DiagramViewModel;
exports.margins = { propertyName: 'margins', modelName: '@Margins', from: margins_1.Margins.fromString, displayName: 'Margins' };
exports.pageWidth = { propertyName: 'pageWidth', modelName: '@PageWidth', defaultVal: 850, from: parsers_1.floatFromModel, displayName: 'Page Width', editor: editorsInfo_1.editorTemplates.getEditor('numeric') };
exports.pageHeight = { propertyName: 'pageHeight', modelName: '@PageHeight', defaultVal: 1250, from: parsers_1.floatFromModel, displayName: 'Page Height', editor: editorsInfo_1.editorTemplates.getEditor('numeric') };
exports.diagramSerializationsInfo = [metadata_1.name, exports.pageWidth, exports.pageHeight, exports.margins];


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var baseSurface_1 = __webpack_require__(4);
var _arrayutils_1 = __webpack_require__(0);
var _hoverInfo_1 = __webpack_require__(0);
var DiagramSurface = (function (_super) {
    __extends(DiagramSurface, _super);
    function DiagramSurface(diagram, zoom) {
        if (zoom === void 0) { zoom = ko.observable(1); }
        var _this = _super.call(this, diagram, {
            measureUnit: ko.observable('Pixels'),
            zoom: zoom,
            dpi: ko.observable(100)
        }, DiagramSurface._unitProperties) || this;
        _this.measureUnit = ko.observable('Pixels');
        _this.dpi = ko.observable(100);
        _this.controls = ko.observableArray();
        _this.allowMultiselect = false;
        _this.focused = ko.observable(false);
        _this.selected = ko.observable(false);
        _this.underCursor = ko.observable(new _hoverInfo_1.HoverInfo());
        _this.parent = null;
        _this.templateName = 'dx-diagram-surface';
        _this.margins = { bottom: _this['_bottom'], left: _this['_left'], right: _this['_right'], top: _this['_top'] };
        _this.zoom = zoom;
        _this._context = _this;
        _arrayutils_1.createObservableArrayMapCollection(diagram.controls, _this.controls, _this._createSurface);
        return _this;
    }
    DiagramSurface.prototype.checkParent = function (surfaceParent) { return false; };
    DiagramSurface.prototype.getChildrenCollection = function () {
        return ko.observableArray([]);
    };
    DiagramSurface._unitProperties = {
        _width: function (o) { return o.pageWidth; },
        _height: function (o) { return o.pageWidth; },
        pageWidth: function (o) { return o.pageWidth; },
        pageHeight: function (o) { return o.pageHeight; },
        _bottom: function (o) { return o.margins.bottom; },
        _left: function (o) { return o.margins.left; },
        _right: function (o) { return o.margins.right; },
        _top: function (o) { return o.margins.top; }
    };
    return DiagramSurface;
}(baseSurface_1.SurfaceElementBase));
exports.DiagramSurface = DiagramSurface;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var utils_1 = __webpack_require__(1);
var _dbSchemaProvider_1 = __webpack_require__(102);
var requestwrapper_1 = __webpack_require__(8);
var _arrayutils_1 = __webpack_require__(0);
var _localization_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(0);
var DBSchemaProvider = (function (_super) {
    __extends(DBSchemaProvider, _super);
    function DBSchemaProvider(connection, _requestWrapper) {
        if (_requestWrapper === void 0) { _requestWrapper = new requestwrapper_1.RequestWrapper(); }
        var _this = _super.call(this) || this;
        _this._requestWrapper = _requestWrapper;
        _this._tables = {};
        _this._tableRequests = ko.observableArray([]).extend({ deferred: true });
        _this.connection = connection;
        _this._disposables.push(_this.connection.name.subscribe(function () {
            _this._tables = {};
            _this._dbSchema = null;
            _this._dbStoredProceduresSchema = null;
        }));
        _this._disposables.push(ko.computed(function () {
            var tableRequests = _this._tableRequests();
            if (!tableRequests.length)
                return;
            _this._tableRequests([]);
            var tables = tableRequests.map(function (x) { return x.table; });
            _this._getDBSchema(tables).done(function (dbSchema) {
                tableRequests.forEach(function (tableRequest) {
                    var schemaTable = dbSchema.tables.filter(function (x) { return x.name === tableRequest.table.name; })[0];
                    if (!schemaTable) {
                        tableRequest.deferred.reject();
                        return;
                    }
                    tableRequest.table.columns = schemaTable.columns;
                    tableRequest.deferred.resolve(tableRequest.table);
                });
            }).fail(function () { return tableRequests.forEach(function (request) { return request.deferred.reject(); }); });
        }));
        _this.getItems = function (pathRequest) {
            var deferred = $.Deferred();
            if (!pathRequest.fullPath) {
                _this.getDbSchema().done(function (dbSchema) {
                    deferred.resolve($.map(dbSchema.tables, function (item) {
                        var dataMemberInfo = {
                            name: item.name,
                            displayName: item.name,
                            isList: false,
                            specifics: item.isView ? 'view' : 'table',
                            dragData: { noDragable: false }
                        };
                        return dataMemberInfo;
                    }));
                });
            }
            else {
                deferred.resolve([]);
            }
            return deferred.promise();
        };
        return _this;
    }
    DBSchemaProvider.prototype._getDBSchema = function (tables) {
        return this._getDBSchemaCallback(this.connection, tables);
    };
    DBSchemaProvider.prototype._getDBSchemaCallback = function (connection, tables) {
        return _dbSchemaProvider_1.getDBSchemaCallback(this._requestWrapper, connection, tables);
    };
    DBSchemaProvider.prototype._getDBStoredProcedures = function (connection) {
        return _dbSchemaProvider_1.getDBStoredProceduresCallback(this._requestWrapper, connection);
    };
    DBSchemaProvider.prototype.getDbSchema = function () {
        if (!this._dbSchema || this._dbSchema.state() === 'rejected')
            this._dbSchema = this._getDBSchema();
        return this._dbSchema;
    };
    DBSchemaProvider.prototype.getDbStoredProcedures = function () {
        if (!this._dbStoredProceduresSchema || this._dbStoredProceduresSchema.state() === 'rejected')
            this._dbStoredProceduresSchema = this._getDBStoredProcedures(this.connection);
        return this._dbStoredProceduresSchema;
    };
    DBSchemaProvider.prototype.getDbTable = function (tableName) {
        var _this = this;
        if (!this._tables[tableName]) {
            var deferred = $.Deferred();
            this._tables[tableName] = deferred.promise();
            this.getDbSchema().done(function (dbSchema) {
                var table = _arrayutils_1.findFirstItemMatchesCondition(dbSchema.tables, function (table) { return table.name === tableName; });
                if (!table) {
                    deferred.reject();
                    _localization_1.isCustomizedWithUpdateLocalizationMethod('The schema does not contain the specified table: ') ?
                        localization_utils_1.getLocalization('The schema does not contain the specified table: ') + "'" + tableName + "'." :
                        _utils_1.formatUnicorn(localization_utils_1.getLocalization('The schema does not contain the specified table: "{0}".', 'DataAccessStringId.TableNotInSchemaValidationException'), tableName);
                }
                else if (table.columns.length > 0) {
                    deferred.resolve(table);
                }
                else {
                    _this._tableRequests.push({ table: table, deferred: deferred });
                }
            }).fail(function () { return deferred.reject(); });
        }
        return this._tables[tableName];
    };
    return DBSchemaProvider;
}(utils_1.Disposable));
exports.DBSchemaProvider = DBSchemaProvider;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _dbSchema_1 = __webpack_require__(19);
var DBStoredProcedure = (function () {
    function DBStoredProcedure(model) {
        this.name = model['Name'];
        this.arguments = _dbSchema_1.deserializeToCollection(model['arguments'], function (argModel) { return new DBStoredProcedureArgument(argModel); });
    }
    return DBStoredProcedure;
}());
exports.DBStoredProcedure = DBStoredProcedure;
var DBStoredProcedureArgumentDirection;
(function (DBStoredProcedureArgumentDirection) {
    DBStoredProcedureArgumentDirection[DBStoredProcedureArgumentDirection["In"] = 0] = "In";
    DBStoredProcedureArgumentDirection[DBStoredProcedureArgumentDirection["Out"] = 1] = "Out";
    DBStoredProcedureArgumentDirection[DBStoredProcedureArgumentDirection["InOut"] = 2] = "InOut";
})(DBStoredProcedureArgumentDirection = exports.DBStoredProcedureArgumentDirection || (exports.DBStoredProcedureArgumentDirection = {}));
var DBStoredProcedureArgument = (function () {
    function DBStoredProcedureArgument(model) {
        this.name = model['Name'];
        this.type = model['Type'];
        this.direction = model['Direction'];
    }
    return DBStoredProcedureArgument;
}());
exports.DBStoredProcedureArgument = DBStoredProcedureArgument;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _internal_1 = __webpack_require__(0);
exports.ActionId = {
    Save: 'dxqb-save',
    DataPreview: 'dxqb-data-preview',
    SelectStatementPreview: 'dxqb-select-statement-preview'
};
exports.HandlerUri = _internal_1.createGlobalModuleVariableFunc('DXQB.axd');


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var serializer_1 = __webpack_require__(1);
var utils_1 = __webpack_require__(1);
var resultTable_1 = __webpack_require__(106);
var resultSetSerializationInfo = [
    { propertyName: 'name', modelName: '@Name' },
    { propertyName: 'tables', modelName: 'Views', array: true }
];
var ResultSet = (function () {
    function ResultSet(model, serializer) {
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(this, model);
        this.tables = utils_1.deserializeArray(model && model['Views'] || [], function (item) {
            return new resultTable_1.ResultTable(item, serializer);
        });
    }
    ResultSet.prototype.getInfo = function () {
        return resultSetSerializationInfo;
    };
    ResultSet.from = function (model, serializer) {
        return model && new ResultSet(model['DataSet'], serializer) || null;
    };
    ResultSet.toJson = function (value, serializer, refs) {
        return { 'DataSet': serializer.serialize(value, resultSetSerializationInfo, refs) };
    };
    return ResultSet;
}());
exports.ResultSet = ResultSet;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var serializer_1 = __webpack_require__(1);
var JsonAuthenticationInfo = (function () {
    function JsonAuthenticationInfo(model, serializer) {
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(this, model || {});
    }
    JsonAuthenticationInfo.from = function (model, serializer) {
        return new JsonAuthenticationInfo(model, serializer);
    };
    JsonAuthenticationInfo.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, value.getInfo(), refs);
    };
    JsonAuthenticationInfo.prototype.getInfo = function () {
        return [
            { propertyName: 'password', modelName: '@password', defaultVal: '' },
            { propertyName: 'userName', modelName: '@user', defaultVal: '' }
        ];
    };
    return JsonAuthenticationInfo;
}());
exports.JsonAuthenticationInfo = JsonAuthenticationInfo;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(1);
var serializer_1 = __webpack_require__(1);
var editorsInfo_1 = __webpack_require__(6);
var localization_utils_1 = __webpack_require__(1);
var JsonParameterType;
(function (JsonParameterType) {
    JsonParameterType[JsonParameterType["PathParameter"] = 0] = "PathParameter";
    JsonParameterType[JsonParameterType["QueryParameter"] = 1] = "QueryParameter";
    JsonParameterType[JsonParameterType["Header"] = 2] = "Header";
})(JsonParameterType = exports.JsonParameterType || (exports.JsonParameterType = {}));
var JsonParameter = (function (_super) {
    __extends(JsonParameter, _super);
    function JsonParameter(model, serializer) {
        var _this = _super.call(this) || this;
        _this.expression_Prefix = 'expression:';
        _this.namePlaceholder = function () { return localization_utils_1.getLocalization('Name', 'AnalyticsCoreStringId.CollectionEditor_Name_Placeholder'); };
        _this.valuePlaceholder = function () { return localization_utils_1.getLocalization('Value', 'AnalyticsCoreStringId.CollectionEditor_Value_Placeholder'); };
        _this._editingValue = ko.observable('');
        _this._expression = { value: ko.observable('') };
        _this.isExpression = ko.observable(false);
        _this.itemsProvider = null;
        _this._parameterTypes = parameterTypes;
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this._initEditingProperties();
        _this._disposables.push(_this.value = ko.computed(function () {
            var expressionValue = (_this.expression_Prefix + _this._expression.value());
            var editingValue = _this._editingValue();
            return _this.isExpression.peek() ? expressionValue : editingValue;
        }));
        return _this;
    }
    JsonParameter.from = function (model, serializer) {
        return new JsonParameter(model || {}, serializer);
    };
    JsonParameter.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, value.getInfo(), refs);
    };
    JsonParameter.prototype._initEditingProperties = function () {
        var currentValue = this.value() || '';
        if (currentValue.indexOf(this.expression_Prefix) === 0) {
            this.isExpression(true);
            this._expression.value(currentValue.substring(this.expression_Prefix.length));
        }
        else {
            this._editingValue(currentValue);
        }
    };
    JsonParameter.prototype.switchEditors = function () {
        var newIsExpression = !this.isExpression();
        this.isExpression(newIsExpression);
        if (newIsExpression) {
            this._expression.value(this._editingValue() ? "'" + this._editingValue() + "'" : '');
        }
        else {
            this._editingValue('');
        }
    };
    JsonParameter.prototype.getInfo = function () {
        return [
            { propertyName: 'name', modelName: '@Name', displayName: 'Name', editor: editorsInfo_1.editorTemplates.getEditor('text') },
            { propertyName: 'value', modelName: '@Value', displayName: 'Value', editor: editorsInfo_1.editorTemplates.getEditor('text') },
            { propertyName: 'itemType', modelName: '@ItemType', defaultVal: JsonParameterType[JsonParameterType.PathParameter], alwaysSerialize: true }
        ];
    };
    return JsonParameter;
}(utils_1.Disposable));
exports.JsonParameter = JsonParameter;
var parameterTypes = [
    { value: JsonParameterType[JsonParameterType.PathParameter], displayValue: 'Path Parameter', localizationId: 'AnalyticsCoreStringId.JsonDSWizard_ChooseJsonSourcePage_PathParameter' },
    { value: JsonParameterType[JsonParameterType.QueryParameter], displayValue: 'Query Parameter', localizationId: 'AnalyticsCoreStringId.JsonDSWizard_ChooseJsonSourcePage_QueryParameter' },
    { value: JsonParameterType[JsonParameterType.Header], displayValue: 'Header', localizationId: 'AnalyticsCoreStringId.JsonDSWizard_ChooseJsonSourcePage_Header' }
];


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var sqlDataConnection_1 = __webpack_require__(114);
var resultSet_1 = __webpack_require__(71);
var utils_1 = __webpack_require__(1);
var utils_2 = __webpack_require__(9);
var customSqlQuery_1 = __webpack_require__(32);
var tableQuery_1 = __webpack_require__(34);
var storedProcQuery_1 = __webpack_require__(35);
var serializer_1 = __webpack_require__(1);
var requestwrapper_1 = __webpack_require__(8);
var masterDetailRelation_1 = __webpack_require__(51);
var connectionOptions_1 = __webpack_require__(110);
var dbSchemaProvider_1 = __webpack_require__(68);
var _utils_1 = __webpack_require__(0);
var sqlDataSourceSerializationInfo = [
    { propertyName: 'name', modelName: '@Name' },
    { propertyName: 'connection', modelName: 'Connection', from: sqlDataConnection_1.SqlDataConnection.from, toJsonObject: sqlDataConnection_1.SqlDataConnection.toJson },
    { propertyName: 'queries', modelName: 'Queries', array: true },
    { propertyName: 'relations', modelName: 'Relations', array: true },
    { propertyName: 'resultSet', modelName: 'ResultSchema', from: resultSet_1.ResultSet.from, toJsonObject: resultSet_1.ResultSet.toJson },
    { propertyName: 'itemType', modelName: '@ItemType' }
];
var SqlDataSource = (function (_super) {
    __extends(SqlDataSource, _super);
    function SqlDataSource(model, serializer, requestWrapper) {
        if (requestWrapper === void 0) { requestWrapper = new requestwrapper_1.RequestWrapper(); }
        var _this = _super.call(this) || this;
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(_this, _utils_1.extend(model, { '@ItemType': 'SqlDataSource' }));
        var deprecateName = _this['_model']['Name'];
        if (deprecateName) {
            if (!_this.name()) {
                _this.name(deprecateName);
            }
            delete _this['_model']['Name'];
        }
        _this.queries = utils_1.deserializeArray(model['Queries'], function (item) {
            return _this.createQuery(item, serializer);
        });
        _this.relations = utils_1.deserializeArray(model['Relations'], function (item) {
            return new masterDetailRelation_1.MasterDetailRelation(item, serializer);
        });
        if (_this.connection && model['ConnectionOptions'])
            _this.connection.options = new connectionOptions_1.ConnectionOptions(model['ConnectionOptions'], serializer);
        _this.dbSchemaProvider = new dbSchemaProvider_1.DBSchemaProvider(_this.connection, requestWrapper);
        _this._disposables.push(_this.connection.name.subscribe(function () {
            _this.queries([]);
            _this.relations([]);
            _this.resultSet = null;
        }));
        return _this;
    }
    SqlDataSource.prototype.getInfo = function () {
        return sqlDataSourceSerializationInfo;
    };
    SqlDataSource.prototype.createQuery = function (item, serializer) {
        if (item['@Type'] === utils_2.SqlQueryType.customSqlQuery) {
            return new customSqlQuery_1.CustomSqlQuery(item, this, serializer);
        }
        else if (item['@Type'] === utils_2.SqlQueryType.tableQuery) {
            return new tableQuery_1.TableQuery(item, this, serializer);
        }
        else if (item['@Type'] === utils_2.SqlQueryType.storedProcQuery) {
            return new storedProcQuery_1.StoredProcQuery(item, this, serializer);
        }
        else {
            throw new Error('Unknown sql query type.');
        }
    };
    return SqlDataSource;
}(utils_1.Disposable));
exports.SqlDataSource = SqlDataSource;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _arrayutils_1 = __webpack_require__(0);
var _getNameHelpers_1 = __webpack_require__(0);
function generateQueryUniqueName(queries, query) {
    var name = (query.name() || query.generateName()).replace('.', '_');
    return _arrayutils_1.findFirstItemMatchesCondition(queries, function (item) { return item.name() === name; }) ?
        _getNameHelpers_1.getUniqueNameForNamedObjectsArray(queries, name + '_') : name;
}
exports.generateQueryUniqueName = generateQueryUniqueName;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _utils_1 = __webpack_require__(0);
var StateManager = (function () {
    function StateManager(globalState, pageFactory) {
        this.globalState = globalState;
        this.pageFactory = pageFactory;
        this.defaultState = _utils_1.extend(true, {}, globalState);
    }
    StateManager.prototype._getPageState = function (pageId, state) {
        if (state === void 0) { state = this.globalState; }
        return this.pageFactory.getMetadata(pageId).getState(state);
    };
    StateManager.prototype.setPageState = function (pageId, data) {
        this.pageFactory.getMetadata(pageId).setState(data, this.getPageState(pageId));
    };
    StateManager.prototype.getPageState = function (pageId) {
        return this._getPageState(pageId);
    };
    StateManager.prototype.resetPageState = function (pageId) {
        var defaultState = _utils_1.extend(true, {}, this._getPageState(pageId, this.defaultState));
        this.pageFactory.getMetadata(pageId).resetState(this.getPageState(pageId), defaultState);
    };
    StateManager.prototype.getCurrentState = function () {
        return this.globalState;
    };
    StateManager.prototype.reset = function () {
        this.globalState.reset();
    };
    return StateManager;
}());
exports.StateManager = StateManager;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var utils_1 = __webpack_require__(1);
var storedProcQuery_1 = __webpack_require__(35);
var dbStoredProcedure_1 = __webpack_require__(69);
var _arrayutils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var dataSourceParameter_1 = __webpack_require__(11);
var dbColumn_1 = __webpack_require__(18);
var dataSourceParameterMeta_1 = __webpack_require__(33);
var StoredProceduresQueryControl = (function (_super) {
    __extends(StoredProceduresQueryControl, _super);
    function StoredProceduresQueryControl() {
        var _this = _super.call(this) || this;
        _this.template = 'dxrd-procedures-control';
        _this.storedProcedures = ko.observableArray([]);
        _this.selectedProcedure = ko.observableArray([]);
        _this.caption = function () { return localization_utils_1.getLocalization('Select a stored procedure:', 'DataAccessUIStringId.StoredProcControl_Caption'); };
        _this.generateStoredProcedureDisplayName = function (procedure) { return StoredProceduresQueryControl.generateStoredProcedureDisplayName(procedure); };
        _this.isNextDisabled = ko.pureComputed(function () {
            return !_this._selectedProcedure || !_this._needToProcessParameters(_this._selectedProcedure);
        });
        _this.isFinishDisabled = ko.pureComputed(function () {
            return !_this._selectedProcedure || _this._needToProcessParameters(_this._selectedProcedure);
        });
        _this.storedProcedures.subscribe(function (newProcedures) {
            if (!newProcedures) {
                _this._selectedProcedure = null;
            }
            else if (_this._selectedProcedure) {
                _this._selectedProcedure = _arrayutils_1.getFirstItemByPropertyValue(_this.storedProcedures(), 'name', _this._selectedProcedure.name);
            }
            else if (_this._query && _this._query.procName()) {
                _this._selectedProcedure = _arrayutils_1.getFirstItemByPropertyValue(_this.storedProcedures(), 'name', _this._query.procName());
            }
            else {
                _this._selectedProcedure = newProcedures[0];
            }
        });
        return _this;
    }
    StoredProceduresQueryControl.prototype._needToProcessParameters = function (procedure) {
        return procedure.arguments.some(StoredProceduresQueryControl._availableConvertToParameter);
    };
    StoredProceduresQueryControl._availableConvertToParameter = function (arg) {
        return arg.direction !== dbStoredProcedure_1.DBStoredProcedureArgumentDirection.Out;
    };
    Object.defineProperty(StoredProceduresQueryControl.prototype, "_selectedProcedure", {
        get: function () {
            return this.selectedProcedure()[0];
        },
        set: function (value) {
            this.selectedProcedure(value ? [value] : []);
        },
        enumerable: true,
        configurable: true
    });
    StoredProceduresQueryControl.prototype.scrollActiveItem = function (e) {
        var model = e.model;
        var procedure = model.selectedProcedure.peek();
        e.component.scrollToItem(procedure[0]);
    };
    StoredProceduresQueryControl.generateStoredProcedureDisplayName = function (procedure) {
        if (procedure.arguments.length === 0)
            return procedure.name;
        return procedure.arguments.reduce(function (value, item, index, array) {
            return value += item.name + (index < array.length - 1 ? ', ' : ')');
        }, procedure.name + '(');
    };
    StoredProceduresQueryControl.prototype.setQuery = function (query) {
        this._query = query;
        this._selectedProcedure = _arrayutils_1.getFirstItemByPropertyValue(this.storedProcedures(), 'name', query.procName());
        return $.Deferred().resolve().promise();
    };
    StoredProceduresQueryControl.prototype.getQuery = function () {
        var _this = this;
        if (!this._selectedProcedure)
            return null;
        var newQuery = new storedProcQuery_1.StoredProcQuery({ '@Name': this._query.name() || this._selectedProcedure.name, 'ProcName': this._selectedProcedure.name }, this._query.parent);
        this._selectedProcedure.arguments.forEach(function (arg) {
            if (StoredProceduresQueryControl._availableConvertToParameter(arg)) {
                newQuery.parameters.push(_arrayutils_1.getFirstItemByPropertyValue(_this._query.parameters(), 'name', arg.name) || new dataSourceParameter_1.DataSourceParameter({ '@Name': arg.name, '@Type': dbColumn_1.DBColumn.GetType(arg.type) }, null, dataSourceParameterMeta_1.storedProcParameterSerializationsInfo(dbColumn_1.DBColumn.GetType(arg.type))));
            }
        });
        return newQuery;
    };
    Object.defineProperty(StoredProceduresQueryControl.prototype, "runQueryBuilderDisabled", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    return StoredProceduresQueryControl;
}(utils_1.Disposable));
exports.StoredProceduresQueryControl = StoredProceduresQueryControl;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var serializer_1 = __webpack_require__(1);
var _infoMessageHelpers_1 = __webpack_require__(0);
var SelectQuerySqlTextProvider = (function () {
    function SelectQuerySqlTextProvider(_selectStatementCallback, _connection) {
        this._selectStatementCallback = _selectStatementCallback;
        this._connection = _connection;
    }
    SelectQuerySqlTextProvider.prototype.getQuerySqlText = function (newQuery) {
        var queryJSON = JSON.stringify({ 'Query': new serializer_1.ModelSerializer().serialize(newQuery) });
        return this._selectStatementCallback(this._connection(), queryJSON)
            .fail(function (data) {
            var error = _infoMessageHelpers_1.getErrorMessage(data);
            _infoMessageHelpers_1.ShowMessage('Unable to build a SQL string' + (error ? ': ' + error : '.'));
        });
    };
    return SelectQuerySqlTextProvider;
}());
exports.SelectQuerySqlTextProvider = SelectQuerySqlTextProvider;


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var _arrayutils_1 = __webpack_require__(0);
var tableQuery_1 = __webpack_require__(34);
var serializer_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var QueryBuilderPopup = (function () {
    function QueryBuilderPopup(applyNewQuery, rtl, customizeQBInitializationData) {
        if (rtl === void 0) { rtl = false; }
        if (customizeQBInitializationData === void 0) { customizeQBInitializationData = function (options) { return options; }; }
        var _this = this;
        this.customizeQBInitializationData = customizeQBInitializationData;
        this._query = ko.observable(null);
        this._dbSchemaProvider = ko.observable(null);
        this.designer = ko.observable();
        this.qbOptions = ko.observable(null);
        this.okButtonDisabled = ko.pureComputed(function () { return _this.designer() && !_this.designer().model().isValid(); });
        this.isVisible = ko.observable(false);
        this.showLoadIndicator = ko.observable(false);
        this.localizationIdMap = {
            'title': { text: 'Query Builder', localizationId: 'DataAccessUIStringId.QueryBuilder' },
            'loading': { text: 'Loading...', localizationId: 'AnalyticsCoreStringId.Loading' },
            'previewResults': { text: 'Preview Results...', localizationId: 'DataAccessUIStringId.QueryBuilderButtons_PreviewResults' },
            'cancel': { text: 'Cancel', localizationId: 'AnalyticsCoreStringId.SearchDialog_Cancel' },
            'ok': { text: 'OK', localizationId: 'DataAccessUIStringId.Button_OK' }
        };
        this._applyQuery = applyNewQuery;
        this._rtl = rtl;
    }
    QueryBuilderPopup.prototype.show = function (query, dataSource) {
        this._dataSource = dataSource;
        this._dbSchemaProvider(dataSource.dbSchemaProvider);
        this._query(new serializer_1.ModelSerializer().serialize(query));
        this.qbOptions(this.qbOptions() || this.customizeQBInitializationData({
            queryBuilderModel: this.designer,
            querySource: this._query,
            dbSchemaProvider: this._dbSchemaProvider,
            callbacks: { customizeActions: QueryBuilderPopup.customizeQueryBuilderActions },
            rtl: this._rtl
        }));
        this.isVisible(true);
        this.designer().updateSurface();
    };
    QueryBuilderPopup.prototype.cancelHandler = function () {
        this.isVisible(false);
    };
    QueryBuilderPopup.prototype.previewHandler = function () {
        this.designer().showPreview();
    };
    QueryBuilderPopup.prototype.okHandler = function () {
        var _this = this;
        if (this.designer().model().canSave()) {
            this._applyQuery(new tableQuery_1.TableQuery(this.designer().model().serialize(), this._dataSource), this.showLoadIndicator)
                .done(function () {
                _this.isVisible(false);
            });
        }
    };
    QueryBuilderPopup.prototype.onHiddenHandler = function () {
        this.designer().dataPreview.isVisible(false);
    };
    QueryBuilderPopup.prototype.popupViewModel = function (element) {
        var $container = _utils_1.getParentContainer(element);
        return {
            visible: this.isVisible,
            title: this.getDisplayText('title'),
            showTitle: true,
            shading: true,
            fullScreen: false,
            width: '95%',
            height: '95%',
            container: $container,
            wrapperAttr: { class: 'dxrd-querybuilder-popup' },
            position: { of: $container },
            onHidden: this.onHiddenHandler
        };
    };
    QueryBuilderPopup.prototype.getDisplayText = function (key) {
        return localization_utils_1.getLocalization(this.localizationIdMap[key].text, this.localizationIdMap[key].localizationId);
    };
    QueryBuilderPopup.customizeQueryBuilderActions = function (actions) {
        var del = _arrayutils_1.findFirstItemMatchesCondition(actions, function (action) { return action.text === 'Delete'; }), undo = _arrayutils_1.findFirstItemMatchesCondition(actions, function (action) { return action.text === 'Undo'; }), redo = _arrayutils_1.findFirstItemMatchesCondition(actions, function (action) { return action.text === 'Redo'; });
        actions.splice(0, actions.length, del, undo, redo);
    };
    return QueryBuilderPopup;
}());
exports.QueryBuilderPopup = QueryBuilderPopup;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var objectDataSource_1 = __webpack_require__(23);
var _chooseObjectParameters_1 = __webpack_require__(81);
var pageId_1 = __webpack_require__(5);
var localization_utils_1 = __webpack_require__(1);
var ConfigureObjectDataSourceParametersPage = (function (_super) {
    __extends(ConfigureObjectDataSourceParametersPage, _super);
    function ConfigureObjectDataSourceParametersPage(itemsProvider) {
        var _this = _super.call(this) || this;
        _this._objectDataSource = new objectDataSource_1.ObjectDataSource();
        _this._disposables.push(_this._chooseObjectParameters = new _chooseObjectParameters_1.ChooseObjectMemberParameters(itemsProvider));
        return _this;
    }
    ConfigureObjectDataSourceParametersPage.prototype.canNext = function () {
        return false;
    };
    ConfigureObjectDataSourceParametersPage.prototype.canFinish = function () {
        return true;
    };
    ConfigureObjectDataSourceParametersPage.prototype.commit = function () {
        return $.Deferred().resolve({
            selectedType: this._objectDataSource.selectedType,
            ctor: this._objectDataSource.ctor,
            dataMember: this._objectDataSource.dataMember,
            dataSourceName: this._objectDataSource.name(),
        }).promise();
    };
    ConfigureObjectDataSourceParametersPage.prototype.initialize = function (state) {
        this._objectDataSource.setState(state);
        this._chooseObjectParameters.updateCtorParameters(this._objectDataSource.ctor);
        this._chooseObjectParameters.updateMethodParameters(this._objectDataSource.dataMember);
        return $.Deferred().resolve().promise();
    };
    return ConfigureObjectDataSourceParametersPage;
}(wizardPage_1.WizardPageBase));
exports.ConfigureObjectDataSourceParametersPage = ConfigureObjectDataSourceParametersPage;
function _registerConfigureObjectDataSourceParametersPage(factory, getItemsProviderCallback) {
    factory.registerMetadata(pageId_1.ObjectDataSourceWizardPageId.ConfigureParametersPage, {
        setState: function (data, state) {
            state.ctor = data.ctor;
            state.dataMember = data.dataMember;
            state.selectedType = data.selectedType;
        },
        getState: function (state) {
            return state.objectDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.dataMember = defaultState.dataMember;
        },
        create: function () {
            return new ConfigureObjectDataSourceParametersPage(getItemsProviderCallback && getItemsProviderCallback());
        },
        description: localization_utils_1.getLocalization('Configure constructor parameters and/or method parameters.', 'AnalyticsCoreStringId.ObjectDSWizard_ConfigureParameters_Description'),
        template: 'dx-objectdatasource-configureparameters-page'
    });
}
exports._registerConfigureObjectDataSourceParametersPage = _registerConfigureObjectDataSourceParametersPage;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(1);
var _editorTypeMapper_1 = __webpack_require__(0);
var _utils_1 = __webpack_require__(0);
var dataSourceParameter_1 = __webpack_require__(11);
var serializer_1 = __webpack_require__(1);
var propertygrid_1 = __webpack_require__(6);
var ObjectDataSourceParameterProperty = (function (_super) {
    __extends(ObjectDataSourceParameterProperty, _super);
    function ObjectDataSourceParameterProperty(_parameter, _itemsProvider) {
        var _this = _super.call(this) || this;
        _this._parameter = _parameter;
        _this._itemsProvider = _itemsProvider;
        _this.type = ko.observable('');
        _this.type(_this._parameter.type);
        var typeValue = dataSourceParameter_1.DataSourceParameter._getTypeValue(_this._parameter.resultType);
        _this._initGetInfo(typeValue);
        new serializer_1.ModelSerializer().deserialize(_this, {});
        _this._subscribeProperties();
        _this._afterInitialize();
        return _this;
    }
    ObjectDataSourceParameterProperty.prototype.switchPropertyType = function () {
        if (this.isExpression()) {
            this.type(this._parameter.resultType);
            this._parameter.value = this.value();
        }
        else {
            this.type(_editorTypeMapper_1.ExpressionType);
            this._parameter.value = this.expression.value();
        }
    };
    ObjectDataSourceParameterProperty.prototype.isExpression = function () {
        return _editorTypeMapper_1.IsDataAccessExpression(this.type());
    };
    ObjectDataSourceParameterProperty.prototype._generateInfo = function (info, propertyName) {
        if (propertyName === void 0) { propertyName = 'value'; }
        return _utils_1.extend({}, {
            displayName: this._parameter.displayName,
            propertyName: propertyName,
            modelName: propertyName,
            editorOptions: {}
        }, info);
    };
    ObjectDataSourceParameterProperty.prototype._initGetInfo = function (typeValue) {
        var _this = this;
        var info = [
            this._generateInfo({
                editor: _editorTypeMapper_1.getEditorType(this._parameter.resultType),
                from: function (val) { return ko.observable((typeValue.valueConverter || (function (val) { return val; }))(val)); },
                defaultVal: !this.isExpression() && this._parameter.value || typeValue.defaultValue
            }),
            this._generateInfo({
                editor: { header: 'dx-objectdatasource-expression-popup' },
                from: function (val) {
                    return { value: ko.observable(val), itemsProvider: _this._itemsProvider };
                },
                defaultVal: this.isExpression() && this._parameter.value || ''
            }, 'expression')
        ];
        this._disposables.push({ dispose: function () { return _this.getInfo = undefined; } });
        this.getInfo = function () { return info; };
    };
    ObjectDataSourceParameterProperty.prototype._isDateTimeParamerterType = function () {
        return this._parameter.resultType === 'System.DateTime';
    };
    ObjectDataSourceParameterProperty.prototype._patchOriginalParameterValue = function (value) {
        if (value && this._isDateTimeParamerterType())
            this._parameter.value = utils_1.serializeDate(value);
        else
            this._parameter.value = value;
    };
    ObjectDataSourceParameterProperty.prototype._afterInitialize = function () {
        if (!this.isExpression() && this._isDateTimeParamerterType()) {
            this._patchOriginalParameterValue(this.value());
        }
    };
    ObjectDataSourceParameterProperty.prototype._subscribeProperties = function () {
        var _this = this;
        this._disposables.push(this.type.subscribe(function (newVal) {
            _this._parameter.type = newVal;
        }), this.expression.value.subscribe(function (newVal) {
            _this.isExpression() && (_this._patchOriginalParameterValue(newVal));
        }), this.value.subscribe(function (newVal) {
            !_this.isExpression() && (_this._patchOriginalParameterValue(newVal));
        }));
    };
    ObjectDataSourceParameterProperty.prototype.isPropertyVisible = function (propertyName) {
        return this.isExpression() ? propertyName === 'expression' : propertyName === 'value';
    };
    return ObjectDataSourceParameterProperty;
}(utils_1.Disposable));
exports.ObjectDataSourceParameterProperty = ObjectDataSourceParameterProperty;
var ObjectDataSourceParameterEditorAddon = (function () {
    function ObjectDataSourceParameterEditorAddon(_editor) {
        this._editor = _editor;
        this.imageTemplateName = 'dx-objectdatasource-expression';
    }
    ObjectDataSourceParameterEditorAddon.prototype._doWithModel = function (action) {
        var model = this._editor._model();
        if (model instanceof ObjectDataSourceParameterProperty) {
            return action(model);
        }
    };
    ObjectDataSourceParameterEditorAddon.prototype.switchEditors = function () {
        this._doWithModel(function (model) { return model.switchPropertyType(); });
    };
    ObjectDataSourceParameterEditorAddon.prototype.isExpression = function () {
        return this._doWithModel(function (model) { return model.isExpression(); });
    };
    return ObjectDataSourceParameterEditorAddon;
}());
var ObjectDataSourceParameterGrid = (function (_super) {
    __extends(ObjectDataSourceParameterGrid, _super);
    function ObjectDataSourceParameterGrid(x) {
        var _this = _super.call(this, ko.observable(x)) || this;
        _this.createEditorAddOn = function (editor) {
            var addon = new ObjectDataSourceParameterEditorAddon(editor);
            return {
                data: addon,
                templateName: 'dx-wizard-menu-box-editorswitch'
            };
        };
        return _this;
    }
    return ObjectDataSourceParameterGrid;
}(propertygrid_1.ObjectProperties));
var ObjectDataSourceParametersModel = (function (_super) {
    __extends(ObjectDataSourceParametersModel, _super);
    function ObjectDataSourceParametersModel(parametersMethod, itemsProvider) {
        var _this = _super.call(this) || this;
        _this.displayName = parametersMethod.displayName;
        _this._grids = parametersMethod.parameters.map(function (x) {
            var param = new ObjectDataSourceParameterProperty(x, itemsProvider);
            var grid = new ObjectDataSourceParameterGrid(param);
            _this._disposables.push(param);
            _this._disposables.push(grid);
            return grid;
        });
        return _this;
    }
    return ObjectDataSourceParametersModel;
}(utils_1.Disposable));
exports.ObjectDataSourceParametersModel = ObjectDataSourceParametersModel;
var ChooseObjectMemberParameters = (function (_super) {
    __extends(ChooseObjectMemberParameters, _super);
    function ChooseObjectMemberParameters(_itemsProvider) {
        var _this = _super.call(this) || this;
        _this._itemsProvider = _itemsProvider;
        _this._ctorParametersObject = ko.observable();
        _this._dataMemberParametersObject = ko.observable();
        _this.hasParameters = function () {
            return _this._dataMemberParametersObject() || _this._ctorParametersObject();
        };
        return _this;
    }
    ChooseObjectMemberParameters.prototype._updateParameters = function (propertyName, method) {
        this[propertyName]() && this[propertyName]().dispose();
        if (method && method.parameters.length > 0)
            this[propertyName](new ObjectDataSourceParametersModel(method, this._itemsProvider));
        else
            this[propertyName](null);
    };
    ChooseObjectMemberParameters.prototype.updateCtorParameters = function (method) {
        this._updateParameters('_ctorParametersObject', method);
    };
    ChooseObjectMemberParameters.prototype.updateMethodParameters = function (method) {
        this._updateParameters('_dataMemberParametersObject', method);
    };
    return ChooseObjectMemberParameters;
}(utils_1.Disposable));
exports.ChooseObjectMemberParameters = ChooseObjectMemberParameters;
var ChooseObjectParameters = (function (_super) {
    __extends(ChooseObjectParameters, _super);
    function ChooseObjectParameters(selectedCtor, selectedDataMembers, itemsProvider) {
        var _this = _super.call(this, itemsProvider) || this;
        _this._disposables.push(selectedCtor.subscribe(function (ctor) {
            _this.updateCtorParameters(ctor);
        }));
        _this._disposables.push(selectedDataMembers.subscribe(function (a) {
            _this.updateMethodParameters(a[0]);
        }));
        return _this;
    }
    return ChooseObjectParameters;
}(ChooseObjectMemberParameters));
exports.ChooseObjectParameters = ChooseObjectParameters;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var objectSchema_1 = __webpack_require__(52);
var _dbSchema_1 = __webpack_require__(19);
var requestwrapper_1 = __webpack_require__(8);
var _infoMessageHelpers_1 = __webpack_require__(0);
var _utils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var utils_1 = __webpack_require__(1);
var _utils_2 = __webpack_require__(0);
var ObjectTypeDescriptions = (function () {
    function ObjectTypeDescriptions(model) {
        var types = _dbSchema_1.deserializeToCollection(model, function (key) { return new objectSchema_1.ObjectType(key); });
        this.types = types.sort(function (a, b) { return a.displayName.localeCompare(b.displayName); });
    }
    return ObjectTypeDescriptions;
}());
exports.ObjectTypeDescriptions = ObjectTypeDescriptions;
function getObjectTypeDescriptionsCallback(requestWrapper, context) {
    var deferred = $.Deferred();
    requestWrapper.getObjectTypeDescriptions(context)
        .done(function (data) {
        try {
            var objectTypeDescriptionsModel = new ObjectTypeDescriptions(data.objectDataSourceInfoJson);
            deferred.resolve(objectTypeDescriptionsModel);
        }
        finally {
            if (deferred.state() === 'pending')
                deferred.reject();
        }
    })
        .fail(function (data) {
        _infoMessageHelpers_1.ShowMessage(_utils_1.formatUnicorn(localization_utils_1.getLocalization('Schema loading failed. {0}', 'DxDesignerStringId.Error_SchemaLoadingFailed'), _infoMessageHelpers_1.getErrorMessage(data)));
        deferred.reject();
    });
    return deferred.promise();
}
exports.getObjectTypeDescriptionsCallback = getObjectTypeDescriptionsCallback;
var ObjectSchemaProvider = (function (_super) {
    __extends(ObjectSchemaProvider, _super);
    function ObjectSchemaProvider(_requestWrapper) {
        if (_requestWrapper === void 0) { _requestWrapper = new requestwrapper_1.RequestWrapper(); }
        var _this = _super.call(this) || this;
        _this._requestWrapper = _requestWrapper;
        _this.getItems = function (pathRequest) {
            var getItemsDeferred = $.Deferred();
            var loadSchemaPromise = _this.getObjectTypeDescriptions();
            loadSchemaPromise
                .done(function (objectSchema) {
                getItemsDeferred.resolve(_this.getSchemaByPath(pathRequest, objectSchema));
            })
                .fail(getItemsDeferred.reject);
            return getItemsDeferred.promise();
        };
        return _this;
    }
    ObjectSchemaProvider.prototype.dispose = function () {
        this._objectTypeDescriptionsPromise = null;
    };
    ObjectSchemaProvider.prototype.getSchemaByPath = function (pathRequest, objectSchema) {
        if (!pathRequest.fullPath) {
            return objectSchema.types.map(function (type) { return _utils_2.extend({}, type, { isList: true, specifics: 'List' }); });
        }
        else {
            var currentCtros = [];
            for (var i = 0; i < pathRequest.pathParts.length; i++) {
                var pathPart = (objectSchema.types || []).filter(function (type) { return type.name == pathRequest.pathParts[i]; })[0];
                if (!pathPart)
                    return [];
                currentCtros = pathPart.ctors;
            }
            return currentCtros.map(function (ctor) { return _utils_2.extend({}, ctor, { isList: false, specifics: 'default' }); });
        }
    };
    ObjectSchemaProvider.prototype.getObjectTypeDescriptions = function (context) {
        if (context === void 0) { context = ''; }
        if (!this._objectTypeDescriptionsPromise || this._objectTypeDescriptionsPromise.state() === 'rejected')
            this._objectTypeDescriptionsPromise = getObjectTypeDescriptionsCallback(this._requestWrapper, context);
        return this._objectTypeDescriptionsPromise;
    };
    return ObjectSchemaProvider;
}(utils_1.Disposable));
exports.ObjectSchemaProvider = ObjectSchemaProvider;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var _treelistController_1 = __webpack_require__(10);
var utils_1 = __webpack_require__(1);
var ChooseObjectTypesTreelistController = (function (_super) {
    __extends(ChooseObjectTypesTreelistController, _super);
    function ChooseObjectTypesTreelistController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChooseObjectTypesTreelistController.prototype.canSelect = function (value) {
        return true;
    };
    return ChooseObjectTypesTreelistController;
}(_treelistController_1.TreeListController));
exports.ChooseObjectTypesTreelistController = ChooseObjectTypesTreelistController;
var ChooseObjectTypes = (function (_super) {
    __extends(ChooseObjectTypes, _super);
    function ChooseObjectTypes(types, provider) {
        var _this = _super.call(this) || this;
        _this.types = types;
        _this.selectedType = ko.observable();
        _this.selectedCtor = ko.observable();
        _this.selectedPath = ko.observable('');
        _this._scrollViewHeight = 'calc(100% - 36px)';
        _this.availableTypesTreelistModel = {
            expandRootItems: true,
            itemsProvider: provider,
            selectedPath: _this.selectedPath,
            treeListController: new ChooseObjectTypesTreelistController()
        };
        _this._disposables.push(_this.availableTypesTreelistModel.selectedPath.subscribe(function (newValue) {
            types().forEach(function (type) {
                if (type.name == newValue) {
                    _this.selectedType(type);
                    if (_this.selectedCtor() == null)
                        _this.selectedCtor.valueHasMutated();
                    else
                        _this.selectedCtor(null);
                }
                else {
                    type.ctors.forEach(function (ctor) {
                        if (type.name.concat('.').concat(ctor.name) == newValue) {
                            _this.selectedType(type);
                            _this.selectedCtor(ctor);
                        }
                    });
                }
            });
        }));
        return _this;
    }
    return ChooseObjectTypes;
}(utils_1.Disposable));
exports.ChooseObjectTypes = ChooseObjectTypes;


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(1);
var ChooseObjectDataMembers = (function (_super) {
    __extends(ChooseObjectDataMembers, _super);
    function ChooseObjectDataMembers(type, ctor) {
        var _this = _super.call(this) || this;
        _this.dataMembers = ko.observableArray([]);
        _this.selectedDataMembers = ko.observableArray([]);
        var oldType = type() && type().name;
        _this._disposables.push(ctor.subscribe(function (newVal) {
            type().updateMembers(newVal);
            if (oldType != type().name) {
                _this.dataMembers(type().members);
                _this.selectedDataMembers([]);
                oldType = type().name;
            }
            _this.coerceSelection();
        }));
        return _this;
    }
    ChooseObjectDataMembers.prototype.coerceSelection = function () {
        var selectedMember = this.selectedDataMembers()[0];
        var bestItem = selectedMember && selectedMember.isAvailable() ? selectedMember : this.dataMembers().filter(function (a) { return a.isAvailable(); })[0];
        this.selectedDataMembers([bestItem]);
    };
    return ChooseObjectDataMembers;
}(utils_1.Disposable));
exports.ChooseObjectDataMembers = ChooseObjectDataMembers;


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var localization_utils_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(0);
var utils_1 = __webpack_require__(1);
var jsonSourceSettings_1 = __webpack_require__(126);
var propertygrid_1 = __webpack_require__(6);
var jsonDataSource_1 = __webpack_require__(50);
var _jsonDataSourceWidgets_1 = __webpack_require__(127);
var jsonAuthenticationInfo_1 = __webpack_require__(72);
var editorsInfo_1 = __webpack_require__(6);
var _getNameHelpers_1 = __webpack_require__(0);
var jsonParameter_1 = __webpack_require__(73);
var _utils_2 = __webpack_require__(13);
var _utils_3 = __webpack_require__(0);
function getLocalizedValidationErrorMessage(emptyValueErrorMessage, localizedPropertyName, subProperty) {
    var requiredMessageSuffix = emptyValueErrorMessage || localization_utils_1.getLocalization('The value cannot be empty', 'AnalyticsCoreStringId.ParametersPanel_DateTimeValueValidationError');
    if (!localizedPropertyName)
        return requiredMessageSuffix;
    var propertyNamesPrefix = !subProperty ? localizedPropertyName : _utils_1.formatUnicorn('{0}. {1}', localizedPropertyName, subProperty);
    if (!localization_utils_1._stringEndsWith(propertyNamesPrefix, ':'))
        propertyNamesPrefix += ':';
    return _utils_1.formatUnicorn('{0} {1}', propertyNamesPrefix, requiredMessageSuffix);
}
exports.getLocalizedValidationErrorMessage = getLocalizedValidationErrorMessage;
var JsonDataSourceJsonSourcePageSettingsBase = (function (_super) {
    __extends(JsonDataSourceJsonSourcePageSettingsBase, _super);
    function JsonDataSourceJsonSourcePageSettingsBase() {
        var _this = _super.call(this) || this;
        _this._validationGroup = null;
        _this._validationSummary = null;
        _this.validationGroup = {
            onInitialized: function (args) { return _this._onValidationGroupInitialized(args); },
            onDisposing: function (args) { return _this._onValidationGroupDisposing(args); },
            validate: function () { return _this._validate(); }
        };
        _this.validationSummary = {
            onInitialized: function (args) { return _this._onValidationSummaryInitialized(args); },
            onDisposing: function (args) { return _this._onValidationSummaryDisposing(args); }
        };
        _this._disposables.push(_this.grid = new propertygrid_1.ObjectProperties(ko.observable(_this)));
        return _this;
    }
    JsonDataSourceJsonSourcePageSettingsBase.prototype.dispose = function () {
        this._validationSummary && this._validationSummary.dispose();
        this._validationGroup && this._validationGroup.dispose();
        this._validationSummary = null;
        this._validationGroup = null;
        _super.prototype.dispose.call(this);
    };
    JsonDataSourceJsonSourcePageSettingsBase.prototype._onValidationGroupInitialized = function (args) {
        this._validationGroup = args.component;
    };
    JsonDataSourceJsonSourcePageSettingsBase.prototype._onValidationGroupDisposing = function (args) {
        this._validationGroup = null;
    };
    JsonDataSourceJsonSourcePageSettingsBase.prototype._onValidationSummaryInitialized = function (args) {
        this._validationSummary = args.component;
    };
    JsonDataSourceJsonSourcePageSettingsBase.prototype._onValidationSummaryDisposing = function (args) {
        this._validationSummary = null;
    };
    JsonDataSourceJsonSourcePageSettingsBase.prototype._repaintSummary = function () {
        this._validationSummary && this._validationSummary.repaint();
    };
    JsonDataSourceJsonSourcePageSettingsBase.prototype._validate = function () {
        this._validationSummary && this._validationGroup && this._validationGroup.validate();
    };
    return JsonDataSourceJsonSourcePageSettingsBase;
}(utils_1.Disposable));
exports.JsonDataSourceJsonSourcePageSettingsBase = JsonDataSourceJsonSourcePageSettingsBase;
var JsonDataSourceJsonSourcePageStringSettings = (function (_super) {
    __extends(JsonDataSourceJsonSourcePageStringSettings, _super);
    function JsonDataSourceJsonSourcePageStringSettings() {
        var _this = _super.call(this) || this;
        _this._validatorsReady = ko.observable(false);
        _this.isValid = ko.pureComputed(function () {
            var isJsonValid = _this._isJsonSourceValid(_this.stringSource());
            var aceHasErrors = _this.aceEditorHasErrors();
            return isJsonValid && !aceHasErrors;
        });
        _this.validationGroup = null;
        _this.validationSummary = null;
        _this.stringSource = ko.observable('');
        _this.aceEditorHasErrors = ko.observable(false);
        _this.cssClass = { 'dxrd-wizard-json-string-source-grid': true };
        _this._disposables.push(_this.grid = new propertygrid_1.ObjectProperties(ko.observable(_this)));
        return _this;
    }
    JsonDataSourceJsonSourcePageStringSettings.prototype.onChange = function (_onChange) {
        var _this = this;
        var timeoutId = null;
        var localOnChange = function () {
            _onChange();
            clearTimeout(timeoutId);
            timeoutId = setTimeout(function () { return _this._validate(); }, 1);
        };
        this._disposables.push(this.stringSource.subscribe(function (newVal) { return localOnChange(); }));
    };
    JsonDataSourceJsonSourcePageStringSettings.prototype._isJsonSourceValid = function (jsonString) {
        if (!jsonString)
            return false;
        var isJsonSourceValid = true;
        try {
            JSON.parse(jsonString);
        }
        catch (ex) {
            isJsonSourceValid = false;
        }
        return isJsonSourceValid;
    };
    JsonDataSourceJsonSourcePageStringSettings.prototype.isEmpty = function () {
        return !this.stringSource();
    };
    JsonDataSourceJsonSourcePageStringSettings.prototype.reset = function () {
        this.stringSource('');
    };
    JsonDataSourceJsonSourcePageStringSettings.prototype.setValue = function (dataSource) {
        this.stringSource(dataSource.source.json());
    };
    JsonDataSourceJsonSourcePageStringSettings.prototype.getInfo = function () {
        return [
            {
                propertyName: 'stringSource', defaultVal: '', displayName: 'JSON String', editor: {
                    header: 'dx-jsonwizard-jsonstring-editor', editorType: _jsonDataSourceWidgets_1.JsonStringEditor, custom: 'dx-property-json-string-editor'
                }
            }
        ];
    };
    JsonDataSourceJsonSourcePageStringSettings.prototype.applySettings = function (jsonDataSource) {
        jsonDataSource.source.uri(undefined);
        jsonDataSource.source.json(this.stringSource());
        jsonDataSource.source.authenticationInfo = new jsonAuthenticationInfo_1.JsonAuthenticationInfo({});
        jsonDataSource.source.headers([]);
        jsonDataSource.source.queryParameters([]);
        jsonDataSource.source.pathParameters([]);
    };
    return JsonDataSourceJsonSourcePageStringSettings;
}(JsonDataSourceJsonSourcePageSettingsBase));
exports.JsonDataSourceJsonSourcePageStringSettings = JsonDataSourceJsonSourcePageStringSettings;
var JsonDataSourceJsonSourcePageUriSettings = (function (_super) {
    __extends(JsonDataSourceJsonSourcePageUriSettings, _super);
    function JsonDataSourceJsonSourcePageUriSettings(_requestWrapper, _itemsProvider) {
        var _this = _super.call(this) || this;
        _this._requestWrapper = _requestWrapper;
        _this._itemsProvider = _itemsProvider;
        _this._isUriValid = ko.observable(false);
        _this._lastValidatedJsonSourceJSON = '';
        _this._authNameValidatorInstance = null;
        _this._isInitUri = true;
        _this._collectionItemNamePlaceholder = localization_utils_1.getLocalization('Name', 'AnalyticsCoreStringId.CollectionEditor_Name_Placeholder');
        _this._lastValidateDeferred = null;
        _this._sourceUriValidatorsReady = ko.observable(true);
        _this._basicAuthValidatorsReady = ko.observable(false);
        _this._validationRequested = ko.observable(false).extend({ deferred: true });
        _this._noEmptyProperties = ko.pureComputed(function () {
            var isBasicHttpAuthValid = _this._isBasicHttpAuthValid();
            var isParametersValid = _this._isParametersValid();
            var sourceUriNotEmpty = !!_this.sourceUri();
            return isBasicHttpAuthValid && isParametersValid && sourceUriNotEmpty;
        });
        _this._lastValidationMessage = ko.observable();
        _this._getSerializedUriSource = function (jsonDataSource) {
            if (jsonDataSource === void 0) { jsonDataSource = new jsonDataSource_1.JsonDataSource({}); }
            _this.applySettings(jsonDataSource);
            return JSON.stringify(jsonDataSource.source.serialize(true));
        };
        _this._sourceUriValidationCallback = function (params) {
            if (!_this.sourceUri()) {
                if (_this._isInitUri) {
                    _this._isInitUri = false;
                    return true;
                }
                params.rule.message = getLocalizedValidationErrorMessage(null, localization_utils_1.getLocalization('Web Service Endpoint (URI):', 'DataAccessUIStringId.WizardPageChooseJsonSource_URI'));
                return false;
            }
            var serverValidationResult = false;
            _this._isInitUri = false;
            var serializedJsonSource = _this._getSerializedUriSource();
            if (serializedJsonSource != _this._lastValidatedJsonSourceJSON) {
                if (!_this._lastValidationMessage())
                    _this._lastValidationMessage(localization_utils_1.getLocalization('Validation...', 'AnalyticsCoreStringId.Validation'));
                _this._validateUriSource().done(function (result) {
                    serverValidationResult = params.rule.isValid = result.isUriValid;
                    result.faultMessage && (params.rule.message = result.faultMessage);
                    _this._lastValidationMessage(serverValidationResult ? null : result.faultMessage);
                    params.validator.validate();
                    setTimeout(function () { return _this._repaintSummary(); }, 1);
                });
            }
            else {
                return !_this._lastValidationMessage();
            }
            return serverValidationResult;
        };
        _this.isValid = ko.pureComputed(function () {
            var isPropertiesNotEmpty = _this._noEmptyProperties();
            var isUriValid = _this._isUriValid();
            return isPropertiesNotEmpty && isUriValid;
        });
        _this._validatorsReady = ko.pureComputed({
            read: function () {
                var sourceUriValidatorReady = _this._sourceUriValidatorsReady();
                var authIsEmpty = !_this.basicHttpAuth.password() && !_this.basicHttpAuth.userName();
                var authInitialized = _this._basicAuthValidatorsReady();
                return sourceUriValidatorReady && (authInitialized || authIsEmpty);
            },
            write: function (newVal) {
                _this._basicAuthValidatorsReady(newVal);
            }
        });
        _this.sourceUri = ko.observable('');
        _this.basicHttpAuth = {
            password: ko.observable(''),
            userName: ko.observable(''),
        };
        _this.parameters = ko.observableArray([]);
        _this._disposables.push(_this.resultUri = ko.pureComputed(function () {
            return _this._getResultUri();
        }));
        _this._disposables.push(_this.grid = new propertygrid_1.ObjectProperties(ko.observable(_this)));
        _this._disposables.push(ko.computed(function () {
            var editorsInitialized = _this._validatorsReady();
            var validationRequested = _this._validationRequested();
            if (editorsInitialized && validationRequested) {
                _this._validate();
            }
        }));
        _this._disposables.push(_this._validatorsReady);
        return _this;
    }
    JsonDataSourceJsonSourcePageUriSettings.prototype._validateUriSource = function () {
        var _this = this;
        var defaultValidationErrorMessage = localization_utils_1.getLocalization('Invalid URI.', 'AnalyticsCoreStringId.ReportDesigner_Wizard_JsonSource_UriValidationError');
        var endpointUriDisplayName = localization_utils_1.getLocalization('Web Service Endpoint (URI):', 'DataAccessUIStringId.WizardPageChooseJsonSource_URI');
        this._isUriValid(false);
        if (this._lastValidateDeferred) {
            this._lastValidateDeferred.reject();
        }
        var resultDeferred = $.Deferred();
        this._lastValidateDeferred = resultDeferred;
        try {
            var jsonDataSource = new jsonDataSource_1.JsonDataSource({});
            var serializedJsonSource = this._getSerializedUriSource(jsonDataSource);
            this._lastValidatedJsonSourceJSON = serializedJsonSource;
            var validationResultHandler = function (data) {
                if (resultDeferred.state && resultDeferred.state() === 'rejected')
                    return;
                _this._isUriValid(data.isUriValid);
                var faultMessage = getLocalizedValidationErrorMessage((data.isUriValid ? '' : data && data.faultMessage) || defaultValidationErrorMessage, endpointUriDisplayName);
                resultDeferred.resolve({
                    isUriValid: data.isUriValid,
                    faultMessage: faultMessage
                });
            };
            this._requestWrapper.validateJsonUri(jsonDataSource)
                .done(validationResultHandler)
                .fail(function (data) {
                if (data === void 0) { data = {}; }
                data.isValid = false;
                validationResultHandler(data);
            });
        }
        catch (ex) {
            this._isUriValid(false);
        }
        return resultDeferred.promise();
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._isCollectionValid = function (collectionName) {
        return !this[collectionName]().length || this[collectionName]().every(function (x) { return x.name(); });
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._isParametersValid = function () {
        return this._isCollectionValid('parameters');
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._isBasicHttpAuthValid = function () {
        return !this.basicHttpAuth.password() || !!this.basicHttpAuth.userName();
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._getSourceUriInfo = function () {
        var _this = this;
        var sourceUri = {
            propertyName: 'sourceUri',
            displayName: 'Web Service Endpoint (URI):',
            localizationId: 'DataAccessUIStringId.WizardPageChooseJsonSource_URI',
            defaultVal: '',
            editor: editorsInfo_1.editorTemplates.getEditor('text'),
            validatorOptions: null,
            isRequired: true,
            editorOptions: {
                elementAttr: {
                    title: this.sourceUri
                }
            }
        };
        var _self = this;
        sourceUri.validatorOptions = {
            onInitialized: function (e) {
                _this._sourceUriValidatorsReady(true);
            },
            onDisposed: function () {
                _this._sourceUriValidatorsReady(false);
            },
            validationRules: [
                {
                    type: 'custom',
                    assignValueFirst: true,
                    isDeferred: ko.pureComputed(function () { return _this._noEmptyProperties(); }),
                    get message() {
                        return _self._lastValidationMessage();
                    },
                    validationCallback: this._sourceUriValidationCallback
                }
            ]
        };
        return sourceUri;
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._getBasicHttpAuthInfo = function () {
        var _this = this;
        var basicHttpAuthName = {
            propertyName: 'userName', displayName: 'Username:', localizationId: 'DataAccessUIStringId.WizardPageConfigureJsonConnection_UsernameText', editor: editorsInfo_1.editorTemplates.getEditor('text'),
            validatorOptions: undefined,
        };
        var basicHttpAuth = {
            propertyName: 'basicHttpAuth', displayName: 'Basic HTTP Authentication', localizationId: 'DataAccessUIStringId.WizardPageConfigureJsonConnection_BasicHttpAuthText', info: [
                basicHttpAuthName,
                _utils_3.createPasswordSerializationInfo({ propertyName: 'password', displayName: 'Password:', localizationId: 'DataAccessUIStringId.WizardPageConfigureJsonConnection_PasswordText' }, false),
            ], editor: editorsInfo_1.editorTemplates.getEditor('objecteditor')
        };
        var onValidatorInitialied = function (e) {
            var authNmeValidatorInstance = e && e.component;
            if (_this._authNameValidatorInstance && _this._authNameValidatorInstance != authNmeValidatorInstance) {
                _this._authNameValidatorInstance.dispose();
            }
            _this._authNameValidatorInstance = authNmeValidatorInstance;
            _this._basicAuthValidatorsReady(true);
        };
        var authNameValidatorDisposed = function () {
            _this._authNameValidatorInstance = null;
        };
        basicHttpAuthName.validatorOptions = {
            onInitialized: onValidatorInitialied,
            onDisposed: authNameValidatorDisposed,
            validationRules: [{
                    type: 'custom',
                    reevaluate: true,
                    assignValueFirst: true,
                    get message() {
                        return getLocalizedValidationErrorMessage(null, localization_utils_1.getLocalization(basicHttpAuth.displayName, basicHttpAuth.localizationId), localization_utils_1.getLocalization(basicHttpAuthName.displayName, basicHttpAuthName.localizationId));
                    },
                    validationCallback: function (params) {
                        return _this._isBasicHttpAuthValid();
                    }
                }]
        };
        return basicHttpAuth;
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._getParametersInfo = function () {
        var _this = this;
        var parameters = {
            propertyName: 'parameters', displayName: 'Parameters', localizationId: 'AnalyticsCoreStringId.QueryBuilder_Parameters',
            array: true,
            addHandler: function () {
                var newName = _getNameHelpers_1.getUniqueNameForNamedObjectsArray(_this.parameters(), 'parameter');
                return jsonParameter_1.JsonParameter.from({ '@Name': newName });
            },
            editor: editorsInfo_1.editorTemplates.getEditor('commonCollection'),
            editorOptions: null,
            template: '#dx-jsonwizard-parametercollection'
        };
        parameters.editorOptions = {
            itemsProvider: this._itemsProvider,
            nameValidationRules: [{
                    type: 'required',
                    get message() {
                        return getLocalizedValidationErrorMessage(null, localization_utils_1.getLocalization(parameters.displayName, parameters.localizationId), this._collectionItemNamePlaceholder);
                    }
                }]
        };
        return parameters;
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._getResultUriInfo = function () {
        var _resultUri = {
            propertyName: 'resultUri',
            displayName: 'Resulting URI:',
            localizationId: 'DataAccessUIStringId.WizardPageChooseJsonSource_ResultingUri',
            defaultVal: '',
            editor: editorsInfo_1.editorTemplates.getEditor('text'),
            editorOptions: {
                readOnly: true,
                elementAttr: {
                    title: this.resultUri
                }
            }
        };
        return _resultUri;
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._getResultUri = function () {
        if (!this.sourceUri() || !this._isUriValid() || !this._isParametersValid())
            return null;
        if (this.sourceUri() && this.parameters().length === 0)
            return this.sourceUri();
        var uriParts = this.sourceUri().split('?');
        var url = uriParts[0];
        var query = uriParts[1];
        url = this._appendPathSegmentsToUri(uriParts[0]);
        return this._appendQuerySegmentsToUri(url, query);
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._appendPathSegmentsToUri = function (uri) {
        var segments = this.parameters()
            .filter(function (p) { return p.itemType() === 'PathParameter'; })
            .map(function (p) { return '{' + p.name() + '}'; });
        segments.forEach(function (segment) {
            uri = uri.replace(/[\/]+$/g, '') + '/' + segment.replace(/^[\/]+/g, '');
        });
        return uri;
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._appendQuerySegmentsToUri = function (uri, originalQuery) {
        var separator = '';
        var uriArguments = originalQuery || '';
        var querySegments = this.parameters()
            .filter(function (p) { return p.itemType() === 'QueryParameter'; })
            .map(function (p) { return p.name() + '={?}'; });
        querySegments.forEach(function (q) {
            if (!!uriArguments)
                uriArguments += '&';
            uriArguments += q;
        });
        if (uriArguments.length > 0)
            uri += '?' + uriArguments;
        return uri;
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._onValidationSummaryInitialized = function (args) {
        var _this = this;
        _super.prototype._onValidationSummaryInitialized.call(this, args);
        this._isInitUri = true;
        setTimeout(function () {
            _this._validate();
        }, 1);
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._applyParametersToSource = function (jsonDataSource) {
        var parametersByType = this.parameters().reduce(function (result, parameter) {
            var _a;
            return (__assign({}, result, (_a = {}, _a[parameter.itemType()] = (result[parameter.itemType()] || []).concat([parameter]), _a)));
        }, {});
        ['PathParameter', 'QueryParameter', 'Header'].forEach(function (type) {
            if (parametersByType[type])
                jsonDataSource.source[jsonSourceSettings_1.parameterTypeToPropertyMap[type]](parametersByType[type]);
        });
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype.applySettings = function (jsonDataSource) {
        jsonDataSource.source.uri(this.sourceUri());
        jsonDataSource.source.json(undefined);
        jsonDataSource.source.authenticationInfo.password(this.basicHttpAuth.password());
        jsonDataSource.source.authenticationInfo.userName(this.basicHttpAuth.userName());
        this._applyParametersToSource(jsonDataSource);
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype.getInfo = function () {
        var sourceUri = this._getSourceUriInfo();
        var basicHttpAuth = this._getBasicHttpAuthInfo();
        var parameters = this._getParametersInfo();
        var resultUriInfo = this._getResultUriInfo();
        return [sourceUri, basicHttpAuth, parameters, resultUriInfo];
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype.reset = function () {
        this.sourceUri('');
        this.basicHttpAuth.password('');
        this.basicHttpAuth.userName('');
        this.parameters([]);
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype.setValue = function (dataSource) {
        this.sourceUri(dataSource.source.uri());
        this.basicHttpAuth.userName(dataSource.source.authenticationInfo.userName());
        this.basicHttpAuth.password(dataSource.source.authenticationInfo.password());
        var sourceParameters = [].concat.apply([], [dataSource.source.pathParameters(), dataSource.source.queryParameters(), dataSource.source.headers()]);
        this.parameters(sourceParameters);
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype.dispose = function () {
        this._authNameValidatorInstance && this._authNameValidatorInstance.dispose();
        if (this._lastValidateDeferred) {
            this._lastValidateDeferred.reject();
            this._lastValidateDeferred = null;
        }
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this.parameters);
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype.onChange = function (_onChange) {
        var _this = this;
        var _a;
        var timeoutId = null;
        var localOnChange = function () {
            _onChange();
            clearTimeout(timeoutId);
            timeoutId = setTimeout(function () { return _this._validate(); }, 1);
        };
        (_a = this._disposables).push.apply(_a, _utils_2.subscribeProperties([this.sourceUri, this.basicHttpAuth.password, this.basicHttpAuth.userName, this.resultUri], localOnChange));
        this._disposables.push(_utils_2.subscribeArray(this.parameters, function (item) {
            var _a;
            (_a = item._disposables).push.apply(_a, _utils_2.subscribeProperties([item.name, item.itemType, item.value], localOnChange));
        }, localOnChange));
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype.isEmpty = function () {
        return !this.sourceUri();
    };
    JsonDataSourceJsonSourcePageUriSettings.prototype._validate = function () {
        if (this._validationSummary && this._validationGroup) {
            if (this._validatorsReady()) {
                this._validationGroup.validate();
                this._validationRequested(false);
            }
            else {
                this._validationRequested(true);
            }
        }
    };
    return JsonDataSourceJsonSourcePageUriSettings;
}(JsonDataSourceJsonSourcePageSettingsBase));
exports.JsonDataSourceJsonSourcePageUriSettings = JsonDataSourceJsonSourcePageUriSettings;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var dataSourceWizardState_1 = __webpack_require__(12);
var _utils_1 = __webpack_require__(13);
var _dbSchemaItemsProvider_1 = __webpack_require__(131);
var tableQuery_1 = __webpack_require__(34);
var utils_1 = __webpack_require__(9);
var _selectQuerySqlTextProvider_1 = __webpack_require__(78);
var configureQueryPage_1 = __webpack_require__(24);
var pathRequest_1 = __webpack_require__(1);
var storedProcQuery_1 = __webpack_require__(35);
var dataSourceParameter_1 = __webpack_require__(11);
var dbColumn_1 = __webpack_require__(18);
var dataSourceParameterMeta_1 = __webpack_require__(33);
var _arrayutils_1 = __webpack_require__(0);
var _utils_2 = __webpack_require__(75);
var _requestwrapper_1 = __webpack_require__(16);
var _queryBuilderPopup_1 = __webpack_require__(79);
var wizard_1 = __webpack_require__(14);
var popupWizard_1 = __webpack_require__(42);
var customSqlQuery_1 = __webpack_require__(32);
var serializer_1 = __webpack_require__(1);
var _dbSchemaTreeListController_1 = __webpack_require__(132);
var localization_utils_1 = __webpack_require__(1);
var _options_1 = __webpack_require__(53);
var pageId_1 = __webpack_require__(5);
var _ace_available_1 = __webpack_require__(10);
var MultiQueryConfigurePage = (function (_super) {
    __extends(MultiQueryConfigurePage, _super);
    function MultiQueryConfigurePage(_options) {
        var _this = _super.call(this) || this;
        _this._options = _options;
        _this._selectedPath = ko.observable(null);
        _this._itemsProvider = ko.observable();
        _this._customQueries = ko.observableArray([]);
        _this._checkedQueries = ko.observableArray([]);
        _this._sqlDataSourceWrapper = new configureQueryPage_1._SqlDataSourceWrapper(undefined, undefined, undefined);
        _this._dataSource = function () {
            return _this._sqlDataSourceWrapper && _this._sqlDataSourceWrapper.sqlDataSource;
        };
        _this._dataConnection = function () {
            return _this._dataSource() && _this._dataSource().connection;
        };
        _this._showStatementPopup = function (query) {
            _this._popupSelectStatement.isVisible(true);
            _this._popupSelectStatement.query = query;
            _this._popupSelectStatement.data(query.sqlString());
        };
        _this._showQbCallBack = function (name, isCustomQuery) {
            if (name === void 0) { name = null; }
            if (isCustomQuery === void 0) { isCustomQuery = false; }
            if (name !== null) {
                var query = _arrayutils_1.findFirstItemMatchesCondition(_this._customQueries(), function (item) { return name === (item.name() || item.generateName()); });
                if (query.type() === utils_1.SqlQueryType.customSqlQuery) {
                    _this._queryEditIndex(_this._customQueries().indexOf(query));
                    _this._showStatementPopup(query);
                }
                else {
                    _this._queryEditIndex(_this._customQueries().indexOf(query));
                    _this._popupQueryBuilder.show(query, _this._dataSource());
                }
            }
            else {
                _this._queryEditIndex(-1);
                if (isCustomQuery) {
                    _this._showStatementPopup(new customSqlQuery_1.CustomSqlQuery({ '@Name': null }, _this._dataSource()));
                }
                else {
                    var queryNew = new tableQuery_1.TableQuery({ '@Name': null }, _this._dataSource());
                    _this._popupQueryBuilder.show(queryNew, _this._dataSource());
                }
            }
        };
        _this._popupSelectStatement = ({
            isVisible: ko.observable(false),
            title: function () { return localization_utils_1.getLocalization('Custom SQL Editor', 'AnalyticsCoreStringId.SqlDSWizard_CustomSqlEditor'); },
            query: null,
            data: ko.observable(),
            okButtonText: function () { return localization_utils_1.getLocalization('OK', 'DataAccessUIStringId.Button_OK'); },
            okButtonHandler: function (e) {
                _this._popupSelectStatement.query.sqlString(e.model.data());
                _this._setCustomSqlQuery(_this._popupSelectStatement.query);
                e.model.isVisible(false);
            },
            aceOptions: _options_1.createDefaultSQLAceOptions(),
            aceAvailable: _ace_available_1.aceAvailable(),
            additionalOptions: _options_1.createDefaultSQLAdditionalOptions(function (newVal) { _this._popupSelectStatement.data(newVal); }),
            languageHelper: _options_1.createDefaultSQLLanguageHelper(),
            closest: function (element, parentSelector) {
                return $(element).closest(parentSelector);
            }
        });
        _this._customResetOptions = $.noop;
        _this._queryEditIndex = ko.observable(-1);
        _this.disableCustomSql = true;
        _this._scrollViewHeight = 'calc(100% - 36px)';
        _this._customizeDBSchemaTreeListActions = null;
        _this._isDataLoadingInProcess = ko.observable(false);
        _this._callbacks = _this._options.callbacks;
        _this._sqlTextProvider = new _selectQuerySqlTextProvider_1.SelectQuerySqlTextProvider(_requestwrapper_1.wrapGetSelectStatement(_this._callbacks.selectStatement), _this._dataConnection);
        _this._popupQueryBuilder = new _queryBuilderPopup_1.QueryBuilderPopup(function (newQuery, isInProcess) { return _this._setTableQuery(newQuery, isInProcess); }, _options.rtl, _options.callbacks.customizeQBInitData);
        _this._fieldListModel = ko.observable(null);
        _this._disposables.push(_this._hasParametersToEdit = ko.pureComputed(function () { return _this._itemsProvider().hasParametersToEdit(); }));
        _this._disposables.push(_this._isDataLoadingInProcess.subscribe(function (newVal) {
            if (!newVal)
                _this._onChange();
            _this[wizard_1.BaseWizard.__loadingStateFunctionName] && _this[wizard_1.BaseWizard.__loadingStateFunctionName](newVal);
        }));
        _this.disableCustomSql = _this._options.disableCustomSql;
        _this._getItemsAfterCheck = function (node) {
            _this._resetDataSourceResult();
            _this._isDataLoadingInProcess(true);
            if (node.checked.peek() && node.isList) {
                if (node.name === 'tables' || node.name === 'views') {
                    _this._itemsProvider().getItems(new pathRequest_1.PathRequest(node.name)).done(function () {
                        if (node.isList && node.children.peek().length > 0) {
                            $.when.apply($, node.children.peek().map(function (item) {
                                return _this._getItemsPromise(new pathRequest_1.PathRequest(node.name + '.' + item.name));
                            })).always(function () { return _this._isDataLoadingInProcess(false); });
                        }
                        else {
                            _this._isDataLoadingInProcess(false);
                        }
                    });
                }
                else if (node.specifics === 'table' || node.specifics === 'view') {
                    _this['_itemsProvider']().getItems(new pathRequest_1.PathRequest(node.specifics + '.' + node.name))
                        .always(function () { return _this._isDataLoadingInProcess(false); });
                }
                else if (node.name === 'procedures') {
                    _this['_itemsProvider']().getItems(new pathRequest_1.PathRequest(node.name))
                        .always(function () { return _this._isDataLoadingInProcess(false); });
                }
                else {
                    _this._isDataLoadingInProcess(false);
                }
            }
            else {
                _this._isDataLoadingInProcess(false);
            }
        };
        return _this;
    }
    MultiQueryConfigurePage.prototype._addQueryAlgorithm = function (elements, specifics, dataSource, customQueries) {
        if (!elements.unChecked() || specifics === 'queries') {
            if (elements.children().length === 0) {
                this._itemsProvider().getItems(new pathRequest_1.PathRequest(specifics));
            }
            if (specifics === 'tables' || specifics === 'views') {
                this._addQueryFromTables(elements, dataSource);
            }
            else if (specifics === 'procedures') {
                this._addQueryFromStoredProcedures(elements, dataSource);
            }
            else {
                this._addQueryFromCustomQueries(elements, customQueries, dataSource.queries);
            }
        }
        else {
            elements.children().forEach(function (node) {
                MultiQueryConfigurePage._removeQuery(dataSource.queries, node);
            });
        }
    };
    MultiQueryConfigurePage.prototype._addQueryFromTables = function (elements, dataSource) {
        for (var i = 0; i < elements.children().length; i++) {
            var table = elements.children()[i];
            if (!table.unChecked()) {
                var columns = {};
                var queryJSON = {
                    'Columns': columns,
                    'Tables': {
                        'SelectedTables': {
                            'Item1': {
                                '@Name': table.name,
                                '@ControlType': 'Table',
                                '@ItemType': 'Table'
                            }
                        },
                    }
                };
                if (table.children().length === 0) {
                    this._itemsProvider().getItems(new pathRequest_1.PathRequest('tables.' + table.name)).done(function () {
                        table.initializeChildren(table.children());
                    });
                }
                for (var j = 0; j < table.children().length; j++) {
                    var column = table.children()[j];
                    if (column.checked()) {
                        columns['Item' + (j + 1)] = {
                            '@Table': table.name,
                            '@Name': column.name,
                            '@ItemType': 'Column'
                        };
                    }
                }
                MultiQueryConfigurePage._pushQuery(new tableQuery_1.TableQuery(queryJSON, dataSource), table, dataSource.queries);
            }
            else {
                MultiQueryConfigurePage._removeQuery(dataSource.queries, table);
            }
        }
    };
    MultiQueryConfigurePage.prototype._addQueryFromStoredProcedures = function (elements, dataSource) {
        for (var i = 0; i < elements.children().length; i++) {
            var procedure = elements.children()[i];
            if (procedure.checked()) {
                var newQuery = new storedProcQuery_1.StoredProcQuery({ '@Name': procedure.name, 'ProcName': procedure.name }, dataSource);
                procedure.arguments.forEach(function (arg) {
                    newQuery.parameters.push(new dataSourceParameter_1.DataSourceParameter({ '@Name': arg.name, '@Type': dbColumn_1.DBColumn.GetType(arg.type) }, null, dataSourceParameterMeta_1.storedProcParameterSerializationsInfo(dbColumn_1.DBColumn.GetType(arg.type))));
                });
                MultiQueryConfigurePage._pushQuery(newQuery, procedure, dataSource.queries);
            }
            else {
                MultiQueryConfigurePage._removeQuery(dataSource.queries, procedure);
            }
        }
    };
    MultiQueryConfigurePage.prototype._addQueryFromCustomQueries = function (elements, queries, allQueries) {
        for (var i = 0; i < elements.children().length; i++) {
            var queryNode = elements.children()[i];
            var query = _arrayutils_1.findFirstItemMatchesCondition(queries.peek(), function (item) { return queryNode.name === (item.name() || item.generateName()); });
            if (queryNode.checked()) {
                query.name(_utils_2.generateQueryUniqueName(allQueries.peek(), query));
                this._checkedQueries.push(query);
            }
        }
    };
    MultiQueryConfigurePage.prototype._getItemsPromise = function (pathRequest) {
        return this._itemsProvider().getItems(pathRequest);
    };
    MultiQueryConfigurePage.prototype._resetDataSourceResult = function () {
        this._customResetOptions();
        this._dataSource().relations([]);
        this._dataSource().resultSet = null;
        this._onChange();
    };
    MultiQueryConfigurePage.prototype._setQueryCore = function (query) {
        var provider = this._fieldListModel().itemsProvider;
        var queryEditIndex = this._queryEditIndex();
        if (queryEditIndex >= 0) {
            this._itemsProvider().queries().children()[queryEditIndex].name = query.name();
            provider.customQueries().splice(queryEditIndex, 1, query);
        }
        else {
            query.name(_utils_2.generateQueryUniqueName(provider.customQueries().peek(), query));
            provider.customQueries().push(query);
            this._selectedPath('queries.' + query.name());
            var childrens = this._itemsProvider().queries().children();
            var children = childrens[childrens.length - 1];
            children.setChecked(true);
            children['_afterCheckToggled'] && children['_afterCheckToggled'](children);
        }
        this._resetDataSourceResult();
    };
    MultiQueryConfigurePage._pushQuery = function (newQuery, node, queries) {
        if (!_arrayutils_1.findFirstItemMatchesCondition(queries.peek(), function (item) { return item.name() === (newQuery.name() || newQuery.generateName()); })) {
            newQuery.name(_utils_2.generateQueryUniqueName(queries.peek(), newQuery));
            queries.push(newQuery);
        }
        node.hasQuery = true;
    };
    MultiQueryConfigurePage._removeQuery = function (queries, node) {
        if (node.hasQuery) {
            var queryIndex = -1;
            var existUncheck = queries.peek().some(function (value, index) {
                if (value.name() === node.name || value.generateName() === node.name) {
                    queryIndex = index;
                    return true;
                }
                return false;
            });
            if (existUncheck) {
                queries.splice(queryIndex, 1);
            }
            node.hasQuery = false;
        }
    };
    MultiQueryConfigurePage.prototype.canNext = function () {
        return !this._itemsProvider().nextButtonDisabled() && this.canFinish();
    };
    MultiQueryConfigurePage.prototype.canFinish = function () {
        return this._itemsProvider() && this._itemsProvider().hasCheckedItems() && !this._isDataLoadingInProcess();
    };
    MultiQueryConfigurePage.prototype._AddQueryWithBuilder = function () {
    };
    MultiQueryConfigurePage.prototype._runQueryBuilder = function () {
    };
    MultiQueryConfigurePage.prototype._loadPanelViewModel = function (element) {
        return popupWizard_1.PopupWizard._getLoadPanelViewModel(element, this._isDataLoadingInProcess);
    };
    MultiQueryConfigurePage.prototype._setTableQuery = function (query, isInProcess) {
        var _this = this;
        isInProcess && isInProcess(true);
        return this._sqlTextProvider.getQuerySqlText(query)
            .done(function () { return _this._setQueryCore(query); })
            .always(function () {
            isInProcess && isInProcess(false);
        });
    };
    MultiQueryConfigurePage.prototype._setCustomSqlQuery = function (query) {
        this._setQueryCore(query);
    };
    MultiQueryConfigurePage.prototype._createTreeListFactory = function () {
        return new _utils_1.MultiQueryTreeListItemFactory();
    };
    MultiQueryConfigurePage.prototype.commit = function () {
        var _this = this;
        this._dataSource().queries.removeAll();
        this._checkedQueries.removeAll();
        this._addQueryAlgorithm(this._itemsProvider().tables(), 'tables', this._dataSource());
        this._addQueryAlgorithm(this._itemsProvider().views(), 'views', this._dataSource());
        this._addQueryAlgorithm(this._itemsProvider().procedures(), 'procedures', this._dataSource());
        this._addQueryAlgorithm(this._itemsProvider().queries(), 'queries', this._dataSource(), this._customQueries);
        ko.utils.arrayPushAll(this._dataSource().queries(), this._checkedQueries());
        this._dataSource().queries.valueHasMutated();
        var checkedCustomQueries = this._itemsProvider().queries().children().filter(function (x) { return x.checked(); }).map(function (query) { return query.name; });
        var customQueries = this._sqlDataSourceWrapper.sqlDataSource.queries().filter(function (x) {
            return checkedCustomQueries.some(function (queryName) { return queryName === x.name(); }) || x instanceof storedProcQuery_1.StoredProcQuery;
        });
        customQueries.forEach(function (item) { return _this._sqlDataSourceWrapper.sqlDataSource.queries.remove(item); });
        var serializer = new serializer_1.ModelSerializer();
        return $.Deferred().resolve({
            sqlDataSourceJSON: this._sqlDataSourceWrapper.save(),
            customQueries: customQueries.map(function (x) { return JSON.stringify(serializer.serialize(x)); })
        }).promise();
    };
    MultiQueryConfigurePage.prototype.initialize = function (state) {
        var _this = this;
        this._sqlDataSourceWrapper = dataSourceWizardState_1._restoreSqlDataSourceFromState(state, this._options.requestWrapper);
        var customQueriesPromise = this._callbacks.customQueriesPreset
            ? this._callbacks.customQueriesPreset(this._dataSource())
            : $.Deferred().resolve([]).promise();
        var deferred = $.Deferred();
        customQueriesPromise.done(function (queries) {
            _this._customQueries(queries);
            _this._selectedPath('');
            var itemsProvider = new _dbSchemaItemsProvider_1.DBSchemaItemsProvider(_this._dataSource().dbSchemaProvider, _this._customQueries, _this._showQbCallBack, _this.disableCustomSql, _this._getItemsAfterCheck);
            _this._disposables.push(itemsProvider);
            _this._itemsProvider(itemsProvider);
            _this._getItemsPromise(new pathRequest_1.PathRequest('queries'));
            _this._fieldListModel({
                factory: _this._createTreeListFactory(),
                itemsProvider: _this._itemsProvider(),
                selectedPath: _this._selectedPath,
                treeListController: new _dbSchemaTreeListController_1.DBSchemaTreeListController(_this._customizeDBSchemaTreeListActions),
                templateName: 'dxrd-treelist-with-checkbox'
            });
            _this._popupQueryBuilder.isVisible(false);
            _this._dataSource()
                .dbSchemaProvider.getDbSchema()
                .done(function () {
                deferred.resolve();
            })
                .fail(deferred.reject);
        })
            .fail(deferred.reject);
        return deferred.promise();
    };
    return MultiQueryConfigurePage;
}(wizardPage_1.WizardPageBase));
exports.MultiQueryConfigurePage = MultiQueryConfigurePage;
function _registerMultiQueryConfigurePage(factory, wizardOptions) {
    factory.registerMetadata(pageId_1.SqlDataSourceWizardPageId.MultiQueryConfigurePage, {
        create: function () {
            return new MultiQueryConfigurePage(wizardOptions);
        },
        setState: function (data, state) {
            state.sqlDataSourceJSON = data.sqlDataSourceJSON;
            state.customQueries = data.customQueries;
        },
        getState: function (state) {
            return state.sqlDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.sqlDataSourceJSON = defaultState.sqlDataSourceJSON;
            state.customQueries = defaultState.customQueries;
        },
        description: localization_utils_1.getLocalization('Columns selected from specific tables and/or views will be automatically included into a separate query.', 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureMultiQuery'),
        template: 'dxrd-wizard-add-queries-page'
    });
}
exports._registerMultiQueryConfigurePage = _registerMultiQueryConfigurePage;


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(9);
var wizardPage_1 = __webpack_require__(7);
var dataSourceWizardState_1 = __webpack_require__(12);
var configureQueryPage_1 = __webpack_require__(24);
var _configureParametersUtils_1 = __webpack_require__(133);
var dataSourceParameter_1 = __webpack_require__(11);
var _getNameHelpers_1 = __webpack_require__(0);
var _utils_1 = __webpack_require__(13);
var editorsInfo_1 = __webpack_require__(6);
var _arrayutils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var pageId_1 = __webpack_require__(5);
function _canEditQueryParameters(query, customQueries) {
    if (query.type() === utils_1.SqlQueryType.tableQuery || query.type() === utils_1.SqlQueryType.customSqlQuery) {
        return customQueries.indexOf(query) > -1;
    }
    return query.type() === utils_1.SqlQueryType.storedProcQuery && query.parameters().length > 0;
}
exports._canEditQueryParameters = _canEditQueryParameters;
var MultiQueryConfigureParametersPage = (function (_super) {
    __extends(MultiQueryConfigureParametersPage, _super);
    function MultiQueryConfigureParametersPage(parametersConverter, _requestWrapper) {
        if (parametersConverter === void 0) { parametersConverter = {
            createParameterViewModel: function (parameter) { return parameter; },
            getParameterFromViewModel: function (parameterViewModel) { return parameterViewModel; }
        }; }
        var _this = _super.call(this) || this;
        _this.parametersConverter = parametersConverter;
        _this._requestWrapper = _requestWrapper;
        _this._sqlDataSourceWrapper = new configureQueryPage_1._SqlDataSourceWrapper(undefined, undefined, _this._requestWrapper);
        _this._selectedPath = ko.observable(null);
        _this._rootItems = ko.observableArray();
        _this._createNewParameter = function (queryName, parameters) {
            var newParameter = new dataSourceParameter_1.DataSourceParameter({
                '@Name': _getNameHelpers_1.getUniqueNameForNamedObjectsArray(parameters, 'parameter'),
                '@Type': 'System.Int32'
            });
            _this._selectedPath(queryName + '.' + newParameter.name());
            return _this.parametersConverter.createParameterViewModel(newParameter);
        };
        _this._scrollViewHeight = '100%';
        _this._fieldListModel = ko.observable(null);
        _this._removeButtonTitle = localization_utils_1.getLocalization('Remove', 'DataAccessUIStringId.Button_Remove');
        var callback = function () { return _this._onChange(); };
        _this._disposables.push(_utils_1.subscribeArray(_this._rootItems, function (item) {
            _this._disposables.push(_utils_1.subscribeArray(item.parameters, function (parameter) {
                _this._disposables.push(_utils_1.subscribeObject(parameter.dataSourceParameter, function (value) {
                    var _a;
                    (_a = _this._disposables).push.apply(_a, _utils_1.subscribeProperties([value.name, value['value'], value['type']], callback));
                }, callback));
            }, callback));
        }, callback));
        _this._parametersEditorOptions = {
            addHandler: function () {
                return _this.parametersConverter.createParameterViewModel(new dataSourceParameter_1.DataSourceParameter({
                    '@Name': _getNameHelpers_1.getUniqueNameForNamedObjectsArray(_this._parametersEditorOptions.values.peek().peek(), 'param'),
                    '@Type': 'System.Int32'
                }));
            },
            values: ko.observable(ko.observableArray([])),
            displayName: 'Parameters',
            level: 0,
            info: ko.observable({
                displayName: 'Parameters', localizationId: 'DevExpress.DataAccess.Sql.SqlQuery.Parameters',
                propertyName: 'parameters',
                modelName: 'Parameter',
                array: true,
                editor: editorsInfo_1.editorTemplates.getEditor('commonCollection'),
                template: '#dxrd-parameter-collection-item'
            }),
            editorTemplate: '#dxrd-wizard-datasource-parameters',
            hideButtons: ko.observable(false),
            collapsed: false
        };
        return _this;
    }
    MultiQueryConfigureParametersPage.prototype._isParametersValid = function () {
        return this._getParameters().every(function (x) { return x.isValid(); });
    };
    MultiQueryConfigureParametersPage.prototype.canNext = function () {
        return this._isParametersValid() && this._sqlDataSourceWrapper.sqlDataSource.queries().length > 1;
    };
    MultiQueryConfigureParametersPage.prototype.canFinish = function () {
        return this._isParametersValid() && this._sqlDataSourceWrapper.sqlDataSource.queries().length >= 1;
    };
    MultiQueryConfigureParametersPage.prototype._getParameters = function () {
        return [].concat.apply([], (this._rootItems() || []).map(function (x) {
            return x.parameters().map(function (param) {
                return param.dataSourceParameter();
            });
        }));
    };
    MultiQueryConfigureParametersPage.prototype.initialize = function (state) {
        var _this = this;
        var newRootItemsWithParameters = [];
        var rootItems = this._rootItems();
        this._sqlDataSourceWrapper = dataSourceWizardState_1._restoreSqlDataSourceFromState(state, this._requestWrapper);
        this._sqlDataSourceWrapper.sqlDataSource.queries().forEach(function (query) {
            if (_canEditQueryParameters(query, _this._sqlDataSourceWrapper.customQueries)) {
                var parent = new _configureParametersUtils_1.ParametersTreeListRootItem(query);
                parent.parameters(query.parameters().map(function (parameterModel) {
                    return new _configureParametersUtils_1.ParametersTreeListItem(_this.parametersConverter.createParameterViewModel(parameterModel), parent);
                }));
                newRootItemsWithParameters.push(parent);
            }
        });
        rootItems.filter(function (x) { return newRootItemsWithParameters.every(function (newItem) { return newItem.name !== x.name; }); }).forEach(function (removedItem) {
            rootItems.splice(_this._rootItems().indexOf(removedItem), 1);
        });
        newRootItemsWithParameters.forEach(function (newItem) {
            var currentItem = rootItems.filter(function (x) { return x.name === newItem.name; })[0];
            if (currentItem) {
                newItem.parameters().filter(function (newParam) { return currentItem.parameters().every(function (x) { return x.name !== newParam.name; }); }).forEach(function (param) {
                    currentItem.parameters.push(param);
                });
            }
            else {
                rootItems.push(newItem);
            }
        });
        this._rootItems.valueHasMutated();
        this._fieldListModel({
            itemsProvider: {
                getItems: function (pathRequest) {
                    var result = $.Deferred();
                    if (!pathRequest.fullPath) {
                        result.resolve(_this._rootItems());
                    }
                    else {
                        var parent = _arrayutils_1.findFirstItemMatchesCondition(_this._rootItems(), function (item) { return item.name === pathRequest.ref; });
                        result.resolve(parent.parameters());
                    }
                    return result.promise();
                }
            },
            templateName: 'dx-treelist-item-with-hover',
            selectedPath: this._selectedPath,
            treeListController: new _configureParametersUtils_1.ParametersTreeListController(this._rootItems(), this._createNewParameter),
        });
        return $.Deferred().resolve().promise();
    };
    MultiQueryConfigureParametersPage.prototype.commit = function () {
        var _this = this;
        this._rootItems().forEach(function (item) {
            item.query().parameters(item.parameters().map(function (parameterViewModel) {
                return _this.parametersConverter.getParameterFromViewModel(parameterViewModel.dataSourceParameter());
            }));
        });
        return $.Deferred().resolve({
            sqlDataSourceJSON: this._sqlDataSourceWrapper.sqlDataSourceJSON,
            customQueries: this._sqlDataSourceWrapper.saveCustomQueries()
        }).promise();
    };
    return MultiQueryConfigureParametersPage;
}(wizardPage_1.WizardPageBase));
exports.MultiQueryConfigureParametersPage = MultiQueryConfigureParametersPage;
function _registerMultiQueryConfigureParametersPage(factory, requestWrapper, parametersConverter) {
    factory.registerMetadata(pageId_1.SqlDataSourceWizardPageId.MultiQueryConfigureParametersPage, {
        create: function () { return new MultiQueryConfigureParametersPage(parametersConverter, requestWrapper); },
        getState: function (state) { return state.sqlDataSourceWizard; },
        setState: function (result, state) { return state.customQueries = result.customQueries; },
        resetState: function () { return void 0; },
        description: localization_utils_1.getLocalization('Configure query parameters.', 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureParameters'),
        template: 'dxrd-configure-query-parameters-page'
    });
}
exports._registerMultiQueryConfigureParametersPage = _registerMultiQueryConfigureParametersPage;


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var dataSourceWizardState_1 = __webpack_require__(12);
var resultSet_1 = __webpack_require__(71);
var _utils_1 = __webpack_require__(13);
var _masterDetailEditor_1 = __webpack_require__(134);
var _infoMessageHelpers_1 = __webpack_require__(0);
var serializer_1 = __webpack_require__(1);
var pageId_1 = __webpack_require__(5);
var localization_utils_1 = __webpack_require__(1);
var ConfigureMasterDetailRelationshipsPage = (function (_super) {
    __extends(ConfigureMasterDetailRelationshipsPage, _super);
    function ConfigureMasterDetailRelationshipsPage(_sqlDataSourceResultSchema) {
        var _this = _super.call(this) || this;
        _this._sqlDataSourceResultSchema = _sqlDataSourceResultSchema;
        _this._relations = ko.observableArray([]);
        _this._customResetOptions = $.noop;
        _this._relationsEditor = ko.observable(null);
        var callback = function () { return _this._onChange(); };
        _this._disposables.push(_utils_1.subscribeArray(_this._relations, function (relation) {
            var _a;
            (_a = relation._disposables).push.apply(_a, _utils_1.subscribeProperties([relation.detailQuery, relation.name, relation.masterQuery], callback));
            relation._disposables.push(_utils_1.subscribeArray(relation.keyColumns, function (column) {
                var _a;
                (_a = relation._disposables).push.apply(_a, _utils_1.subscribeProperties([column.detailColumn, column.masterColumn], callback));
            }, callback));
        }, callback));
        return _this;
    }
    ConfigureMasterDetailRelationshipsPage.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.disposeObservableArray(this._relations);
    };
    ConfigureMasterDetailRelationshipsPage.prototype._updateRelations = function () {
        var _this = this;
        var relations = this._relations();
        relations.forEach(function (relation, index) {
            var detailTable = _this._resultSet.tables().filter(function (table) { return table.tableName() === relation.detailQuery(); })[0];
            var masterTable = _this._resultSet.tables().filter(function (table) { return table.tableName() === relation.masterQuery(); })[0];
            if (!detailTable || !masterTable) {
                relations.splice(index, 1);
                return;
            }
            var keyColumns = relation.keyColumns();
            keyColumns.forEach(function (keyColumn, index) {
                if (detailTable.columns().every(function (x) { return x.name() !== keyColumn.detailColumn(); }) ||
                    masterTable.columns().every(function (x) { return x.name() !== keyColumn.masterColumn(); }))
                    keyColumns.splice(index, 1);
            });
            if (keyColumns.length === 0)
                relations.splice(index, 1);
        });
        this._relations.valueHasMutated();
    };
    ConfigureMasterDetailRelationshipsPage.prototype.canNext = function () {
        return false;
    };
    ConfigureMasterDetailRelationshipsPage.prototype.canFinish = function () {
        return this._relations().every(function (relation) { return relation.keyColumns()
            .every(function (keyColumn) { return !!keyColumn.detailColumn() && !!keyColumn.masterColumn(); }); });
    };
    ConfigureMasterDetailRelationshipsPage.prototype._getResultSet = function (dataSource) {
        var deferred = $.Deferred();
        if (dataSource.resultSet) {
            deferred.resolve((dataSource.resultSet));
        }
        else {
            this._sqlDataSourceResultSchema(dataSource).done((function (result) {
                deferred.resolve(new resultSet_1.ResultSet(JSON.parse(result.resultSchemaJSON)));
            })).fail(function (result) {
                deferred.reject(result);
            });
        }
        return deferred.promise();
    };
    ConfigureMasterDetailRelationshipsPage.prototype.initialize = function (state) {
        var _this = this;
        this.relationsSubscription && this.relationsSubscription.dispose();
        this._sqlDataSourceWrapper = dataSourceWizardState_1._restoreSqlDataSourceFromState(state);
        this._disposables.push(this.relationsSubscription = this._relations.subscribe(function (changes) {
            var isRelationsChanged = changes.some(function (change) {
                return !change['moved'] && change['moved'] !== 0;
            });
            if (isRelationsChanged) {
                _this._customResetOptions();
            }
        }, null, 'arrayChange'));
        return this._getResultSet(this._sqlDataSourceWrapper.sqlDataSource)
            .done(function (result) {
            _this._resultSet = result;
            _this._updateRelations();
            _this._relationsEditor(new _masterDetailEditor_1.MasterDetailEditor(_this._relations, _this._resultSet, $.noop));
        })
            .fail(function (result) {
            if (_infoMessageHelpers_1.getErrorMessage(result))
                _infoMessageHelpers_1.ShowMessage(_infoMessageHelpers_1.getErrorMessage(result));
        });
    };
    ConfigureMasterDetailRelationshipsPage.prototype.commit = function () {
        this.relationsSubscription.dispose();
        this._sqlDataSourceWrapper.sqlDataSource.relations(this._relations());
        this._sqlDataSourceWrapper.sqlDataSource.resultSet = this._resultSet;
        var serializer = new serializer_1.ModelSerializer();
        return $.Deferred().resolve({
            sqlDataSourceJSON: this._sqlDataSourceWrapper.sqlDataSourceJSON,
            customQueries: this._sqlDataSourceWrapper.saveCustomQueries(),
            relations: this._relations().map(function (x) { return JSON.stringify(serializer.serialize(x)); }),
        }).promise();
    };
    return ConfigureMasterDetailRelationshipsPage;
}(wizardPage_1.WizardPageBase));
exports.ConfigureMasterDetailRelationshipsPage = ConfigureMasterDetailRelationshipsPage;
function _registerConfigureMasterDetailRelationshipsPage(factory, sqlDataSourceResultSchema) {
    factory.registerMetadata(pageId_1.DataSourceWizardPageId.ConfigureMasterDetailRelationshipsPage, {
        create: function () {
            return new ConfigureMasterDetailRelationshipsPage(sqlDataSourceResultSchema);
        },
        setState: function (data, state) {
            state.relations = data.relations;
        },
        getState: function (state) {
            return state.sqlDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.relations = defaultState.relations;
        },
        description: localization_utils_1.getLocalization('Configure master-detail relationships.', 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureMasterDetailRelations'),
        template: 'dxrd-wizard-configure-relations-page'
    });
}
exports._registerConfigureMasterDetailRelationshipsPage = _registerConfigureMasterDetailRelationshipsPage;


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var _utils_1 = __webpack_require__(13);
var wizardPage_1 = __webpack_require__(7);
var objectSchema_1 = __webpack_require__(52);
var objectDataSource_1 = __webpack_require__(23);
var _objectSchemaProvider_1 = __webpack_require__(82);
var _chooseObjectTypes_1 = __webpack_require__(83);
var _chooseObjectDataMembers_1 = __webpack_require__(84);
var _chooseObjectParameters_1 = __webpack_require__(81);
var localization_utils_1 = __webpack_require__(1);
var fullscreenWizardPage_1 = __webpack_require__(38);
var pageId_1 = __webpack_require__(5);
var SpecifyObjectDataSourceSettingsPage = (function (_super) {
    __extends(SpecifyObjectDataSourceSettingsPage, _super);
    function SpecifyObjectDataSourceSettingsPage(_dataSourceWizardOptions) {
        var _this = _super.call(this) || this;
        _this._dataSourceWizardOptions = _dataSourceWizardOptions;
        _this._types = ko.observableArray([]);
        _this._objectDataSource = new objectDataSource_1.ObjectDataSource();
        var getItemsProviderCallback = _this._dataSourceWizardOptions.callbacks.getItemsProviderCallback;
        _this._disposables.push(_this._provider = new _objectSchemaProvider_1.ObjectSchemaProvider(_this._dataSourceWizardOptions.requestWrapper), _this._chooseObjectType = new _chooseObjectTypes_1.ChooseObjectTypes(_this._types, _this._provider), _this._chooseObjectDataMember = new _chooseObjectDataMembers_1.ChooseObjectDataMembers(_this._chooseObjectType.selectedType, _this._chooseObjectType.selectedCtor), _this._chooseObjectParameters = new _chooseObjectParameters_1.ChooseObjectParameters(_this._chooseObjectType.selectedCtor, _this._chooseObjectDataMember.selectedDataMembers, getItemsProviderCallback && getItemsProviderCallback()));
        _this._initSections();
        return _this;
    }
    SpecifyObjectDataSourceSettingsPage.prototype._initSections = function () {
        var _this = this;
        this._sections = [
            {
                data: this._chooseObjectType,
                disabled: function () { return false; },
                description: localization_utils_1.getLocalization('Choose the type and its constructor.', 'AnalyticsCoreStringId.ObjectDSWizard_ChooseType_Description'),
                position: _utils_1.getSectionStyle(this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.Right : fullscreenWizardPage_1.WizardSectionPosition.Left),
                template: 'dx-objectdatasource-types-section'
            },
            {
                data: this._chooseObjectDataMember,
                disabled: function () { return !_this._chooseObjectDataMember.dataMembers().length; },
                description: localization_utils_1.getLocalization('Choose the entire object or a data member to bind.', 'AnalyticsCoreStringId.ObjectDSWizard_ChooseDataMember_Description'),
                position: _utils_1.getSectionStyle(this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.TopLeft : fullscreenWizardPage_1.WizardSectionPosition.TopRight),
                disabledText: localization_utils_1.getLocalization('To select a data member, choose a type that contains at least one data member.', 'AnalyticsCoreStringId.ObjectDSWizard_ChooseDataMember_Disabled_Description'),
                template: 'dx-objectdatasource-datamembers-section'
            },
            {
                data: this._chooseObjectParameters,
                disabled: function () { return !_this._chooseObjectParameters.hasParameters(); },
                position: _utils_1.getSectionStyle(this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.BottomLeft : fullscreenWizardPage_1.WizardSectionPosition.BottomRight),
                description: localization_utils_1.getLocalization('Configure constructor parameters and/or method parameters.', 'AnalyticsCoreStringId.ObjectDSWizard_ConfigureParameters_Description'),
                disabledText: localization_utils_1.getLocalization('To specify parameters, select a parameterized constructor or method.', 'AnalyticsCoreStringId.ObjectDSWizard_ConfigureParameters_Disabled_Description'),
                template: 'dx-objectdatasource-parameters-section'
            }
        ];
    };
    SpecifyObjectDataSourceSettingsPage.prototype.showDescription = function (index, text) {
        return [index + 1, text].join('. ');
    };
    SpecifyObjectDataSourceSettingsPage.prototype.canNext = function () {
        return false;
    };
    SpecifyObjectDataSourceSettingsPage.prototype.canFinish = function () {
        return !!this._chooseObjectDataMember.selectedDataMembers().length;
    };
    SpecifyObjectDataSourceSettingsPage.prototype.commit = function () {
        var selectedDataMember = this._chooseObjectDataMember.selectedDataMembers()[0];
        return $.Deferred().resolve({
            selectedType: this._chooseObjectType.selectedType().name,
            ctor: this._chooseObjectType.selectedCtor(),
            dataSourceName: this._objectDataSource.name(),
            context: this._context,
            dataMember: !selectedDataMember || selectedDataMember.isEntireObject() ? undefined : selectedDataMember,
        }).promise();
    };
    SpecifyObjectDataSourceSettingsPage.prototype.initialize = function (state) {
        var _this = this;
        this._context = state.objectDataSourceWizard.context;
        this._objectDataSource.setState(state.objectDataSourceWizard);
        this._chooseObjectType.selectedCtor(this._objectDataSource.ctor);
        this._chooseObjectDataMember.selectedDataMembers([this._objectDataSource.dataMember]);
        this._provider.getObjectTypeDescriptions(state.objectDataSourceWizard.context).done(function (schema) {
            schema.types.forEach(function (type) { return type.members.splice(0, 0, objectSchema_1.ObjectDataMember.empty()); });
            _this._types(schema.types || []);
            if (schema.types.length > 0) {
                _this._chooseObjectType.selectedPath(schema.types[0].name);
            }
        });
        return $.Deferred().resolve().promise();
    };
    return SpecifyObjectDataSourceSettingsPage;
}(wizardPage_1.WizardPageBase));
exports.SpecifyObjectDataSourceSettingsPage = SpecifyObjectDataSourceSettingsPage;
function _registerSpecifyObjectDataSourceSettingsPage(factory, dataSourceWizardOptions) {
    factory.registerMetadata(pageId_1.FullscreenDataSourceWizardPageId.SpecifyObjectDataSourceSettingsPage, {
        setState: function (data, state) {
            state.objectDataSourceWizard.ctor = data.ctor;
            state.objectDataSourceWizard.dataMember = data.dataMember;
            state.objectDataSourceWizard.selectedType = data.selectedType;
            state.objectDataSourceWizard.dataSourceName = data.dataSourceName;
        },
        getState: function (state) {
            return state;
        },
        resetState: function (state, defaultState) {
            state.objectDataSourceWizard.ctor = defaultState.objectDataSourceWizard.ctor;
            state.objectDataSourceWizard.dataMember = defaultState.objectDataSourceWizard.dataMember;
            state.objectDataSourceWizard.selectedType = defaultState.objectDataSourceWizard.selectedType;
            state.objectDataSourceWizard.dataSourceName = defaultState.objectDataSourceWizard.dataSourceName;
        },
        create: function () {
            return new SpecifyObjectDataSourceSettingsPage(dataSourceWizardOptions);
        },
        template: 'dxrd-page-objectsource',
        navigationPanelText: localization_utils_1.getLocalization('Specify Data Source Settings', 'AnalyticsCoreStringId.Wizard_SpecifyDataSourceSettingsPage')
    });
}
exports._registerSpecifyObjectDataSourceSettingsPage = _registerSpecifyObjectDataSourceSettingsPage;


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var queryModel_1 = __webpack_require__(58);
var _arrayutils_1 = __webpack_require__(0);
var initializer_1 = __webpack_require__(70);
var localization_utils_1 = __webpack_require__(1);
var querySurface_1 = __webpack_require__(97);
var dbSchemaProvider_1 = __webpack_require__(68);
var requestwrapper_1 = __webpack_require__(8);
var _utils_1 = __webpack_require__(0);
var _designerInitializer_1 = __webpack_require__(0);
var _processError_1 = __webpack_require__(0);
var parameterModelMeta_1 = __webpack_require__(46);
var _selection_1 = __webpack_require__(0);
var controlsFactory_1 = __webpack_require__(27);
var _utils_2 = __webpack_require__(0);
var _options_1 = __webpack_require__(53);
var _columnDragHandler_1 = __webpack_require__(155);
var _queryBuilderTreeListController_1 = __webpack_require__(156);
var propertygrid_1 = __webpack_require__(6);
var _localization_1 = __webpack_require__(0);
var _accordionTabInfo_1 = __webpack_require__(157);
var _dbObjectDragDropHandler_1 = __webpack_require__(98);
var _queryBuilderObjectsProvider_1 = __webpack_require__(43);
var _actionList_1 = __webpack_require__(0);
var _infoMessageHelpers_1 = __webpack_require__(0);
var _controlsFactory_1 = __webpack_require__(158);
var config_1 = __webpack_require__(196);
var sqlDataSource_1 = __webpack_require__(74);
var _requestwrapper_1 = __webpack_require__(16);
var _ace_available_1 = __webpack_require__(10);
var _internal_1 = __webpack_require__(0);
var QueryBuilderElements = {
    Surface: 'dxrd-surface-template-base',
    Toolbar: 'dxqb-toolbar',
    RightPanel: 'dx-right-panel-lightweight',
    DataPreview: 'dxqb-popup#data',
    SqlPreview: 'dxqb-popup#sql'
};
function customizeDesignerActions(designerModel, nextCustomizer) {
    var query = designerModel.model;
    return (function (actions) {
        var del = _arrayutils_1.findFirstItemMatchesCondition(actions, function (action) { return action.text === 'Delete'; });
        del.imageClassName = 'dx-icon-dxrd-image-recycle-bin';
        del.imageTemplateName = 'dxrd-svg-operations-recycle_bin';
        var undo = _arrayutils_1.findFirstItemMatchesCondition(actions, function (action) { return action.text === 'Undo'; });
        undo.disabled = ko.pureComputed(function () { return designerModel.isLoading() || !designerModel.undoEngine().undoEnabled(); });
        var redo = _arrayutils_1.findFirstItemMatchesCondition(actions, function (action) { return action.text === 'Redo'; });
        actions.splice(0, actions.length, del, undo, redo);
        actions.push({
            id: initializer_1.ActionId.Save,
            text: 'Save',
            displayText: function () { return localization_utils_1.getLocalization('Save', 'AnalyticsCoreStringId.MenuButtons_Save'); },
            imageClassName: 'dxqb-image-save',
            imageTemplateName: 'dxrd-svg-menu-save',
            disabled: designerModel.isLoading,
            visible: true,
            hotKey: { ctrlKey: true, keyCode: 'S'.charCodeAt(0) },
            clickAction: function () {
                query().save();
            },
            hasSeparator: true
        });
        actions.push({
            id: initializer_1.ActionId.DataPreview,
            text: 'Preview Results',
            displayText: function () { return localization_utils_1.getLocalization('Preview Results', 'DataAccessUIStringId.QueryBuilderButtons_PreviewResults'); },
            imageClassName: 'dxrd-image-data-preview',
            imageTemplateName: 'dxrd-svg-queryBuilder-data_preview',
            disabled: designerModel.isLoading,
            visible: true,
            hotKey: { ctrlKey: true, keyCode: 'P'.charCodeAt(0) },
            clickAction: function () {
                if (!query().canSave())
                    return;
                designerModel.showPreview();
            },
            hasSeparator: true
        });
        actions.push({
            id: initializer_1.ActionId.SelectStatementPreview,
            text: 'Preview Select Statement',
            displayText: function () { return localization_utils_1.getLocalization('Preview Select Statement', 'AnalyticsCoreStringId.QueryBuilder_PreviewSelectStatement_Tooltip'); },
            imageClassName: 'dxrd-image-selectstatement-preview',
            imageTemplateName: 'dxrd-svg-queryBuilder-select_statment',
            disabled: designerModel.isLoading,
            visible: true,
            hotKey: { ctrlKey: true, keyCode: 'E'.charCodeAt(0) },
            clickAction: function () {
                if (!query().canSave())
                    return;
                designerModel.showStatement();
            },
            hasSeparator: true
        });
        nextCustomizer && nextCustomizer(actions);
    });
}
function updateQueryBuilderSurfaceContentSize(getRoot, surfaceSize, surface, updateLayoutCallbacks) {
    return function () {
        var $root = getRoot();
        var rightAreaWidth = $root.find('.dxrd-right-panel:visible').outerWidth() || 0;
        var surfaceWidth = $root.width() - (rightAreaWidth + 5);
        $root.find('.dxrd-surface-wrapper').css(surface().rtl() ?
            { 'left': rightAreaWidth, 'right': 0, 'width': surfaceWidth } :
            { 'left': 0, 'right': rightAreaWidth, 'width': surfaceWidth });
        surfaceSize(surfaceWidth);
        surface().pageWidth(surfaceWidth);
    };
}
exports.updateQueryBuilderSurfaceContentSize = updateQueryBuilderSurfaceContentSize;
function createIsLoadingFlag(model, dbSchemaProvider) {
    var isDbSchemaLoaded = ko.observable(false);
    dbSchemaProvider.subscribe(function () { isDbSchemaLoaded(false); });
    return ko.pureComputed(function () {
        dbSchemaProvider.peek().getDbSchema().done(function () {
            isDbSchemaLoaded(true);
        });
        if (isDbSchemaLoaded()) {
            return model().tables.peek().some(function (table) {
                return !table.isInitialized();
            });
        }
        else {
            return true;
        }
    });
}
exports.createIsLoadingFlag = createIsLoadingFlag;
exports.isJoinsResolvingDisabled = false;
function _createQueryBuilder(element, options, callbacks, applyBindings) {
    if (applyBindings === void 0) { applyBindings = true; }
    var disposableCallback = callbacks && callbacks.onServerError && _processError_1.processErrorEvent(callbacks.onServerError);
    var wrapper = options.requestWrapper || new requestwrapper_1.RequestWrapper();
    var parametersMode = options.parametersMode || parameterModelMeta_1.ParametersMode.ReadWrite;
    initializer_1.HandlerUri(options.handlerUri);
    if (options.queryModelJson) {
        var dataSource = new sqlDataSource_1.SqlDataSource(JSON.parse(options.dataSourceJson));
        options.dbSchemaProvider = _utils_1._wrapModelInObservable(options.dbSchemaProvider);
        options.dbSchemaProvider(new dbSchemaProvider_1.DBSchemaProvider(dataSource.connection));
        options.querySource = _utils_1._wrapModelInObservable(options.querySource);
        options.querySource(JSON.parse(options.queryModelJson));
    }
    var dataConnection = options.dbSchemaProvider().connection;
    var query = ko.observable(), surface = ko.observable(), treeListOptions = ko.observable();
    query.subscribe(function (newValue) {
        surface(new querySurface_1.QuerySurface(newValue));
        surface().rtl(!!options.rtl);
    });
    var beforeSaveCallback = function (data) {
        callbacks.saveQueryRequested({
            queryLayout: encodeURIComponent(JSON.stringify(data)),
            connection: encodeURIComponent(_requestwrapper_1.serializeDataConnection(dataConnection))
        });
    };
    var initQuery = function (querySource) {
        query(new queryModel_1.QueryViewModel(querySource, options.dbSchemaProvider(), parametersMode, function (data) { return beforeSaveCallback(data); }));
    };
    initQuery(options.querySource());
    var selection = new _selection_1.SurfaceSelection(['alias', 'name', 'sortOrder']);
    var designerModel = _designerInitializer_1.createDesigner(query, surface, controlsFactory_1.controlsFactory, undefined, undefined, undefined, !!options.rtl, selection);
    if (disposableCallback) {
        designerModel.dispose = function () {
            disposableCallback.dispose();
        };
    }
    designerModel.rootStyle = 'dxqb-designer dxd-back-primary-invariant';
    var previewPopupContainer = _utils_2.getParentContainer;
    designerModel.dataPreview = {
        isLoading: ko.observable(false),
        isVisible: ko.observable(false),
        title: function () { return localization_utils_1.getLocalization('Data Preview (First 100 Rows Displayed)', 'AnalyticsCoreStringId.DataPreview_Title'); },
        template: 'dxqb-data-preview',
        data: {
            value: ko.observable()
        },
        okButtonText: function () { return localization_utils_1.getLocalization('OK', 'DataAccessUIStringId.Button_OK'); },
        okButtonHandler: function (e) {
            e.model.isVisible(false);
        },
        container: previewPopupContainer
    };
    designerModel.selectStatmentPreview = {
        isLoading: ko.observable(false),
        isVisible: ko.observable(false),
        template: 'dxqb-selectstatment-preview',
        title: function () { return localization_utils_1.getLocalization('Select Statement Preview', 'AnalyticsCoreStringId.QueryBuilder_SelectStatementPreview_Title'); },
        data: {
            value: ko.observable(),
            aceOptions: _options_1.createDefaultSQLAceOptions(true),
            aceAvailable: _ace_available_1.aceAvailable(),
            additionalOptions: _options_1.createDefaultSQLAdditionalOptions(function (newVal) { designerModel.selectStatmentPreview.data.value(newVal); }),
            languageHelper: _options_1.createDefaultSQLLanguageHelper()
        },
        okButtonText: function () { return localization_utils_1.getLocalization('OK', 'DataAccessUIStringId.Button_OK'); },
        okButtonHandler: function (e) {
            e.model.isVisible(false);
        },
        container: previewPopupContainer
    };
    designerModel.parts = [
        { id: QueryBuilderElements.Surface, templateName: QueryBuilderElements.Surface, model: designerModel },
        { id: QueryBuilderElements.Toolbar, templateName: QueryBuilderElements.Toolbar, model: designerModel },
        { id: QueryBuilderElements.RightPanel, templateName: QueryBuilderElements.RightPanel, model: designerModel },
        { id: QueryBuilderElements.DataPreview, templateName: QueryBuilderElements.DataPreview.split('#')[0], model: designerModel.dataPreview },
        { id: QueryBuilderElements.SqlPreview, templateName: QueryBuilderElements.SqlPreview.split('#')[0], model: designerModel.selectStatmentPreview }
    ];
    designerModel.columnDragHandler = new _columnDragHandler_1.ColumnDragHandler(surface, designerModel.selection, designerModel.undoEngine, designerModel.snapHelper, designerModel.dragHelperContent);
    designerModel.connectionPointDragHandler = designerModel.columnDragHandler;
    designerModel.resizeHandler['handles'] = 'e, w';
    designerModel.columnsLoadingMsg = function () { return localization_utils_1.getLocalization('Loading...', 'DataAccessWebStringId.QueryBuilder_ColumnsLoading'); };
    var init = function (querySource) {
        initQuery(querySource);
        treeListOptions({
            itemsProvider: options.dbSchemaProvider(),
            treeListController: new _queryBuilderTreeListController_1.QueryBuilderTreeListController(designerModel.undoEngine, query),
            selectedPath: ko.observable(),
            pageSize: 100,
            templateName: 'dxqb-treelist-item-with-search'
        });
    };
    options.querySource.subscribe(function (newValue) {
        init(newValue);
    });
    init(options.querySource());
    var tablesTop = ko.observable(355), itemPropertiesTabInfoModel = {
        editableObject: designerModel.editableObject,
        properties: new propertygrid_1.ObjectProperties(designerModel.editableObject, null, 1),
        fieldListModel: { treeListOptions: treeListOptions },
        tablesTop: tablesTop,
        searchPlaceholder: function () { return _localization_1.searchPlaceholder(); }
    };
    var tabPanelItem = new _accordionTabInfo_1.AccordionTabInfo(query, itemPropertiesTabInfoModel, designerModel.undoEngine, selection.focused, parametersMode === parameterModelMeta_1.ParametersMode.ReadWrite);
    var tabPanel = designerModel.tabPanel;
    tabPanel.tabs.length = 0;
    tabPanel.tabs.push(tabPanelItem);
    tabPanel.width(375);
    designerModel.fieldDragHandler = new _dbObjectDragDropHandler_1.DbObjectDragDropHandler(surface, designerModel.selection, designerModel.undoEngine, designerModel.snapHelper, designerModel.dragHelperContent);
    designerModel.fieldListProvider = new _queryBuilderObjectsProvider_1.QueryBuilderObjectsProvider(query, _queryBuilderObjectsProvider_1.QueryBuilderObjectsProvider.whereClauseObjectsFilter);
    designerModel.dataBindingsProvider = designerModel.fieldListProvider;
    designerModel.parametersBindingsProvider = options.parametersItemsProvider || designerModel.dataBindingsProvider;
    designerModel.dataBindingsGroupProvider = new _queryBuilderObjectsProvider_1.QueryBuilderObjectsProvider(query, _queryBuilderObjectsProvider_1.QueryBuilderObjectsProvider.groupByObjectsFilter);
    designerModel.isLoading = createIsLoadingFlag(designerModel.model, options.dbSchemaProvider);
    designerModel.actionLists = new _actionList_1.ActionLists(surface, designerModel.selection, designerModel.undoEngine, customizeDesignerActions(designerModel, callbacks && callbacks.customizeActions));
    designerModel.selection.focused(surface());
    surface.subscribe(function (newValue) {
        designerModel.selection.focused(newValue);
    });
    if (!designerModel.isLoading()) {
        designerModel.undoEngine && designerModel.undoEngine().clearHistory();
    }
    designerModel.isLoading.subscribe(function (value) {
        designerModel.undoEngine && designerModel.undoEngine().clearHistory();
    });
    designerModel.editableObject.subscribe(function (newValue) {
        tablesTop.notifySubscribers(null);
    });
    _utils_1.appendStaticContextToRootViewModel(designerModel);
    if (applyBindings) {
        callbacks && callbacks.beforeRender && callbacks.beforeRender(designerModel);
        $(element).empty();
        ko.cleanNode(element);
        ko.applyBindings(designerModel, element);
    }
    var updateSurfaceContentSize_ = updateQueryBuilderSurfaceContentSize(function () { return $(element).find('.dxqb-designer'); }, designerModel.surfaceSize, surface);
    surface.subscribe(function () { updateSurfaceContentSize_(); });
    var onResize = function () {
        setTimeout(function () { return updateSurfaceContentSize_(); });
    };
    window.addEventListener('resize', onResize);
    _internal_1.addDisposeCallback(element, function () {
        window.removeEventListener('resize', onResize);
    });
    designerModel.tabPanel.width.subscribe(function () {
        updateSurfaceContentSize_();
    });
    designerModel.updateSurfaceSize = function () {
        updateSurfaceContentSize_();
    };
    designerModel.updateSurface = function () {
        updateSurfaceContentSize_();
        tablesTop(355);
    };
    designerModel.findControl = function (s, e) {
        var $childs = $('.dxqb-main').children('.dxrd-control');
        $childs.each(function (_, child) {
            var $child = $(child);
            if ($child.offset().top <= e.clientY && $child.offset().left <= e.clientX) {
                designerModel.selection.focused(ko.dataFor($child[0]));
                return;
            }
        });
    };
    if (applyBindings) {
        designerModel.updateSurface();
    }
    designerModel.showPreview = function () {
        designerModel.dataPreview.isLoading(true);
        designerModel.dataPreview.isVisible(true);
        wrapper.getDataPreview(dataConnection, JSON.stringify(query().serialize(true)))
            .done(function (data) {
            designerModel.dataPreview.data.value(JSON.parse(data.dataPreviewJSON));
            designerModel.dataPreview.isLoading(false);
        }).fail(function (data) {
            designerModel.dataPreview.isVisible(false);
            _infoMessageHelpers_1.ShowMessage(_infoMessageHelpers_1.getErrorMessage(data));
        });
    };
    designerModel.showStatement = function () {
        designerModel.selectStatmentPreview.isLoading(true);
        designerModel.selectStatmentPreview.isVisible(true);
        wrapper.getSelectStatement(dataConnection, JSON.stringify(query().serialize(true)))
            .done(function (data) {
            if (data.errorMessage)
                _infoMessageHelpers_1.ShowMessage(data.errorMessage);
            designerModel.selectStatmentPreview.data.value(data.sqlSelectStatement);
            designerModel.selectStatmentPreview.isLoading(false);
        }).fail(function (data) {
            designerModel.selectStatmentPreview.isVisible(false);
            _infoMessageHelpers_1.ShowMessage(_infoMessageHelpers_1.getErrorMessage(data));
        });
    };
    return designerModel;
}
function createQueryBuilder(element, options, callbacks, applyBindings) {
    if (applyBindings === void 0) { applyBindings = true; }
    if (options.localization) {
        localization_utils_1.addCultureInfo({
            messages: options.localization
        });
    }
    config_1.default({ rtlEnabled: !!options.rtl });
    _controlsFactory_1.registerControls();
    var promises = [];
    callbacks && callbacks.customizeLocalization && callbacks.customizeLocalization(promises);
    return _localization_1.resolveFromPromises(promises, function () { return _createQueryBuilder(element, options, callbacks, applyBindings); });
}
exports.createQueryBuilder = createQueryBuilder;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var queryElementModel_1 = __webpack_require__(28);
var columnModelMeta_1 = __webpack_require__(26);
var dbColumn_1 = __webpack_require__(18);
var utils_1 = __webpack_require__(21);
var _columnExpressionCollectionHelper_1 = __webpack_require__(152);
var _utils_1 = __webpack_require__(0);
var ColumnViewModel = (function (_super) {
    __extends(ColumnViewModel, _super);
    function ColumnViewModel(model, dbColumn, parent, serializer) {
        var _this = _super.call(this, _utils_1.extend({ '@ControlType': 'Column' }, model), parent, serializer) || this;
        _this.isNotAvailable = ko.observable(false);
        _this._type = ko.observable(dbColumn_1.DBColumnType.Unknown);
        _this._size = ko.observable('');
        if (dbColumn.size)
            _this._size(dbColumn.size);
        if (dbColumn.type)
            _this._type(dbColumn.type);
        _this.displayType = ko.pureComputed(function () {
            return dbColumn_1.DBColumnType[_this._type()] + (_this._size() ? '(' + _this._size() + ')' : '');
        });
        _this.dataType = ko.pureComputed(function () {
            return dbColumn_1.DBColumn.GetType(_this._type());
        });
        _this.actualName = ko.pureComputed(function () {
            return _this.alias() || _this.name();
        });
        var points = parent.getColumnConnectionPoints(_this);
        _this.rightConnectionPoint = {
            side: ko.observable(utils_1.PointSide.East),
            location: points.right
        };
        _this.leftConnectionPoint = {
            side: ko.observable(utils_1.PointSide.West),
            location: points.left
        };
        var query = parent.parentModel();
        var targetColumn = ko.pureComputed(function () { return _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.find(query.columns, parent.actualName(), _this.name()); });
        _this.aggregate = ko.pureComputed({
            read: function () { return targetColumn() ? targetColumn().aggregate() : columnModelMeta_1.AggregationType.None; },
            write: function (value) {
                targetColumn() && targetColumn().aggregate(value);
            }
        });
        _this.alias = ko.pureComputed({
            read: function () { return targetColumn() ? targetColumn().alias() : ''; },
            write: function (value) {
                targetColumn() && targetColumn().alias(value || null);
            }
        });
        var orderByItem = ko.pureComputed(function () { return _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.find(query.sorting, parent.actualName(), _this.name()); });
        _this.sortingType = ko.computed({
            read: function () {
                if (!orderByItem())
                    return 'Unsorted';
                return orderByItem().descending() ? 'Descending' : 'Ascending';
            },
            write: function (newValue) {
                if (newValue !== 'Unsorted') {
                    if (orderByItem()) {
                        orderByItem().descending(newValue === 'Descending');
                    }
                    else {
                        _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.addNew(query, query.sorting, parent.actualName(), _this.name())
                            .descending(newValue === 'Descending');
                    }
                }
                else if (orderByItem()) {
                    _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.remove(query.sorting, parent.actualName(), _this.name());
                }
            }
        });
        _this.sortOrder = ko.computed({
            read: function () {
                var index = query.sorting().indexOf(orderByItem());
                return index < 0 ? undefined : index + 1;
            },
            write: function (newValue) {
                if (!orderByItem())
                    return;
                newValue = Math.min(newValue, query.sorting().length);
                newValue = Math.max(newValue, 1);
                var oldValue = query.sorting().indexOf(orderByItem());
                var item = query.sorting.splice(oldValue, 1);
                query.sorting.splice(newValue - 1, 0, item[0]);
            }
        });
        var groupByItem = ko.computed(function () { return _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.find(query.grouping, parent.actualName(), _this.name()); });
        _this.aggregate.subscribe(function (value) {
            var parentTable = _this.parentModel();
            if (value !== columnModelMeta_1.AggregationType.None) {
                _this.groupBy(false);
                if (!_this.alias() || _this._isAliasAutoGenerated(parentTable.actualName())) {
                    var aggregateAlias = _this.name() + '_' + value;
                    _this.alias(_columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.setUniqueAlias(query.columns, aggregateAlias));
                }
            }
            else if (_this._isAliasAutoGenerated(parentTable.actualName())) {
                _this.alias(null);
            }
        });
        _this.groupBy = ko.computed({
            read: function () { return !!groupByItem(); },
            write: function (value) {
                if (value) {
                    _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.addNew(query, query.grouping, parent.actualName(), _this.name());
                    _this.aggregate(columnModelMeta_1.AggregationType.None);
                }
                else {
                    _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.remove(query.grouping, parent.actualName(), _this.name());
                }
            }
        });
        _this.toggleSelected = function (value, lazy) {
            if (lazy === void 0) { lazy = false; }
            if (!!targetColumn() === value)
                return;
            if (value) {
                _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.addNew(query, query.columns, parent.actualName(), _this.name(), lazy);
            }
            else {
                _columnExpressionCollectionHelper_1.ColumnExpressionCollectionHelper.remove(query.columns, parent.actualName(), _this.name(), lazy);
                _this.groupBy(false);
            }
        };
        _this.selected = ko.pureComputed({
            read: function () { return !!targetColumn(); },
            write: function (value) { return _this.toggleSelected(value); }
        });
        return _this;
    }
    ColumnViewModel.prototype._isAliasAutoGenerated = function (addedTableName) {
        if (addedTableName && this.alias() && this.alias().indexOf(addedTableName + '_') === 0) {
            if (this.alias().substring(addedTableName.length + 1) === this.name())
                return true;
        }
        if (!this.alias() || this.alias().indexOf(this.name() + '_') !== 0)
            return false;
        var funcName = this.alias().substring(this.name().length + 1);
        if (funcName.match(new RegExp('_[0-9]+$')))
            funcName = funcName.substring(0, funcName.indexOf('_'));
        return Object.keys(columnModelMeta_1.AggregationType).indexOf(funcName) > 0;
    };
    ColumnViewModel.prototype.getInfo = function () {
        return columnModelMeta_1.columnSerializationInfo;
    };
    ColumnViewModel.prototype.isPropertyDisabled = function (name) {
        if (this.isNotAvailable())
            return true;
        if (name === 'sortOrder') {
            return this.sortingType() === 'Unsorted';
        }
        else if (name === 'aggregate' || name === 'alias') {
            return !this.selected();
        }
        else if (name === 'groupBy') {
            var query = this.root;
            return this.aggregate() && query.aggregatedColumnsCount() === 1;
        }
        else
            return false;
    };
    Object.defineProperty(ColumnViewModel.prototype, "specifics", {
        get: function () {
            return dbColumn_1.DBColumn.GetSpecific(this.dataType());
        },
        enumerable: true,
        configurable: true
    });
    return ColumnViewModel;
}(queryElementModel_1.QueryElementBaseViewModel));
exports.ColumnViewModel = ColumnViewModel;


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(44);
exports.tableSerializationInfo = [
    metadata_1.name, metadata_1.alias, { propertyName: 'itemType', modelName: '@ItemType' }
];


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var queryElementModel_1 = __webpack_require__(28);
var utils_1 = __webpack_require__(1);
var joinConditionModel_1 = __webpack_require__(94);
var relationModelMeta_1 = __webpack_require__(95);
var _utils_1 = __webpack_require__(0);
var RelationViewModel = (function (_super) {
    __extends(RelationViewModel, _super);
    function RelationViewModel(model, query, serializer) {
        var _this = _super.call(this, _utils_1.extend(model, { '@ControlType': 'Relation', '@ItemType': 'Relation' }), query, serializer) || this;
        _this.parentTable = ko.observable(query.getTable(_this.parentTableName.peek()));
        _this.nestedTable = ko.observable(query.getTable(_this.nestedTableName.peek()));
        _this.parentTableName = ko.pureComputed(function () { return _this.parentTable().actualName(); });
        _this.nestedTableName = ko.pureComputed(function () { return _this.nestedTable().actualName(); });
        _this.conditions = utils_1.deserializeArray(model['KeyColumns'], function (item) {
            return new joinConditionModel_1.JoinConditionViewModel(item, _this, serializer);
        });
        return _this;
    }
    RelationViewModel.prototype._getConditionNumber = function () {
        var result = this.conditions().length + 1;
        var existingNumbers = this.conditions().map(function (_c) { return _c.seriesNumber(); });
        for (var index = 0; index < this.conditions().length; index++) {
            if (existingNumbers.indexOf(index + 1) !== -1)
                continue;
            result = index + 1;
            break;
        }
        return result;
    };
    RelationViewModel.prototype.getInfo = function () {
        return relationModelMeta_1.relationSerializationInfo;
    };
    RelationViewModel.prototype.addChild = function (control) {
        var condition = control;
        if (this.conditions && this.conditions.indexOf(condition) === -1) {
            condition.seriesNumber(this._getConditionNumber());
            condition.parentModel(this);
            this.conditions.push(condition);
        }
    };
    RelationViewModel.prototype.removeChild = function (control) {
        var index = this.conditions().indexOf(control);
        if (index > -1)
            this.conditions.splice(index, 1);
        if (this.conditions().length === 0)
            this.parentModel().removeChild(this);
    };
    return RelationViewModel;
}(queryElementModel_1.QueryElementBaseViewModel));
exports.RelationViewModel = RelationViewModel;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var routedConnectorModel_1 = __webpack_require__(31);
var controlsFactory_1 = __webpack_require__(27);
var utils_1 = __webpack_require__(21);
var _utils_1 = __webpack_require__(0);
var JoinConditionViewModel = (function (_super) {
    __extends(JoinConditionViewModel, _super);
    function JoinConditionViewModel(control, relation, serializer) {
        var _this = _super.call(this, _utils_1.extend(control, { '@ControlType': 'JoinCondition', '@ItemType': 'KeyColumn' }), relation, serializer) || this;
        _this.parentColumn = ko.pureComputed(function () { return relation.parentTable().getColumn(_this.parentColumnName()); });
        _this.nestedColumn = ko.pureComputed(function () { return relation.nestedTable().getColumn(_this.nestedColumnName()); });
        _this.joinType = relation.joinType;
        _this.left = ko.pureComputed(function () { return relation.parentTableName() + '.' + _this.parentColumnName(); });
        _this.right = ko.pureComputed(function () { return relation.nestedTableName() + '.' + _this.nestedColumnName(); });
        _this._disposables.push(ko.computed(function () {
            if (_this.parentColumn() && _this.nestedColumn()) {
                var result = utils_1.determineConnectingPoints(_this.parentColumn(), _this.nestedColumn());
                _this.startPoint().connectingPoint(result.start);
                _this.endPoint().connectingPoint(result.end);
            }
        }));
        return _this;
    }
    JoinConditionViewModel.prototype.getControlFactory = function () {
        return controlsFactory_1.controlsFactory;
    };
    JoinConditionViewModel.prototype.preInitProperties = function () {
        this.startPoint = ko.observable();
        this.endPoint = ko.observable();
    };
    return JoinConditionViewModel;
}(routedConnectorModel_1.RoutedConnectorViewModel));
exports.JoinConditionViewModel = JoinConditionViewModel;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.relationSerializationInfo = [
    { propertyName: 'joinType', modelName: '@Type' },
    { propertyName: 'parentTableName', modelName: '@Parent' },
    { propertyName: 'nestedTableName', modelName: '@Nested' },
    { propertyName: 'conditions', modelName: 'KeyColumns', defaultVal: [], array: true },
    { propertyName: 'itemType', modelName: '@itemType' }
];


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorTemplates_1 = __webpack_require__(25);
var parsers_1 = __webpack_require__(1);
exports.querySerializationsInfo = [
    {
        propertyName: '_tablesObject', modelName: 'Tables', info: [
            { propertyName: 'tables', modelName: 'SelectedTables', array: true },
            { propertyName: 'relations', modelName: 'Relations', array: true }
        ]
    },
    { propertyName: 'parameters', modelName: 'Parameters', array: true },
    { propertyName: 'type', modelName: '@Type' },
    { propertyName: 'name', modelName: '@Name' },
    { propertyName: 'editableName', displayName: 'Name', localizationId: 'DevExpress.DataAccess.Sql.SqlQuery.Name', editor: editorTemplates_1.editorTemplates.getEditor('text') },
    { propertyName: '_filterString', modelName: 'Filter', defaultVal: '' },
    { propertyName: 'filterString', defaultVal: '', displayName: 'Filter', localizationId: 'DataAccessUIStringId.FiltersView_Filter', editor: editorTemplates_1.editorTemplates.getEditor('filterEditor') },
    { propertyName: '_groupFilterString', modelName: 'GroupFilter', defaultVal: '' },
    { propertyName: 'groupFilterString', defaultVal: '', displayName: 'Group Filter', localizationId: 'DataAccessUIStringId.FiltersView_GroupFilter', editor: editorTemplates_1.editorTemplates.getEditor('filterGroupEditor') },
    { propertyName: 'columns', modelName: 'Columns', array: true },
    { propertyName: 'sorting', modelName: 'Sorting', array: true },
    { propertyName: 'grouping', modelName: 'Grouping', array: true },
    { propertyName: 'itemType', modelName: '@ItemType' },
    { propertyName: 'allColumnsInTablesSelected', displayName: 'Select All (*)', localizationId: 'AnalyticsCoreStringId.QueryBuilder_SelectAll', editor: editorTemplates_1.editorTemplates.getEditor('bool') },
    { propertyName: 'top', modelName: '@Top', displayName: 'Select Top', defaultVal: 0, from: parsers_1.floatFromModel, localizationId: 'AnalyticsCoreStringId.QueryBuilder_SelectTop', editor: editorTemplates_1.editorTemplates.getEditor('numeric'), editorOptions: { format: '#0', min: 0 } },
    { propertyName: 'skip', modelName: '@Skip', displayName: 'Offset', defaultVal: 0, from: parsers_1.floatFromModel, localizationId: 'AnalyticsCoreStringId.QueryBuilder_Offset', editor: editorTemplates_1.editorTemplates.getEditor('numeric'), editorOptions: { format: '#0', min: 0 } },
    { propertyName: 'distinct', modelName: '@Distinct', defaultVal: false, from: parsers_1.parseBool, displayName: 'Select distinct', localizationId: 'AnalyticsCoreStringId.QueryBuilder_SelectDistinct', editor: editorTemplates_1.editorTemplates.getEditor('bool') }
];


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var baseSurface_1 = __webpack_require__(4);
var _arrayutils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var _hoverInfo_1 = __webpack_require__(0);
var QuerySurface = (function (_super) {
    __extends(QuerySurface, _super);
    function QuerySurface(query, zoom) {
        if (zoom === void 0) { zoom = ko.observable(1); }
        var _this = _super.call(this, query, {
            measureUnit: ko.observable('Pixels'),
            zoom: zoom,
            dpi: ko.observable(100)
        }, QuerySurface._unitProperties) || this;
        _this.placeholder = function () { return localization_utils_1.getLocalization('Drop a table or view here to create a query.', 'AnalyticsCoreStringId.QueryBuilder_SurfacePlaceholder'); };
        _this.tables = ko.observableArray();
        _this.relations = ko.observableArray();
        _this.allowMultiselect = false;
        _this.focused = ko.observable(false);
        _this.selected = ko.observable(false);
        _this.underCursor = ko.observable(new _hoverInfo_1.HoverInfo());
        _this.templateName = 'dx-query-surface';
        _this.rtl = ko.observable(false);
        _this.measureUnit = _this._context.measureUnit;
        _this.dpi = _this._context.dpi;
        _this._context = _this;
        _this.margins = { bottom: _this['_bottom'], left: _this['_left'], right: _this['_right'], top: _this['_top'] };
        _this.zoom = zoom;
        _arrayutils_1.createObservableArrayMapCollection(query.tables, _this.tables, _this._createSurface);
        _arrayutils_1.createObservableArrayMapCollection(query.relations, _this.relations, _this._createSurface);
        _this._joinedColumns = ko.computed(function () {
            var resultColumns = [];
            _this.relations().forEach(function (relation) {
                relation.conditions().forEach(function (condition) {
                    var joinModel = condition.getControlModel();
                    joinModel.parentColumn() && resultColumns.push(joinModel.parentColumn());
                    joinModel.nestedColumn() && resultColumns.push(joinModel.nestedColumn());
                });
            });
            return resultColumns;
        });
        return _this;
    }
    QuerySurface.prototype.checkParent = function (surfaceParent) { return false; };
    QuerySurface.prototype.getChildrenCollection = function () {
        return this.tables;
    };
    QuerySurface.prototype.isJoined = function (column) {
        return this._joinedColumns().indexOf(column.getControlModel()) > -1;
    };
    QuerySurface._unitProperties = {
        _width: function (o) { return o.pageWidth; },
        _height: function (o) { return o.pageWidth; },
        pageWidth: function (o) { return o.pageWidth; },
        pageHeight: function (o) { return o.pageHeight; },
        _bottom: function (o) { return o.margins.bottom; },
        _left: function (o) { return o.margins.left; },
        _right: function (o) { return o.margins.right; },
        _top: function (o) { return o.margins.top; }
    };
    return QuerySurface;
}(baseSurface_1.SurfaceElementBase));
exports.QuerySurface = QuerySurface;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dragDropHandler_1 = __webpack_require__(0);
var controlsFactory_1 = __webpack_require__(27);
var size_1 = __webpack_require__(4);
var rectangle_1 = __webpack_require__(4);
var _surfaceHelpers_1 = __webpack_require__(0);
var _utils_1 = __webpack_require__(0);
var DbObjectDragDropHandler = (function (_super) {
    __extends(DbObjectDragDropHandler, _super);
    function DbObjectDragDropHandler(surface, selection, _undoEngine, snapHelper, dragHelperContent) {
        var _this = _super.call(this, surface, selection, _undoEngine, snapHelper, dragHelperContent) || this;
        _this._undoEngine = _undoEngine;
        _this._query = function () { return _this._querySurface().getControlModel(); };
        _this._querySurface = surface;
        _this.cursor = 'arrow';
        _this.containment = '.dxqb-designer';
        _this['cursorAt'] = {
            top: 0,
            left: 0
        };
        _this['helper'] = function (draggable) {
            _super.prototype.helper.call(_this, draggable);
            _this.recalculateSize(size_1.Size.fromString('199, 123'));
            dragHelperContent.setContent(new rectangle_1.Rectangle(0, 0, _this._size.width(), _this._size.height()));
        };
        _this._drop = DbObjectDragDropHandler.getDropCallback(_this._undoEngine, false);
        return _this;
    }
    DbObjectDragDropHandler.prototype.startDrag = function (draggable) {
        if (draggable && draggable.name) {
            this._query().dbSchemaProvider.getDbTable(draggable.name);
        }
    };
    DbObjectDragDropHandler.prototype.doStopDrag = function (ui, draggable) {
        this.dragHelperContent.reset();
        if (this.selection.dropTarget) {
            var position = this._getAbsoluteSurfacePosition(ui);
            this._querySurface().underCursor().x = position.left - this._querySurface()['absolutePosition'].x();
            this._querySurface().underCursor().y = position.top - this._querySurface()['absolutePosition'].y();
            var item = draggable;
            var control = this._drop(item.data, this._query());
            this.addControl(control, this._querySurface(), this._size);
        }
    };
    DbObjectDragDropHandler.prototype.addControl = function (control, dropTargetSurface, size) {
        dropTargetSurface.getControlModel().addChild(control);
        var controlSurface = _surfaceHelpers_1.findSurface(control);
        if (!controlSurface)
            return;
        controlSurface.rect({ left: dropTargetSurface.underCursor().x, top: dropTargetSurface.underCursor().y, width: size.width() });
        this.selection.initialize(controlSurface);
    };
    DbObjectDragDropHandler.getDropCallback = function (undoEngine, suggestLocation) { return (function (memberInfo, query) {
        var newControl = query.createChild(_utils_1.extend({ '@ControlType': 'Table', '@Name': memberInfo.name }, controlsFactory_1.controlsFactory.controlsMap['Table'].defaultVal));
        if (newControl.isInitialized()) {
            query.tryToCreateRelationsByFK(newControl);
        }
        else {
            newControl.isInitialized.subscribe(function () {
                undoEngine().start();
                query.tryToCreateRelationsByFK(newControl);
                undoEngine().end();
            });
        }
        if (suggestLocation) {
            var posX = Math.max.apply(null, query.tables.peek()
                .filter(function (t) { return t !== newControl; })
                .map(function (t) { return t.location.x.peek() + t.size.width.peek() * 3 / 2; })
                .concat([30]));
            newControl.location.x(posX);
            newControl.location.y(65);
        }
        return newControl;
    }); };
    return DbObjectDragDropHandler;
}(_dragDropHandler_1.DragDropHandler));
exports.DbObjectDragDropHandler = DbObjectDragDropHandler;


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dragDropHandler_1 = __webpack_require__(0);
var connectingPointSurface_1 = __webpack_require__(63);
var diagramElementModel_1 = __webpack_require__(15);
var connectingPointModel_1 = __webpack_require__(30);
var _surfaceHelpers_1 = __webpack_require__(0);
var ConnectingPointDragHandler = (function (_super) {
    __extends(ConnectingPointDragHandler, _super);
    function ConnectingPointDragHandler(surface, selection, undoEngine, snapHelper, dragHelperContent) {
        var _this = _super.call(this, surface, selection, undoEngine, snapHelper, dragHelperContent) || this;
        _this.startConnectingPoint = null;
        _this.newConnector = null;
        _this.cursor = 'arrow';
        _this.containment = '.dxrd-ghost-container';
        _this['helper'] = function (draggable) {
            dragHelperContent.update(draggable);
        };
        return _this;
    }
    ConnectingPointDragHandler.prototype.startDrag = function (control) {
        if (!(control instanceof connectingPointSurface_1.ConnectingPointSurface)) {
            throw new Error('ConnectingPointDragHandler can be applied to the ConnectingPoint only.');
        }
        this.startConnectingPoint = control;
        var diagramElement = this.startConnectingPoint.parent.getControlModel();
        this.newConnector = diagramElement.parentModel().createChild({ '@ControlType': 'RoutedConnector' });
        this.newConnector.startPoint().connectingPoint(this.startConnectingPoint.getControlModel());
    };
    ConnectingPointDragHandler.prototype.drag = function (event, ui) {
        ui.position.left += ui['scroll'].left;
        ui.position.top += ui['scroll'].top;
        var position = this._getAbsoluteSurfacePosition(ui);
        this.newConnectorSurface.endPoint().rect({ top: position.top, left: position.left });
    };
    ConnectingPointDragHandler.prototype.doStopDrag = function () {
        this.dragHelperContent.reset();
        if (this.selection.dropTarget) {
            var dropTarget = this.selection.dropTarget.getControlModel();
            if (dropTarget instanceof connectingPointModel_1.ConnectingPointViewModel) {
                this.newConnector.endPoint().connectingPoint(dropTarget);
            }
            else if (dropTarget instanceof diagramElementModel_1.DiagramElementViewModel) {
                var connectings = dropTarget.connectingPoints();
                this.newConnector.endPoint().connectingPoint(connectings[0]);
            }
            this.selection.initialize(this.newConnectorSurface);
        }
    };
    Object.defineProperty(ConnectingPointDragHandler.prototype, "newConnectorSurface", {
        get: function () {
            return this.newConnector && _surfaceHelpers_1.findSurface(this.newConnector);
        },
        enumerable: true,
        configurable: true
    });
    return ConnectingPointDragHandler;
}(_dragDropHandler_1.DragDropHandler));
exports.ConnectingPointDragHandler = ConnectingPointDragHandler;


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var diagramElementSurface_1 = __webpack_require__(29);
var connectionPointSurface_1 = __webpack_require__(22);
var ConnectorSurface = (function (_super) {
    __extends(ConnectorSurface, _super);
    function ConnectorSurface(control, context) {
        var _this = _super.call(this, control, context, null) || this;
        _this.template = 'dxdd-connector';
        _this.selectiontemplate = 'dxdd-connector-selection';
        _this.startPoint = ko.pureComputed(function () {
            return new connectionPointSurface_1.ConnectionPointSurface(control.startPoint(), context);
        });
        _this.endPoint = ko.pureComputed(function () {
            return new connectionPointSurface_1.ConnectionPointSurface(control.endPoint(), context);
        });
        return _this;
    }
    return ConnectorSurface;
}(diagramElementSurface_1.DiagramElementBaseSurface));
exports.ConnectorSurface = ConnectorSurface;


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _dragDropHandler_1 = __webpack_require__(0);
var connectionPointSurface_1 = __webpack_require__(22);
var connectingPointModel_1 = __webpack_require__(30);
var diagramElementModel_1 = __webpack_require__(15);
var ConnectionPointDragHandler = (function (_super) {
    __extends(ConnectionPointDragHandler, _super);
    function ConnectionPointDragHandler(surface, selection, undoEngine, snapHelper, dragHelperContent) {
        var _this = _super.call(this, surface, selection, undoEngine, snapHelper, dragHelperContent) || this;
        _this.currentConnectionPoint = null;
        _this.cursor = 'arrow';
        _this.containment = '.dxrd-ghost-container';
        _this['helper'] = function (draggable) {
            dragHelperContent.update(draggable);
        };
        return _this;
    }
    ConnectionPointDragHandler.prototype.startDrag = function (control) {
        if (!(control instanceof connectionPointSurface_1.ConnectionPointSurface)) {
            throw new Error('ConnectionPointDragHandler can be applied to the ConnectionPoint only.');
        }
        this.currentConnectionPoint = control;
    };
    ConnectionPointDragHandler.prototype.drag = function (event, ui) {
        ui.position.left += ui['scroll'].left;
        ui.position.top += ui['scroll'].top;
        var position = this._getAbsoluteSurfacePosition(ui);
        this.currentConnectionPoint.rect({ top: position.top, left: position.left });
    };
    ConnectionPointDragHandler.prototype.doStopDrag = function () {
        this.dragHelperContent.reset();
        if (this.selection.dropTarget) {
            var dropTarget = this.selection.dropTarget.getControlModel();
            if (dropTarget instanceof connectingPointModel_1.ConnectingPointViewModel) {
                var connector = this.currentConnectionPoint.parent.getControlModel();
                if (this.currentConnectionPoint.getControlModel() === connector.startPoint()) {
                    connector.startPoint().connectingPoint(dropTarget);
                }
                else {
                    connector.endPoint().connectingPoint(dropTarget);
                }
            }
            else if (dropTarget instanceof diagramElementModel_1.DiagramElementViewModel) {
                var connector = this.currentConnectionPoint.parent.getControlModel();
                var connectings = dropTarget.connectingPoints();
                if (this.currentConnectionPoint.getControlModel() === connector.startPoint()) {
                    connector.startPoint().connectingPoint(connectings[0]);
                }
                else {
                    connector.endPoint().connectingPoint(connectings[0]);
                }
            }
        }
    };
    return ConnectionPointDragHandler;
}(_dragDropHandler_1.DragDropHandler));
exports.ConnectionPointDragHandler = ConnectionPointDragHandler;


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var dbSchema_1 = __webpack_require__(103);
var _infoMessageHelpers_1 = __webpack_require__(0);
var _utils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
function getDBSchemaCallback(requestWrapper, connection, tables) {
    var deferred = $.Deferred();
    requestWrapper.getDbSchema(connection, tables)
        .done(function (data) {
        deferred.resolve(new dbSchema_1.DBSchema(JSON.parse(data.dbSchemaJSON)));
    })
        .fail(function (data) {
        _infoMessageHelpers_1.ShowMessage(_utils_1.formatUnicorn(localization_utils_1.getLocalization('Schema loading failed. {0}', 'DxDesignerStringId.Error_SchemaLoadingFailed'), _infoMessageHelpers_1.getErrorMessage(data)));
        deferred.reject();
    });
    return deferred.promise();
}
exports.getDBSchemaCallback = getDBSchemaCallback;
function getDBStoredProceduresCallback(requestWrapper, connection) {
    var deferred = $.Deferred();
    requestWrapper.getDbStoredProcedures(connection)
        .done(function (data) {
        deferred.resolve(new dbSchema_1.DBSchema(JSON.parse(data.dbSchemaJSON)).procedures);
    })
        .fail(function (data) {
        _infoMessageHelpers_1.ShowMessage(_utils_1.formatUnicorn(localization_utils_1.getLocalization('Stored procedures loading failed. {0}', 'DxDesignerStringId.Error_SchemaLoadingFailed'), _infoMessageHelpers_1.getErrorMessage(data)));
        deferred.reject();
    });
    return deferred.promise();
}
exports.getDBStoredProceduresCallback = getDBStoredProceduresCallback;


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var dbTable_1 = __webpack_require__(104);
var dbStoredProcedure_1 = __webpack_require__(69);
var _dbSchema_1 = __webpack_require__(19);
var DBSchema = (function () {
    function DBSchema(model) {
        var tables = _dbSchema_1.deserializeToCollection(model['Tables'], function (tableModel) { return new dbTable_1.DBTable(tableModel); });
        tables.sort(function (a, b) { return a.name.localeCompare(b.name); });
        var views = _dbSchema_1.deserializeToCollection(model['Views'], function (tableModel) { return new dbTable_1.DBTable(tableModel); });
        views.sort(function (a, b) { return a.name.localeCompare(b.name); });
        this.tables = tables.concat(views);
        this.procedures = _dbSchema_1.deserializeToCollection(model['StoredProcedures'], function (procModel) { return new dbStoredProcedure_1.DBStoredProcedure(procModel); });
    }
    return DBSchema;
}());
exports.DBSchema = DBSchema;


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var dbColumn_1 = __webpack_require__(18);
var dbForeignKey_1 = __webpack_require__(105);
var _dbSchema_1 = __webpack_require__(19);
var DBTable = (function () {
    function DBTable(model) {
        this.name = model['Name'];
        this.isView = model['IsView'] === 'true' || model['IsView'] === true;
        this.columns = _dbSchema_1.deserializeToCollection(model['columns'], function (columnModel) { return new dbColumn_1.DBColumn(columnModel); });
        this.foreignKeys = _dbSchema_1.deserializeToCollection(model['foreignKeys'], function (columnModel) { return new dbForeignKey_1.DBForeignKey(columnModel); });
    }
    return DBTable;
}());
exports.DBTable = DBTable;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DBForeignKey = (function () {
    function DBForeignKey(model) {
        this.name = model['Name'];
        this.primaryKeyTable = model['PrimaryKeyTable'];
        this.columns = model['Columns'];
        this.primaryKeyColumns = model['PrimaryKeyTableKeyColumns'];
    }
    return DBForeignKey;
}());
exports.DBForeignKey = DBForeignKey;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var serializer_1 = __webpack_require__(1);
var resultTableSerializationInfo = [
    { propertyName: 'tableName', modelName: '@Name' },
    {
        propertyName: 'columns', modelName: 'Fields', array: true, info: [
            { propertyName: 'name', modelName: '@Name' },
            { propertyName: 'propertyType', modelName: '@Type' }
        ]
    }
];
var ResultTable = (function () {
    function ResultTable(model, serializer) {
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(this, model);
    }
    ResultTable.prototype.getInfo = function () {
        return resultTableSerializationInfo;
    };
    return ResultTable;
}());
exports.ResultTable = ResultTable;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(1);
var serializer_1 = __webpack_require__(1);
var jsonParameter_1 = __webpack_require__(73);
var jsonAuthenticationInfo_1 = __webpack_require__(72);
var JsonSource = (function (_super) {
    __extends(JsonSource, _super);
    function JsonSource(model, serializer) {
        if (model === void 0) { model = {}; }
        var _this = _super.call(this) || this;
        _this.sourceType = ko.observable();
        _this.uri = ko.observable();
        _this.json = ko.observable();
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(_this, model);
        _this._disposables.push(_this.uri.subscribe(function (newUri) {
            newUri && _this.sourceType(JsonSource._URIJSONSOURCE_TYPE);
        }));
        _this._disposables.push(_this.json.subscribe(function (newJsonString) {
            newJsonString && _this.sourceType(JsonSource._CUSTOMJSONSOURCE_TYPE);
        }));
        function _getJsonParametersModelDeserialized(parameterModels, itemType) {
            if (parameterModels && Array.isArray(parameterModels[jsonParameter_1.JsonParameterType[itemType]]) && parameterModels[jsonParameter_1.JsonParameterType[itemType]])
                parameterModels = parameterModels[jsonParameter_1.JsonParameterType[itemType]];
            return utils_1.deserializeArray(parameterModels, function (item) {
                if (!item['@ItemType'])
                    item['@ItemType'] = jsonParameter_1.JsonParameterType[itemType];
                return new jsonParameter_1.JsonParameter(item, serializer);
            });
        }
        _this.queryParameters = _getJsonParametersModelDeserialized(model['QueryParameters'], jsonParameter_1.JsonParameterType.QueryParameter);
        _this.headers = _getJsonParametersModelDeserialized(model['Headers'], jsonParameter_1.JsonParameterType.Header);
        _this.pathParameters = _getJsonParametersModelDeserialized(model['PathParameters'], jsonParameter_1.JsonParameterType.PathParameter);
        return _this;
    }
    JsonSource.from = function (model, serializer) {
        return new JsonSource(model || {}, serializer);
    };
    JsonSource.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, jsonSourceSerializationInfo, refs);
    };
    JsonSource.prototype.getInfo = function () {
        return jsonSourceSerializationInfo;
    };
    JsonSource.prototype.serialize = function (includeRootTag) {
        if (includeRootTag === void 0) { includeRootTag = false; }
        return includeRootTag ? { 'Source': this.serialize() } : (new serializer_1.ModelSerializer()).serialize(this);
    };
    JsonSource.prototype.resetSource = function () {
        this.sourceType('');
        this.json('');
        this.uri('');
    };
    JsonSource._URIJSONSOURCE_TYPE = 'DevExpress.DataAccess.Json.UriJsonSource';
    JsonSource._CUSTOMJSONSOURCE_TYPE = 'DevExpress.DataAccess.Json.CustomJsonSource';
    return JsonSource;
}(utils_1.Disposable));
exports.JsonSource = JsonSource;
var jsonSourceSerializationInfo = [
    { propertyName: 'sourceType', modelName: '@SourceType', defaultVal: '' },
    { propertyName: 'json', modelName: '@Json', defaultVal: '' },
    { propertyName: 'uri', modelName: '@Uri', defaultVal: '' },
    { propertyName: 'authenticationInfo', modelName: 'AuthenticationInfo', from: jsonAuthenticationInfo_1.JsonAuthenticationInfo.from, toJsonObject: jsonAuthenticationInfo_1.JsonAuthenticationInfo.toJson },
    { propertyName: 'headers', modelName: 'Headers', array: true },
    { propertyName: 'queryParameters', modelName: 'QueryParameters', array: true },
    { propertyName: 'pathParameters', modelName: 'PathParameters', array: true }
];


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var utils_1 = __webpack_require__(1);
var requestwrapper_1 = __webpack_require__(8);
var _jsonSchemaProvider_1 = __webpack_require__(109);
var JsonSchemaProvider = (function (_super) {
    __extends(JsonSchemaProvider, _super);
    function JsonSchemaProvider(jsonDataSource, _requestWrapper) {
        if (_requestWrapper === void 0) { _requestWrapper = new requestwrapper_1.RequestWrapper(); }
        var _this = _super.call(this) || this;
        _this._requestWrapper = _requestWrapper;
        _this._jsonDataSource = jsonDataSource;
        _this._disposables.push(_this._jsonDataSource.source.sourceType.subscribe(function () {
            _this._jsonSchemaPromise = null;
        }));
        _this.getItems = function (pathRequest) {
            var getItemsDeferred = $.Deferred();
            var loadSchemaPromise = !_this._jsonSchema ? _this.getJsonSchema() : $.Deferred().resolve(_this._jsonSchema).promise();
            loadSchemaPromise
                .done(function (jsonSchema) {
                _this._jsonSchema = jsonSchema;
                var schemaByPath = _this.getSchemaByPath(pathRequest, jsonSchema);
                getItemsDeferred.resolve(schemaByPath);
            })
                .fail(getItemsDeferred.reject);
            return getItemsDeferred.promise();
        };
        return _this;
    }
    JsonSchemaProvider.prototype.reset = function () {
        this._jsonSchemaPromise = null;
    };
    JsonSchemaProvider.prototype.mapToDataMemberContract = function (nodes) {
        return $.map((nodes || []), function (node) {
            var dataMemberInfo = {
                name: node.name(),
                displayName: node.displayName || node.name(),
                isSelected: node.selected(),
                isList: node.nodes && node.nodes.length > 0,
                specifics: 'table',
                dragData: { noDragable: false }
            };
            return dataMemberInfo;
        });
    };
    JsonSchemaProvider.prototype.getSchemaByPath = function (pathRequest, jsonSchema) {
        if (!pathRequest.fullPath) {
            return this.mapToDataMemberContract(jsonSchema.nodes);
        }
        else {
            var currentNodes = jsonSchema.nodes;
            for (var i = 0; i < pathRequest.pathParts.length; i++) {
                var pathPart = (currentNodes || []).filter(function (node) { return node.name() == pathRequest.pathParts[i]; })[0];
                if (!pathPart)
                    return [];
                currentNodes = pathPart.nodes;
            }
            return this.mapToDataMemberContract(currentNodes);
        }
    };
    JsonSchemaProvider.prototype.getJsonSchema = function (parameters) {
        if (parameters === void 0) { parameters = []; }
        if (!this._jsonSchemaPromise || this._jsonSchemaPromise.state() === 'rejected')
            this._jsonSchemaPromise = _jsonSchemaProvider_1.getJsonSchemaCallback(this._requestWrapper, this._jsonDataSource, parameters);
        return this._jsonSchemaPromise;
    };
    return JsonSchemaProvider;
}(utils_1.Disposable));
exports.JsonSchemaProvider = JsonSchemaProvider;


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var jsonSchemaNode_1 = __webpack_require__(49);
var _infoMessageHelpers_1 = __webpack_require__(0);
var _utils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var _getJsonSchemaCallback = function (requestWrapper, jsonDataSource, parameters) {
    if (parameters === void 0) { parameters = []; }
    var deferred = $.Deferred();
    requestWrapper.getJsonSchema(jsonDataSource, parameters)
        .done(function (data) {
        try {
            var jsonSchema = JSON.parse(data.jsonSchemaJSON);
            var jsonSchemaModel = new jsonSchemaNode_1.JsonSchemaRootNode(jsonSchema);
            deferred.resolve(jsonSchemaModel);
        }
        finally {
            if (deferred.state() === 'pending')
                deferred.reject();
        }
    })
        .fail(function (data) {
        _infoMessageHelpers_1.ShowMessage(_utils_1.formatUnicorn(localization_utils_1.getLocalization('Schema loading failed. {0}', 'DxDesignerStringId.Error_SchemaLoadingFailed'), _infoMessageHelpers_1.getErrorMessage(data)));
        deferred.reject();
    });
    return deferred.promise();
};
exports.getJsonSchemaCallback = _getJsonSchemaCallback;
function _setGetJsonSchemaCallback(func) { exports.getJsonSchemaCallback = func; }
exports._setGetJsonSchemaCallback = _setGetJsonSchemaCallback;
function _resetGetJsonSchemaCallback() { exports.getJsonSchemaCallback = _getJsonSchemaCallback; }
exports._resetGetJsonSchemaCallback = _resetGetJsonSchemaCallback;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var parsers_1 = __webpack_require__(1);
var serializer_1 = __webpack_require__(1);
var connectionOptionsSerializationInfo = [
    { propertyName: 'closeConnection', modelName: '@CloseConnection', from: parsers_1.parseBool },
    { propertyName: 'commandTimeout', modelName: '@DbCommandTimeout', from: function (s) { var val = parseInt(s); if (isNaN(val))
            val = null; return ko.observable(val); }, defaultVal: null },
];
var ConnectionOptions = (function () {
    function ConnectionOptions(model, serializer) {
        this.closeConnection = ko.observable(true);
        this.commandTimeout = ko.observable(null);
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(this, model);
    }
    ConnectionOptions.prototype.getInfo = function () {
        return connectionOptionsSerializationInfo;
    };
    return ConnectionOptions;
}());
exports.ConnectionOptions = ConnectionOptions;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _functions_1 = __webpack_require__(10);
exports.expressionFunctions = (function (addins) { return _functions_1.insertInFunctionDisplay(addins); })({
    'String': {
        'CreateTable': [{ paramCount: 1, text: 'CreateTable(, )', displayName: 'CreateTable(Column1, ..., ColumnN)', descriptionStringId: 'ExpressionEditorStringId.Function_CreateTable' }]
    }
});


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.customQuerySerializationsInfo = [
    { propertyName: 'type', modelName: '@Type' },
    { propertyName: 'name', modelName: '@Name' },
    { propertyName: 'sqlString', modelName: 'Sql', defaultVal: '' },
    { propertyName: 'parameters', modelName: 'Parameters', array: true },
    { propertyName: 'itemType', modelName: '@ItemType' }
];


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.masterDetailRelationSerializationsInfo = [
    { propertyName: 'masterQuery', modelName: '@Master' },
    { propertyName: 'detailQuery', modelName: '@Detail' },
    { propertyName: '_customName', modelName: '@Name' },
    {
        propertyName: 'keyColumns', modelName: 'KeyColumns', array: true, info: [
            { propertyName: 'masterColumn', modelName: '@Master' },
            { propertyName: 'detailColumn', modelName: '@Detail' },
            { propertyName: 'itemType', modelName: '@ItemType' }
        ]
    },
    { propertyName: 'itemType', modelName: '@ItemType' }
];


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var serializer_1 = __webpack_require__(1);
var parsers_1 = __webpack_require__(1);
var SqlDataConnection = (function () {
    function SqlDataConnection(model, serializer) {
        this.name = ko.observable();
        this.parameteres = ko.observable();
        this.fromAppConfig = ko.observable(true);
        serializer = serializer || new serializer_1.ModelSerializer();
        serializer.deserialize(this, model);
    }
    SqlDataConnection.from = function (model, serializer) {
        return new SqlDataConnection(model, serializer);
    };
    SqlDataConnection.toJson = function (value, serializer, refs) {
        return serializer.serialize(value, sqlDataConnectionSerializationInfo, refs);
    };
    SqlDataConnection.prototype.getInfo = function () {
        return sqlDataConnectionSerializationInfo;
    };
    return SqlDataConnection;
}());
exports.SqlDataConnection = SqlDataConnection;
var sqlDataConnectionSerializationInfo = [
    { propertyName: 'name', modelName: '@Name' },
    { propertyName: 'parameteres', modelName: 'Parameters' },
    { propertyName: 'fromAppConfig', modelName: '@FromAppConfig', defaultVal: false, from: parsers_1.parseBool }
];


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.tableQuerySerializationsInfo = [
    { propertyName: 'type', modelName: '@Type' },
    { propertyName: 'name', modelName: '@Name' },
    { propertyName: 'parameters', modelName: 'Parameters', array: true },
    {
        propertyName: '_tablesObject', modelName: 'Tables', info: [
            {
                propertyName: 'tables', modelName: 'SelectedTables', array: true, info: [
                    { propertyName: 'name', modelName: '@Name' },
                    { propertyName: 'alias', modelName: '@Alias' }
                ]
            }
        ]
    },
    { propertyName: 'filterString', modelName: 'Filter', defaultVal: '' },
    { propertyName: 'itemType', modelName: '@ItemType' }
];


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.storedProcQuerySerializationsInfo = [
    { propertyName: 'type', modelName: '@Type' },
    { propertyName: 'name', modelName: '@Name' },
    { propertyName: 'procName', modelName: 'ProcName' },
    { propertyName: 'parameters', modelName: 'Parameters', array: true },
    { propertyName: 'itemType', modelName: '@ItemType' }
];


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var pageFactory_1 = __webpack_require__(39);
var WizardPageSectionFactory = (function (_super) {
    __extends(WizardPageSectionFactory, _super);
    function WizardPageSectionFactory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WizardPageSectionFactory.prototype.registerMetadata = function (pageId, metadata) {
        _super.prototype.registerMetadata.call(this, pageId, metadata);
        if (metadata.position === undefined)
            metadata.position = Object.keys(this.metadata).length - 1;
        if (metadata.recreate === undefined)
            metadata.recreate = false;
        if (metadata.disabledText === undefined)
            metadata.disabledText = '';
    };
    return WizardPageSectionFactory;
}(pageFactory_1.PageFactory));
exports.WizardPageSectionFactory = WizardPageSectionFactory;


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var utils_1 = __webpack_require__(1);
var stateManager_1 = __webpack_require__(76);
var _wizardPageSectionIterator_1 = __webpack_require__(119);
var eventManager_1 = __webpack_require__(1);
var wizard_1 = __webpack_require__(14);
var _utils_1 = __webpack_require__(13);
var WizardPageProcessor = (function (_super) {
    __extends(WizardPageProcessor, _super);
    function WizardPageProcessor(pageFactory, _loadingState, _nextAction) {
        var _this = _super.call(this) || this;
        _this.pageFactory = pageFactory;
        _this.events = new eventManager_1.EventManager();
        _this._loadingTimeout = null;
        _this._changeTimeout = null;
        _this.sections = [];
        _this.isLoading = ko.observable(false);
        if (_loadingState)
            _this._loadingState = _loadingState;
        if (_nextAction)
            _this._extendedNextAction = _nextAction;
        _this._disposables.push(_this.events);
        return _this;
    }
    WizardPageProcessor.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.sections.forEach(function (x) { return x.resetPage(); });
        this.sections = [];
    };
    WizardPageProcessor.prototype._createLoadingState = function (page) {
        var _this = this;
        if (!page[WizardPageProcessor.__loadingStateFunctionName]) {
            page[WizardPageProcessor.__loadingStateFunctionName] = function (newVal) { return _this._loadingState(newVal); };
        }
    };
    WizardPageProcessor.prototype._createNextAction = function (page) {
        var _this = this;
        if (!page[wizard_1.BaseWizard.__nextActionFunctionName])
            page[wizard_1.BaseWizard.__nextActionFunctionName] = function () { return _this._extendedNextAction(); };
    };
    WizardPageProcessor.prototype._loadingState = function (active) {
        var _this = this;
        if (active) {
            this._loadingTimeout && clearTimeout(this._loadingTimeout);
            this._loadingTimeout = setTimeout(function () {
                _this.isLoading(true);
            }, 100);
        }
        else {
            this._loadingTimeout && clearTimeout(this._loadingTimeout);
            this.isLoading(false);
        }
    };
    WizardPageProcessor.prototype._extendedNextAction = function () { };
    WizardPageProcessor.prototype._resetPageById = function (pageId) {
        var page = this.getPageById(pageId);
        page.resetPage();
    };
    WizardPageProcessor.prototype.initialize = function (state, createIterator) {
        var _this = this;
        if (createIterator === void 0) { createIterator = function (pageFactory, stateManager) { return new _wizardPageSectionIterator_1.WizardPageSectionIterator(pageFactory, stateManager, function (pageId) { return _this._resetPageById(pageId); }); }; }
        this.events.call('beforeInitialize', { wizard: this, state: state });
        this.stateManager = new stateManager_1.StateManager(state, this.pageFactory);
        this.iterator = createIterator(this.pageFactory, this.stateManager);
        this.sections = [];
        Object.keys(this.pageFactory.metadata).forEach(function (key) {
            _this.sections.push(new _wizardPageSectionIterator_1.WizardPageSection(key, _this.pageFactory.metadata[key]));
        });
        this.sections = this.sections.sort(function (a, b) { return a.metadata.position - b.metadata.position; });
        this.events.call('afterInitialize', { wizard: this });
    };
    WizardPageProcessor.prototype._canNext = function (currentPage) {
        var pageMetadata = !this.isLoading() && currentPage && currentPage.page && this.pageFactory.getMetadata(currentPage.pageId);
        return pageMetadata && pageMetadata.canNext(currentPage.page);
    };
    WizardPageProcessor.prototype._canFinish = function (currentPage) {
        return !this.isLoading() && currentPage && this.pageFactory.getMetadata(currentPage.pageId).canFinish(currentPage.page);
    };
    WizardPageProcessor.prototype._initPage = function (page, force, stateChanged) {
        var _this = this;
        if (force === void 0) { force = false; }
        if (stateChanged === void 0) { stateChanged = false; }
        this._createNextAction(page.page);
        if (page.onChange) {
            page.onChange(function () {
                _this._changeTimeout && clearTimeout(_this._changeTimeout);
                _this._changeTimeout = setTimeout(function () {
                    _this._nextAction(page);
                }, 100);
            });
        }
        else
            throw Error('Page with id ' + page.pageId + ' cannot be used in AutoNavigation, because it does not have method OnChange');
        return page.initialize(this.stateManager.getPageState(page.pageId), force, stateChanged).always(function () { return _this._loadingState(false); });
    };
    WizardPageProcessor.prototype.getPageById = function (pageId) {
        return this.sections.filter(function (x) { return x.pageId === pageId; })[0];
    };
    WizardPageProcessor.prototype.start = function () {
        var _this = this;
        this.events.call('beforeStart', { wizard: this });
        this._loadingState(true);
        var page = this.iterator.getStartPage();
        this.events.call('beforePageInitialize', _utils_1._createBeforeInitializePageEventArgs(page, this));
        this._initPage(page).done(function () {
            var pageSection = _this.getPageById(page.pageId);
            if (pageSection) {
                pageSection.setPage(page);
                _this.events.call('afterPageInitialize', _utils_1._createPageEventArgs(page, _this));
                _this._nextAction(page);
            }
            else {
                throw Error('Page Section with id ' + page.pageId + ' is not found.');
            }
        });
    };
    WizardPageProcessor.prototype.finishAction = function () {
        var _this = this;
        var deferred = $.Deferred();
        var resolved = false;
        for (var i = this.sections.length - 1; i >= 0; i--) {
            if (this.sections[i].page()) {
                this.sections[i].page().commit().done(function (result) {
                    if (_this.sections[i].page().isChanged) {
                        _this.events.call('beforeFinish', { wizardModel: _this, state: _this.stateManager.getCurrentState() });
                        _this.stateManager.setPageState(_this.sections[i].page().pageId, result);
                        _this.events.call('afterFinish', { wizardResult: _this, state: _this.stateManager.getCurrentState() });
                    }
                }).always(function () { return deferred.resolve(); });
                resolved = true;
                break;
            }
        }
        if (!resolved)
            deferred.resolve();
        return deferred.promise();
    };
    WizardPageProcessor.prototype._nextAction = function (currentPage, parentIsChanged) {
        var _this = this;
        if (parentIsChanged === void 0) { parentIsChanged = false; }
        if (!this._canNext(currentPage) && !this._canFinish(currentPage)) {
            currentPage.resetCommitedState();
            return this.iterator.resetNextPages(currentPage.pageId);
        }
        this._loadingState(true);
        currentPage.commit().done(function (result) {
            if (currentPage.isChanged || parentIsChanged || currentPage.page && currentPage.page.changeAlways) {
                _this.stateManager.setPageState(currentPage.pageId, result);
                _this.iterator.getNextPage(currentPage.pageId).done(function (pages) {
                    if (pages && pages.length > 0) {
                        pages.forEach(function (page) {
                            var containedPage = _this.getPageById(page.pageId);
                            var page = containedPage && containedPage.page() || page;
                            _this.events.call('beforePageInitialize', _utils_1._createBeforeInitializePageEventArgs(page, _this));
                            _this._initPage(page, !!containedPage.page(), currentPage.isChanged || parentIsChanged).done(function () {
                                _this.getPageById(page.pageId).setPage(page);
                                _this.events.call('afterPageInitialize', _utils_1._createPageEventArgs(page, _this));
                                _this._nextAction(page, currentPage.isChanged);
                            });
                        });
                    }
                    else
                        _this._loadingState(false);
                    currentPage.isChanged = false;
                }).fail(function () { return _this._loadingState(false); });
            }
            else
                _this._loadingState(false);
        }).fail(function () { return _this._loadingState(false); });
    };
    WizardPageProcessor.__loadingStateFunctionName = '__loadingState';
    return WizardPageProcessor;
}(utils_1.Disposable));
exports.WizardPageProcessor = WizardPageProcessor;


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var _wrappedWizardPageSection_1 = __webpack_require__(120);
var WizardPageSection = (function () {
    function WizardPageSection(pageId, metadata) {
        this.pageId = pageId;
        this.metadata = metadata;
        this.page = ko.observable(null);
    }
    WizardPageSection.prototype.resetPage = function () {
        this.page() && this.page().dispose();
        this.page(null);
    };
    WizardPageSection.prototype.setPage = function (page) {
        if (this.page() !== page)
            this.page(page);
    };
    return WizardPageSection;
}());
exports.WizardPageSection = WizardPageSection;
var WizardPageSectionIterator = (function () {
    function WizardPageSectionIterator(pageFactory, stateManager, _resetPageCallback) {
        this.pageFactory = pageFactory;
        this.stateManager = stateManager;
        this._resetPageCallback = _resetPageCallback;
        this._pagesIds = [];
        this._pages = [];
    }
    WizardPageSectionIterator.prototype._resetPages = function (fromIndex, resetPage) {
        var _this = this;
        if (resetPage === void 0) { resetPage = function (pageId) { return _this._resetPage(pageId); }; }
        if (fromIndex < this._pagesIds.length) {
            for (var index = this._pagesIds.length - 1; index >= fromIndex; index--) {
                this._pagesIds[index].forEach(function (pageId) { return resetPage(pageId); });
                this._pagesIds.splice(index, 1);
            }
        }
    };
    WizardPageSectionIterator.prototype._tryResetPageByMetadata = function (pageId) {
        if (this.pageFactory.getMetadata(pageId)['recreate']) {
            this._resetPage(pageId);
            return true;
        }
        return false;
    };
    WizardPageSectionIterator.prototype._resetPage = function (pageId) {
        this.stateManager.resetPageState(pageId);
        this._resetPageCallback(pageId);
        var page = this._getPage(pageId);
        if (page) {
            page.dispose();
            this._pages.splice(this._pages.indexOf(page), 1);
        }
    };
    WizardPageSectionIterator.prototype._createNewPage = function (nextPageId) {
        var pageMetadata = this.pageFactory.getMetadata(nextPageId);
        return new _wrappedWizardPageSection_1.WrappedWizardPageSection(nextPageId, pageMetadata.create(), pageMetadata);
    };
    WizardPageSectionIterator.prototype._getPage = function (pageId) {
        return this._pages.filter(function (x) { return x.pageId === pageId; })[0];
    };
    WizardPageSectionIterator.prototype._getNextPage = function (nextPageIds) {
        var _this = this;
        return $.Deferred().resolve(nextPageIds.map(function (nextPageId) {
            var page = _this._getPage(nextPageId);
            if (!page || _this._tryResetPageByMetadata(nextPageId)) {
                page = _this._createNewPage(nextPageId);
                _this._pages.push(page);
            }
            return page;
        })).promise();
    };
    WizardPageSectionIterator.prototype._getPageIndex = function (pageId) {
        return this._pagesIds.indexOf(this._pagesIds.filter(function (x) { return x.some(function (y) { return y === pageId; }); })[0]);
    };
    WizardPageSectionIterator.prototype.resetNextPages = function (pageId) {
        this._resetPages(this._getPageIndex(pageId) + 1);
    };
    WizardPageSectionIterator.prototype.getStartPage = function () {
        var startPageId = this.getNextPageId();
        var pageMetadata = this.pageFactory.getMetadata(startPageId);
        var page = new _wrappedWizardPageSection_1.WrappedWizardPageSection(startPageId, pageMetadata.create(), pageMetadata);
        this._pagesIds.push([startPageId]);
        return page;
    };
    WizardPageSectionIterator.prototype.getNextPage = function (currentPageId) {
        var _this = this;
        var index = this._getPageIndex(currentPageId);
        var nextPageIds = this.getNextPageId(currentPageId);
        if (!nextPageIds) {
            this.resetNextPages(currentPageId);
            return $.Deferred().reject().promise();
        }
        if (!nextPageIds['push']) {
            nextPageIds = [nextPageIds];
        }
        if (JSON.stringify(this._pagesIds[index + 1]) !== JSON.stringify(nextPageIds)) {
            this._resetPages(index + 1, function (pageId) {
                if (nextPageIds.indexOf(pageId) === -1) {
                    _this._resetPage(pageId);
                }
            });
            this._pagesIds.push(nextPageIds);
        }
        return this._getNextPage(nextPageIds);
    };
    WizardPageSectionIterator.prototype.getCurrentState = function () {
        return this.stateManager.getCurrentState();
    };
    WizardPageSectionIterator.prototype.getNextPageId = function (pageId) {
        return '';
    };
    return WizardPageSectionIterator;
}());
exports.WizardPageSectionIterator = WizardPageSectionIterator;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var wizardPage_1 = __webpack_require__(7);
var WrappedWizardPageSection = (function (_super) {
    __extends(WrappedWizardPageSection, _super);
    function WrappedWizardPageSection(pageId, page, metadata) {
        var _this = _super.call(this, pageId, page, metadata.template, metadata.description) || this;
        _this.pageId = pageId;
        _this.page = page;
        if (page.onChange) {
            _this.onChange = function (callback) {
                page.onChange(function () {
                    callback();
                    metadata.onChange && metadata.onChange();
                });
            };
        }
        return _this;
    }
    return WrappedWizardPageSection;
}(wizardPage_1._WrappedWizardPage));
exports.WrappedWizardPageSection = WrappedWizardPageSection;


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var utils_1 = __webpack_require__(9);
var utils_2 = __webpack_require__(1);
var _options_1 = __webpack_require__(53);
var localization_utils_1 = __webpack_require__(1);
var customSqlQuery_1 = __webpack_require__(32);
var _infoMessageHelpers_1 = __webpack_require__(0);
var _ace_available_1 = __webpack_require__(10);
var SelectStatementQueryControl = (function (_super) {
    __extends(SelectStatementQueryControl, _super);
    function SelectStatementQueryControl(sqlTextProvider, disableCustomSql) {
        var _this = _super.call(this) || this;
        _this._tableQueryString = ko.observable('');
        _this._query = ko.observable();
        _this._needToCustomizeParameters = ko.pureComputed(function () {
            return _this._query() && (_this._query().type() === utils_1.SqlQueryType.customSqlQuery || _this._query().parameters().length > 0);
        });
        _this.template = 'dxrd-select-control';
        _this.aceOptions = _options_1.createDefaultSQLAceOptions();
        _this.additionalOptions = _options_1.createDefaultSQLAdditionalOptions(function (newVal) { _this.sqlString(newVal); });
        _this.aceAvailable = _ace_available_1.aceAvailable();
        _this.languageHelper = _options_1.createDefaultSQLLanguageHelper();
        _this.caption = function () { return localization_utils_1.getLocalization('SQL string:', 'DataAccessUIStringId.QueryControl_SqlString'); };
        _this.sqlString = ko.pureComputed({
            read: function () {
                return _this._query() && _this._query().type() === utils_1.SqlQueryType.customSqlQuery ? _this._query().sqlString() : _this._tableQueryString();
            },
            write: function (val) {
                if (_this._query().type() !== utils_1.SqlQueryType.customSqlQuery) {
                    var customQuery = new customSqlQuery_1.CustomSqlQuery({ '@Name': _this._query().name() }, _this._query().parent);
                    customQuery.parameters(_this._query().parameters());
                    customQuery.sqlString(val);
                    _this._query(customQuery);
                }
                else {
                    _this._query().sqlString(val);
                }
            }
        });
        _this.isNextDisabled = ko.pureComputed(function () {
            return !_this.sqlString() || !_this._needToCustomizeParameters();
        });
        _this.isFinishDisabled = ko.pureComputed(function () {
            return !_this.sqlString() || _this._needToCustomizeParameters();
        });
        _this._sqlTextProvider = sqlTextProvider;
        _this.disableCustomSql = function () { return disableCustomSql; };
        _this.aceOptions.readOnly = _this.disableCustomSql();
        _this._disposables.push(_this._needToCustomizeParameters, _this.sqlString);
        return _this;
    }
    SelectStatementQueryControl.prototype.setQuery = function (query, isInProcess) {
        var _this = this;
        if (this._query() !== query && query.type() === utils_1.SqlQueryType.tableQuery) {
            isInProcess && isInProcess(true);
            return this._sqlTextProvider.getQuerySqlText(query)
                .done(function (response) {
                if (response.errorMessage)
                    _infoMessageHelpers_1.ShowMessage(response.errorMessage);
                _this._tableQueryString(response.sqlSelectStatement);
                _this._query(query);
            })
                .always(function () { isInProcess && isInProcess(false); });
        }
        else {
            this._query(query);
            return $.Deferred().resolve().promise();
        }
    };
    SelectStatementQueryControl.prototype.getQuery = function () {
        return this._query();
    };
    Object.defineProperty(SelectStatementQueryControl.prototype, "runQueryBuilderDisabled", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    return SelectStatementQueryControl;
}(utils_2.Disposable));
exports.SelectStatementQueryControl = SelectStatementQueryControl;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var requestwrapper_1 = __webpack_require__(8);
var _objectSchemaProvider_1 = __webpack_require__(82);
var _chooseObjectTypes_1 = __webpack_require__(83);
var objectDataSource_1 = __webpack_require__(23);
var objectSchema_1 = __webpack_require__(52);
var pageId_1 = __webpack_require__(5);
var localization_utils_1 = __webpack_require__(1);
var ChooseObjectDataSourceTypesPage = (function (_super) {
    __extends(ChooseObjectDataSourceTypesPage, _super);
    function ChooseObjectDataSourceTypesPage(_requestWrapper) {
        if (_requestWrapper === void 0) { _requestWrapper = new requestwrapper_1.RequestWrapper(); }
        var _this = _super.call(this) || this;
        _this._requestWrapper = _requestWrapper;
        _this._objectDataSource = new objectDataSource_1.ObjectDataSource();
        _this._types = ko.observableArray([]);
        _this._disposables.push(_this._provider = new _objectSchemaProvider_1.ObjectSchemaProvider(_this._requestWrapper), _this._chooseObjectType = new _chooseObjectTypes_1.ChooseObjectTypes(_this._types, _this._provider));
        return _this;
    }
    ChooseObjectDataSourceTypesPage.prototype.canNext = function () {
        return !!this._selectedTypeName;
    };
    ChooseObjectDataSourceTypesPage.prototype.canFinish = function () {
        return false;
    };
    ChooseObjectDataSourceTypesPage.prototype.commit = function () {
        return $.Deferred().resolve({
            selectedType: this._selectedTypeName,
            selectedObjectType: this._chooseObjectType.selectedType(),
            ctor: this._chooseObjectType.selectedCtor()
        }).promise();
    };
    ChooseObjectDataSourceTypesPage.prototype.initialize = function (state) {
        var _this = this;
        this._objectDataSource.setState(state);
        this._provider.getObjectTypeDescriptions(state.context).done(function (schema) {
            schema.types.forEach(function (type) { return type.members.splice(0, 0, objectSchema_1.ObjectDataMember.empty()); });
            _this._types(schema.types || []);
            if (schema.types.length > 0) {
                _this._chooseObjectType.selectedPath(schema.types[0].name);
            }
        });
        return $.Deferred().resolve().promise();
    };
    Object.defineProperty(ChooseObjectDataSourceTypesPage.prototype, "_selectedTypeName", {
        get: function () {
            return !!this._chooseObjectType.selectedType() ? this._chooseObjectType.selectedType().name : null;
        },
        enumerable: true,
        configurable: true
    });
    return ChooseObjectDataSourceTypesPage;
}(wizardPage_1.WizardPageBase));
exports.ChooseObjectDataSourceTypesPage = ChooseObjectDataSourceTypesPage;
function _registerChooseObjectDataSourceTypesPage(factory, dataSourceWizardOptions) {
    factory.registerMetadata(pageId_1.ObjectDataSourceWizardPageId.ChooseTypesPage, {
        setState: function (data, state) {
            state.selectedType = data.selectedType;
            state.selectedObjectType = data.selectedObjectType;
            state.ctor = data.ctor;
        },
        getState: function (state) {
            return state.objectDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.selectedType = defaultState.selectedType;
            state.selectedObjectType = defaultState.selectedObjectType;
            state.ctor = defaultState.ctor;
        },
        create: function () {
            return new ChooseObjectDataSourceTypesPage(dataSourceWizardOptions.requestWrapper);
        },
        description: localization_utils_1.getLocalization('Choose the type and its constructor.', 'AnalyticsCoreStringId.ObjectDSWizard_ChooseType_Description'),
        template: 'dxrd-page-objectdatasource-types'
    });
}
exports._registerChooseObjectDataSourceTypesPage = _registerChooseObjectDataSourceTypesPage;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var requestwrapper_1 = __webpack_require__(8);
var _chooseObjectDataMembers_1 = __webpack_require__(84);
var objectDataSource_1 = __webpack_require__(23);
var pageId_1 = __webpack_require__(5);
var localization_utils_1 = __webpack_require__(1);
var ChooseObjectDataSourceDataMembersPage = (function (_super) {
    __extends(ChooseObjectDataSourceDataMembersPage, _super);
    function ChooseObjectDataSourceDataMembersPage(_requestWrapper) {
        if (_requestWrapper === void 0) { _requestWrapper = new requestwrapper_1.RequestWrapper(); }
        var _this = _super.call(this) || this;
        _this._requestWrapper = _requestWrapper;
        _this._objectDataSource = new objectDataSource_1.ObjectDataSource();
        _this._type = ko.observable();
        _this._ctor = ko.observable();
        _this._disposables.push(_this._chooseObjectDataMember = new _chooseObjectDataMembers_1.ChooseObjectDataMembers(_this._type, _this._ctor));
        return _this;
    }
    ChooseObjectDataSourceDataMembersPage.prototype.initialize = function (state) {
        this._objectDataSource.setState(state);
        this._type(state.selectedObjectType);
        this._ctor(state.ctor);
        return $.Deferred().resolve().promise();
    };
    ChooseObjectDataSourceDataMembersPage.prototype.canNext = function () {
        return !!this._needParametersPage;
    };
    ChooseObjectDataSourceDataMembersPage.prototype.canFinish = function () {
        return !this._needParametersPage;
    };
    ChooseObjectDataSourceDataMembersPage.prototype.commit = function () {
        return $.Deferred().resolve({
            selectedType: this._type().name,
            ctor: this._ctor(),
            dataMember: !this._selectedDataMember || this._selectedDataMember.isEntireObject() ? undefined : this._selectedDataMember,
        }).promise();
    };
    Object.defineProperty(ChooseObjectDataSourceDataMembersPage.prototype, "_selectedDataMember", {
        get: function () {
            var selectedDataMembers = this._chooseObjectDataMember.selectedDataMembers();
            return !!selectedDataMembers ? selectedDataMembers[0] : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChooseObjectDataSourceDataMembersPage.prototype, "_needParametersPage", {
        get: function () {
            return (!!this._selectedDataMember && this._selectedDataMember.parameters.length > 0) ||
                (!!this._ctor() && this._ctor().parameters.length > 0);
        },
        enumerable: true,
        configurable: true
    });
    return ChooseObjectDataSourceDataMembersPage;
}(wizardPage_1.WizardPageBase));
exports.ChooseObjectDataSourceDataMembersPage = ChooseObjectDataSourceDataMembersPage;
function _registerChooseObjectDataSourceDataMembersPage(factory, dataSourceWizardOptions) {
    factory.registerMetadata(pageId_1.ObjectDataSourceWizardPageId.ChooseDataMembersPage, {
        setState: function (data, state) {
            state.selectedType = data.selectedType;
            state.ctor = data.ctor;
            state.dataMember = data.dataMember;
        },
        getState: function (state) {
            return state.objectDataSourceWizard;
        },
        resetState: function (state, defaultState) {
            state.dataMember = defaultState.dataMember;
        },
        create: function () {
            return new ChooseObjectDataSourceDataMembersPage(dataSourceWizardOptions.requestWrapper);
        },
        description: localization_utils_1.getLocalization('Choose the entire object or a data member to bind.', 'AnalyticsCoreStringId.ObjectDSWizard_ChooseDataMember_Description'),
        template: 'dxrd-page-objectdatasource-datamembers'
    });
}
exports._registerChooseObjectDataSourceDataMembersPage = _registerChooseObjectDataSourceDataMembersPage;


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var _utils_1 = __webpack_require__(13);
var localization_utils_1 = __webpack_require__(1);
var ChooseAvailableItemPage = (function (_super) {
    __extends(ChooseAvailableItemPage, _super);
    function ChooseAvailableItemPage(items, canCreateNew) {
        var _a;
        if (canCreateNew === void 0) { canCreateNew = true; }
        var _this = _super.call(this) || this;
        _this.items = items;
        _this.selectedItems = ko.observableArray([]);
        _this.operations = [
            { text: _this.existingOperationText, createNew: false },
            { text: _this.createNewOperationText, createNew: true }
        ];
        _this.selectedOperation = ko.observable(_this.operations[0]);
        _this._createNew = ko.pureComputed(function () { return _this.selectedOperation().createNew; });
        _this.canCreateNew = ko.observable(canCreateNew);
        (_a = _this._disposables).push.apply(_a, _utils_1.subscribeProperties([_this.selectedOperation, _this.selectedItems], function () { return _this._onChange(); }));
        return _this;
    }
    ChooseAvailableItemPage.prototype.canNext = function () {
        return this.selectedItems().length !== 0 || this.selectedOperation().createNew;
    };
    ChooseAvailableItemPage.prototype.initialize = function (state) {
        var item = this._getSelectedItem(state);
        this.selectedItems(item ? [item] : []);
        return $.Deferred().resolve(this).promise();
    };
    ChooseAvailableItemPage.prototype._displayExpr = function (item) {
        return item.description || item.name;
    };
    ChooseAvailableItemPage.prototype._getSelectedItem = function (state) {
        return this.items()[0];
    };
    ChooseAvailableItemPage.prototype.onDblClick = function () {
        this[wizard_1.BaseWizard.__nextActionFunctionName] && this[wizard_1.BaseWizard.__nextActionFunctionName]();
    };
    Object.defineProperty(ChooseAvailableItemPage.prototype, "createNewOperationText", {
        get: function () {
            return localization_utils_1.getLocalization("No, I'd like to create a new data source", 'AnalyticsCoreStringId.Wizard_CreateNewDataSource');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChooseAvailableItemPage.prototype, "existingOperationText", {
        get: function () {
            return localization_utils_1.getLocalization('Yes, let me choose an existing data source from the list', 'AnalyticsCoreStringId.Wizard_ChooseDataSourceFromList');
        },
        enumerable: true,
        configurable: true
    });
    return ChooseAvailableItemPage;
}(wizardPage_1.WizardPageBase));
exports.ChooseAvailableItemPage = ChooseAvailableItemPage;
var wizard_1 = __webpack_require__(14);


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var chooseJsonConnectionPage_1 = __webpack_require__(55);
var requestwrapper_1 = __webpack_require__(8);
var chooseJsonSourcePage_1 = __webpack_require__(40);
var pageId_1 = __webpack_require__(5);
var localization_utils_1 = __webpack_require__(1);
var SpecifyJsonConnectionPage = (function (_super) {
    __extends(SpecifyJsonConnectionPage, _super);
    function SpecifyJsonConnectionPage(connections, allowCreateNewJsonConnection, itemsProvider, _requestWrapper) {
        if (_requestWrapper === void 0) { _requestWrapper = new requestwrapper_1.RequestWrapper(); }
        var _this = _super.call(this, connections, allowCreateNewJsonConnection) || this;
        _this._requestWrapper = _requestWrapper;
        _this._disposables.push(_this._specifySourceData = new chooseJsonSourcePage_1.ChooseJsonSourcePage(_requestWrapper, itemsProvider));
        _this._specifySourceData.onChange(function () { return _this._onChange(); });
        return _this;
    }
    SpecifyJsonConnectionPage.prototype.commit = function () {
        var deffered = $.Deferred();
        var _promise;
        if (this._createNew()) {
            _promise = this._specifySourceData.commit();
        }
        else {
            _promise = _super.prototype.commit.call(this);
        }
        _promise.done(function (state) {
            deffered.resolve(state);
        });
        return deffered.promise();
    };
    SpecifyJsonConnectionPage.prototype.canNext = function () {
        if (this._createNew()) {
            return this._specifySourceData.canNext();
        }
        else {
            return _super.prototype.canNext.call(this);
        }
    };
    SpecifyJsonConnectionPage.prototype.initialize = function (state) {
        var _this = this;
        var deffered = $.Deferred();
        _super.prototype.initialize.call(this, state).done(function () {
            _this._specifySourceData.initialize(state).done(function () {
                deffered.resolve(_this);
            });
        });
        return deffered.promise();
    };
    return SpecifyJsonConnectionPage;
}(chooseJsonConnectionPage_1.ChooseJsonConnectionPage));
exports.SpecifyJsonConnectionPage = SpecifyJsonConnectionPage;
function _registerSpecifyJsonConnectionPage(factory, connections, allowCreateNewJsonConnection, getItemsProviderCallBack) {
    factory.registerMetadata(pageId_1.JsonDataSourceWizardPageId.SpecifyJsonConnectionPage, {
        create: function () { return new SpecifyJsonConnectionPage(connections, allowCreateNewJsonConnection, getItemsProviderCallBack && getItemsProviderCallBack()); },
        description: allowCreateNewJsonConnection ?
            localization_utils_1.getLocalization('Do you want to use an existing data connection?', 'AnalyticsCoreStringId.JsonDSWizard_ChooseConnection_Description') :
            localization_utils_1.getLocalization('Choose a data connection.', 'AnalyticsCoreStringId.SqlDSWizard_PageChooseConnection'),
        getState: function (state) { return state.jsonDataSourceWizard; },
        setState: function (data, state) {
            state.connectionName = data.connectionName;
            state.jsonSource = data.jsonSource;
            state.newConnectionName = data.newConnectionName;
        },
        resetState: function (state, defaultState) {
            state.connectionName = defaultState.connectionName;
            state.jsonSource = defaultState.jsonSource;
            state.newConnectionName = defaultState.newConnectionName;
        },
        template: 'dxrd-page-specify-connection'
    });
}
exports._registerSpecifyJsonConnectionPage = _registerSpecifyJsonConnectionPage;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.parameterTypeToPropertyMap = {
    'PathParameter': 'pathParameters',
    'QueryParameter': 'queryParameters',
    'Header': 'headers',
};


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var editor_1 = __webpack_require__(6);
var _utils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var _jsonSourceSettings_1 = __webpack_require__(85);
var _ace_available_1 = __webpack_require__(10);
var JsonStringEditor = (function (_super) {
    __extends(JsonStringEditor, _super);
    function JsonStringEditor(modelPropertyInfo, level, parentDisabled, textToSearch) {
        var _this = _super.call(this, modelPropertyInfo, level, parentDisabled, textToSearch) || this;
        _this.aceEditorHasErrors = ko.observable(false);
        _this.aceAvailable = _ace_available_1.aceAvailable();
        _this.editorContainer = ko.observable();
        _this.languageHelper = {
            getLanguageMode: function () { return 'ace/mode/json'; },
            createCompleters: function () { return []; }
        };
        _this.aceOptions = {
            showLineNumbers: false,
            highlightActiveLine: false,
            showPrintMargin: false,
            enableBasicAutocompletion: true,
            enableLiveAutocompletion: true
        };
        _this.isValid = ko.computed(function () {
            return _this._model() && _this._model().isValid();
        });
        _this.additionalOptions = {
            onChangeAnnotation: function (session) {
                var annotations = session && session.getAnnotations() || [];
                _this._model() && _this._model().aceEditorHasErrors && _this._model().aceEditorHasErrors(annotations.filter(function (annotation) { return annotation.type === 'error' || annotation.type === 'warning'; }).length > 0);
            },
            onBlur: function () {
                var editorContainer = _this.editorContainer();
                if (editorContainer) {
                    _this.value(editorContainer.getValue());
                }
            }
        };
        _this.jsonStringValidationRules = [{
                type: 'custom',
                reevaluate: true,
                validationCallback: function (options) { return _this.isValid(); },
                get message() {
                    return _jsonSourceSettings_1.getLocalizedValidationErrorMessage(localization_utils_1.getLocalization('The value cannot be empty and should have a valid format.', 'AnalyticsCoreStringId.ValueIsRequiredOrInvalidFormat_Error'), localization_utils_1.getLocalization('JSON String:', 'DataAccessUIStringId.WizardPageChooseJsonSource_Custom'));
                }
            }];
        return _this;
    }
    JsonStringEditor.prototype.uploadFile = function (e) {
        var _this = this;
        if (e && e.event) {
            e.event.stopPropagation();
            e.event.preventDefault();
        }
        _utils_1.uploadFile({
            accept: '.json,.txt'
        }).done(function (result) {
            var fileContent = atob(result.content);
            if (fileContent.indexOf('ï»¿') === 0) {
                fileContent = fileContent.substr('ï»¿'.length);
            }
            _this.value(fileContent);
        });
    };
    JsonStringEditor.prototype.getUploadTitle = function () {
        return localization_utils_1.getLocalization('Upload JSON File', 'AnalyticsCoreStringId.UploadJsonFile_Title');
    };
    return JsonStringEditor;
}(editor_1.Editor));
exports.JsonStringEditor = JsonStringEditor;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _treeNodeItemsProvider_1 = __webpack_require__(129);
var JsonTreeNodeItemsProvider = (function (_super) {
    __extends(JsonTreeNodeItemsProvider, _super);
    function JsonTreeNodeItemsProvider(fieldListProvider, rootItems, generateTreeNode, generateTreeLeafNode) {
        return _super.call(this, fieldListProvider, rootItems, generateTreeNode, generateTreeLeafNode) || this;
    }
    JsonTreeNodeItemsProvider.prototype._getDefaultTreeNodeCheckState = function (item) {
        return item.isSelected;
    };
    JsonTreeNodeItemsProvider.prototype.getNodeByPath = function (pathRequest) {
        var listNode = this._rootItems().filter(function (item) { return item.path === (pathRequest.pathParts || [])[0]; })[0];
        if (!listNode)
            return;
        var childPath = listNode.path;
        for (var index = 1; index < pathRequest.pathParts.length; index++) {
            if (!listNode)
                return;
            childPath += '.' + pathRequest.pathParts[index];
            listNode = listNode.children().filter(function (item) { return item.path == childPath; })[0];
        }
        return listNode;
    };
    return JsonTreeNodeItemsProvider;
}(_treeNodeItemsProvider_1.TreeNodeItemsProvider));
exports.JsonTreeNodeItemsProvider = JsonTreeNodeItemsProvider;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var utils_1 = __webpack_require__(1);
var _treeListNode_1 = __webpack_require__(41);
var pathRequest_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(0);
var TreeNodeItemsProvider = (function (_super) {
    __extends(TreeNodeItemsProvider, _super);
    function TreeNodeItemsProvider(fieldListProvider, rootItems, generateTreeNode, generateTreeLeafNode) {
        var _this = _super.call(this) || this;
        _this._fullTreeLoaded = false;
        _this._rootItems = ko.observableArray([]);
        _this._checkedRootNodesCount = ko.computed(function () {
            if (!_this._rootItems || _this._rootItems().length === 0)
                return 0;
            var count = 0;
            for (var i = 0; i < _this._rootItems().length && count < 1; i++) {
                count += _this._rootItems()[i].unChecked() ? 0 : 1;
            }
            return count;
        });
        _this.hasCheckedItems = ko.computed(function () {
            return !(_this._checkedRootNodesCount() === 0);
        });
        _this.getRootItems = function () { return _this._rootItems(); };
        _this.getItems = function (pathRequest, collectChilds) {
            if (collectChilds === void 0) { collectChilds = false; }
            var result = $.Deferred();
            if (!pathRequest.fullPath && pathRequest.pathParts.length === 0) {
                result.resolve(_this._rootItems());
            }
            else {
                fieldListProvider.getItems(pathRequest).done(function (value) {
                    var currentParentNode = _this._getParentNode(pathRequest);
                    if (!currentParentNode)
                        return result.reject();
                    if (currentParentNode.children().length === 0) {
                        var array = [];
                        var listPath = [];
                        value.forEach(function (item) {
                            var isChecked = _this._getDefaultTreeNodeCheckState(item);
                            if (_utils_1.isList(item)) {
                                if (pathRequest.pathParts.length <= 5) {
                                    listPath.push([].concat(pathRequest.fullPath.split('.'), [item.name]));
                                    array.push(generateTreeNode(item, isChecked, [pathRequest.fullPath, item.name].join('.')));
                                }
                            }
                            else {
                                array.push(generateTreeLeafNode(item, isChecked, [pathRequest.fullPath, item.name].join('.')));
                            }
                        });
                        currentParentNode.initializeChildren(array);
                        if (collectChilds)
                            $.when.apply($, listPath.map(function (x) { return _this.getItems(new pathRequest_1.PathRequest(x.join('.'), x), collectChilds); })).always(function () { return result.resolve(array); });
                        else
                            result.resolve(array);
                    }
                    else {
                        result.resolve(currentParentNode.children());
                    }
                });
            }
            return result.promise();
        };
        _this._disposables.push(rootItems.subscribe(function (newValue) {
            _this._fullTreeLoaded = false;
            _this._rootItems(newValue.map(function (item) {
                var isChecked = _this._getDefaultTreeNodeCheckState(item);
                return generateTreeNode(item, isChecked, item.name);
            }));
        }));
        _this._disposables.push(_this.hasCheckedItems);
        return _this;
    }
    TreeNodeItemsProvider.prototype._createTree = function () {
        var _this = this;
        if (!this._fullTreeLoaded)
            return $.when.apply($, this._rootItems().map(function (item) { return _this.getItems(new pathRequest_1.PathRequest(item.path), true); })).always(function () { return _this._fullTreeLoaded = true; });
        else {
            return $.Deferred().resolve().promise();
        }
    };
    TreeNodeItemsProvider.prototype._createTreePart = function (pathParts, deferred, checkedPath) {
        var _this = this;
        if (deferred === void 0) { deferred = $.Deferred(); }
        if (this._fullTreeLoaded)
            return deferred.resolve().promise();
        if (pathParts.length === 0)
            return deferred.resolve();
        if (!checkedPath) {
            var deferred = $.Deferred();
            if (pathParts.length === 1) {
                this.getItems(new pathRequest_1.PathRequest(pathParts[0], pathParts)).done(function () { return deferred.resolve(); }).fail(function () { return deferred.reject(); });
            }
            else
                this._createTreePart(pathParts.slice(1), deferred, [pathParts[0]]);
            return deferred;
        }
        else {
            var newParentPath = [].concat([], checkedPath, pathParts[0]);
            var request = new pathRequest_1.PathRequest(newParentPath.join('.'), newParentPath);
            if (!this._getParentNode(request)) {
                this.getItems(new pathRequest_1.PathRequest(checkedPath.join('.'), checkedPath)).done(function (res) {
                    _this._createTreePart(pathParts.slice(1), deferred, newParentPath);
                }).fail(function () { return deferred.reject(); });
            }
            else {
                this._createTreePart(pathParts.slice(1), deferred, newParentPath);
            }
        }
    };
    TreeNodeItemsProvider.prototype._setChecked = function (item) {
        var _this = this;
        item.setChecked(true);
        if (item instanceof _treeListNode_1.DataMemberTreeNode) {
            item.children().forEach(function (x) { return _this._setChecked(x); });
        }
    };
    TreeNodeItemsProvider.prototype.selectAllItems = function (onlyRoot) {
        var _this = this;
        if (onlyRoot === void 0) { onlyRoot = true; }
        var deferred = $.Deferred();
        this._createTree().always(function () {
            if (onlyRoot) {
                _this._rootItems().forEach(function (x) { return x.setChecked(true); });
            }
            else {
                _this._rootItems().forEach(function (x) { return _this._setChecked(x); });
            }
            deferred.resolve();
        });
        return deferred.promise();
    };
    TreeNodeItemsProvider.prototype.selectItemsByPath = function (path) {
        var _this = this;
        var deferred = $.Deferred();
        var pathParts = path.split('.');
        this._createTreePart(pathParts).done(function () {
            _this.getItems(new pathRequest_1.PathRequest(pathParts.join('.'), pathParts)).done(function (items) {
                items.forEach(function (item) {
                    if (item instanceof _treeListNode_1.TreeNodeBase) {
                        item.setChecked(true);
                    }
                });
            }).always(function () { return deferred.resolve(); });
        });
        return deferred.promise();
    };
    TreeNodeItemsProvider.prototype.selectItemByPath = function (path) {
        var _this = this;
        var deferred = $.Deferred();
        var pathParts = path.split('.');
        this._createTreePart(pathParts).done(function () {
            var fieldName = pathParts.pop();
            _this.getItems(new pathRequest_1.PathRequest(pathParts.join('.'), pathParts)).done(function (items) {
                var item = items.filter(function (x) { return x.name === fieldName; })[0];
                if (item instanceof _treeListNode_1.TreeNodeBase) {
                    item.setChecked(true);
                }
            }).always(function () { return deferred.resolve(); });
        });
        return deferred.promise();
    };
    TreeNodeItemsProvider.prototype._getParentNode = function (pathRequest) {
        var parentNode = this._rootItems().filter(function (item) { return item.path === (pathRequest.id || pathRequest.ref); })[0];
        if (!parentNode)
            return;
        var childPath = parentNode.path;
        for (var index = 1; index < pathRequest.pathParts.length; index++) {
            if (!parentNode)
                return;
            childPath += '.' + pathRequest.pathParts[index];
            parentNode = parentNode.children().filter(function (item) { return _utils_1.isList(item) && item.path == childPath; })[0];
        }
        return parentNode;
    };
    TreeNodeItemsProvider.prototype._getDefaultTreeNodeCheckState = function (item) {
        return false;
    };
    return TreeNodeItemsProvider;
}(utils_1.Disposable));
exports.TreeNodeItemsProvider = TreeNodeItemsProvider;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var wizardPage_1 = __webpack_require__(7);
var dataSourceWizardState_1 = __webpack_require__(12);
var configureQueryPage_1 = __webpack_require__(24);
var dataSourceParameter_1 = __webpack_require__(11);
var _getNameHelpers_1 = __webpack_require__(0);
var editorsInfo_1 = __webpack_require__(6);
var utils_1 = __webpack_require__(9);
var localization_utils_1 = __webpack_require__(1);
var pageId_1 = __webpack_require__(5);
var ConfigureQueryParametersPage = (function (_super) {
    __extends(ConfigureQueryParametersPage, _super);
    function ConfigureQueryParametersPage(parametersConverter, _requestWrapper) {
        if (parametersConverter === void 0) { parametersConverter = {
            createParameterViewModel: function (parameter) { return parameter; },
            getParameterFromViewModel: function (parameterViewModel) { return parameterViewModel; }
        }; }
        var _this = _super.call(this) || this;
        _this.parametersConverter = parametersConverter;
        _this._requestWrapper = _requestWrapper;
        _this._sqlDataSourceWrapper = new configureQueryPage_1._SqlDataSourceWrapper(undefined, undefined, _this._requestWrapper);
        _this.removeButtonTitle = localization_utils_1.getLocalization('Remove', 'DataAccessUIStringId.Button_Remove');
        _this.parametersEditorOptions = {
            addHandler: function () {
                return _this.parametersConverter.createParameterViewModel(new dataSourceParameter_1.DataSourceParameter({
                    '@Name': _getNameHelpers_1.getUniqueNameForNamedObjectsArray(_this.parametersEditorOptions.values.peek().peek(), 'param'),
                    '@Type': 'System.Int32'
                }));
            },
            values: ko.observable(ko.observableArray([])),
            displayName: 'Parameters',
            level: 0,
            info: ko.observable({
                displayName: 'Parameters', localizationId: 'DevExpress.DataAccess.Sql.SqlQuery.Parameters',
                propertyName: 'parameters',
                modelName: 'Parameter',
                array: true,
                editor: editorsInfo_1.editorTemplates.getEditor('commonCollection'),
                template: '#dxrd-parameter-collection-item'
            }),
            editorTemplate: '#dxrd-wizard-datasource-parameters',
            hideButtons: ko.observable(false),
            collapsed: false
        };
        return _this;
    }
    ConfigureQueryParametersPage.prototype._isParametersValid = function () {
        return this.getParameters().every(function (x) { return x.isValid(); });
    };
    ConfigureQueryParametersPage.prototype.canNext = function () {
        return false;
    };
    ConfigureQueryParametersPage.prototype.canFinish = function () {
        return this._isParametersValid();
    };
    ConfigureQueryParametersPage.prototype.getParameters = function () {
        return this.parametersEditorOptions.values()();
    };
    ConfigureQueryParametersPage.prototype.initialize = function (data) {
        var _this = this;
        this._sqlDataSourceWrapper = dataSourceWizardState_1._restoreSqlDataSourceFromState(data, this._requestWrapper);
        this.parametersEditorOptions.hideButtons(this._sqlDataSourceWrapper.sqlQuery.type() === utils_1.SqlQueryType.storedProcQuery);
        setTimeout(function () {
            _this.parametersEditorOptions.values(ko.observableArray(_this._sqlDataSourceWrapper.sqlQuery.parameters().map(function (item) { return _this.parametersConverter.createParameterViewModel(item); })));
        }, 100);
        return $.Deferred().resolve().promise();
    };
    ConfigureQueryParametersPage.prototype.commit = function () {
        var _this = this;
        this._sqlDataSourceWrapper.sqlQuery.parameters(this.parametersEditorOptions.values()().map(function (item) { return _this.parametersConverter.getParameterFromViewModel(item); }));
        return $.Deferred().resolve({
            sqlDataSourceJSON: this._sqlDataSourceWrapper.save()
        }).promise();
    };
    return ConfigureQueryParametersPage;
}(wizardPage_1.WizardPageBase));
exports.ConfigureQueryParametersPage = ConfigureQueryParametersPage;
function _registerConfigureParametersPage(factory, requestWrapper, parametersConverter) {
    factory.registerMetadata(pageId_1.SqlDataSourceWizardPageId.ConfigureParametersPage, {
        create: function () { return new ConfigureQueryParametersPage(parametersConverter, requestWrapper); },
        getState: function (state) { return state.sqlDataSourceWizard; },
        setState: function (result, state) { return state.sqlDataSourceJSON = result.sqlDataSourceJSON; },
        resetState: function () { return void 0; },
        template: 'dxrd-page-configure-parameters',
        description: localization_utils_1.getLocalization('Configure query parameters.', 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureParameters')
    });
}
exports._registerConfigureParametersPage = _registerConfigureParametersPage;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var _arrayutils_1 = __webpack_require__(0);
var _treeListNode_1 = __webpack_require__(41);
var localization_utils_1 = __webpack_require__(1);
var _storedProceduresQueryControl_1 = __webpack_require__(77);
var utils_1 = __webpack_require__(1);
var DBSchemaItemsProvider = (function (_super) {
    __extends(DBSchemaItemsProvider, _super);
    function DBSchemaItemsProvider(dbSchemaProvider, customQueries, showQbCallBack, disableCustomSql, afterCheckToggled) {
        var _a;
        var _this = _super.call(this) || this;
        _this._callBack = ko.observable({
            deleteAction: function (name) {
                _this._customQueries
                    .remove(_arrayutils_1.findFirstItemMatchesCondition(_this._customQueries(), function (item) { return (item.name() || item.generateName()) === name; }));
            },
            showQbCallBack: null,
            disableCustomSql: false,
        });
        _this._checkedRootNodesCount = ko.pureComputed(function () {
            var count = 0;
            for (var i = 0; i < _this._rootItems.length && count < 2; i++) {
                count += _this._rootItems[i].countChecked();
            }
            return count;
        });
        _this.hasCheckedItems = ko.pureComputed(function () {
            return !(_this._checkedRootNodesCount() === 0);
        });
        _this.nextButtonDisabled = ko.pureComputed(function () {
            if (_this._checkedRootNodesCount() > 1) {
                return false;
            }
            return !_this.hasParametersToEdit();
        });
        _this.hasParametersToEdit = ko.pureComputed(function () {
            for (var i = 0; i < _this._rootItems.length; i++) {
                if (_this._rootItems[i]['hasParamsToEdit'] && _this._rootItems[i]['hasParamsToEdit']())
                    return true;
            }
            return false;
        });
        _this.tables = function () { return _this._tables; };
        _this.views = function () { return _this._views; };
        _this.procedures = function () { return _this._procedures; };
        _this.queries = function () { return _this._queries; };
        _this.customQueries = function () { return _this._customQueries; };
        _this._callBack().showQbCallBack = showQbCallBack;
        _this._callBack().disableCustomSql = disableCustomSql;
        _this._tables = new _treeListNode_1.TreeNode('tables', localization_utils_1.getLocalization('Tables', 'DataAccessStringId.ConfigureMultiQueryPage_TableCategory'), 'list', false, afterCheckToggled);
        _this._views = new _treeListNode_1.TreeNode('views', localization_utils_1.getLocalization('Views', 'DataAccessStringId.ConfigureMultiQueryPage_ViewCategory'), 'list', false, afterCheckToggled);
        _this._procedures = new _treeListNode_1.ParameterTreeNode('procedures', localization_utils_1.getLocalization('Stored Procedures', 'DataAccessStringId.ConfigureMultiQueryPage_SpCategory'), 'list', false, afterCheckToggled);
        _this._queries = new _treeListNode_1.QueriesTreeNode('queries', localization_utils_1.getLocalization('Queries', 'DataAccessStringId.ConfigureMultiQueryPage_QueryCategory'), 'list', false, _this._callBack, afterCheckToggled);
        (_a = _this._disposables).push.apply(_a, [_this._tables, _this._views, _this._procedures, _this._queries]);
        _this._rootItems = [
            _this._tables,
            _this._views,
            _this._procedures,
            _this._queries
        ];
        _this.getItems = function (pathRequest) {
            var result = $.Deferred();
            if (!pathRequest.fullPath) {
                result.resolve(_this._rootItems);
            }
            else if (pathRequest.fullPath === 'tables') {
                dbSchemaProvider.getDbSchema().done(function (dbSchema) {
                    if (_this._tables.children().length === 0) {
                        var tables = [];
                        dbSchema.tables.forEach(function (table) {
                            if (!table.isView) {
                                tables.push(new _treeListNode_1.TreeNode(table.name, table.name, 'table', _this._tables.checked.peek(), afterCheckToggled));
                            }
                        });
                        _this._tables.initializeChildren(tables);
                        result.resolve(tables);
                    }
                    else {
                        result.resolve(_this._tables.children());
                    }
                }).fail(result.reject);
            }
            else if (pathRequest.fullPath === 'views') {
                dbSchemaProvider.getDbSchema().done(function (dbSchema) {
                    if (_this._views.children().length === 0) {
                        var views = [];
                        dbSchema.tables.forEach(function (table) {
                            if (table.isView) {
                                views.push(new _treeListNode_1.TreeNode(table.name, table.name, 'view', _this._views.checked.peek(), afterCheckToggled));
                            }
                        });
                        _this._views.initializeChildren(views);
                        result.resolve(views);
                    }
                    else {
                        result.resolve(_this._views.children());
                    }
                }).fail(result.reject);
            }
            else if (pathRequest.fullPath === 'procedures') {
                dbSchemaProvider.getDbStoredProcedures().done(function (storedProcedures) {
                    if (_this._procedures.children().length === 0) {
                        var procedures = storedProcedures.map(function (proc) {
                            var node = new _treeListNode_1.TreeLeafNode(proc.name, _storedProceduresQueryControl_1.StoredProceduresQueryControl.generateStoredProcedureDisplayName(proc), 'procedure', _this._procedures.checked.peek(), proc.arguments, afterCheckToggled);
                            _this._disposables.push(node);
                            return node;
                        });
                        _this._procedures.initializeChildren(procedures);
                        result.resolve(procedures);
                    }
                    else {
                        result.resolve(_this._procedures.children());
                    }
                }).fail(result.reject);
            }
            else if (pathRequest.fullPath === 'queries') {
                var queries = customQueries().map(function (query) {
                    var name = query.name() || query.generateName();
                    var currentQuery = _this._queries.children().filter(function (q) { return q['query'] === query; })[0];
                    if (currentQuery)
                        return currentQuery;
                    var queryNode = new _treeListNode_1.TreeQueryNode(name, name, 'query', !!currentQuery && currentQuery.checked(), query.parameters, _this._callBack, afterCheckToggled, query);
                    _this._disposables.push(queryNode);
                    queryNode.setObservableName(ko.computed({
                        read: function () { return query.name() || query.generateName(); },
                        write: function (newVal) { return query.name(newVal); }
                    }));
                    return queryNode;
                });
                _this._queries.initializeChildren(queries);
                result.resolve(queries);
            }
            else {
                dbSchemaProvider.getDbTable(pathRequest.path).done(function (table) {
                    var tableTreeNode;
                    if (table.isView) {
                        tableTreeNode = _arrayutils_1.findFirstItemMatchesCondition(_this._views.children(), function (item) { return item.name === table.name; });
                    }
                    else {
                        tableTreeNode = _arrayutils_1.findFirstItemMatchesCondition(_this._tables.children(), function (item) { return item.name === table.name; });
                    }
                    if (tableTreeNode.children().length === 0) {
                        var columns = table.columns.map(function (column) {
                            var node = new _treeListNode_1.TreeLeafNode(column.name, column.name, 'column', tableTreeNode.checked.peek(), null, afterCheckToggled);
                            _this._disposables.push(node);
                            return node;
                        });
                        tableTreeNode.initializeChildren(columns);
                        result.resolve(columns);
                    }
                    else {
                        result.resolve(tableTreeNode.children());
                    }
                }).fail(result.reject);
            }
            return result.promise();
        };
        _this._customQueries = customQueries;
        return _this;
    }
    return DBSchemaItemsProvider;
}(utils_1.Disposable));
exports.DBSchemaItemsProvider = DBSchemaItemsProvider;


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _treelistController_1 = __webpack_require__(10);
var _treeListNode_1 = __webpack_require__(41);
var DBSchemaTreeListController = (function (_super) {
    __extends(DBSchemaTreeListController, _super);
    function DBSchemaTreeListController(_customizeDBSchemaTreeListActions) {
        var _this = _super.call(this) || this;
        _this._customizeDBSchemaTreeListActions = _customizeDBSchemaTreeListActions;
        return _this;
    }
    DBSchemaTreeListController.prototype.getActions = function (value) {
        if (!value.data)
            return [];
        if (!(value.data instanceof _treeListNode_1.QueriesTreeNode || value.data instanceof _treeListNode_1.TreeQueryNode))
            return [];
        var result = value.data.getActions(value);
        this._customizeDBSchemaTreeListActions && this._customizeDBSchemaTreeListActions(value.data, result);
        return result;
    };
    DBSchemaTreeListController.prototype.canSelect = function (value) {
        return true;
    };
    return DBSchemaTreeListController;
}(_treelistController_1.TreeListController));
exports.DBSchemaTreeListController = DBSchemaTreeListController;


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(1);
var editorsInfo_1 = __webpack_require__(6);
var utils_2 = __webpack_require__(9);
var _treelistController_1 = __webpack_require__(10);
var _treelistItem_1 = __webpack_require__(10);
var localization_utils_1 = __webpack_require__(1);
var ParametersTreeListItemBase = (function (_super) {
    __extends(ParametersTreeListItemBase, _super);
    function ParametersTreeListItemBase(parameter) {
        var _this = _super.call(this) || this;
        _this.editor = editorsInfo_1.editorTemplates.getEditor('commonCollection');
        _this.isList = false;
        _this.contenttemplate = 'dx-treelist-accordion-contenttemplate-custom-with-actions';
        _this.actionsTemplate = 'dx-treelist-item-actions';
        _this.dataSourceParameter = ko.observable(parameter);
        _this._name = parameter.name;
        _this._displayName = parameter.displayName;
        return _this;
    }
    Object.defineProperty(ParametersTreeListItemBase.prototype, "name", {
        get: function () {
            return this._name();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ParametersTreeListItemBase.prototype, "displayName", {
        get: function () {
            return this._displayName || this.name;
        },
        enumerable: true,
        configurable: true
    });
    return ParametersTreeListItemBase;
}(utils_1.Disposable));
exports.ParametersTreeListItemBase = ParametersTreeListItemBase;
var ParametersTreeListItem = (function (_super) {
    __extends(ParametersTreeListItem, _super);
    function ParametersTreeListItem(parameter, parent) {
        var _this = _super.call(this, parameter) || this;
        _this.parent = parent;
        return _this;
    }
    ParametersTreeListItem.prototype.query = function () {
        return this.parent.query();
    };
    return ParametersTreeListItem;
}(ParametersTreeListItemBase));
exports.ParametersTreeListItem = ParametersTreeListItem;
var ParametersTreeListRootItemBase = (function () {
    function ParametersTreeListRootItemBase(name) {
        this.isList = true;
        this.specifics = 'List';
        this.visible = ko.observable(true);
        this.name = this.displayName = name;
        this.parameters = ko.observableArray([]);
    }
    ParametersTreeListRootItemBase.prototype.removeChild = function (parameter) {
        this.parameters.remove(parameter);
    };
    return ParametersTreeListRootItemBase;
}());
exports.ParametersTreeListRootItemBase = ParametersTreeListRootItemBase;
var ParametersTreeListRootItem = (function (_super) {
    __extends(ParametersTreeListRootItem, _super);
    function ParametersTreeListRootItem(query) {
        var _this = _super.call(this, query.name()) || this;
        _this._query = query;
        return _this;
    }
    ParametersTreeListRootItem.prototype.query = function () {
        return this._query;
    };
    return ParametersTreeListRootItem;
}(ParametersTreeListRootItemBase));
exports.ParametersTreeListRootItem = ParametersTreeListRootItem;
var ParametersTreeListController = (function (_super) {
    __extends(ParametersTreeListController, _super);
    function ParametersTreeListController(rootItems, createNewParameter) {
        var _this = _super.call(this) || this;
        _this._createNewParameter = createNewParameter;
        _this._rootItems = rootItems;
        return _this;
    }
    ParametersTreeListController.prototype.hasItems = function (item) {
        return item.isList;
    };
    ParametersTreeListController.prototype.getActions = function (treeListItem) {
        var _this = this;
        var actions = [];
        if (!treeListItem.data)
            return actions;
        if (treeListItem.data.query().type() === utils_2.SqlQueryType.storedProcQuery) {
            return treeListItem.data.isList ? [] : [_treelistItem_1.treeListEditAction];
        }
        if (treeListItem.data.isList) {
            var item = treeListItem.data;
            actions.push({
                clickAction: function () {
                    return item.parameters.push(new ParametersTreeListItem(_this._createNewParameter(item.name, item.parameters()), item));
                },
                imageClassName: 'dxrd-image-add',
                imageTemplateName: 'dxrd-svg-operations-add',
                text: localization_utils_1.getLocalization('Add parameter', 'AnalyticsCoreStringId.FieldListActions_AddParameter')
            });
        }
        else {
            var parameter = treeListItem.data;
            actions.push({
                clickAction: function () {
                    parameter.parent.removeChild(parameter);
                },
                imageClassName: 'dxrd-image-recycle-bin',
                imageTemplateName: 'dxrd-svg-operations-recycle_bin',
                text: localization_utils_1.getLocalization('Remove parameter', 'DataAccessUIStringId.Button_Remove'),
            });
            actions.push(_treelistItem_1.treeListEditAction);
        }
        return actions;
    };
    ParametersTreeListController.prototype.canSelect = function (value) {
        return true;
    };
    return ParametersTreeListController;
}(_treelistController_1.TreeListController));
exports.ParametersTreeListController = ParametersTreeListController;


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var localization_utils_1 = __webpack_require__(1);
var _localizationStringIds_1 = __webpack_require__(0);
var _popupService_1 = __webpack_require__(0);
var _infoMessageHelpers_1 = __webpack_require__(0);
var _masterDetailEditorPopupManager_1 = __webpack_require__(135);
var _arrayutils_1 = __webpack_require__(0);
var _masterQuerySurface_1 = __webpack_require__(136);
var MasterDetailEditor = (function () {
    function MasterDetailEditor(relations, resultSet, saveCallBack) {
        var _this = this;
        this.isValid = ko.observable(true);
        this.popupVisible = ko.observable(false);
        this.loadPanelVisible = ko.observable(false);
        this.buttonItems = [];
        this.masterQueries = ko.observableArray();
        this.popupService = new _popupService_1.PopupService();
        this.save = function () {
            var emptyFieldsExist = relations().some(function (relation) {
                return !relation.detailQuery() || !relation.masterQuery() ||
                    relation.keyColumns().some(function (column) { return (!column.detailColumn() || !column.masterColumn()); });
            });
            if (emptyFieldsExist) {
                _infoMessageHelpers_1.ShowMessage(localization_utils_1.getLocalization('Some fields are empty. Please fill all empty fields or remove the corresponding conditions to proceed.', 'DataAccessUIStringId.JoinEditorFillAllFieldsException'));
            }
            else {
                saveCallBack().done(function () { _this.popupVisible(false); });
            }
        };
        this.createRelation = function (target) {
            var popupItems = resultSet.tables()
                .filter(function (table) { return table.tableName() !== target.queryName; })
                .map(function (table) { return { name: table.tableName() }; });
            return {
                data: new _masterDetailEditorPopupManager_1.MasterDetailEditorPopupManager(target, _this.popupService, 'create', popupItems),
                templateName: 'dx-filtereditor-create'
            };
        };
        this.setColumn = function (target) {
            var table = _arrayutils_1.getFirstItemByPropertyValue(resultSet.tables(), 'tableName', target.queryName);
            return {
                data: new _masterDetailEditorPopupManager_1.MasterDetailEditorPopupManager(target, _this.popupService, 'setColumn', table ? table.columns() : []),
                templateName: 'dx-masterdetail-editor-setColumn'
            };
        };
        this._createMainPopupButtons();
        var masterQueries = {};
        resultSet.tables().forEach(function (table) {
            masterQueries[table.tableName()] = new _masterQuerySurface_1.MasterQuerySurface(table.tableName(), relations);
        });
        relations().forEach(function (relation) {
            masterQueries[relation.masterQuery()] = masterQueries[relation.masterQuery()] || new _masterQuerySurface_1.MasterQuerySurface(relation.masterQuery(), relations);
            masterQueries[relation.masterQuery()].add(relation);
        });
        this.masterQueries($.map(masterQueries, function (value) { return value; }));
    }
    MasterDetailEditor.prototype._createMainPopupButtons = function () {
        var self = this;
        this.buttonItems = [
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: localization_utils_1.getLocalization('Save', _localizationStringIds_1.StringId.DataAccessBtnOK), onClick: function () { self.save(); } } },
            { toolbar: 'bottom', location: 'after', widget: 'dxButton', options: { text: localization_utils_1.getLocalization('Cancel', _localizationStringIds_1.StringId.DataAccessBtnCancel), onClick: function () { self.popupVisible(false); } } }
        ];
    };
    MasterDetailEditor.prototype.title = function () {
        return localization_utils_1.getLocalization('Master-Detail Relation Editor', _localizationStringIds_1.StringId.MasterDetailRelationsEditor);
    };
    return MasterDetailEditor;
}());
exports.MasterDetailEditor = MasterDetailEditor;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var MasterDetailEditorPopupManager = (function () {
    function MasterDetailEditorPopupManager(target, popupService, action, popupItems) {
        var _this = this;
        this.showPopup = function (_, element) {
            if (_this._popupService['subscription']) {
                _this._popupService['subscription'].dispose();
            }
            _this._popupService.title('');
            _this._updateActions(_this.target);
            _this._popupService.target(element);
            _this._popupService.visible(true);
        };
        this.target = target;
        this._action = action;
        this._popupService = popupService;
        this._popupItems = popupItems;
    }
    MasterDetailEditorPopupManager.prototype._updateActions = function (viewModel) {
        var _this = this;
        this._popupService['subscription'] = this._popupService.visible.subscribe(function (newVal) {
            _this.target.isSelected && _this.target.isSelected(newVal);
        });
        this._popupService.data({
            data: this._popupItems,
            template: 'dx-filtereditor-popup-common',
            click: function (data) {
                viewModel[_this._action](data);
                _this._popupService.visible(false);
            }
        });
    };
    return MasterDetailEditorPopupManager;
}());
exports.MasterDetailEditorPopupManager = MasterDetailEditorPopupManager;


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var masterDetailRelation_1 = __webpack_require__(51);
var _masterDetailRelationSurface_1 = __webpack_require__(137);
var _arrayutils_1 = __webpack_require__(0);
var _getNameHelpers_1 = __webpack_require__(0);
var MasterQuerySurface = (function () {
    function MasterQuerySurface(masterQueryName, relations) {
        var _this = this;
        this.relations = ko.observableArray();
        this.queryName = masterQueryName;
        this.add = function (relation) {
            _this.relations.push(new _masterDetailRelationSurface_1.MasterDetailRelationSurface(relation, _this));
        };
        this.create = function (detailQueryItem) {
            var newRelation = new masterDetailRelation_1.MasterDetailRelation({ '@Master': _this.queryName, '@Detail': detailQueryItem.name });
            if (_arrayutils_1.getFirstItemByPropertyValue(_this.relations(), 'relationName', newRelation.name())) {
                newRelation.name(_getNameHelpers_1.getUniqueName(_this.relations().map(function (item) { return item.relationName(); }), newRelation.name() + '_'));
            }
            newRelation.createKeyColumn();
            _this.add(newRelation);
            relations.push(newRelation);
        };
        this.remove = function (relationSurface) {
            _this.relations.remove(relationSurface);
            relations.remove(function (item) { return item.name === relationSurface.relationName; });
        };
    }
    return MasterQuerySurface;
}());
exports.MasterQuerySurface = MasterQuerySurface;


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var _keyColumnSurface_1 = __webpack_require__(138);
var MasterDetailRelationSurface = (function () {
    function MasterDetailRelationSurface(relation, parent) {
        var _this = this;
        this.isEditable = ko.observable(false);
        this.relationName = relation.name;
        this.keyColumns = ko.pureComputed(function () {
            return relation.keyColumns().map(function (item) {
                return {
                    master: new _keyColumnSurface_1.KeyColumnSurface(item.masterColumn, relation.masterQuery(), true),
                    detail: new _keyColumnSurface_1.KeyColumnSurface(item.detailColumn, relation.detailQuery(), false)
                };
            });
        });
        this.create = function () {
            relation.createKeyColumn();
        };
        this.remove = function (data) {
            relation.keyColumns.remove(function (item) { return item.masterColumn === data.master.column && item.detailColumn === data.detail.column; });
            if (relation.keyColumns().length === 0)
                parent.remove(_this);
        };
    }
    return MasterDetailRelationSurface;
}());
exports.MasterDetailRelationSurface = MasterDetailRelationSurface;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var localization_utils_1 = __webpack_require__(1);
var KeyColumnSurface = (function () {
    function KeyColumnSurface(column, queryName, _isMaster) {
        if (_isMaster === void 0) { _isMaster = false; }
        var _this = this;
        this._isMaster = _isMaster;
        this.getTitle = function () { return _this._isMaster ? localization_utils_1.getLocalization('Master Query', 'AnalyticsCoreStringId.Wizard_MasterDetailRelationship_MasterQuery') : localization_utils_1.getLocalization('Detail Query', 'AnalyticsCoreStringId.Wizard_MasterDetailRelationship_DetailQuery'); };
        this.isSelected = ko.observable(false);
        this.selectColumnText = function () { return localization_utils_1.getLocalization('<Select a Column>', 'DataAccessUIStringId.JoinEditorEmptyColumnText'); };
        this.column = column;
        this.queryName = queryName;
        this.setColumn = function (resultColumn) {
            _this.column(resultColumn.name());
        };
    }
    return KeyColumnSurface;
}());
exports.KeyColumnSurface = KeyColumnSurface;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var pageIterator_1 = __webpack_require__(37);
var pageFactory_1 = __webpack_require__(39);
var pageId_1 = __webpack_require__(5);
var chooseDataSourceTypePage_1 = __webpack_require__(36);
var popupWizard_1 = __webpack_require__(42);
var _utils_1 = __webpack_require__(0);
var localization_utils_1 = __webpack_require__(1);
var chooseJsonSourcePage_1 = __webpack_require__(40);
var chooseJsonConnectionPage_1 = __webpack_require__(55);
var chooseJsonSchemaPage_1 = __webpack_require__(56);
var configureObjectDataSourceParametersPage_1 = __webpack_require__(80);
var configureQueryPage_1 = __webpack_require__(24);
var chooseSqlConnectionPage_1 = __webpack_require__(54);
var configureParametersPage_1 = __webpack_require__(130);
var _DataSourceWizardOptionsBase = (function () {
    function _DataSourceWizardOptionsBase() {
        this.connectionStrings = {
            json: ko.observableArray([]),
            sql: ko.observableArray([])
        };
        this.callbacks = {};
        this.rtl = false;
        this.disableCustomSql = false;
        this.wizardSettings = new DataSourceWizardSettings().createDefault();
        this.allowCreateNewJsonConnection = false;
    }
    Object.defineProperty(_DataSourceWizardOptionsBase.prototype, "jsonDataSourceAvailable", {
        get: function () {
            return this.wizardSettings.enableJsonDataSource && (this.allowCreateNewJsonConnection || (ko.unwrap(this.connectionStrings.json) || []).length > 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_DataSourceWizardOptionsBase.prototype, "sqlDataSourceAvailable", {
        get: function () {
            return this.wizardSettings.enableSqlDataSource && (ko.unwrap(this.connectionStrings.sql) || []).length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_DataSourceWizardOptionsBase.prototype, "objectDataSourceAvailable", {
        get: function () {
            return this.wizardSettings.enableObjectDataSource;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(_DataSourceWizardOptionsBase.prototype, "canCreateDataSource", {
        get: function () {
            return this.jsonDataSourceAvailable || this.sqlDataSourceAvailable || this.objectDataSourceAvailable;
        },
        enumerable: true,
        configurable: true
    });
    return _DataSourceWizardOptionsBase;
}());
exports._DataSourceWizardOptionsBase = _DataSourceWizardOptionsBase;
var _DataSourceWizardOptions = (function (_super) {
    __extends(_DataSourceWizardOptions, _super);
    function _DataSourceWizardOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return _DataSourceWizardOptions;
}(_DataSourceWizardOptionsBase));
exports._DataSourceWizardOptions = _DataSourceWizardOptions;
var DataSourceWizardSettings = (function () {
    function DataSourceWizardSettings() {
    }
    DataSourceWizardSettings.prototype.createDefault = function (settings) {
        var newSettings = { enableJsonDataSource: true, enableSqlDataSource: true, enableObjectDataSource: true };
        if (!settings)
            return newSettings;
        if (settings.enableJsonDataSource !== undefined)
            newSettings.enableJsonDataSource = settings.enableJsonDataSource;
        if (settings.enableSqlDataSource !== undefined)
            newSettings.enableSqlDataSource = settings.enableSqlDataSource;
        if (settings.enableObjectDataSource != undefined)
            newSettings.enableObjectDataSource = settings.enableObjectDataSource;
        return newSettings;
    };
    return DataSourceWizardSettings;
}());
exports.DataSourceWizardSettings = DataSourceWizardSettings;
var DataSourceWizardPageIterator = (function (_super) {
    __extends(DataSourceWizardPageIterator, _super);
    function DataSourceWizardPageIterator(pageFactory, stateManager, _dataSourceWizardOptions) {
        var _this = _super.call(this, pageFactory, stateManager) || this;
        _this._dataSourceWizardOptions = _dataSourceWizardOptions;
        return _this;
    }
    DataSourceWizardPageIterator.prototype.getNextPageId = function (pageId) {
        if (!pageId && this._dataSourceWizardOptions.jsonDataSourceAvailable && this._dataSourceWizardOptions.sqlDataSourceAvailable) {
            return pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage;
        }
        else if (!pageId) {
            return this.getNextPageId(pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage);
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Sql) {
            return pageId_1.SqlDataSourceWizardPageId.ChooseConnectionPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Json && this._dataSourceWizardOptions.connectionStrings.json().length > 0) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseConnectionPage;
        }
        else if (this._dataSourceWizardOptions.allowCreateNewJsonConnection && pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Json) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage;
        }
        else if (pageId === pageId_1.JsonDataSourceWizardPageId.ChooseConnectionPage && this._getCurrentState().jsonDataSourceWizard.connectionName) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage;
        }
        else if (this._dataSourceWizardOptions.allowCreateNewJsonConnection && pageId === pageId_1.JsonDataSourceWizardPageId.ChooseConnectionPage && !this._getCurrentState().jsonDataSourceWizard.connectionName) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage;
        }
        else if (pageId === pageId_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage;
        }
        else if (pageId === pageId_1.SqlDataSourceWizardPageId.ChooseConnectionPage && this._getCurrentState().sqlDataSourceWizard.name) {
            return pageId_1.SqlDataSourceWizardPageId.ConfigureQueryPage;
        }
        else if (pageId === pageId_1.SqlDataSourceWizardPageId.ConfigureQueryPage && this._getCurrentState().sqlDataSourceWizard.sqlDataSourceJSON) {
            return pageId_1.SqlDataSourceWizardPageId.ConfigureParametersPage;
        }
    };
    return DataSourceWizardPageIterator;
}(pageIterator_1.PageIterator));
exports.DataSourceWizardPageIterator = DataSourceWizardPageIterator;
var DataSourceWizard = (function (_super) {
    __extends(DataSourceWizard, _super);
    function DataSourceWizard(pageFactory, _wizardOptions) {
        var _this = _super.call(this, pageFactory, _wizardOptions.callbacks.finishCallback) || this;
        _this._wizardOptions = _wizardOptions;
        _this._extendCssClass = 'dxrd-sqldatasource-wizard';
        _this.title = localization_utils_1.getLocalization('Data Source Wizard', 'AnalyticsCoreStringId.DSWizard_Title');
        return _this;
    }
    DataSourceWizard.prototype.initialize = function (state, createIterator) {
        var _this = this;
        if (createIterator === void 0) { createIterator = function (pageFactory, stateManager) { return new DataSourceWizardPageIterator(pageFactory, stateManager, _this._wizardOptions); }; }
        if (this._wizardOptions.sqlDataSourceAvailable || !_utils_1.isEmptyObject(state.sqlDataSourceWizard)) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Sql;
        }
        else if (this._wizardOptions.jsonDataSourceAvailable || state.jsonDataSourceWizard.jsonSource) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Json;
        }
        _super.prototype.initialize.call(this, state, createIterator);
    };
    DataSourceWizard.prototype.canRunWizard = function () {
        return this._wizardOptions.jsonDataSourceAvailable || this._wizardOptions.sqlDataSourceAvailable;
    };
    return DataSourceWizard;
}(popupWizard_1.PopupWizard));
exports.DataSourceWizard = DataSourceWizard;
function _registerDataSourceWizardPages(factory, dataSourceWizardOptions) {
    if (factory === void 0) { factory = new pageFactory_1.PageFactory(); }
    chooseDataSourceTypePage_1._registerChooseDataSourceTypePage(factory, dataSourceWizardOptions);
    chooseJsonSourcePage_1._registerChooseJsonSourcePage(factory, dataSourceWizardOptions.requestWrapper, dataSourceWizardOptions.callbacks.getItemsProviderCallback);
    chooseJsonConnectionPage_1._registerChooseJsonConnectionPage(factory, dataSourceWizardOptions);
    chooseJsonSchemaPage_1._registerChooseJsonSchemaPage(factory, dataSourceWizardOptions.requestWrapper, dataSourceWizardOptions.callbacks);
    configureObjectDataSourceParametersPage_1._registerConfigureObjectDataSourceParametersPage(factory, dataSourceWizardOptions.callbacks.getItemsProviderCallback);
    configureQueryPage_1._registerConfigureQueryPage(factory, dataSourceWizardOptions);
    chooseSqlConnectionPage_1._registerChooseSqlConnectionPage(factory, dataSourceWizardOptions.connectionStrings.sql);
    configureParametersPage_1._registerConfigureParametersPage(factory, dataSourceWizardOptions.requestWrapper);
    return factory;
}
exports._registerDataSourceWizardPages = _registerDataSourceWizardPages;
function _createDataSourceWizard(factory, dataSourceWizardOptions) {
    if (factory === void 0) { factory = new pageFactory_1.PageFactory(); }
    factory = _registerDataSourceWizardPages(factory, dataSourceWizardOptions);
    return new DataSourceWizard(factory, dataSourceWizardOptions);
}
exports._createDataSourceWizard = _createDataSourceWizard;


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var pageFactory_1 = __webpack_require__(39);
var FullscreenWizardPageFactory = (function (_super) {
    __extends(FullscreenWizardPageFactory, _super);
    function FullscreenWizardPageFactory() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.metadata = {};
        return _this;
    }
    FullscreenWizardPageFactory.prototype.registerMetadata = function (pageId, metadata) {
        _super.prototype.registerMetadata.call(this, pageId, metadata);
    };
    FullscreenWizardPageFactory.prototype.getMetadata = function (key) {
        return _super.prototype.getMetadata.call(this, key);
    };
    return FullscreenWizardPageFactory;
}(pageFactory_1.PageFactory));
exports.FullscreenWizardPageFactory = FullscreenWizardPageFactory;


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var fullscreenWizardPage_1 = __webpack_require__(38);
var specifyJsonConnectionPage_1 = __webpack_require__(125);
var pageId_1 = __webpack_require__(5);
var chooseJsonSourcePage_1 = __webpack_require__(40);
var localization_utils_1 = __webpack_require__(1);
var chooseJsonSchemaPage_1 = __webpack_require__(56);
var SpecifyJsonDataSourceSettingsPage = (function (_super) {
    __extends(SpecifyJsonDataSourceSettingsPage, _super);
    function SpecifyJsonDataSourceSettingsPage(_dataSourceWizardOptions) {
        var _this = _super.call(this) || this;
        _this._dataSourceWizardOptions = _dataSourceWizardOptions;
        return _this;
    }
    SpecifyJsonDataSourceSettingsPage.prototype.registerSections = function () {
        if (this._dataSourceWizardOptions.connectionStrings.json().length > 0) {
            specifyJsonConnectionPage_1._registerSpecifyJsonConnectionPage(this._factory, this._dataSourceWizardOptions.connectionStrings.json, this._dataSourceWizardOptions.allowCreateNewJsonConnection, this._dataSourceWizardOptions.callbacks.getItemsProviderCallback);
            this._setSectionPosition(pageId_1.FullscreenDataSourceWizardSectionId.SpecifyJsonConnectionPage, this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.Right : fullscreenWizardPage_1.WizardSectionPosition.Left);
        }
        if (this._dataSourceWizardOptions.allowCreateNewJsonConnection) {
            if (this._dataSourceWizardOptions.connectionStrings.json().length === 0) {
                chooseJsonSourcePage_1._registerChooseJsonSourcePage(this._factory, this._dataSourceWizardOptions.requestWrapper, this._dataSourceWizardOptions.callbacks.getItemsProviderCallback);
                this._setSectionPosition(pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSourcePage, this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.Right : fullscreenWizardPage_1.WizardSectionPosition.Left);
                var meta = this._factory.getMetadata(pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSourcePage);
                meta['disabledText'] = localization_utils_1.getLocalization("To create a data connection, select \"No, I'd like to create a new data connection\".", 'AnalyticsCoreStringId.JsonDSWizard_CreateNewConnectionPage_Placeholder');
            }
        }
        chooseJsonSchemaPage_1._registerChooseJsonSchemaPage(this._factory, this._dataSourceWizardOptions.requestWrapper, this._dataSourceWizardOptions.callbacks);
        this._setSectionPosition(pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSchemaPage, this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.Left : fullscreenWizardPage_1.WizardSectionPosition.Right);
        var meta = this._factory.getMetadata(pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSchemaPage);
        meta['disabledText'] = localization_utils_1.getLocalization('To select data fields, choose or create a data connection.', 'AnalyticsCoreStringId.JsonDSWizard_ChooseJsonSchemaPage_Placeholder');
    };
    SpecifyJsonDataSourceSettingsPage.prototype.getNextSectionId = function (sectionId) {
        if (!sectionId && this._dataSourceWizardOptions.connectionStrings.json().length > 0) {
            return pageId_1.FullscreenDataSourceWizardSectionId.SpecifyJsonConnectionPage;
        }
        else if (!sectionId) {
            return pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSourcePage;
        }
        else if (this._dataSourceWizardOptions.allowCreateNewJsonConnection) {
            if (sectionId === pageId_1.FullscreenDataSourceWizardSectionId.SpecifyJsonConnectionPage)
                return pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSchemaPage;
            else if (sectionId === pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSourcePage)
                return pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSchemaPage;
        }
        else {
            if (sectionId === pageId_1.FullscreenDataSourceWizardSectionId.SpecifyJsonConnectionPage)
                return pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSchemaPage;
        }
    };
    SpecifyJsonDataSourceSettingsPage.prototype.canNext = function () {
        var section = this._sectionsProcessor.getPageById(pageId_1.FullscreenDataSourceWizardSectionId.ChooseJsonSchemaPage);
        return section && section.page() && section.metadata.canNext(section.page().page);
    };
    return SpecifyJsonDataSourceSettingsPage;
}(fullscreenWizardPage_1.FullscreenWizardPage));
exports.SpecifyJsonDataSourceSettingsPage = SpecifyJsonDataSourceSettingsPage;
function _registerSpecifyJsonDataSourceSettingsPage(factory, dataSourceWizardOptions) {
    factory.registerMetadata(pageId_1.FullscreenDataSourceWizardPageId.SpecifyJsonDataSourceSettingsPage, {
        setState: function (data, state) {
            state.jsonDataSourceWizard.connectionName = data.jsonDataSourceWizard.connectionName;
            state.jsonDataSourceWizard.newConnectionName = data.jsonDataSourceWizard.newConnectionName;
            state.jsonDataSourceWizard.jsonSource = data.jsonDataSourceWizard.jsonSource;
            state.jsonDataSourceWizard.dataSourceName = data.jsonDataSourceWizard.dataSourceName;
            state.jsonDataSourceWizard.jsonScheme = data.jsonDataSourceWizard.jsonScheme;
            state.jsonDataSourceWizard.rootElement = data.jsonDataSourceWizard.rootElement;
        },
        getState: function (state) { return state; },
        resetState: function (state, defaultState) {
            state.jsonDataSourceWizard.connectionName = defaultState.jsonDataSourceWizard.connectionName;
            state.jsonDataSourceWizard.jsonSource = defaultState.jsonDataSourceWizard.jsonSource;
            state.jsonDataSourceWizard.dataSourceName = defaultState.jsonDataSourceWizard.dataSourceName;
            state.jsonDataSourceWizard.newConnectionName = defaultState.jsonDataSourceWizard.newConnectionName;
            state.jsonDataSourceWizard.jsonScheme = defaultState.jsonDataSourceWizard.jsonScheme;
            state.jsonDataSourceWizard.rootElement = defaultState.jsonDataSourceWizard.rootElement;
        },
        create: function () {
            return new SpecifyJsonDataSourceSettingsPage(dataSourceWizardOptions);
        },
        navigationPanelText: localization_utils_1.getLocalization('Specify Data Source Settings', 'AnalyticsCoreStringId.Wizard_SpecifyDataSourceSettingsPage'),
        template: 'dx-wizard-fullscreen-page'
    });
}
exports._registerSpecifyJsonDataSourceSettingsPage = _registerSpecifyJsonDataSourceSettingsPage;


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var fullscreenWizardPage_1 = __webpack_require__(38);
var pageId_1 = __webpack_require__(5);
var dataSourceWizardState_1 = __webpack_require__(12);
var chooseSqlConnectionPage_1 = __webpack_require__(54);
var multiQueryConfigurePage_1 = __webpack_require__(86);
var configureMasterDetailRelationshipsPage_1 = __webpack_require__(88);
var _requestwrapper_1 = __webpack_require__(16);
var multiQueryConfigureParametersPage_1 = __webpack_require__(87);
var localization_utils_1 = __webpack_require__(1);
var _utils_1 = __webpack_require__(0);
var SpecifySqlDataSourceSettingsPage = (function (_super) {
    __extends(SpecifySqlDataSourceSettingsPage, _super);
    function SpecifySqlDataSourceSettingsPage(_dataSourceWizardOptions) {
        var _this = _super.call(this) || this;
        _this._dataSourceWizardOptions = _dataSourceWizardOptions;
        return _this;
    }
    SpecifySqlDataSourceSettingsPage.prototype.getNextSectionId = function (sectionId) {
        if (!sectionId)
            return pageId_1.FullscreenDataSourceWizardSectionId.ChooseSqlConnectionPage;
        else if (sectionId === pageId_1.FullscreenDataSourceWizardSectionId.ChooseSqlConnectionPage && this._stateManager.getCurrentState().sqlDataSourceWizard.name) {
            return pageId_1.FullscreenDataSourceWizardSectionId.ConfigureQueryPage;
        }
        else if (sectionId === pageId_1.FullscreenDataSourceWizardSectionId.ConfigureQueryPage) {
            var sections = [];
            var sqlDataSourceWizardState = this._stateManager.getCurrentState().sqlDataSourceWizard;
            if ((sqlDataSourceWizardState.customQueries || []).length > 0) {
                sections.push(pageId_1.FullscreenDataSourceWizardSectionId.ConfigureQueryParametersPage);
            }
            var sqlDataSourceWrapped = dataSourceWizardState_1._restoreSqlDataSourceFromState(sqlDataSourceWizardState);
            if (sqlDataSourceWrapped.sqlDataSource.queries().length > 1) {
                sections.push(pageId_1.FullscreenDataSourceWizardSectionId.ConfigureMasterDetailRelationshipsPage);
            }
            return sections;
        }
    };
    SpecifySqlDataSourceSettingsPage.prototype.registerSections = function () {
        chooseSqlConnectionPage_1._registerChooseSqlConnectionPage(this._factory, this._dataSourceWizardOptions.connectionStrings.sql);
        multiQueryConfigurePage_1._registerMultiQueryConfigurePage(this._factory, this._dataSourceWizardOptions);
        configureMasterDetailRelationshipsPage_1._registerConfigureMasterDetailRelationshipsPage(this._factory, _requestwrapper_1.wrapRebuildResultSchema(this._dataSourceWizardOptions.callbacks.sqlDataSourceResultSchema));
        multiQueryConfigureParametersPage_1._registerMultiQueryConfigureParametersPage(this._factory, this._dataSourceWizardOptions.requestWrapper);
        var meta = this._factory.getMetadata(pageId_1.FullscreenDataSourceWizardSectionId.ChooseSqlConnectionPage);
        meta.description = localization_utils_1.getLocalization('Choose a data connection.', 'AnalyticsCoreStringId.SqlDSWizard_PageChooseConnection');
        var meta = this._factory.getMetadata(pageId_1.FullscreenDataSourceWizardSectionId.ConfigureQueryPage);
        meta['recreate'] = true;
        meta.description = localization_utils_1.getLocalization('Choose predefined queries and/or create custom queries.', 'AnalyticsCoreStringId.Wizard_Queries_Description');
        meta['required'] = true;
        var meta = this._factory.getMetadata(pageId_1.FullscreenDataSourceWizardSectionId.ConfigureMasterDetailRelationshipsPage);
        meta.description = localization_utils_1.getLocalization('Configure master-detail relationships.', 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureMasterDetailRelations');
        meta['disabledText'] = localization_utils_1.getLocalization('To create a master-detail relationship, select two or more queries.', 'AnalyticsCoreStringId.Wizard_MasterDetailRelationship_Placeholder');
        var meta = this._factory.getMetadata(pageId_1.FullscreenDataSourceWizardSectionId.ConfigureQueryParametersPage);
        meta.description = localization_utils_1.getLocalization('Configure query parameters.', 'AnalyticsCoreStringId.SqlDSWizard_PageConfigureParameters');
        meta['disabledText'] = localization_utils_1.getLocalization('To specify query parameters, select a parameterized stored procedure or create a custom query.', 'AnalyticsCoreStringId.Wizard_ConfigureQueryParameters_Placeholder');
        this._setSectionPosition(pageId_1.FullscreenDataSourceWizardSectionId.ChooseSqlConnectionPage, this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.TopRight : fullscreenWizardPage_1.WizardSectionPosition.TopLeft);
        this._setSectionPosition(pageId_1.FullscreenDataSourceWizardSectionId.ConfigureQueryPage, this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.TopLeft : fullscreenWizardPage_1.WizardSectionPosition.TopRight);
        this._setSectionPosition(pageId_1.FullscreenDataSourceWizardSectionId.ConfigureQueryParametersPage, this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.BottomLeft : fullscreenWizardPage_1.WizardSectionPosition.BottomRight);
        this._setSectionPosition(pageId_1.FullscreenDataSourceWizardSectionId.ConfigureMasterDetailRelationshipsPage, this._dataSourceWizardOptions.rtl ? fullscreenWizardPage_1.WizardSectionPosition.BottomRight : fullscreenWizardPage_1.WizardSectionPosition.BottomLeft);
    };
    return SpecifySqlDataSourceSettingsPage;
}(fullscreenWizardPage_1.FullscreenWizardPage));
exports.SpecifySqlDataSourceSettingsPage = SpecifySqlDataSourceSettingsPage;
function _registerSpecifySqlDataSourceSettingsPage(factory, dataSourceWizardOptions) {
    factory.registerMetadata(pageId_1.FullscreenDataSourceWizardPageId.SpecifySqlDataSourceSettingsPage, {
        setState: function (data, state) {
            state.sqlDataSourceWizard.customQueries = data.sqlDataSourceWizard.customQueries;
            state.sqlDataSourceWizard.name = data.sqlDataSourceWizard.name;
            state.sqlDataSourceWizard.queryName = data.sqlDataSourceWizard.name;
            state.sqlDataSourceWizard.sqlDataSourceJSON = data.sqlDataSourceWizard.sqlDataSourceJSON;
            state.sqlDataSourceWizard.relations = data.sqlDataSourceWizard.relations;
        },
        getState: function (state) { return state; },
        resetState: function (state, defaulState) {
            state.sqlDataSourceWizard = _utils_1.extend(true, {}, defaulState);
        },
        create: function () {
            return new SpecifySqlDataSourceSettingsPage(dataSourceWizardOptions);
        },
        navigationPanelText: localization_utils_1.getLocalization('Specify Data Source Settings', 'AnalyticsCoreStringId.Wizard_SpecifyDataSourceSettingsPage'),
        template: 'dx-wizard-fullscreen-page'
    });
}
exports._registerSpecifySqlDataSourceSettingsPage = _registerSpecifySqlDataSourceSettingsPage;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var popupWizard_1 = __webpack_require__(42);
var fullscreenWizardNavigation_1 = __webpack_require__(144);
var FullscreenWizard = (function (_super) {
    __extends(FullscreenWizard, _super);
    function FullscreenWizard(pageFactory, finishCallback) {
        var _this = _super.call(this, pageFactory, finishCallback) || this;
        _this._extendCssClass = 'dx-wizard-fullscreen';
        _this.navigationPanel = ko.observable(null);
        _this.isVisible.subscribe(function (newValue) {
            if (!newValue) {
                _this.navigationPanel() && _this.navigationPanel().resetAll();
                _this.navigationPanel() && _this.navigationPanel().dispose();
                _this._onCloseCallback && _this._onCloseCallback();
            }
        });
        return _this;
    }
    FullscreenWizard.prototype._onClose = function (callback) {
        this._onCloseCallback = callback;
    };
    FullscreenWizard.prototype.onFinish = function () {
        _super.prototype.onFinish.call(this);
        this.navigationPanel().dispose();
    };
    FullscreenWizard.prototype._initPage = function (page) {
        var _this = this;
        if (page.onChange)
            page.onChange(function () { return _this.navigationPanel()._resetNextPages(page.pageId); });
        return _super.prototype._initPage.call(this, page);
    };
    FullscreenWizard.prototype._onResetPage = function (page) {
        this.navigationPanel()._reset(page.pageId);
    };
    FullscreenWizard.prototype.start = function (finishCallback) {
        if (finishCallback)
            this['_finishCallback'] = finishCallback;
        this.navigationPanel() && this.navigationPanel().resetAll();
        this.navigationPanel() && this.navigationPanel().dispose();
        this.navigationPanel(new fullscreenWizardNavigation_1.WizardNavigationPanel(this));
        _super.prototype.start.call(this);
    };
    FullscreenWizard.prototype._pageDescription = function () {
        var currentStep = this.navigationPanel()._steps.filter(function (x) { return x.isActive(); })[0];
        if (currentStep) {
            return currentStep.text;
        }
        else {
            return this.pageFactory.getMetadata(this._currentPage().pageId).description;
        }
    };
    FullscreenWizard.prototype._description = function () {
        return '';
    };
    return FullscreenWizard;
}(popupWizard_1.PopupWizard));
exports.FullscreenWizard = FullscreenWizard;


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var utils_1 = __webpack_require__(1);
var WizardNavigationPanel = (function (_super) {
    __extends(WizardNavigationPanel, _super);
    function WizardNavigationPanel(wizard) {
        var _this = _super.call(this) || this;
        _this._steps = [];
        _this._disposables.push(wizard._currentPage.subscribe(function (newPage) {
            var currentStep = _this._steps.filter(function (step) { return step.pageIds.some(function (x) { return x === newPage.pageId; }); })[0];
            if (currentStep) {
                currentStep.currentPageId = newPage.pageId;
                currentStep.disabled(false);
                _this._setStepVisible(currentStep.stepIndex);
            }
        }));
        Object.keys(wizard.pageFactory.metadata).forEach(function (pageId) {
            var item = wizard.pageFactory.metadata[pageId];
            var navigationItem = _this._steps.filter(function (x) { return x.text === item.navigationPanelText; })[0];
            if (navigationItem) {
                navigationItem.pageIds.push(pageId);
            }
            else {
                var navigationStep = {
                    text: item.navigationPanelText,
                    pageIds: [pageId],
                    currentPageId: null,
                    stepIndex: _this._steps.length,
                    disabled: ko.observable(true),
                    visible: ko.observable(true)
                };
                _this._disposables.push(navigationStep.isActive = ko.computed(function () {
                    return wizard._currentPage() && navigationStep.currentPageId === wizard._currentPage().pageId;
                }));
                navigationStep.clickAction = function () {
                    if (!navigationStep.isActive())
                        wizard.goToPage(navigationStep.currentPageId);
                };
                _this._steps.push(navigationStep);
            }
        });
        _this._disposables.push(_this.isVisible = ko.computed(function () {
            return _this._steps.filter(function (step) { return step.visible(); }).length > 1;
        }));
        return _this;
    }
    WizardNavigationPanel.prototype.resetAll = function () {
        this._steps.forEach(function (step) {
            step.disabled(true);
        });
    };
    WizardNavigationPanel.prototype._currentStep = function (pageId) {
        return this._steps.filter(function (x) { return x.currentPageId === pageId; })[0];
    };
    WizardNavigationPanel.prototype._reset = function (pageId) {
        var currentStep = this._currentStep(pageId);
        currentStep && currentStep.disabled(true);
    };
    WizardNavigationPanel.prototype._resetNextPages = function (pageId) {
        var currentStep = this._currentStep(pageId);
        if (!currentStep)
            return;
        for (var i = currentStep.stepIndex + 1; i < this._steps.length; i++) {
            this._steps[i].disabled(true);
        }
    };
    WizardNavigationPanel.prototype._setStepVisible = function (currentPageIndex) {
        var previousSteps = this._steps.filter(function (_, index) { return index < currentPageIndex; });
        if (previousSteps.length > 0 && !previousSteps.some(function (step) { return !step.disabled(); })) {
            previousSteps.forEach(function (step) { return step.visible(false); });
        }
    };
    return WizardNavigationPanel;
}(utils_1.Disposable));
exports.WizardNavigationPanel = WizardNavigationPanel;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var editor_1 = __webpack_require__(6);
var UndoEditor = (function (_super) {
    __extends(UndoEditor, _super);
    function UndoEditor(info, level, parentDisabled, textToSearch) {
        return _super.call(this, info, level, parentDisabled, textToSearch) || this;
    }
    UndoEditor.prototype.generateValue = function (undoEngine) {
        var _this = this;
        if (!this.undoValue) {
            this._disposables.push(this.undoValue = ko.computed({
                read: function () {
                    return _this.value();
                },
                write: function (val) {
                    undoEngine().start();
                    _this.value(val);
                    undoEngine().end();
                }
            }));
        }
        return this.undoValue;
    };
    return UndoEditor;
}(editor_1.Editor));
exports.UndoEditor = UndoEditor;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _serializer_1 = __webpack_require__(10);
var _arrayutils_1 = __webpack_require__(0);
var _queryBuilderObjectsProvider_1 = __webpack_require__(43);
var property_1 = __webpack_require__(45);
var criteriaOperator_1 = __webpack_require__(45);
var utils_1 = __webpack_require__(147);
var GroupFilterEditorSerializer = (function (_super) {
    __extends(GroupFilterEditorSerializer, _super);
    function GroupFilterEditorSerializer(_columns) {
        var _this = _super.call(this) || this;
        _this._columns = _columns;
        _this._aggregatePropertyName = function (operand) {
            var itemColumnAggregate = _this._findAggregatedColumn(function (c) { return c.actualName() === operand.propertyName; });
            return itemColumnAggregate ? _this._columnDisplayName(itemColumnAggregate) : operand.propertyName;
        };
        return _this;
    }
    GroupFilterEditorSerializer.prototype._columnDisplayName = function (column) {
        return column.table() + '.' + column.actualName();
    };
    GroupFilterEditorSerializer.prototype._findAggregatedColumn = function (predicate) {
        return _arrayutils_1.find(this._columns(), function (c) { return _queryBuilderObjectsProvider_1.isAggregatedExpression(c) && predicate(c); });
    };
    GroupFilterEditorSerializer.prototype.serializeOperandProperty = function (operand) {
        var _this = this;
        var column = this._findAggregatedColumn(function (c) { return operand.propertyName === _this._columnDisplayName(c); });
        return '[' + (column ? column.actualName() : operand.propertyName) + ']';
    };
    GroupFilterEditorSerializer.prototype.deserialize = function (stringCriteria) {
        var _this = this;
        var operand = criteriaOperator_1.CriteriaOperator.parse(stringCriteria);
        if (operand) {
            utils_1.criteriaForEach(operand, function (operator) {
                if (operator instanceof property_1.OperandProperty) {
                    operator['propertyName'] = _this._aggregatePropertyName(operator);
                }
            });
        }
        return _super.prototype.deserializeOperand.call(this, operand);
    };
    return GroupFilterEditorSerializer;
}(_serializer_1.FilterEditorSerializer));
exports.GroupFilterEditorSerializer = GroupFilterEditorSerializer;


/***/ }),
/* 147 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Criteria.Utils;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var operandParameterSurface_1 = __webpack_require__(172);
var localization_utils_1 = __webpack_require__(1);
var parameterModel_1 = __webpack_require__(57);
var OperandParameterQBSurface = (function (_super) {
    __extends(OperandParameterQBSurface, _super);
    function OperandParameterQBSurface(operator, parent, fieldListProvider, path) {
        var _this = _super.call(this, operator, parent, fieldListProvider, path) || this;
        _this.createParameter = function () {
            if (_this.canCreateParameters) {
                _this.model.parameterName = _this.parameterName();
                _this._createParameter(_this.parameterName(), _this._parameterType);
                _this.helper.onChange();
            }
        };
        _this._parameterName = ko.observable('');
        _this.isEditable = ko.observable(false);
        _this.defaultDisplay = OperandParameterQBSurface.defaultDisplay;
        _this._parameterName(ko.unwrap(operator.parameterName));
        _this.canCreateParameters = _this.helper.canCreateParameters;
        _this.fieldsOptions = parent.leftPart.fieldsOptions;
        _this.parameterName = ko.pureComputed({
            read: function () {
                return _this._parameterName() || (_this.canCreateParameters && OperandParameterQBSurface.defaultDisplay() || '');
            },
            write: function (newVal) {
                if (newVal !== OperandParameterQBSurface.defaultDisplay() && newVal) {
                    _this.model.parameterName = ko.unwrap(newVal);
                    _this._parameterName(_this.model.parameterName);
                }
            }
        });
        if (_this.canCreateParameters && !_this.isDefaultTextDisplayed() && !ko.unwrap(_this.fieldListProvider).hasParameter(operator.parameterName)) {
            _this.createParameter();
        }
        return _this;
    }
    Object.defineProperty(OperandParameterQBSurface.prototype, "_parameterType", {
        get: function () {
            return this.fieldsOptions() && this.fieldsOptions().selected() && this.fieldsOptions().selected()['dataType'] || 'System.String';
        },
        enumerable: true,
        configurable: true
    });
    OperandParameterQBSurface.prototype._createParameter = function (name, dataType) {
        if (name !== '' && name !== OperandParameterQBSurface.defaultDisplay() && this.helper.parameters().filter(function (parameter) { return parameter.name() === name; }).length === 0) {
            var parameter = new parameterModel_1.ParameterViewModel({ '@Name': name, '@Type': dataType });
            this.helper.newParameters.push(parameter);
        }
    };
    OperandParameterQBSurface.prototype.isDefaultTextDisplayed = function () {
        return this.parameterName() === OperandParameterQBSurface.defaultDisplay();
    };
    OperandParameterQBSurface.defaultDisplay = function () { return localization_utils_1.getLocalization('Create new parameter', 'AnalyticsCoreStringId.FilterEditor_Operand_CreateNewParameter'); };
    return OperandParameterQBSurface;
}(operandParameterSurface_1.OperandParameterSurface));
exports.OperandParameterQBSurface = OperandParameterQBSurface;


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var operandPropertySurface_1 = __webpack_require__(172);
var OperandPropertyQBSurface = (function (_super) {
    __extends(OperandPropertyQBSurface, _super);
    function OperandPropertyQBSurface(operator, parent, fieldListProvider, path) {
        return _super.call(this, operator, parent, fieldListProvider, path) || this;
    }
    OperandPropertyQBSurface.prototype._updateSpecifics = function () {
        OperandPropertyQBSurface.updateSpecifics(this);
    };
    OperandPropertyQBSurface.updateSpecifics = function (propertySurface) {
        var fieldList = ko.unwrap(propertySurface.fieldListProvider);
        if (fieldList && fieldList.getColumnInfo) {
            var item = fieldList.getColumnInfo(propertySurface.propertyName());
            if (item) {
                propertySurface.specifics(item.specifics.toLowerCase());
                propertySurface.dataType(item.dataType);
                var _fieldsOptions = ko.unwrap(propertySurface.fieldsOptions);
                if (_fieldsOptions)
                    _fieldsOptions.selected(item);
            }
        }
    };
    return OperandPropertyQBSurface;
}(operandPropertySurface_1.OperandPropertySurface));
exports.OperandPropertyQBSurface = OperandPropertyQBSurface;


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var helper_1 = __webpack_require__(6);
var _addon_1 = __webpack_require__(10);
var _operandParameterQBSurface_1 = __webpack_require__(148);
var _operandPropertyQBSurface_1 = __webpack_require__(149);
var parameterModelMeta_1 = __webpack_require__(46);
var utils_1 = __webpack_require__(147);
var parameter_1 = __webpack_require__(45);
var QBFilterEditorHelper = (function (_super) {
    __extends(QBFilterEditorHelper, _super);
    function QBFilterEditorHelper(parametersMode) {
        var _this = _super.call(this) || this;
        _this.handlers.changeParameter = function (criteria, popupService) {
            return {
                data: new _addon_1.FilterEditorAddOn(criteria, popupService, 'changeParameter', 'items', 'dxqb-filtereditor-parameterspopup'),
                templateName: 'dxqb-filtereditor-changeparameter'
            };
        };
        _this.mapper.Parameter = _operandParameterQBSurface_1.OperandParameterQBSurface;
        _this.mapper.Property = _operandPropertyQBSurface_1.OperandPropertyQBSurface;
        if (parametersMode === parameterModelMeta_1.ParametersMode.ReadWrite) {
            _this.canCreateParameters = true;
            _this.newParameters = ko.observableArray([]);
            _this.onEditorFocusOut = function (criteria) {
                if (!criteria)
                    return;
                var parameters = _this.newParameters();
                var usesParameters = [];
                utils_1.criteriaForEach(criteria, function (child) {
                    if (child instanceof parameter_1.OperandParameter) {
                        var parameter = parameters.filter(function (x) { return x.name() === child.parameterName; })[0];
                        if (parameter)
                            usesParameters.push(parameter);
                    }
                });
                if (usesParameters.length === 0) {
                    _this.newParameters.splice(0);
                    return;
                }
                var uselessParameters = parameters.filter(function (x) { return usesParameters.indexOf(x) === -1; });
                for (var i = 0; i < uselessParameters.length; i++) {
                    var parameterIndex = parameters.indexOf(uselessParameters[i]);
                    if (parameterIndex !== -1)
                        parameters.splice(parameterIndex, 1);
                }
                _this.newParameters.valueHasMutated();
            };
            _this.onClosing = function () {
                _this.newParameters([]);
            };
        }
        _this.canSelectLists = false;
        _this.getDisplayPropertyName = function () { return $.Deferred().resolve('').promise(); };
        return _this;
    }
    return QBFilterEditorHelper;
}(helper_1.FilterEditorHelper));
exports.QBFilterEditorHelper = QBFilterEditorHelper;
exports.QBFilterEditorHelperDefault = QBFilterEditorHelper;
function _setQBFilterEditorHelperDefault(helperType) {
    exports.QBFilterEditorHelperDefault = helperType;
}
exports._setQBFilterEditorHelperDefault = _setQBFilterEditorHelperDefault;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var filtereditoroptions_1 = __webpack_require__(6);
var _qbFilterEditorHelper_1 = __webpack_require__(150);
var parameterModelMeta_1 = __webpack_require__(46);
var parameter_1 = __webpack_require__(45);
var QBFilterStringOptions = (function (_super) {
    __extends(QBFilterStringOptions, _super);
    function QBFilterStringOptions(filterString, dataMember, disabled, title) {
        return _super.call(this, filterString, dataMember, disabled, title) || this;
    }
    QBFilterStringOptions.prototype.initializeFilterStringHelper = function (parameters, parametersMode, serializer) {
        var _this = this;
        var helper = new _qbFilterEditorHelper_1.QBFilterEditorHelperDefault(parametersMode);
        helper.canChoiceParameters = parametersMode !== parameterModelMeta_1.ParametersMode.Disabled;
        if (serializer) {
            helper.serializer = serializer;
        }
        if (parametersMode === parameterModelMeta_1.ParametersMode.ReadWrite) {
            helper.parameters = ko.computed(function () { return [].concat(parameters(), helper.newParameters()); });
            helper.onSave = function (operandProperty) {
                var newParameters = helper.newParameters();
                parameters.push.apply(parameters, newParameters);
                helper.newParameters([]);
            };
        }
        else {
            if (parametersMode === parameterModelMeta_1.ParametersMode.Read)
                helper.parameters = parameters;
            var oldCheckRightPart = helper.criteriaTreeValidator._checkRightPart;
            helper.criteriaTreeValidator._checkRightPart = function (criteriaOperator) {
                if (!(criteriaOperator instanceof parameter_1.OperandParameter))
                    return oldCheckRightPart.apply(_this, [criteriaOperator]);
                if (parametersMode === parameterModelMeta_1.ParametersMode.Disabled) {
                    return false;
                }
                else if (parametersMode === parameterModelMeta_1.ParametersMode.Read) {
                    var parameterName = criteriaOperator.parameterName;
                    return parameters.peek().filter(function (x) { return x.name() === parameterName; }).length !== 0;
                }
            };
        }
        this.helper = helper;
    };
    return QBFilterStringOptions;
}(filtereditoroptions_1.FilterStringOptions));
exports.QBFilterStringOptions = QBFilterStringOptions;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var columnExpression_1 = __webpack_require__(60);
var _arrayutils_1 = __webpack_require__(0);
var _getNameHelpers_1 = __webpack_require__(0);
var ColumnExpressionCollectionHelper = (function () {
    function ColumnExpressionCollectionHelper() {
    }
    ColumnExpressionCollectionHelper.find = function (collection, tableName, columnName) {
        return _arrayutils_1.findFirstItemMatchesCondition(collection(), function (item) { return item.column() === columnName && item.table() === tableName; });
    };
    ColumnExpressionCollectionHelper.findByName = function (collection, actualName) {
        return _arrayutils_1.findFirstItemMatchesCondition(collection(), function (item) { return item.actualName() === actualName; });
    };
    ColumnExpressionCollectionHelper.removeDependend = function (collection, tableName) {
        collection.remove(function (item) { return item.isDepended(tableName); });
    };
    ColumnExpressionCollectionHelper.setUniqueAlias = function (collection, alias) {
        if (ColumnExpressionCollectionHelper.findByName(collection, alias)) {
            return _getNameHelpers_1.getUniqueName(collection().map(function (item) { return item.actualName(); }), alias + '_');
        }
        return alias;
    };
    ColumnExpressionCollectionHelper.addNew = function (query, collection, table, column, lazy) {
        if (lazy === void 0) { lazy = false; }
        var newItem = new columnExpression_1.ColumnExpression({ '@Table': table, '@Name': column, '@ItemType': 'Column' }, query);
        if (query.columns === collection && !newItem.alias() && ColumnExpressionCollectionHelper.findByName(collection, newItem.actualName())) {
            newItem.alias(this.setUniqueAlias(collection, newItem.table() + '_' + newItem.column()));
        }
        lazy ? collection().push(newItem) : collection.push(newItem);
        return newItem;
    };
    ColumnExpressionCollectionHelper.remove = function (collection, tableName, columnName, lazy) {
        if (lazy === void 0) { lazy = false; }
        if (!lazy) {
            collection.remove(function (item) { return item.column() === columnName && item.table() === tableName; });
        }
        else
            for (var i = 0; i < collection().length; i++) {
                if (collection()[i].column() === columnName && collection()[i].table() === tableName) {
                    collection().splice(i, 1);
                    return;
                }
            }
    };
    return ColumnExpressionCollectionHelper;
}());
exports.ColumnExpressionCollectionHelper = ColumnExpressionCollectionHelper;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var queryElementModel_1 = __webpack_require__(28);
var columnExpression_1 = __webpack_require__(60);
var _arrayutils_1 = __webpack_require__(0);
var columnExpressionMeta_1 = __webpack_require__(61);
var localization_utils_1 = __webpack_require__(1);
var allColumnsModelMeta_1 = __webpack_require__(154);
var AllColumnsViewModel = (function (_super) {
    __extends(AllColumnsViewModel, _super);
    function AllColumnsViewModel(parent, serializer) {
        var _this = _super.call(this, { '@ControlType': 'Column' }, parent, serializer) || this;
        var query = parent.parentModel();
        var targetColumn = ko.pureComputed(function () {
            return _arrayutils_1.findFirstItemMatchesCondition(query.columns(), function (item) {
                return parent.actualName() === item.table() && columnExpressionMeta_1.ColumnType.AllColumns === item.itemType();
            });
        });
        _this.selected = ko.pureComputed({
            read: function () { return !!targetColumn(); },
            write: function (value) {
                if (!!targetColumn() === value)
                    return;
                if (value) {
                    query.columns.push(new columnExpression_1.ColumnExpression({ '@ItemType': columnExpressionMeta_1.ColumnType.AllColumns, '@Table': parent.actualName() }, query, serializer));
                }
                else {
                    query.columns.remove(function (item) { return parent.actualName() === item.table() && columnExpressionMeta_1.ColumnType.AllColumns === item.itemType(); });
                }
            }
        });
        var name = localization_utils_1.getLocalization('(All Columns)', 'DataAccessStringId.QueryBuilder_AllColumns');
        _this.name = ko.pureComputed(function () { return (name.charAt(0) === '*' ? name : '* ' + name); });
        return _this;
    }
    AllColumnsViewModel.prototype.getInfo = function () {
        return allColumnsModelMeta_1.allColumnsSerializationInfo;
    };
    return AllColumnsViewModel;
}(queryElementModel_1.QueryElementBaseViewModel));
exports.AllColumnsViewModel = AllColumnsViewModel;


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(44);
exports.allColumnsSerializationInfo = [metadata_1.name, metadata_1.selected];


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var _dragDropHandler_1 = __webpack_require__(0);
var columnSurface_1 = __webpack_require__(62);
var connectionPointSurface_1 = __webpack_require__(22);
var _surfaceHelpers_1 = __webpack_require__(0);
var routedConnectorModel_1 = __webpack_require__(31);
var routedConnectorSurface_1 = __webpack_require__(48);
var utils_1 = __webpack_require__(21);
var _scrollProcessor_1 = __webpack_require__(0);
var ColumnDragHandler = (function (_super) {
    __extends(ColumnDragHandler, _super);
    function ColumnDragHandler(querySurface, selection, undoEngine, snapHelper, dragHelperContent) {
        var _this = _super.call(this, querySurface, selection, undoEngine, snapHelper, dragHelperContent) || this;
        _this.querySurface = querySurface;
        _this.undoEngine = undoEngine;
        _this._dragColumn = ko.observable(null);
        _this._dragConditionSurface = null;
        _this.dragDropConnector = ko.observable(null);
        _this.cursor = 'arrow';
        _this.containment = '.dxrd-ghost-container';
        _this['helper'] = undefined;
        return _this;
    }
    ColumnDragHandler.prototype._needToCreateRelation = function () {
        if (!(this.selection.dropTarget && this.selection.dropTarget instanceof columnSurface_1.ColumnSurface))
            return false;
        var table = this.selection.dropTarget.getControlModel().parentModel();
        return table !== this.getDragColumn().parentModel();
    };
    ColumnDragHandler.prototype.startDrag = function (control) {
        this._scrollProcessor = new _scrollProcessor_1.dxScrollProcessor(document.getElementsByClassName('dxqb-mainwin')[0]);
        if (control instanceof connectionPointSurface_1.ConnectionPointSurface) {
            var condition = control.getControlModel().parentModel();
            this._dragConditionSurface = _surfaceHelpers_1.findSurface(condition);
            if (!this._dragConditionSurface)
                return;
            this._dragConditionSurface.isVisible(false);
            this._dragColumn((condition.startPoint() === control.getControlModel()) ? condition.nestedColumn() : condition.parentColumn());
        }
        else if (!(control instanceof columnSurface_1.ColumnSurface)) {
            throw new Error('ColumnDragHandler can be applied to the Column only.');
        }
        else {
            this._dragColumn(control.getControlModel());
        }
        var connectorModel = new routedConnectorModel_1.RoutedConnectorViewModel({}, this.querySurface().getControlModel());
        this.dragDropConnector(new routedConnectorSurface_1.RoutedConnectorSurface(connectorModel, this.surface()));
    };
    ColumnDragHandler.prototype.setConnectorPoints = function (cursorPosition) {
        var startColumn = this._dragColumn(), connectorModel = this.dragDropConnector().getControlModel();
        if (this._needToCreateRelation()) {
            var points = utils_1.determineConnectingPoints(startColumn, this.selection.dropTarget.getControlModel());
            connectorModel.startPoint().connectingPoint(points.start);
            connectorModel.endPoint().connectingPoint(points.end);
        }
        else {
            var _leftConnectionPointX = this.querySurface().rtl() ? this.querySurface().pageWidth() - startColumn.leftConnectionPoint.location.x() : startColumn.leftConnectionPoint.location.x();
            var _rightConnectionPointX = this.querySurface().rtl() ? this.querySurface().pageWidth() - startColumn.rightConnectionPoint.location.x() : startColumn.rightConnectionPoint.location.x();
            var point = Math.abs(_leftConnectionPointX - cursorPosition.left) > Math.abs(_rightConnectionPointX - cursorPosition.left) ?
                startColumn.rightConnectionPoint : startColumn.leftConnectionPoint;
            connectorModel.startPoint().connectingPoint(point);
            this.dragDropConnector().endPoint().rect({ top: cursorPosition.top, left: cursorPosition.left });
        }
    };
    ColumnDragHandler.prototype.drag = function (event, ui) {
        var scrollOffset = this._scrollProcessor.getScrollOffset();
        ui.position.left += (ui['scroll'].left + scrollOffset.left);
        ui.position.top += (ui['scroll'].top + scrollOffset.top);
        ui['delta'].left = ui.position.left - this.surface()['underCursor']().x - 6;
        ui['delta'].top = ui.position.top - this.surface()['underCursor']().y - 6;
        this.setConnectorPoints(this._getAbsoluteSurfacePosition(ui));
        this._scrollProcessor.processOffset({ x: event.clientX, y: event.clientY });
    };
    ColumnDragHandler.prototype.doStopDrag = function () {
        this._scrollProcessor.dispose();
        this._scrollProcessor = null;
        this.dragHelperContent.reset();
        this.dragDropConnector(null);
        try {
            var editableCondition = null;
            if (this._dragConditionSurface && !this._dragConditionSurface.isVisible()) {
                editableCondition = this._dragConditionSurface.getControlModel();
                this._dragConditionSurface.isVisible(true);
            }
            var query = this.querySurface().getControlModel();
            if (this._needToCreateRelation()) {
                var nestedColumn = this.selection.dropTarget.getControlModel();
                this.undoEngine().start();
                if (editableCondition) {
                    editableCondition.parentModel().removeChild(editableCondition);
                }
                var condition = query.cerateJoinCondition(this._dragColumn(), nestedColumn);
                this.undoEngine().end();
                if (condition !== null) {
                    this.selection.initialize(_surfaceHelpers_1.findSurface(condition));
                }
            }
        }
        finally {
            this._dragColumn(null);
        }
    };
    ColumnDragHandler.prototype.getDragColumn = function () {
        return this._dragColumn();
    };
    return ColumnDragHandler;
}(_dragDropHandler_1.DragDropHandler));
exports.ColumnDragHandler = ColumnDragHandler;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var _treelistController_1 = __webpack_require__(10);
var _dbObjectDragDropHandler_1 = __webpack_require__(98);
var QueryBuilderTreeListController = (function (_super) {
    __extends(QueryBuilderTreeListController, _super);
    function QueryBuilderTreeListController(undoEngine, query) {
        var _this = _super.call(this) || this;
        var dropCallback = _dbObjectDragDropHandler_1.DbObjectDragDropHandler.getDropCallback(undoEngine, true);
        _this.dblClickHandler = function (item) {
            undoEngine().start();
            dropCallback(item.data, query());
            undoEngine().end();
        };
        return _this;
    }
    return QueryBuilderTreeListController;
}(_treelistController_1.TreeListController));
exports.QueryBuilderTreeListController = QueryBuilderTreeListController;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var propertygrid_1 = __webpack_require__(6);
var tabPanel_1 = __webpack_require__(1);
var localization_utils_1 = __webpack_require__(1);
var parameterModel_1 = __webpack_require__(57);
var queryModel_1 = __webpack_require__(58);
var _controlProperties_1 = __webpack_require__(0);
var parametersInfo = { propertyName: 'parameters', displayName: 'parameters', editor: { custom: 'dxqb-parameterspanel' } };
var selectedItemInfo = { propertyName: 'selectedItem', displayName: 'selectedItem', editor: { custom: 'dxqb-propertygrid' } };
var fieldsInfo = { propertyName: 'fields', displayName: 'fields', editor: { custom: 'dxqb-fieldspanel' } };
var queryInfo = { propertyName: 'query', displayName: 'query', editor: { custom: 'dxqb-propertygrid' } };
var AccordionTabInfo = (function (_super) {
    __extends(AccordionTabInfo, _super);
    function AccordionTabInfo(query, itemPropertiesTabInfoModel, undoEngine, focused, showParameters) {
        var _this = _super.call(this, {
            text: 'Properties',
            template: 'dxqb-properties-wrapper',
            model: AccordionTabInfo._createQBPropertyGrid(query, itemPropertiesTabInfoModel, undoEngine, showParameters)
        }) || this;
        _this.active(true);
        _this._getGroupByName('Fields').collapsed(false);
        _this._disposables.push(focused.subscribe(function (newVal) {
            if (!(newVal instanceof queryModel_1.QueryViewModel)) {
                var group = _this._getGroupByName('SelectedItem');
                group.collapsed(false);
            }
        }));
        return _this;
    }
    AccordionTabInfo._getSelectedItemPropertyName = function (model) {
        var text = 'Selection Properties';
        var id = 'AnalyticsCoreStringId.QueryBuilder_SelectionProperties';
        switch (model && model.controlType) {
            case 'Query':
                text = 'Query Properties';
                id = 'AnalyticsCoreStringId.QueryBuilder_QueryProperties';
                break;
            case 'Table':
                text = 'Table Properties';
                id = 'AnalyticsCoreStringId.QueryBuilder_TableProperties';
                break;
            case 'Column':
                text = 'Column Properties';
                id = 'AnalyticsCoreStringId.QueryBuilder_ColumnProperties';
                break;
            case 'JoinCondition':
                text = 'Relation Properties';
                id = 'AnalyticsCoreStringId.QueryBuilder_RelationProperties';
                break;
        }
        return localization_utils_1.getLocalization(text, id);
    };
    AccordionTabInfo._createWrappedObject = function (query, commonModel, undoEngine, showParameters) {
        var modelProperties = new propertygrid_1.ObjectProperties(query, null, 1);
        var modelValues = ko.computed(function () { return query() && query().parameters; });
        var info = [queryInfo, selectedItemInfo, fieldsInfo];
        var object = {
            selectedItem: commonModel,
            query: {
                editableObject: query,
                properties: modelProperties
            },
            fields: commonModel,
            isPropertyVisible: function (propertyName) {
                if (propertyName === 'selectedItem') {
                    return commonModel.editableObject() !== query();
                }
                return true;
            }
        };
        if (showParameters) {
            object['parameters'] = {
                values: modelValues,
                addHandler: function () { return new parameterModel_1.ParameterViewModel({ '@Type': 'System.String' }); },
                collapsed: false,
                undoEngine: undoEngine,
                isVisibleButton: function (index, button) { return button === 'add' || button === 'delete'; },
                template: '#dxqb-collectioneditor-template',
                textEmptyArray: { text: 'Click the Add button to create a parameter.', localizationId: 'AnalyticsCoreStringId.QueryBuilder_PageConfigureParametersEmpty' }
            };
            info.push(parametersInfo);
        }
        object['getInfo'] = function () { return info; };
        return object;
    };
    AccordionTabInfo._createGroups = function (editableObject, showParameters) {
        var _this = this;
        var groups = {
            'Query': {
                info: [queryInfo],
                displayName: function () { return localization_utils_1.getLocalization('Query Properties', 'AnalyticsCoreStringId.QueryBuilder_QueryProperties'); }
            },
            'SelectedItem': {
                info: [selectedItemInfo],
                displayName: function () { return _this._getSelectedItemPropertyName(editableObject()); }
            },
            'Fields': {
                info: [fieldsInfo],
                displayName: function () { return localization_utils_1.getLocalization('Available tables and views', 'AnalyticsCoreStringId.QueryBuilder_AvailableTables'); }
            }
        };
        if (showParameters)
            groups['Parameters'] = {
                info: [parametersInfo],
                displayName: function () { return localization_utils_1.getLocalization('Parameters', 'AnalyticsCoreStringId.QueryBuilder_Parameters'); }
            };
        return groups;
    };
    AccordionTabInfo._createQBPropertyGrid = function (query, commonModel, undoEngine, showParameters) {
        var object = this._createWrappedObject(query, commonModel, undoEngine, showParameters);
        var grid = new _controlProperties_1.ControlProperties(ko.observable(object), {
            groups: this._createGroups(commonModel.editableObject, showParameters),
            editors: object['getInfo']()
        }, undefined, false);
        return grid;
    };
    AccordionTabInfo.prototype._getGroupByName = function (name) {
        return this.model.groups.filter(function (x) { return x['_displayName'] === name; })[0];
    };
    return AccordionTabInfo;
}(tabPanel_1.TabInfo));
exports.AccordionTabInfo = AccordionTabInfo;


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var controlsFactory_1 = __webpack_require__(47);
var controlsFactory_2 = __webpack_require__(27);
var metadata_1 = __webpack_require__(44);
var elementViewModel_1 = __webpack_require__(4);
var baseSurface_1 = __webpack_require__(4);
var relationModelMeta_1 = __webpack_require__(95);
var relationSurface_1 = __webpack_require__(159);
var relationModel_1 = __webpack_require__(93);
var joinConditionModelMeta_1 = __webpack_require__(160);
var joinConditionSurface_1 = __webpack_require__(161);
var joinConditionModel_1 = __webpack_require__(94);
var tableModelMeta_1 = __webpack_require__(92);
var tableSurface_1 = __webpack_require__(162);
var tableModel_1 = __webpack_require__(59);
var columnModelMeta_1 = __webpack_require__(26);
var columnSurface_1 = __webpack_require__(62);
var columnModel_1 = __webpack_require__(91);
var queryModelMeta_1 = __webpack_require__(96);
var querySurface_1 = __webpack_require__(97);
var queryModel_1 = __webpack_require__(58);
function registerControls() {
    controlsFactory_1.registerControls();
    controlsFactory_2.controlsFactory.registerControl('Unknown', {
        info: metadata_1.unknownSerializationsInfo,
        type: elementViewModel_1.ElementViewModel,
        nonToolboxItem: true,
        surfaceType: baseSurface_1.SurfaceElementBase,
        isDeleteDeny: true
    });
    controlsFactory_2.controlsFactory.registerControl('Relation', {
        info: relationModelMeta_1.relationSerializationInfo,
        defaultVal: {},
        surfaceType: relationSurface_1.RelationSurface,
        popularProperties: [],
        type: relationModel_1.RelationViewModel,
        elementActionsTypes: [],
        nonToolboxItem: true
    });
    controlsFactory_2.controlsFactory.registerControl('JoinCondition', {
        info: joinConditionModelMeta_1.joinConditionSerializationInfo,
        defaultVal: {},
        surfaceType: joinConditionSurface_1.JoinConditionSurface,
        popularProperties: ['_parentColumnName', '_nestedColumnName', 'joinType'],
        type: joinConditionModel_1.JoinConditionViewModel,
        elementActionsTypes: [],
        nonToolboxItem: true
    });
    controlsFactory_2.controlsFactory.registerControl('Table', {
        info: tableModelMeta_1.tableSerializationInfo,
        defaultVal: {},
        surfaceType: tableSurface_1.TableSurface,
        popularProperties: ['name', 'alias', 'columns'],
        type: tableModel_1.TableViewModel,
        elementActionsTypes: [],
        nonToolboxItem: true
    });
    controlsFactory_2.controlsFactory.registerControl('Column', {
        info: columnModelMeta_1.columnSerializationInfo,
        defaultVal: {},
        surfaceType: columnSurface_1.ColumnSurface,
        popularProperties: ['name', 'alias', 'selected'],
        type: columnModel_1.ColumnViewModel,
        elementActionsTypes: [],
        nonToolboxItem: true,
        isDeleteDeny: true
    });
    controlsFactory_2.controlsFactory.registerControl('Query', {
        info: queryModelMeta_1.querySerializationsInfo,
        surfaceType: querySurface_1.QuerySurface,
        popularProperties: ['name', 'filterString', 'groupFilterString'],
        type: queryModel_1.QueryViewModel,
        elementActionsTypes: [],
        isContainer: true,
        nonToolboxItem: true,
        isDeleteDeny: true
    });
}
exports.registerControls = registerControls;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var baseSurface_1 = __webpack_require__(4);
var _arrayutils_1 = __webpack_require__(0);
var RelationSurface = (function (_super) {
    __extends(RelationSurface, _super);
    function RelationSurface(control, context) {
        var _this = _super.call(this, control, context, null) || this;
        _this.conditions = ko.observableArray();
        _this.template = 'dxqb-relation';
        _arrayutils_1.createObservableArrayMapCollection(control.conditions, _this.conditions, _this._createSurface);
        return _this;
    }
    RelationSurface.prototype._getChildrenHolderName = function () {
        return 'conditions';
    };
    return RelationSurface;
}(baseSurface_1.SurfaceElementBase));
exports.RelationSurface = RelationSurface;


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var editorTemplates_1 = __webpack_require__(25);
exports.ConditionType = {
    Equal: 'Equal',
    NotEqual: 'NotEqual',
    Greater: 'Greater',
    GreaterOrEqual: 'GreaterOrEqual',
    Less: 'Less',
    LessOrEqual: 'LessOrEqual'
};
exports.joinConditionSerializationInfo = [
    { propertyName: 'left', displayName: 'Left', editor: editorTemplates_1.editorTemplates.getEditor('text'), disabled: true, localizationId: 'AnalyticsCoreStringId.QueryBuilder_LeftOperand' },
    { propertyName: 'right', displayName: 'Right', editor: editorTemplates_1.editorTemplates.getEditor('text'), disabled: true, localizationId: 'AnalyticsCoreStringId.QueryBuilder_RightOperand' },
    { propertyName: 'parentColumnName', modelName: '@Parent' },
    { propertyName: 'nestedColumnName', modelName: '@Nested' },
    {
        propertyName: 'joinType',
        displayName: 'Join Type',
        editor: editorTemplates_1.editorTemplates.getEditor('combobox'),
        defaultVal: 'Inner',
        valuesArray: [
            { value: 'Inner', displayValue: 'Inner join', localizationId: 'DataAccessStringId.RelationEditorRelationTypeInnerJoin' },
            { value: 'LeftOuter', displayValue: 'Left outer join', localizationId: 'DataAccessStringId.RelationEditorRelationTypeLeftOuterJoin' },
            { value: 'RightOuter', displayValue: 'Right outer join', localizationId: 'DataAccessStringId.RelationEditorRelationTypeRightOuterJoin' },
            { value: 'FullOuter', displayValue: 'Full outer join', localizationId: 'DataAccessStringId.RelationEditorRelationTypeFullOuterJoin' },
        ],
        localizationId: 'AnalyticsCoreStringId.QueryBuilder_JoinType'
    },
    {
        propertyName: 'operator',
        modelName: '@Operator',
        displayName: 'Operator',
        editor: editorTemplates_1.editorTemplates.getEditor('combobox'),
        defaultVal: exports.ConditionType.Equal,
        valuesArray: [
            { value: 'Equal', displayValue: 'Equals to', localizationId: 'DataAccessUIStringId.JoinEditorEqualOperator' },
            { value: 'NotEqual', displayValue: 'Does not equal to', localizationId: 'DataAccessUIStringId.JoinEditorNotEqualOperator' },
            { value: 'Greater', displayValue: 'Is greater than', localizationId: 'DataAccessUIStringId.JoinEditorGreaterOperator' },
            { value: 'GreaterOrEqual', displayValue: 'Is greater than or equal to', localizationId: 'DataAccessUIStringId.JoinEditorGreaterOrEqualOperator' },
            { value: 'Less', displayValue: 'Is less than', localizationId: 'DataAccessUIStringId.JoinEditorLessOperator' },
            { value: 'LessOrEqual', displayValue: 'Is less than or equal to', localizationId: 'DataAccessUIStringId.JoinEditorLessOrEqualOperator' }
        ],
        localizationId: 'AnalyticsCoreStringId.QueryBuilder_Operator'
    },
    { propertyName: 'itemType', modelName: '@itemType' }
];


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var routedConnectorSurface_1 = __webpack_require__(48);
var JoinConditionSurface = (function (_super) {
    __extends(JoinConditionSurface, _super);
    function JoinConditionSurface(control, context) {
        var _this = _super.call(this, control, context) || this;
        _this._disposables.push(_this.showArrow = ko.pureComputed(function () {
            return control.joinType() === 'LeftOuter' || control.joinType() === 'FullOuter';
        }));
        _this._disposables.push(_this.showRightArrow = ko.pureComputed(function () {
            return control.joinType() === 'RightOuter' || control.joinType() === 'FullOuter';
        }));
        return _this;
    }
    JoinConditionSurface.prototype.container = function () {
        return this.getRoot();
    };
    return JoinConditionSurface;
}(routedConnectorSurface_1.RoutedConnectorSurface));
exports.JoinConditionSurface = JoinConditionSurface;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var $ = __webpack_require__(3);
var ko = __webpack_require__(2);
var queryElementSurface_1 = __webpack_require__(163);
var tableModel_1 = __webpack_require__(59);
var columnSurface_1 = __webpack_require__(62);
var allColumnsSurface_1 = __webpack_require__(164);
var _utils_1 = __webpack_require__(0);
var TableSurface = (function (_super) {
    __extends(TableSurface, _super);
    function TableSurface(control, context) {
        var _this = _super.call(this, control, context, null) || this;
        _this.contenttemplate = 'dxqb-table';
        _this.template = 'dxqb-table-main';
        _this.toggleSelected = function () {
            _this.getControlModel().toggleSelectedColumns();
        };
        _this.selectedWrapper = ko.pureComputed(function () {
            return _this.getControlModel().allColumnsSelected();
        });
        _this.isInitialized = control.isInitialized;
        _this.columns = ko.pureComputed(function () {
            return control.columns().map(function (columnVewModel) { return new columnSurface_1.ColumnSurface(columnVewModel, context); });
        });
        _this.asterisk = new allColumnsSurface_1.AllColumnsSurface(control.asterisk, context);
        return _this;
    }
    TableSurface.prototype.resizable = function (resizeHandler, element) {
        return _utils_1.extend({}, resizeHandler, {
            handles: 'e, w',
            $selectedNodes: $(element),
            minWidth: tableModel_1.TableViewModel.TABLE_MIN_WIDTH,
        });
    };
    return TableSurface;
}(queryElementSurface_1.QueryElementBaseSurface));
exports.TableSurface = TableSurface;


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var baseSurface_1 = __webpack_require__(4);
var _utils_1 = __webpack_require__(0);
var QueryElementBaseSurface = (function (_super) {
    __extends(QueryElementBaseSurface, _super);
    function QueryElementBaseSurface(control, context, unitProperties) {
        var _this = _super.call(this, control, context, _utils_1.extend({}, QueryElementBaseSurface._unitProperties, unitProperties)) || this;
        _this.template = 'dx-diagram-element';
        _this.selectiontemplate = 'dx-diagram-element-selection';
        _this.contenttemplate = 'dx-diagram-element-content';
        _this.margin = ko.observable(0);
        return _this;
    }
    QueryElementBaseSurface._unitProperties = {
        _height: function (o) {
            return o.size.height;
        },
        _width: function (o) {
            return o.size.width;
        },
        _x: function (o) {
            return o.location.x;
        },
        _y: function (o) {
            return o.location.y;
        }
    };
    return QueryElementBaseSurface;
}(baseSurface_1.SurfaceElementBase));
exports.QueryElementBaseSurface = QueryElementBaseSurface;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var baseSurface_1 = __webpack_require__(4);
var _dragDropHandler_1 = __webpack_require__(0);
var AllColumnsSurface = (function (_super) {
    __extends(AllColumnsSurface, _super);
    function AllColumnsSurface(control, context) {
        var _this = _super.call(this, control, context, null) || this;
        _this.template = 'dxqb-table-asterisk-field';
        _this.toggleSelected = function () {
            _this.getControlModel().selected(!_this.getControlModel().selected());
        };
        _this.selectedWrapper = ko.pureComputed(function () {
            return _this.getControlModel().selected();
        });
        _this.isOverAsterisk = ko.pureComputed(function () {
            return _this.underCursor().isOver && !_dragDropHandler_1.DragDropHandler.started();
        });
        _this.cssClasses = function () {
            return {
                'dxd-state-active': _this.selected,
                'dxd-state-hovered': _this.isOverAsterisk()
            };
        };
        return _this;
    }
    return AllColumnsSurface;
}(baseSurface_1.SurfaceElementBase));
exports.AllColumnsSurface = AllColumnsSurface;


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var localization_utils_1 = __webpack_require__(1);
var _infoMessageHelpers_1 = __webpack_require__(0);
var _requestwrapper_1 = __webpack_require__(16);
var JSQueryBuilder = (function () {
    function JSQueryBuilder(_queryBuilderModel) {
        this._queryBuilderModel = _queryBuilderModel;
    }
    Object.defineProperty(JSQueryBuilder.prototype, "queryBuilderModel", {
        get: function () {
            return this._queryBuilderModel();
        },
        set: function (newVal) {
            this._queryBuilderModel(newVal);
        },
        enumerable: true,
        configurable: true
    });
    JSQueryBuilder.prototype.UpdateLocalization = function (localization) {
        localization_utils_1.updateLocalization(localization);
    };
    JSQueryBuilder.prototype.GetQueryBuilderModel = function () {
        return this.queryBuilderModel;
    };
    JSQueryBuilder.prototype.GetJsonQueryModel = function () {
        return { 'Query': this.queryBuilderModel.model().serialize() };
    };
    JSQueryBuilder.prototype.GetSaveQueryModel = function () {
        return {
            queryLayout: JSON.stringify(this.GetJsonQueryModel()),
            connection: this.SerializeDataConnection()
        };
    };
    JSQueryBuilder.prototype.SerializeDataConnection = function () {
        var connection = this.queryBuilderModel.model().dbSchemaProvider.connection;
        return _requestwrapper_1.serializeDataConnection(connection);
    };
    JSQueryBuilder.prototype.AdjustControlCore = function () {
        this.queryBuilderModel && this.queryBuilderModel.updateSurfaceSize();
    };
    JSQueryBuilder.prototype.Save = function () {
        this.queryBuilderModel && this.queryBuilderModel.model().onSave();
    };
    JSQueryBuilder.prototype.ShowPreview = function () {
        this.queryBuilderModel && this.queryBuilderModel.showPreview();
    };
    JSQueryBuilder.prototype.IsQueryValid = function () {
        return this.queryBuilderModel && this.queryBuilderModel.model().isValid();
    };
    JSQueryBuilder.prototype.OnCallback = function (result) {
        if (result.queryValidationError) {
            _infoMessageHelpers_1.NotifyAboutWarning(result.queryValidationError, true);
        }
    };
    return JSQueryBuilder;
}());
exports.JSQueryBuilder = JSQueryBuilder;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var localization = __webpack_require__(205);
var localization_1 = __webpack_require__(206);
var EventGenerator = (function () {
    function EventGenerator() {
    }
    EventGenerator.generateQueryBuilderEvents = function (fireEvent) {
        function customizeActions(actions) {
            fireEvent('CustomizeMenuActions', {
                Actions: actions,
                GetById: function (actionId) {
                    return actionId ? actions.filter(function (item) { return actionId === item.id; })[0] : null;
                }
            });
        }
        function customizeLocalization(localizationCallbacks) {
            fireEvent('CustomizeLocalization', {
                LoadMessages: function (messages) {
                    if (!messages)
                        return;
                    if (typeof messages.then === 'function') {
                        localizationCallbacks.push(messages);
                    }
                    else {
                        localization_1.loadMessages(messages);
                    }
                },
                WidgetLocalization: localization
            });
        }
        function onServerError(args) {
            fireEvent('OnServerError', { Error: args });
        }
        function beforeRender(designerModel) {
            fireEvent('BeforeRender', designerModel);
        }
        function saveQueryRequested(queryModel) {
            fireEvent('SaveQueryRequested', queryModel);
        }
        return {
            beforeRender: beforeRender,
            saveQueryRequested: saveQueryRequested,
            customizeActions: customizeActions,
            customizeLocalization: customizeLocalization,
            onServerError: onServerError
        };
    };
    return EventGenerator;
}());
exports.EventGenerator = EventGenerator;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var metadata_1 = __webpack_require__(20);
var diagramModel_1 = __webpack_require__(66);
var localization_utils_1 = __webpack_require__(1);
var controlsFactory_1 = __webpack_require__(47);
var diagramSurface_1 = __webpack_require__(67);
var _designerInitializer_1 = __webpack_require__(0);
var connectionPointDragHandler_1 = __webpack_require__(101);
var connectingPointDragHandler_1 = __webpack_require__(99);
var _surfaceHelpers_1 = __webpack_require__(0);
var _internal_1 = __webpack_require__(0);
exports.groups = {
    'Appearance': { info: [] },
    'Behavior': { info: [] },
    'Design': { info: [metadata_1.name] },
    'Layout': { info: [metadata_1.location, metadata_1.size, diagramModel_1.pageWidth, diagramModel_1.pageHeight] }
};
function createDiagramDesigner(element, diagramSource, localization, rtl) {
    if (localization) {
        localization_utils_1.addCultureInfo({
            messages: localization
        });
    }
    controlsFactory_1.registerControls();
    var diagram = ko.pureComputed(function () { return new diagramModel_1.DiagramViewModel(diagramSource()); }), surface = ko.pureComputed(function () {
        var surface = new diagramSurface_1.DiagramSurface(diagram());
        return surface;
    });
    var designerModel = _designerInitializer_1.createDesigner(diagram, surface, controlsFactory_1.diagramControlsFactory, exports.groups, undefined, undefined, rtl);
    designerModel.connectionPointDragHandler = new connectionPointDragHandler_1.ConnectionPointDragHandler(surface, designerModel.selection, designerModel.undoEngine, designerModel.snapHelper, designerModel.dragHelperContent);
    designerModel.connectingPointDragHandler = new connectingPointDragHandler_1.ConnectingPointDragHandler(surface, designerModel.selection, designerModel.undoEngine, designerModel.snapHelper, designerModel.dragHelperContent);
    designerModel.isLoading(false);
    designerModel.selection.focused(surface());
    $(element).children().remove();
    ko.applyBindings(designerModel, element);
    var updateSurfaceContentSize_ = _surfaceHelpers_1.updateSurfaceContentSize(designerModel.surfaceSize, element);
    var onResize = function () {
        updateSurfaceContentSize_();
    };
    window.addEventListener('resize', onResize);
    _internal_1.addDisposeCallback(element, function () {
        window.removeEventListener('resize', onResize);
    });
    designerModel.tabPanel.width.subscribe(function () {
        updateSurfaceContentSize_();
    });
    updateSurfaceContentSize_();
    return designerModel;
}
exports.createDiagramDesigner = createDiagramDesigner;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ace_1 = __webpack_require__(184);
if (!!ace_1.default) {
    ace_1.default.define('ace/mode/sql_highlight_rules', ['require', 'exports', 'module', 'ace/lib/oop', 'ace/mode/text_highlight_rules', 'ace/mode/doc_comment_highlight_rules'], function (require, exports, module) {
        'use strict';
        var oop = ace_1.default.require('ace/lib/oop');
        var DocCommentHighlightRules = ace_1.default.require('ace/mode/doc_comment_highlight_rules').DocCommentHighlightRules;
        var TextHighlightRules = ace_1.default.require('ace/mode/text_highlight_rules').TextHighlightRules;
        var SqlServerHighlightRules = function () {
            var logicalOperators = 'ALL|AND|ANY|BETWEEN|EXISTS|IN|LIKE|NOT|OR|SOME';
            logicalOperators += '|NULL|IS|APPLY|INNER|OUTER|LEFT|RIGHT|JOIN|CROSS';
            var builtinFunctions = ('OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|' +
                'AVG|CHECKSUM_AGG|COUNT|COUNT_BIG|GROUPING|GROUPING_ID|MAX|MIN|STDEV|STDEVP|SUM|VAR|VARP|' +
                'DENSE_RANK|NTILE|RANK|ROW_NUMBER' +
                '@@DATEFIRST|@@DBTS|@@LANGID|@@LANGUAGE|@@LOCK_TIMEOUT|@@MAX_CONNECTIONS|@@MAX_PRECISION|@@NESTLEVEL|@@OPTIONS|@@REMSERVER|@@SERVERNAME|@@SERVICENAME|@@SPID|@@TEXTSIZE|@@VERSION|' +
                'CAST|CONVERT|PARSE|TRY_CAST|TRY_CONVERT|TRY_PARSE' +
                '@@CURSOR_ROWS|@@FETCH_STATUS|CURSOR_STATUS|' +
                '@@DATEFIRST|@@LANGUAGE|CURRENT_TIMESTAMP|DATEADD|DATEDIFF|DATEFROMPARTS|DATENAME|DATEPART|DATETIME2FROMPARTS|DATETIMEFROMPARTS|DATETIMEOFFSETFROMPARTS|DAY|EOMONTH|GETDATE|GETUTCDATE|ISDATE|MONTH|SET DATEFIRST|SET DATEFORMAT|SET LANGUAGE|SMALLDATETIMEFROMPARTS|SP_HELPLANGUAGE|SWITCHOFFSET|SYSDATETIME|SYSDATETIMEOFFSET|SYSUTCDATETIME|TIMEFROMPARTS|TODATETIMEOFFSET|YEAR|' +
                'CHOOSE|IIF|' +
                'ABS|ACOS|ASIN|ATAN|ATN2|CEILING|COS|COT|DEGREES|EXP|FLOOR|LOG|LOG10|PI|POWER|RADIANS|RAND|ROUND|SIGN|SIN|SQRT|SQUARE|TAN|' +
                '@@PROCID|APPLOCK_MODE|APPLOCK_TEST|APP_NAME|ASSEMBLYPROPERTY|COLUMNPROPERTY|COL_LENGTH|COL_NAME|DATABASEPROPERTYEX|DATABASE_PRINCIPAL_ID|DB_ID|DB_NAME|FILEGROUPPROPERTY|FILEGROUP_ID|FILEGROUP_NAME|FILEPROPERTY|FILE_ID|FILE_IDEX|FILE_NAME|FULLTEXTCATALOGPROPERTY|FULLTEXTSERVICEPROPERTY|INDEXKEY_PROPERTY|INDEXPROPERTY|INDEX_COL|OBJECTPROPERTY|OBJECTPROPERTYEX|OBJECT_DEFINITION|OBJECT_ID|OBJECT_NAME|OBJECT_SCHEMA_NAME|ORIGINAL_DB_NAME|PARSENAME|SCHEMA_ID|SCHEMA_NAME|SCOPE_IDENTITY|SERVERPROPERTY|STATS_DATE|TYPEPROPERTY|TYPE_ID|TYPE_NAME|' +
                'CERTENCODED|CERTPRIVATEKEY|CURRENT_USER|DATABASE_PRINCIPAL_ID|HAS_PERMS_BY_NAME|IS_MEMBER|IS_ROLEMEMBER|IS_SRVROLEMEMBER|ORIGINAL_LOGIN|PERMISSIONS|PWDCOMPARE|PWDENCRYPT|SCHEMA_ID|SCHEMA_NAME|SESSION_USER|SUSER_ID|SUSER_NAME|SUSER_SID|SUSER_SNAME|SYS.FN_BUILTIN_PERMISSIONS|SYS.FN_GET_AUDIT_FILE|SYS.FN_MY_PERMISSIONS|SYSTEM_USER|USER_ID|USER_NAME|' +
                'ASCII|CHAR|CHARINDEX|CONCAT|DIFFERENCE|FORMAT|LEN|LOWER|LTRIM|NCHAR|PATINDEX|QUOTENAME|REPLACE|REPLICATE|REVERSE|RTRIM|SOUNDEX|SPACE|STR|STUFF|SUBSTRING|UNICODE|UPPER|' +
                '$PARTITION|@@ERROR|@@IDENTITY|@@PACK_RECEIVED|@@ROWCOUNT|@@TRANCOUNT|BINARY_CHECKSUM|CHECKSUM|CONNECTIONPROPERTY|CONTEXT_INFO|CURRENT_REQUEST_ID|ERROR_LINE|ERROR_MESSAGE|ERROR_NUMBER|ERROR_PROCEDURE|ERROR_SEVERITY|ERROR_STATE|FORMATMESSAGE|GETANSINULL|GET_FILESTREAM_TRANSACTION_CONTEXT|HOST_ID|HOST_NAME|ISNULL|ISNUMERIC|MIN_ACTIVE_ROWVERSION|NEWID|NEWSEQUENTIALID|ROWCOUNT_BIG|XACT_STATE|' +
                '@@CONNECTIONS|@@CPU_BUSY|@@IDLE|@@IO_BUSY|@@PACKET_ERRORS|@@PACK_RECEIVED|@@PACK_SENT|@@TIMETICKS|@@TOTAL_ERRORS|@@TOTAL_READ|@@TOTAL_WRITE|FN_VIRTUALFILESTATS|' +
                'PATINDEX|TEXTPTR|TEXTVALID|' +
                'COALESCE|NULLIF');
            var dataTypes = ('BIGINT|BINARY|BIT|CHAR|CURSOR|DATE|DATETIME|DATETIME2|DATETIMEOFFSET|DECIMAL|FLOAT|HIERARCHYID|IMAGE|INTEGER|INT|MONEY|NCHAR|NTEXT|NUMERIC|NVARCHAR|REAL|SMALLDATETIME|SMALLINT|SMALLMONEY|SQL_VARIANT|TABLE|TEXT|TIME|TIMESTAMP|TINYINT|UNIQUEIDENTIFIER|VARBINARY|VARCHAR|XML');
            var builtInStoredProcedures = 'sp_addextendedproc|sp_addextendedproperty|sp_addmessage|sp_addtype|sp_addumpdevice|sp_add_data_file_recover_suspect_db|sp_add_log_file_recover_suspect_db|sp_altermessage|sp_attach_db|sp_attach_single_file_db|sp_autostats|sp_bindefault|sp_bindrule|sp_bindsession|sp_certify_removable|sp_clean_db_file_free_space|sp_clean_db_free_space|sp_configure|sp_control_plan_guide|sp_createstats|sp_create_plan_guide|sp_create_plan_guide_from_handle|sp_create_removable|sp_cycle_errorlog|sp_datatype_info|sp_dbcmptlevel|sp_dbmmonitoraddmonitoring|sp_dbmmonitorchangealert|sp_dbmmonitorchangemonitoring|sp_dbmmonitordropalert|sp_dbmmonitordropmonitoring|sp_dbmmonitorhelpalert|sp_dbmmonitorhelpmonitoring|sp_dbmmonitorresults|sp_db_increased_partitions|sp_delete_backuphistory|sp_depends|sp_describe_first_result_set|sp_describe_undeclared_parameters|sp_detach_db|sp_dropdevice|sp_dropextendedproc|sp_dropextendedproperty|sp_dropmessage|sp_droptype|sp_execute|sp_executesql|sp_getapplock|sp_getbindtoken|sp_help|sp_helpconstraint|sp_helpdb|sp_helpdevice|sp_helpextendedproc|sp_helpfile|sp_helpfilegroup|sp_helpindex|sp_helplanguage|sp_helpserver|sp_helpsort|sp_helpstats|sp_helptext|sp_helptrigger|sp_indexoption|sp_invalidate_textptr|sp_lock|sp_monitor|sp_prepare|sp_prepexec|sp_prepexecrpc|sp_procoption|sp_recompile|sp_refreshview|sp_releaseapplock|sp_rename|sp_renamedb|sp_resetstatus|sp_sequence_get_range|sp_serveroption|sp_setnetname|sp_settriggerorder|sp_spaceused|sp_tableoption|sp_unbindefault|sp_unbindrule|sp_unprepare|sp_updateextendedproperty|sp_updatestats|sp_validname|sp_who|sys.sp_merge_xtp_checkpoint_files|sys.sp_xtp_bind_db_resource_pool|sys.sp_xtp_checkpoint_force_garbage_collection|sys.sp_xtp_control_proc_exec_stats|sys.sp_xtp_control_query_exec_stats|sys.sp_xtp_unbind_db_resource_pool';
            var keywords = 'ABSOLUTE|ACTION|ADA|ADD|ADMIN|AFTER|AGGREGATE|ALIAS|ALL|ALLOCATE|ALTER|AND|ANY|ARE|ARRAY|AS|ASC|ASENSITIVE|ASSERTION|ASYMMETRIC|AT|ATOMIC|AUTHORIZATION|BACKUP|BEFORE|BEGIN|BETWEEN|BIT_LENGTH|BLOB|BOOLEAN|BOTH|BREADTH|BREAK|BROWSE|BULK|BY|CALL|CALLED|CARDINALITY|CASCADE|CASCADED|CASE|CATALOG|CHARACTER|CHARACTER_LENGTH|CHAR_LENGTH|CHECK|CHECKPOINT|CLASS|CLOB|CLOSE|CLUSTERED|COALESCE|COLLATE|COLLATION|COLLECT|COLUMN|COMMIT|COMPLETION|COMPUTE|CONDITION|CONNECT|CONNECTION|CONSTRAINT|CONSTRAINTS|CONSTRUCTOR|CONTAINS|CONTAINSTABLE|CONTINUE|CORR|CORRESPONDING|COVAR_POP|COVAR_SAMP|CREATE|CROSS|CUBE|CUME_DIST|CURRENT|CURRENT_CATALOG|CURRENT_DATE|CURRENT_DEFAULT_TRANSFORM_GROUP|CURRENT_PATH|CURRENT_ROLE|CURRENT_SCHEMA|CURRENT_TIME|CURRENT_TRANSFORM_GROUP_FOR_TYPE|CYCLE|DATA|DATABASE|DBCC|DEALLOCATE|DEC|DECLARE|DEFAULT|DEFERRABLE|DEFERRED|DELETE|DENY|DEPTH|DEREF|DESC|DESCRIBE|DESCRIPTOR|DESTROY|DESTRUCTOR|DETERMINISTIC|DIAGNOSTICS|DICTIONARY|DISCONNECT|DISK|DISTINCT|DISTRIBUTED|DOMAIN|DOUBLE|DROP|DUMP|DYNAMIC|EACH|ELEMENT|ELSE|END|END-EXEC|EQUALS|ERRLVL|ESCAPE|EVERY|EXCEPT|EXCEPTION|EXEC|EXECUTE|EXISTS|EXIT|EXTERNAL|EXTRACT|FETCH|FILE|FILLFACTOR|FILTER|FIRST|FOR|FOREIGN|FORTRAN|FOUND|FREE|FREETEXT|FREETEXTTABLE|FROM|FULL|FULLTEXTTABLE|FUNCTION|FUSION|GENERAL|GET|GLOBAL|GO|GOTO|GRANT|GROUP|HAVING|HOLD|HOLDLOCK|HOST|HOUR|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IGNORE|IMMEDIATE|IN|INCLUDE|INDEX|INDICATOR|INITIALIZE|INITIALLY|INNER|INOUT|INPUT|INSENSITIVE|INSERT|INTEGER|INTERSECT|INTERSECTION|INTERVAL|INTO|IS|ISOLATION|ITERATE|JOIN|KEY|KILL|LANGUAGE|LARGE|LAST|LATERAL|LEADING|LESS|LEVEL|LIKE|LIKE_REGEX|LIMIT|LINENO|LN|LOAD|LOCAL|LOCALTIME|LOCALTIMESTAMP|LOCATOR|MAP|MATCH|MEMBER|MERGE|METHOD|MINUTE|MOD|MODIFIES|MODIFY|MODULE|MULTISET|NAMES|NATIONAL|NATURAL|NCLOB|NEW|NEXT|NO|NOCHECK|NONCLUSTERED|NONE|NORMALIZE|NOT|NULL|NULLIF|OBJECT|OCCURRENCES_REGEX|OCTET_LENGTH|OF|OFF|OFFSETS|OLD|ON|ONLY|OPEN|OPERATION|OPTION|OR|ORDER|ORDINALITY|OUT|OUTER|OUTPUT|OVER|OVERLAPS|OVERLAY|PAD|PARAMETER|PARAMETERS|PARTIAL|PARTITION|PASCAL|PATH|PERCENT|PERCENTILE_CONT|PERCENTILE_DISC|PERCENT_RANK|PIVOT|PLAN|POSITION|POSITION_REGEX|POSTFIX|PRECISION|PREFIX|PREORDER|PREPARE|PRESERVE|PRIMARY|PRINT|PRIOR|PRIVILEGES|PROC|PROCEDURE|PUBLIC|RAISERROR|RANGE|READ|READS|READTEXT|RECONFIGURE|RECURSIVE|REF|REFERENCES|REFERENCING|REGR_AVGX|REGR_AVGY|REGR_COUNT|REGR_INTERCEPT|REGR_R2|REGR_SLOPE|REGR_SXX|REGR_SXY|REGR_SYY|RELATIVE|RELEASE|REPLICATION|RESTORE|RESTRICT|RESULT|RETURN|RETURNS|REVERT|REVOKE|ROLE|ROLLBACK|ROLLUP|ROUTINE|ROW|ROWCOUNT|ROWGUIDCOL|ROWS|RULE|SAVE|SAVEPOINT|SCHEMA|SCOPE|SCROLL|SEARCH|SECOND|SECTION|SECURITYAUDIT|SELECT|SEMANTICKEYPHRASETABLE|SEMANTICSIMILARITYDETAILSTABLE|SEMANTICSIMILARITYTABLE|SENSITIVE|SEQUENCE|SESSION|SET|SETS|SETUSER|SHUTDOWN|SIMILAR|SIZE|SOME|SPECIFIC|SPECIFICTYPE|SQL|SQLCA|SQLCODE|SQLERROR|SQLEXCEPTION|SQLSTATE|SQLWARNING|START|STATE|STATEMENT|STATIC|STATISTICS|STDDEV_POP|STDDEV_SAMP|STRUCTURE|SUBMULTISET|SUBSTRING_REGEX|SYMMETRIC|SYSTEM|TABLESAMPLE|TEMPORARY|TERMINATE|TEXTSIZE|THAN|THEN|TIMEZONE_HOUR|TIMEZONE_MINUTE|TO|TOP|TRAILING|TRAN|TRANSACTION|TRANSLATE|TRANSLATE_REGEX|TRANSLATION|TREAT|TRIGGER|TRIM|TRUNCATE|TSEQUAL|UESCAPE|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNPIVOT|UPDATE|UPDATETEXT|USAGE|USE|USER|USING|VALUE|VALUES|VARIABLE|VARYING|VAR_POP|VAR_SAMP|VIEW|WAITFOR|WHEN|WHENEVER|WHERE|WHILE|WIDTH_BUCKET|WINDOW|WITH|WITHIN|WITHIN GROUP|WITHOUT|WORK|WRITE|WRITETEXT|XMLAGG|XMLATTRIBUTES|XMLBINARY|XMLCAST|XMLCOMMENT|XMLCONCAT|XMLDOCUMENT|XMLELEMENT|XMLEXISTS|XMLFOREST|XMLITERATE|XMLNAMESPACES|XMLPARSE|XMLPI|XMLQUERY|XMLSERIALIZE|XMLTABLE|XMLTEXT|XMLVALIDATE|ZONE';
            keywords += '|KEEPIDENTITY|KEEPDEFAULTS|IGNORE_CONSTRAINTS|IGNORE_TRIGGERS|XLOCK|FORCESCAN|FORCESEEK|HOLDLOCK|NOLOCK|NOWAIT|PAGLOCK|READCOMMITTED|READCOMMITTEDLOCK|READPAST|READUNCOMMITTED|REPEATABLEREAD|ROWLOCK|SERIALIZABLE|SNAPSHOT|SPATIAL_WINDOW_MAX_CELLS|TABLOCK|TABLOCKX|UPDLOCK|XLOCK|IGNORE_NONCLUSTERED_COLUMNSTORE_INDEX|EXPAND|VIEWS|FAST|FORCE|KEEP|KEEPFIXED|MAXDOP|MAXRECURSION|OPTIMIZE|PARAMETERIZATION|SIMPLE|FORCED|RECOMPILE|ROBUST|PLAN|SPATIAL_WINDOW_MAX_CELLS|NOEXPAND|HINT';
            keywords += '|LOOP|HASH|MERGE|REMOTE';
            keywords += '|TRY|CATCH|THROW';
            keywords += '|TYPE';
            keywords = keywords.split('|');
            keywords = keywords.filter(function (value, index, self) {
                return logicalOperators.split('|').indexOf(value) === -1 && builtinFunctions.split('|').indexOf(value) === -1 && dataTypes.split('|').indexOf(value) === -1;
            });
            keywords = keywords.sort().join('|');
            var keywordMapper = this.createKeywordMapper({
                'constant.language': logicalOperators,
                'storage.type': dataTypes,
                'support.function': builtinFunctions,
                'support.storedprocedure': builtInStoredProcedures,
                'keyword': keywords
            }, 'identifier', true);
            var setStatements = 'SET ANSI_DEFAULTS|SET ANSI_NULLS|SET ANSI_NULL_DFLT_OFF|SET ANSI_NULL_DFLT_ON|SET ANSI_PADDING|SET ANSI_WARNINGS|SET ARITHABORT|SET ARITHIGNORE|SET CONCAT_NULL_YIELDS_NULL|SET CURSOR_CLOSE_ON_COMMIT|SET DATEFIRST|SET DATEFORMAT|SET DEADLOCK_PRIORITY|SET FIPS_FLAGGER|SET FMTONLY|SET FORCEPLAN|SET IDENTITY_INSERT|SET IMPLICIT_TRANSACTIONS|SET LANGUAGE|SET LOCK_TIMEOUT|SET NOCOUNT|SET NOEXEC|SET NUMERIC_ROUNDABORT|SET OFFSETS|SET PARSEONLY|SET QUERY_GOVERNOR_COST_LIMIT|SET QUOTED_IDENTIFIER|SET REMOTE_PROC_TRANSACTIONS|SET ROWCOUNT|SET SHOWPLAN_ALL|SET SHOWPLAN_TEXT|SET SHOWPLAN_XML|SET STATISTICS IO|SET STATISTICS PROFILE|SET STATISTICS TIME|SET STATISTICS XML|SET TEXTSIZE|SET XACT_ABORT'.split('|');
            var isolationLevels = 'READ UNCOMMITTED|READ COMMITTED|REPEATABLE READ|SNAPSHOP|SERIALIZABLE'.split('|');
            for (var i = 0; i < isolationLevels.length; i++) {
                setStatements.push('SET TRANSACTION ISOLATION LEVEL ' + isolationLevels[i]);
            }
            this.$rules = {
                start: [{
                        token: 'string.start',
                        regex: "'",
                        next: [{
                                token: 'constant.language.escape',
                                regex: /''/
                            }, {
                                token: 'string.end',
                                next: 'start',
                                regex: "'"
                            }, {
                                defaultToken: 'string'
                            }]
                    },
                    DocCommentHighlightRules.getStartRule('doc-start'), {
                        token: 'comment',
                        regex: '--.*$'
                    }, {
                        token: 'comment',
                        start: '/\\*',
                        end: '\\*/'
                    }, {
                        token: 'constant.numeric',
                        regex: '[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b'
                    }, {
                        token: keywordMapper,
                        regex: '@{0,2}[a-zA-Z_$][a-zA-Z0-9_$]*\\b(?!])'
                    }, {
                        token: 'constant.class',
                        regex: '@@?[a-zA-Z_$][a-zA-Z0-9_$]*\\b'
                    }, {
                        token: 'keyword.operator',
                        regex: '\\+|\\-|\\/|\\/\\/|%|<@>|@>|<@|&|\\^|~|<|>|<=|=>|==|!=|<>|=|\\*'
                    }, {
                        token: 'paren.lparen',
                        regex: '[\\(]'
                    }, {
                        token: 'paren.rparen',
                        regex: '[\\)]'
                    }, {
                        token: 'punctuation',
                        regex: ',|;'
                    }, {
                        token: 'text',
                        regex: '\\s+'
                    }],
                comment: [
                    DocCommentHighlightRules.getTagRule(), {
                        token: 'comment',
                        regex: '\\*\\/',
                        next: 'no_regex'
                    }, {
                        defaultToken: 'comment',
                        caseInsensitive: true
                    }
                ]
            };
            for (var i = 0; i < setStatements.length; i++) {
                this.$rules.start.unshift({
                    token: 'set.statement',
                    regex: setStatements[i]
                });
            }
            this.embedRules(DocCommentHighlightRules, 'doc-', [DocCommentHighlightRules.getEndRule('start')]);
            this.normalizeRules();
            var completions = [];
            var addCompletions = function (arr, meta) {
                arr.forEach(function (v) {
                    completions.push({
                        name: v,
                        value: v,
                        score: 0,
                        meta: meta
                    });
                });
            };
            addCompletions(builtInStoredProcedures.split('|'), 'procedure');
            addCompletions(logicalOperators.split('|'), 'operator');
            addCompletions(builtinFunctions.split('|'), 'function');
            addCompletions(dataTypes.split('|'), 'type');
            addCompletions(setStatements, 'statement');
            addCompletions(keywords.split('|'), 'keyword');
            this.completions = completions;
        };
        oop.inherits(SqlServerHighlightRules, TextHighlightRules);
        exports.SqlHighlightRules = SqlServerHighlightRules;
    });
    ace_1.default.define('ace/mode/sql', ['require', 'exports', 'module', 'ace/lib/oop', 'ace/mode/text', 'ace/mode/sql_highlight_rules', 'ace/range'], function (require, exports, module) {
        'use strict';
        var oop = ace_1.default.require('ace/lib/oop');
        var TextMode = ace_1.default.require('ace/mode/text').Mode;
        var SqlHighlightRules = ace_1.default.require('ace/mode/sql_highlight_rules').SqlHighlightRules;
        var Range = ace_1.default.require('ace/range').Range;
        var Mode = function () {
            this.HighlightRules = SqlHighlightRules;
        };
        oop.inherits(Mode, TextMode);
        (function () {
            this.lineCommentStart = '--';
            this.$id = 'ace/mode/sql';
        }).call(Mode.prototype);
        exports.Mode = Mode;
    });
}


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var dataSourceWizard_1 = __webpack_require__(139);
var popupWizard_1 = __webpack_require__(42);
var dataSourceWizardState_1 = __webpack_require__(12);
var pageFactory_1 = __webpack_require__(39);
var pageIterator_1 = __webpack_require__(37);
var _utils_1 = __webpack_require__(0);
var chooseDataSourceTypePage_1 = __webpack_require__(36);
var localization_utils_1 = __webpack_require__(1);
var pageId_1 = __webpack_require__(5);
var chooseJsonConnectionPage_1 = __webpack_require__(55);
var chooseJsonSourcePage_1 = __webpack_require__(40);
var chooseJsonSchemaPage_1 = __webpack_require__(56);
var chooseSqlConnectionPage_1 = __webpack_require__(54);
var specifyObjectDataSourceSettingsPage_1 = __webpack_require__(89);
var multiQueryConfigurePage_1 = __webpack_require__(86);
var multiQueryConfigureParametersPage_1 = __webpack_require__(87);
var configureMasterDetailRelationshipsPage_1 = __webpack_require__(88);
var _requestwrapper_1 = __webpack_require__(16);
var chooseObjectDataSourceTypesPage_1 = __webpack_require__(122);
var chooseObjectDataSourceDataMembersPage_1 = __webpack_require__(123);
var configureObjectDataSourceParametersPage_1 = __webpack_require__(80);
var _MultiQueryDataSourceWizardOptions = (function (_super) {
    __extends(_MultiQueryDataSourceWizardOptions, _super);
    function _MultiQueryDataSourceWizardOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return _MultiQueryDataSourceWizardOptions;
}(dataSourceWizard_1._DataSourceWizardOptionsBase));
exports._MultiQueryDataSourceWizardOptions = _MultiQueryDataSourceWizardOptions;
var MultiQueryDataSourceWizard = (function (_super) {
    __extends(MultiQueryDataSourceWizard, _super);
    function MultiQueryDataSourceWizard(pageFactory, _wizardOptions) {
        var _this = _super.call(this, pageFactory, _wizardOptions.callbacks.finishCallback) || this;
        _this._wizardOptions = _wizardOptions;
        _this.title = localization_utils_1.getLocalization('Data Source Wizard', 'AnalyticsCoreStringId.SqlDSWizard_Title');
        _this._extendCssClass = 'dxrd-multiqueries-sqldatasource-wizard';
        _this.height(443);
        return _this;
    }
    MultiQueryDataSourceWizard.prototype.canRunWizard = function () {
        return this._wizardOptions.jsonDataSourceAvailable || this._wizardOptions.sqlDataSourceAvailable || this._wizardOptions.objectDataSourceAvailable;
    };
    MultiQueryDataSourceWizard.prototype.initialize = function (state, createIterator) {
        var _this = this;
        if (createIterator === void 0) { createIterator = function (pageFactory, stateManager) { return new MultiQueryDataSourceWizardPageIterator(pageFactory, stateManager, _this._wizardOptions); }; }
        if (this._wizardOptions.sqlDataSourceAvailable || !_utils_1.isEmptyObject(state.sqlDataSourceWizard)) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Sql;
        }
        else if (this._wizardOptions.jsonDataSourceAvailable || state.jsonDataSourceWizard.jsonSource) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Json;
        }
        else if (this._wizardOptions.objectDataSourceAvailable) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Object;
        }
        _super.prototype.initialize.call(this, state, createIterator);
    };
    return MultiQueryDataSourceWizard;
}(popupWizard_1.PopupWizard));
exports.MultiQueryDataSourceWizard = MultiQueryDataSourceWizard;
var MultiQueryDataSourceWizardPageIterator = (function (_super) {
    __extends(MultiQueryDataSourceWizardPageIterator, _super);
    function MultiQueryDataSourceWizardPageIterator(pagesFactory, stateManager, _wizardOptions) {
        var _this = _super.call(this, pagesFactory, stateManager) || this;
        _this._wizardOptions = _wizardOptions;
        return _this;
    }
    MultiQueryDataSourceWizardPageIterator.prototype.getNextPageId = function (pageId) {
        if (!pageId && this._wizardOptions.jsonDataSourceAvailable && this._wizardOptions.sqlDataSourceAvailable) {
            return pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage;
        }
        else if (!pageId) {
            return this.getNextPageId(pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage);
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Sql) {
            return pageId_1.SqlDataSourceWizardPageId.ChooseConnectionPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Object) {
            return pageId_1.ObjectDataSourceWizardPageId.ChooseTypesPage;
        }
        else if (pageId === pageId_1.ObjectDataSourceWizardPageId.ChooseTypesPage && this._getCurrentState().objectDataSourceWizard.selectedType) {
            return pageId_1.ObjectDataSourceWizardPageId.ChooseDataMembersPage;
        }
        else if (pageId === pageId_1.ObjectDataSourceWizardPageId.ChooseDataMembersPage) {
            return pageId_1.ObjectDataSourceWizardPageId.ConfigureParametersPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Json && this._wizardOptions.connectionStrings.json().length > 0) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseConnectionPage;
        }
        else if (this._wizardOptions.allowCreateNewJsonConnection && pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Json) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage;
        }
        else if (pageId === pageId_1.JsonDataSourceWizardPageId.ChooseConnectionPage && this._getCurrentState().jsonDataSourceWizard.connectionName) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage;
        }
        else if (this._wizardOptions.allowCreateNewJsonConnection && pageId === pageId_1.JsonDataSourceWizardPageId.ChooseConnectionPage && !this._getCurrentState().jsonDataSourceWizard.connectionName) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage;
        }
        else if (pageId === pageId_1.JsonDataSourceWizardPageId.ChooseJsonSourcePage) {
            return pageId_1.JsonDataSourceWizardPageId.ChooseJsonSchemaPage;
        }
        else if (pageId === pageId_1.SqlDataSourceWizardPageId.ChooseConnectionPage && this._getCurrentState().sqlDataSourceWizard.name) {
            return pageId_1.SqlDataSourceWizardPageId.MultiQueryConfigurePage;
        }
        else if (this._getCurrentState().sqlDataSourceWizard.sqlDataSourceJSON && pageId === pageId_1.SqlDataSourceWizardPageId.MultiQueryConfigurePage && this._getCurrentState().sqlDataSourceWizard.customQueries.length > 0) {
            return pageId_1.SqlDataSourceWizardPageId.MultiQueryConfigureParametersPage;
        }
        else if (pageId === pageId_1.SqlDataSourceWizardPageId.MultiQueryConfigurePage || pageId === pageId_1.SqlDataSourceWizardPageId.MultiQueryConfigureParametersPage) {
            var sqlDataSourceWrapped = dataSourceWizardState_1._restoreSqlDataSourceFromState(this._getCurrentState().sqlDataSourceWizard);
            if (sqlDataSourceWrapped.sqlDataSource.queries().length > 1) {
                return pageId_1.DataSourceWizardPageId.ConfigureMasterDetailRelationshipsPage;
            }
        }
    };
    return MultiQueryDataSourceWizardPageIterator;
}(pageIterator_1.PageIterator));
exports.MultiQueryDataSourceWizardPageIterator = MultiQueryDataSourceWizardPageIterator;
function _registerMultiQueryDataSourcePages(factory, dataSourceWizardOptions) {
    if (factory === void 0) { factory = new pageFactory_1.PageFactory(); }
    chooseDataSourceTypePage_1._registerChooseDataSourceTypePage(factory, dataSourceWizardOptions);
    chooseJsonConnectionPage_1._registerChooseJsonConnectionPage(factory, dataSourceWizardOptions);
    chooseJsonSourcePage_1._registerChooseJsonSourcePage(factory, dataSourceWizardOptions.requestWrapper, dataSourceWizardOptions.callbacks.getItemsProviderCallback);
    chooseJsonSchemaPage_1._registerChooseJsonSchemaPage(factory, dataSourceWizardOptions.requestWrapper, dataSourceWizardOptions.callbacks);
    chooseSqlConnectionPage_1._registerChooseSqlConnectionPage(factory, dataSourceWizardOptions.connectionStrings.sql);
    specifyObjectDataSourceSettingsPage_1._registerSpecifyObjectDataSourceSettingsPage(factory, dataSourceWizardOptions);
    multiQueryConfigurePage_1._registerMultiQueryConfigurePage(factory, dataSourceWizardOptions);
    multiQueryConfigureParametersPage_1._registerMultiQueryConfigureParametersPage(factory, dataSourceWizardOptions.requestWrapper);
    configureMasterDetailRelationshipsPage_1._registerConfigureMasterDetailRelationshipsPage(factory, _requestwrapper_1.wrapRebuildResultSchema(dataSourceWizardOptions.callbacks.sqlDataSourceResultSchema));
    chooseObjectDataSourceTypesPage_1._registerChooseObjectDataSourceTypesPage(factory, dataSourceWizardOptions);
    chooseObjectDataSourceDataMembersPage_1._registerChooseObjectDataSourceDataMembersPage(factory, dataSourceWizardOptions);
    configureObjectDataSourceParametersPage_1._registerConfigureObjectDataSourceParametersPage(factory, dataSourceWizardOptions.callbacks.getItemsProviderCallback);
    return factory;
}
exports._registerMultiQueryDataSourcePages = _registerMultiQueryDataSourcePages;
function _createMultiQueryDataSourceWizard(factory, dataSourceWizardOptions) {
    if (factory === void 0) { factory = new pageFactory_1.PageFactory(); }
    _registerMultiQueryDataSourcePages(factory, dataSourceWizardOptions);
    return new MultiQueryDataSourceWizard(factory, dataSourceWizardOptions);
}
exports._createMultiQueryDataSourceWizard = _createMultiQueryDataSourceWizard;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var fullscreenWizard_1 = __webpack_require__(143);
var pageIterator_1 = __webpack_require__(37);
var _utils_1 = __webpack_require__(0);
var chooseDataSourceTypePage_1 = __webpack_require__(36);
var localization_utils_1 = __webpack_require__(1);
var pageId_1 = __webpack_require__(5);
var fullscreenWizardPageFactory_1 = __webpack_require__(140);
var specifySqlDataSourceSettingsPage_1 = __webpack_require__(142);
var specifyJsonDataSourceSettingsPage_1 = __webpack_require__(141);
var specifyObjectDataSourceSettingsPage_1 = __webpack_require__(89);
var FullscreenDataSourceWizard = (function (_super) {
    __extends(FullscreenDataSourceWizard, _super);
    function FullscreenDataSourceWizard(factory, _dataSourceWizardOptions) {
        var _this = _super.call(this, factory, _dataSourceWizardOptions.callbacks.finishCallback) || this;
        _this._dataSourceWizardOptions = _dataSourceWizardOptions;
        return _this;
    }
    FullscreenDataSourceWizard.prototype.initialize = function (state, createIterator) {
        var _this = this;
        if (createIterator === void 0) { createIterator = function (pageFactory, stateManager) { return new FullscreenDataSourceWizardPageIterator(pageFactory, stateManager, _this._dataSourceWizardOptions, function (page) { return _this._onResetPage(page); }); }; }
        if (this._dataSourceWizardOptions.sqlDataSourceAvailable || !_utils_1.isEmptyObject(state.sqlDataSourceWizard)) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Sql;
        }
        else if (this._dataSourceWizardOptions.jsonDataSourceAvailable || state.jsonDataSourceWizard.jsonSource) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Json;
        }
        else if (this._dataSourceWizardOptions.objectDataSourceAvailable || !_utils_1.isEmptyObject(state.objectDataSourceWizard)) {
            state.dataSourceType = chooseDataSourceTypePage_1.DataSourceType.Object;
        }
        _super.prototype.initialize.call(this, state, createIterator);
    };
    FullscreenDataSourceWizard.prototype.canRunWizard = function () {
        return this._dataSourceWizardOptions.canCreateDataSource;
    };
    FullscreenDataSourceWizard.prototype._description = function () {
        return localization_utils_1.getLocalization('Data Source Wizard', 'AnalyticsCoreStringId.DSWizard_Title');
    };
    return FullscreenDataSourceWizard;
}(fullscreenWizard_1.FullscreenWizard));
exports.FullscreenDataSourceWizard = FullscreenDataSourceWizard;
var FullscreenDataSourceWizardPageIterator = (function (_super) {
    __extends(FullscreenDataSourceWizardPageIterator, _super);
    function FullscreenDataSourceWizardPageIterator(factory, stateManager, _dataSourceOptions, onResetPage) {
        var _this = _super.call(this, factory, stateManager, onResetPage) || this;
        _this._dataSourceOptions = _dataSourceOptions;
        return _this;
    }
    FullscreenDataSourceWizardPageIterator.prototype._isMoreThanOneDataSourceTypeAvailable = function () {
        return this._dataSourceOptions.sqlDataSourceAvailable
            ? (this._dataSourceOptions.jsonDataSourceAvailable || this._dataSourceOptions.objectDataSourceAvailable)
            : (this._dataSourceOptions.jsonDataSourceAvailable && this._dataSourceOptions.objectDataSourceAvailable);
    };
    FullscreenDataSourceWizardPageIterator.prototype.getNextPageId = function (pageId) {
        if (!pageId && this._isMoreThanOneDataSourceTypeAvailable())
            return pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage;
        else if (!pageId && this._dataSourceOptions.sqlDataSourceAvailable) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifySqlDataSourceSettingsPage;
        }
        else if (!pageId && this._dataSourceOptions.jsonDataSourceAvailable) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifyJsonDataSourceSettingsPage;
        }
        else if (!pageId && this._dataSourceOptions.objectDataSourceAvailable) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifyObjectDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Json) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifyJsonDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Sql) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifySqlDataSourceSettingsPage;
        }
        else if (pageId === pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage && this._getCurrentState().dataSourceType === chooseDataSourceTypePage_1.DataSourceType.Object) {
            return pageId_1.FullscreenDataSourceWizardPageId.SpecifyObjectDataSourceSettingsPage;
        }
    };
    return FullscreenDataSourceWizardPageIterator;
}(pageIterator_1.PageIterator));
exports.FullscreenDataSourceWizardPageIterator = FullscreenDataSourceWizardPageIterator;
function _createDataSourceFullscreenWizard(dataSourceWizardOptions) {
    var factory = new fullscreenWizardPageFactory_1.FullscreenWizardPageFactory();
    chooseDataSourceTypePage_1._registerChooseDataSourceTypePage(factory, dataSourceWizardOptions);
    factory.getMetadata(pageId_1.DataSourceWizardPageId.ChooseDataSourceTypePage).navigationPanelText = localization_utils_1.getLocalization('Select Data Source Type', 'AnalyticsCoreStringId.Wizard_SelectDataSourceType');
    specifySqlDataSourceSettingsPage_1._registerSpecifySqlDataSourceSettingsPage(factory, dataSourceWizardOptions);
    specifyJsonDataSourceSettingsPage_1._registerSpecifyJsonDataSourceSettingsPage(factory, dataSourceWizardOptions);
    specifyObjectDataSourceSettingsPage_1._registerSpecifyObjectDataSourceSettingsPage(factory, dataSourceWizardOptions);
    return new FullscreenDataSourceWizard(factory, dataSourceWizardOptions);
}
exports._createDataSourceFullscreenWizard = _createDataSourceFullscreenWizard;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var WizardAction = (function () {
    function WizardAction(handler, text) {
        this.handler = handler;
        this.isVisible = ko.observable(true);
        this.isDisabled = ko.observable(false);
        this.text = text;
    }
    return WizardAction;
}());
exports.WizardAction = WizardAction;


/***/ }),
/* 172 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Widgets.Filtering;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
var jsQueryBuilder_1 = __webpack_require__(165);
var _jsDesignerBindingCommon_1 = __webpack_require__(0);
var _initializer_1 = __webpack_require__(90);
var localization_utils_1 = __webpack_require__(1);
var eventGenerator_1 = __webpack_require__(166);
var _utils_1 = __webpack_require__(0);
var templateUtils_1 = __webpack_require__(6);
var JSQueryBuilderBinding = (function (_super) {
    __extends(JSQueryBuilderBinding, _super);
    function JSQueryBuilderBinding(options, customEventRaiser) {
        var _this = _super.call(this, ko.unwrap(options), customEventRaiser) || this;
        _this.options = options;
        _this._deferreds = [];
        _this._templateHtml = templateUtils_1.getTemplate('dxrd-querybuilder');
        options.queryBuilderModel = _utils_1._wrapModelInObservable(options.queryBuilderModel);
        _this.sender = new jsQueryBuilder_1.JSQueryBuilder(options.queryBuilderModel);
        options.callbacks && options.callbacks._eventSenderCreated && options.callbacks._eventSenderCreated(_this.sender);
        return _this;
    }
    JSQueryBuilderBinding.prototype._applyBindings = function (model, _$element) {
        this._disposables.push(model);
        _$element.children().remove();
        var child = _$element.append(this._templateHtml).children()[0];
        if (!child)
            return;
        ko.cleanNode(child);
        this._callbacks && this._callbacks.beforeRender && this._callbacks.beforeRender(model);
        ko.applyBindings(model, child);
        var updateSizeTimeout = setTimeout(function () {
            model && model.updateSurfaceSize();
        }, 1);
        this._disposables.push({ dispose: function () { return clearTimeout(updateSizeTimeout); } });
    };
    JSQueryBuilderBinding.prototype._initializeEvents = function () {
        var _this = this;
        return this._getAvailableEvents(eventGenerator_1.EventGenerator.generateQueryBuilderEvents(function (eventName, args) {
            _this._fireEvent(eventName, args);
        }));
    };
    JSQueryBuilderBinding.prototype._initializeCallbacks = function () {
        if (this._options.callbacks) {
            return this._initializeEvents();
        }
    };
    JSQueryBuilderBinding.prototype._createModel = function (element) {
        this._callbacks = this._initializeCallbacks();
        return _initializer_1.createQueryBuilder(element, this._options, this._callbacks, false);
    };
    JSQueryBuilderBinding.prototype.dispose = function () {
        (this._deferreds || []).forEach(function (deferred) {
            deferred.reject();
        });
    };
    JSQueryBuilderBinding.prototype.applyBindings = function (element) {
        var _this = this;
        var _$element = $(element);
        var requestOptions = this._options.requestOptions;
        var applyModel = function () {
            if (requestOptions && requestOptions.invokeAction) {
                _this._options.handlerUri = _this._getServerActionUrl(requestOptions.host, requestOptions.invokeAction);
            }
            _this._deferreds.push(_this._createModel(element)
                .done(function (queryBuilderModel) {
                _this.options.queryBuilderModel(queryBuilderModel);
                _this.sender.queryBuilderModel = queryBuilderModel;
                _this._createDisposeFunction(element);
                _this._applyBindings(_this.sender.queryBuilderModel, _$element);
            }));
        };
        if (requestOptions) {
            this._getLocalizationRequest().done(function (localization) {
                localization && localization_utils_1.addCultureInfo(localization);
            }).always(function () {
                applyModel();
            });
        }
        else {
            applyModel();
        }
    };
    return JSQueryBuilderBinding;
}(_jsDesignerBindingCommon_1.JSDesignerBindingCommon));
exports.JSQueryBuilderBinding = JSQueryBuilderBinding;
ko.bindingHandlers['dxQueryBuilder'] = {
    init: function (element, valueAccessor) {
        var values = ko.unwrap(valueAccessor());
        new JSQueryBuilderBinding(values || {}).applyBindings(element);
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _add_querybuilder_to_bundle_1 = __webpack_require__(175);
var DevExpress = window.DevExpress || {};
_add_querybuilder_to_bundle_1._addQueryBuilderToBundle(DevExpress);
module.exports = {
    Analytics: DevExpress['Analytics'],
    QueryBuilder: DevExpress['QueryBuilder']
};


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Diagram = __webpack_require__(176);
var Data = __webpack_require__(179);
var DataInternal = __webpack_require__(180);
var DataUtils = __webpack_require__(181);
var DataMetadata = __webpack_require__(182);
var Wizard = __webpack_require__(183);
var WizardInternal = __webpack_require__(189);
var QueryBuilderWidgets = __webpack_require__(190);
var QueryBuilderWidgetsInternal = __webpack_require__(191);
var QueryBuilderMetadata = __webpack_require__(193);
var QueryBuilderUtils = __webpack_require__(194);
var QueryBuilderInternal = __webpack_require__(195);
var QueryBuilderElements = __webpack_require__(202);
var QueryBuilderElementsMetadata = __webpack_require__(203);
var QueryBuilder = __webpack_require__(204);
function _addQueryBuilderToBundle(bundle) {
    bundle.Analytics = bundle.Analytics || {};
    bundle.QueryBuilder = QueryBuilder;
    bundle.Analytics.Diagram = Diagram;
    bundle.Analytics.Data = Data;
    bundle.Analytics.Data.Internal = DataInternal;
    bundle.Analytics.Data.Utils = DataUtils;
    bundle.Analytics.Data.Metadata = DataMetadata;
    bundle.Analytics.Wizard = Wizard;
    bundle.Analytics.Wizard.Internal = WizardInternal;
    bundle.QueryBuilder.Widgets = QueryBuilderWidgets;
    bundle.QueryBuilder.Widgets.Internal = QueryBuilderWidgetsInternal;
    bundle.QueryBuilder.Metadata = QueryBuilderMetadata;
    bundle.QueryBuilder.Utils = QueryBuilderUtils;
    bundle.QueryBuilder.Internal = QueryBuilderInternal;
    bundle.QueryBuilder.Elements = QueryBuilderElements;
    bundle.QueryBuilder.Elements.Metadata = QueryBuilderElementsMetadata;
    return bundle;
}
exports._addQueryBuilderToBundle = _addQueryBuilderToBundle;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(20);
__webpack_require__(99);
__webpack_require__(101);
__webpack_require__(15);
__webpack_require__(29);
__webpack_require__(66);
__webpack_require__(67);
__webpack_require__(65);
__webpack_require__(22);
__webpack_require__(64);
__webpack_require__(100);
__webpack_require__(31);
__webpack_require__(48);
__webpack_require__(30);
__webpack_require__(63);
__webpack_require__(47);
__webpack_require__(167);
__webpack_require__(21);
__webpack_require__(177);
__webpack_require__(178);
__export(__webpack_require__(20));
__export(__webpack_require__(99));
__export(__webpack_require__(101));
__export(__webpack_require__(15));
__export(__webpack_require__(29));
__export(__webpack_require__(66));
__export(__webpack_require__(67));
__export(__webpack_require__(65));
__export(__webpack_require__(22));
__export(__webpack_require__(64));
__export(__webpack_require__(100));
__export(__webpack_require__(31));
__export(__webpack_require__(48));
__export(__webpack_require__(30));
__export(__webpack_require__(63));
__export(__webpack_require__(47));
__export(__webpack_require__(167));
__export(__webpack_require__(21));


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
__webpack_require__(17);
__webpack_require__(17);
__webpack_require__(17);
__webpack_require__(17);
var _snapLinesHelper_1 = __webpack_require__(0);
var _internal_1 = __webpack_require__(0);
var _utils_1 = __webpack_require__(0);
ko.bindingHandlers['routeLineDraggable'] = {
    init: function (element, valueAccessor) {
        var values = valueAccessor(), options = _utils_1.extend({ snap: '.dxrd-drag-snap-line', snapTolerance: _snapLinesHelper_1.SnapLinesHelper.snapTolerance }, ko.unwrap(values), {
            start: function (event, ui) {
                values.starting();
            },
            stop: function (event, ui) {
                values.stopped();
            },
            drag: function (event, ui) {
                var dx = ui.position.left - ui['originalPosition'].left, dy = ui.position.top - ui['originalPosition'].top;
                values.forceResize({ delta: { dx: dx, dy: dy } });
            }
        });
        $(element)['draggable'](options);
    }
};
function getInternetExplorerVersion() {
    var rv = -1;
    if (navigator.appName == 'Microsoft Internet Explorer') {
        var re = new RegExp('MSIE ([0-9]{1,}[\.0-9]{0,})');
        if (re.exec(navigator.userAgent) != null)
            rv = parseFloat(RegExp.$1);
    }
    else if (navigator.appName == 'Netscape') {
        var re = new RegExp('Trident/.*rv:([0-9]{1,}[\.0-9]{0,})');
        if (re.exec(navigator.userAgent) != null)
            rv = parseFloat(RegExp.$1);
    }
    return rv;
}
ko.bindingHandlers['updateConnectorArrow'] = {
    init: function (svgNode, valueAccessor, allBindings, viewModel, bindingContext) {
        var ieVersion = getInternetExplorerVersion();
        if (ieVersion > -1 && ieVersion <= 11) {
            var updateSubscription = bindingContext.$data.routePointsSet.subscribe(function () {
                if (bindingContext.$data.showArrow())
                    svgNode.parentNode.insertBefore(svgNode, svgNode);
            });
            _internal_1.addDisposeCallback(svgNode.parentNode, function () { return updateSubscription.dispose(); });
        }
    }
};


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(68);
__webpack_require__(69);
__webpack_require__(104);
__webpack_require__(71);
__webpack_require__(106);
__webpack_require__(49);
__webpack_require__(72);
__webpack_require__(73);
__webpack_require__(107);
__webpack_require__(50);
__webpack_require__(108);
__webpack_require__(110);
__webpack_require__(32);
__webpack_require__(51);
__webpack_require__(114);
__webpack_require__(74);
__webpack_require__(35);
__webpack_require__(34);
__webpack_require__(11);
__webpack_require__(18);
__webpack_require__(105);
__webpack_require__(103);
__webpack_require__(23);
__webpack_require__(52);
__export(__webpack_require__(68));
__export(__webpack_require__(69));
__export(__webpack_require__(104));
__export(__webpack_require__(71));
__export(__webpack_require__(106));
__export(__webpack_require__(49));
__export(__webpack_require__(72));
__export(__webpack_require__(73));
__export(__webpack_require__(107));
__export(__webpack_require__(50));
__export(__webpack_require__(108));
__export(__webpack_require__(110));
__export(__webpack_require__(32));
__export(__webpack_require__(51));
__export(__webpack_require__(114));
__export(__webpack_require__(74));
__export(__webpack_require__(35));
__export(__webpack_require__(34));
__export(__webpack_require__(11));
__export(__webpack_require__(18));
__export(__webpack_require__(105));
__export(__webpack_require__(103));
__export(__webpack_require__(23));
__export(__webpack_require__(52));


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(102);
__webpack_require__(75);
__webpack_require__(109);
__webpack_require__(19);
__export(__webpack_require__(102));
__export(__webpack_require__(75));
__export(__webpack_require__(109));
__export(__webpack_require__(19));


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(9);
__export(__webpack_require__(9));


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(112);
__webpack_require__(113);
__webpack_require__(116);
__webpack_require__(115);
__webpack_require__(33);
__export(__webpack_require__(112));
__export(__webpack_require__(113));
__export(__webpack_require__(116));
__export(__webpack_require__(115));
__export(__webpack_require__(33));


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(5);
__webpack_require__(12);
__webpack_require__(185);
__webpack_require__(7);
__webpack_require__(36);
__webpack_require__(54);
__webpack_require__(80);
__webpack_require__(122);
__webpack_require__(123);
__webpack_require__(124);
__webpack_require__(55);
__webpack_require__(125);
__webpack_require__(40);
__webpack_require__(56);
__webpack_require__(24);
__webpack_require__(130);
__webpack_require__(86);
__webpack_require__(87);
__webpack_require__(88);
__webpack_require__(39);
__webpack_require__(76);
__webpack_require__(37);
__webpack_require__(186);
__webpack_require__(14);
__webpack_require__(187);
__webpack_require__(42);
__webpack_require__(139);
__webpack_require__(169);
__webpack_require__(140);
__webpack_require__(38);
__webpack_require__(141);
__webpack_require__(142);
__webpack_require__(143);
__webpack_require__(144);
__webpack_require__(170);
__webpack_require__(188);
__webpack_require__(126);
__webpack_require__(89);
__export(__webpack_require__(5));
__export(__webpack_require__(12));
__export(__webpack_require__(7));
__export(__webpack_require__(36));
__export(__webpack_require__(54));
__export(__webpack_require__(80));
__export(__webpack_require__(122));
__export(__webpack_require__(123));
__export(__webpack_require__(124));
__export(__webpack_require__(55));
__export(__webpack_require__(125));
__export(__webpack_require__(40));
__export(__webpack_require__(56));
__export(__webpack_require__(24));
__export(__webpack_require__(130));
__export(__webpack_require__(86));
__export(__webpack_require__(87));
__export(__webpack_require__(88));
__export(__webpack_require__(39));
__export(__webpack_require__(76));
__export(__webpack_require__(37));
__export(__webpack_require__(14));
__export(__webpack_require__(42));
__export(__webpack_require__(139));
__export(__webpack_require__(169));
__export(__webpack_require__(140));
__export(__webpack_require__(38));
__export(__webpack_require__(141));
__export(__webpack_require__(142));
__export(__webpack_require__(143));
__export(__webpack_require__(144));
__export(__webpack_require__(170));
__export(__webpack_require__(126));
__export(__webpack_require__(89));


/***/ }),
/* 184 */
/***/ (function(module, exports) {

module.exports = { default: window["ace"] };

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(120);
__webpack_require__(119);
__webpack_require__(117);
__webpack_require__(118);
__webpack_require__(127);
__webpack_require__(85);
__webpack_require__(13);
__webpack_require__(133);
__webpack_require__(131);
__webpack_require__(132);
__webpack_require__(79);
__webpack_require__(78);
__webpack_require__(121);
__webpack_require__(77);
__webpack_require__(41);
__webpack_require__(129);
__webpack_require__(128);
__webpack_require__(171);
__webpack_require__(82);
__webpack_require__(83);
__webpack_require__(81);
__webpack_require__(84);
__export(__webpack_require__(120));
__export(__webpack_require__(119));
__export(__webpack_require__(117));
__export(__webpack_require__(118));
__export(__webpack_require__(127));
__export(__webpack_require__(85));
__export(__webpack_require__(13));
__export(__webpack_require__(133));
__export(__webpack_require__(131));
__export(__webpack_require__(132));
__export(__webpack_require__(79));
__export(__webpack_require__(78));
__export(__webpack_require__(121));
__export(__webpack_require__(77));
__export(__webpack_require__(41));
__export(__webpack_require__(129));
__export(__webpack_require__(128));
__export(__webpack_require__(171));
__export(__webpack_require__(82));
__export(__webpack_require__(83));
__export(__webpack_require__(81));
__export(__webpack_require__(84));


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(111);
__export(__webpack_require__(111));


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(25);
__webpack_require__(168);
__webpack_require__(53);
__webpack_require__(145);
__webpack_require__(146);
__webpack_require__(148);
__webpack_require__(149);
__webpack_require__(43);
__webpack_require__(150);
__webpack_require__(151);
__webpack_require__(138);
__webpack_require__(134);
__webpack_require__(135);
__webpack_require__(137);
__webpack_require__(136);
var registerEditorTemplates_1 = __webpack_require__(192);
registerEditorTemplates_1.registerEditorTemplates();
__export(__webpack_require__(25));
__export(__webpack_require__(53));
__export(__webpack_require__(145));
__export(__webpack_require__(146));
__export(__webpack_require__(148));
__export(__webpack_require__(149));
__export(__webpack_require__(43));
__export(__webpack_require__(150));
__export(__webpack_require__(151));
__export(__webpack_require__(138));
__export(__webpack_require__(134));
__export(__webpack_require__(135));
__export(__webpack_require__(137));
__export(__webpack_require__(136));


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _undoEditor_1 = __webpack_require__(145);
var editorTemplates_1 = __webpack_require__(25);
function registerEditorTemplates() {
    editorTemplates_1.editorTemplates.registerEditors({
        bool: { header: 'dx-boolean-select', custom: 'dxqb-property-editor' },
        combobox: { header: 'dx-combobox', custom: 'dxqb-property-editor' },
        comboboxUndo: { header: 'dx-combobox-undo', custom: 'dxqb-property-editor', editorType: _undoEditor_1.UndoEditor },
        text: { header: 'dx-text', custom: 'dxqb-property-editor' },
        filterEditor: { header: 'dxrd-filterstring', custom: 'dxqb-property-editor' },
        filterGroupEditor: { header: 'dxrd-filterstringgroup', custom: 'dxqb-property-editor' },
        numeric: { header: 'dx-numeric', custom: 'dxqb-property-editor' }
    });
}
exports.registerEditorTemplates = registerEditorTemplates;


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(44);
__export(__webpack_require__(44));


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(70);
__webpack_require__(27);
__webpack_require__(8);
__webpack_require__(9);
__export(__webpack_require__(70));
__export(__webpack_require__(27));
__export(__webpack_require__(8));
__export(__webpack_require__(9));


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(90);
__webpack_require__(197);
__webpack_require__(157);
__webpack_require__(198);
__webpack_require__(152);
__webpack_require__(158);
__webpack_require__(156);
__webpack_require__(16);
__webpack_require__(155);
__webpack_require__(98);
__webpack_require__(199);
__webpack_require__(200);
__webpack_require__(201);
__export(__webpack_require__(90));
__export(__webpack_require__(157));
__export(__webpack_require__(152));
__export(__webpack_require__(158));
__export(__webpack_require__(156));
__export(__webpack_require__(16));
__export(__webpack_require__(155));
__export(__webpack_require__(98));


/***/ }),
/* 196 */
/***/ (function(module, exports) {

module.exports = { default: DevExpress.config };

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ko = __webpack_require__(2);
var $ = __webpack_require__(3);
__webpack_require__(17);
__webpack_require__(17);
__webpack_require__(17);
__webpack_require__(17);
var _localization_1 = __webpack_require__(0);
var _internal_1 = __webpack_require__(0);
var templateUtils_1 = __webpack_require__(6);
ko.bindingHandlers['dxdTableView'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var templateHtml = templateUtils_1.getTemplate('dxd-tableview'), $element = $(element).append(templateHtml), $titles, $content, rtl = !!bindingContext.$root.rtl, value = ko.unwrap(valueAccessor());
        var onDataScroll = function (e) {
            if (e.scrollOffset.left >= 0) {
                if (!$titles)
                    $titles = $element.find('.dxd-tableview-titles');
                if (!$content)
                    $content = $element.find('.dxd-tableview-data table');
                $titles.offset({ left: $content.offset().left, top: $titles.offset().top });
            }
        };
        var onDataScrollInitialized = function (e) {
            $content = null;
            if (!rtl)
                return;
            var dxScroll = e.component;
            setTimeout(function () { return dxScroll.scrollTo({ left: dxScroll.scrollWidth(), top: 0 }); }, 1);
        };
        ko.applyBindings({
            onDataScroll: onDataScroll,
            onDataScrollInitialized: onDataScrollInitialized,
            data: value,
            rtl: rtl,
            noDataText: _localization_1.noDataText,
            isImage: function (index) { return value.schema[index].type === 'System.Byte[]'; },
            isImageTooLarge: function (cellValue) { return cellValue[0] === '!'; },
            getImageTooLargeText: function (cellValue) { return 'Image too large (' + cellValue.substring(1) + ' bytes)'; }
        }, $element.children()[0]);
        $element.find('.dxd-tableview-titles .dxd-tableview-resizable').each(function (index, resizable) {
            var $title = $(resizable).find('.dxd-tableview-cell-text');
            var $column = $element.find('.dxd-tableview-data .dxd-tableview-resizable' + index);
            if (index < value.schema.length - 1) {
                $(resizable)['resizable']({
                    handles: 'e',
                    alsoResize: $column.parent(),
                    resize: function (e, ui) {
                        $title.outerWidth(ui.size.width);
                        $column.outerWidth(ui.size.width);
                    }
                });
            }
            var maxWidth = Math.max($title.width(), $column.width());
            $title.width(maxWidth);
            $column.width(maxWidth);
        });
        _internal_1.addDisposeCallback($element.children()[0], function () {
            $element.find('.dxd-tableview-titles .dxd-tableview-resizable').each(function (_, resizable) {
                if ($(resizable).data('ui-resizable'))
                    $(resizable)['resizable']('destroy');
            });
            $element = null;
        });
        return { controlsDescendantBindings: true };
    }
};


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var _svgTemplateEngine_1 = __webpack_require__(10);
_svgTemplateEngine_1.SvgTemplatesEngine.addTemplates({
    'dxdd-connection-line': '<svg class="dxdd-connection-line" style="width:100%; height: 100%"> <line class="dxd-qb-relationship-line-color" data-bind="attr: { x1: startPoint().relativeX, y1: startPoint().relativeY, x2: endPoint().relativeX, y2: endPoint().relativeY }" /> </svg>',
    'dxdd-connecting-point': '<div class="dxdd-connecting-point" data-bind="styleunit: position, trackCursor: underCursor, style: { \'marginLeft\': -3 * _context.zoom() + \'px\', \'marginTop\': -3 * _context.zoom() + \'px\' }, draggable: $root.connectingPointDragHandler"> <svg style="width:100%; height: 100%"> <line x1="0" y1="0" x2="100%" y2="100%" /> <line x1=0 y1="100%" x2="100%" y2="0" /> </svg> </div>',
    'dxdd-connection-point-selection': '<div class="dxrd-control" data-bind="draggable: $root.connectionPointDragHandler, styleunit: { top: relativeY, left: relativeX }"> </div>',
    'dxdd-connector': '<div class="dxdd-connector" data-bind="styleunit: position, trackCursor: underCursor"> <!-- ko template: { name: \'dxdd-connection-line\' } --> <!-- /ko --> </div>',
    'dxdd-connector-selection': '<div class="dxdd-connector" data-bind="styleunit: position, dxclick: function() {}, draggable: $root.dragHandler"> <!-- ko template: { name: \'dxdd-connection-line\' } --> <!-- /ko --> <!-- ko with: startPoint --> <!-- ko template: { name: \'dxdd-connection-point-selection\' } --> <!-- /ko --> <!-- /ko --> <!-- ko with: endPoint --> <!-- ko template: { name: \'dxdd-connection-point-selection\' } --> <!-- /ko --> <!-- /ko --> </div>',
    'dxdd-routed-connection-line': '<svg class="dxdd-connection-line"> <defs> <!-- ko if: showArrow --> <marker data-bind="attr: { id: \'dxqb-arrow_end\' + connectorID() }" viewBox="0 0 5 10" refX="5" refY="5" markerUnits="userSpaceOnUse" orient="auto" markerWidth="14" markerHeight="14"> <polyline class="dxd-qb-relationship-line-color" points="0,0 5,5 0,10" /> </marker> <!-- /ko --> <!-- ko if: showRightArrow --> <marker data-bind="attr: { id: \'dxqb-arrow_start\' + connectorID() }" viewBox="0 0 5 10" refX="5" refY="5" markerUnits="userSpaceOnUse" orient="auto-start-reverse" markerWidth="14" markerHeight="14"> <polyline class="dxd-qb-relationship-line-color" points="0,0 5,5 0,10" /> </marker> <!-- /ko --> </defs> <polyline class="dxd-qb-relationship-line-color" fill="none" data-bind="attr: { points: routePointsSet, \'marker-end\': showArrow() ? \'url(#dxqb-arrow_end\' + connectorID() + \')\' : \'\', \'marker-start\': showRightArrow() ? \'url(#dxqb-arrow_start\' + connectorID() + \')\' : \'\' }, updateConnectorArrow: $data" /> </svg>',
    'dxdd-routed-connector': '<div class="dxdd-connector" data-bind="styleunit: position, visible: isVisible"> <!-- ko template: { name: \'dxdd-routed-connection-line\' } --> <!-- /ko --> <!-- ko foreach: routeLineWrappers --> <div data-bind="styleunit: position" style="position: absolute;"> <!-- ko with: $parent --> <div class="dxd-selectable" data-bind="trackCursor: underCursor, click: $root.selectItemProperties" style="position: relative; width: 100%; height: 100%;"></div> <!-- /ko --> </div> <!-- /ko --> </div>',
    'dxdd-routed-connector-selection': '<div class="dxdd-connector dxrd-selected dxd-state-selected" data-bind="styleunit: position, dxclick: function() {}, visible: isVisible"> <!-- ko template: { name: \'dxdd-routed-connection-line\' } --> <!-- /ko --> <!-- ko foreach: routeLineWrappers --> <!-- ko ifnot: isLocked --> <div data-bind="styleunit: position, style: { cursor: isVerticalLine ? \'ew-resize\' : \'ns-resize\' }, routeLineDraggable: { starting: $root.resizeHandler.starting, stopped: function() { resizeStopped(); $root.resizeHandler.stopped(); }, forceResize: resizeHandler }" style="position: absolute;"> </div> <!-- /ko --> <!-- ko if: isLocked --> <div data-bind="styleunit: position" style="position: absolute;"> </div> <!-- /ko --> <!-- /ko --> <!-- ko with: startPoint --> <!-- ko template: { name: \'dxdd-connection-point-selection\' } --> <!-- /ko --> <!-- /ko --> <!-- ko with: endPoint --> <!-- ko template: { name: \'dxdd-connection-point-selection\' } --> <!-- /ko --> <!-- /ko --> </div>',
    'dx-diagram-element': '<div class="dxrd-control dxd-selectable" data-bind="styleunit: position, trackCursor: underCursor"> <div class="dxrd-control-content-main" data-bind="styleunit: { lineHeight: positionLineHeightWithoutMargins }, style: css"> <div data-bind="template: contenttemplate, styleunit: { \'height\': positionLineHeightWithoutMargins, \'width\': positionWidthWithoutMargins }"> </div> </div> </div>',
    'dx-diagram-element-selection': '<div class="dxrd-control" data-bind="event: { dblclick: $root.inlineTextEdit.show }, css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused }, resizable: $root.resizeHandler, draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor"> <!-- ko if: !$root.inlineTextEdit.visible() --> <div class="dxrd-control-content-main" data-bind="styleunit: { lineHeight: positionLineHeightWithoutMargins }, style: css"> <div data-bind="template: contenttemplate, styleunit: { \'height\': positionLineHeightWithoutMargins, \'width\': positionWidthWithoutMargins}"> </div> </div> <!-- /ko --> <!-- ko if: $root.inlineTextEdit.visible --> <!-- ko with: $root.inlineTextEdit --> <div class="inline-text-edit" data-bind="dxTextArea: { value: text, onKeyUp: keypressAction, valueChangeEvent: \'keyup\' }"></div> <!-- /ko --> <!-- /ko --> </div>',
    'dx-diagram-element-content': '<div style="width: 100%; height: 100%; border: 1px solid black"> <div data-bind="text: getControlModel().text"></div> </div>',
    'dxdd-element-content-with-connecting-points': '<div style="width: 100%; height: 100%; overflow: hidden"> <svg style="top:0; left: 0; width: 100%; height: 100%; stroke: black; fill: transparent; stroke-width: 1"> <!-- ko if: getControlModel().type() === \'Ellipse\' --> <ellipse cx="50%" cy="50%" rx="50%" ry="50%" /> <!-- /ko --> <!-- ko if: getControlModel().type() === \'Condition\' --> <line x1="50%" y1="0" x2="100%" y2="50%" /> <line x1="100%" y1="50%" x2="50%" y2="100%" /> <line x1="50%" y1="100%" x2="0" y2="50%" /> <line x1="0" y1="50%" x2="50%" y2="0" /> <!-- /ko --> <!-- ko if: !getControlModel().type() --> <rect height="100%" width="100%" /> <!-- /ko --> <text x="50%" y="50%" alignment-baseline="middle" style="text-anchor: middle; cursor:default;" data-bind="text: getControlModel().text"></text> </svg> <!-- ko foreach: connectingPoints --> <!-- ko template: \'dxdd-connecting-point\' --> <!-- /ko --> <!-- /ko --> </div>',
    'dx-diagram-surface': '<div class="dxrd-surface" style="height: 100%; display:inline-block;" data-bind="styleunit: { \'width\': Math.min(pageWidth(), $root.surfaceSize()) }, click: function(_, e) { $root.selection.clickHandler(null, e); e.stopPropagation(); }, keyDownActions: $root.actionLists"> <div class="dxrd-viewport" style="overflow:auto;width:inherit;height:inherit;" data-bind="styleunit: { minWidth: Math.min(pageWidth(), $root.surfaceSize()), maxWidth: pageWidth(),  maxHeight: pageHeight() + 20 }"> <div data-bind="selectable: { selection: $root.selection, zoom: zoom }"> <div class="dxrd-ghost-containment"> <div class="dxrd-ghost-container" style="background: white;position: relative;" data-bind="styleunit: { \'width\': pageWidth(), \'height\': pageHeight() }, trackCursor: underCursor"> <!-- ko foreach: controls --> <!-- ko template: { name: isSelected() ? selectiontemplate : template } --> <!-- /ko --> <!-- /ko --> </div> </div> </div> </div> </div>',
    'dxqb-joincondition': '<div class="dxdd-connector" data-bind="styleunit: position, trackCursor: underCursor"> <svg style="width:100%; height: 100%"> <line data-bind="attr: { x1: startPoint.x, y1: startPoint.y, x2: endPoint.x, y2: endPoint.y }" /> </svg> </div>',
    'dx-query-surface': '<div class="dxrd-surface" style="display:inline-block;" data-bind="styleunit: { \'width\': $root.surfaceSize }, click: function(_, e) { $root.selection.clickHandler(null, e); e.stopPropagation(); }, keyDownActions: $root.actionLists"> <div class="dxrd-viewport" style="width:inherit;height:inherit;"> <div class="dxqb-mainwin" data-bind="dxScrollView: { direction: \'both\', showScrollbar: \'onHover\', scrollByContent: false, scrollByThumb: true, bounceEnabled: false, useNative: false, height: \'100%\' }"> <div style="height:100%;"> <div class="dxrd-ghost-containment" style="height:100%;"> <div class="dxrd-ghost-container dxqb-ghost-container" data-bind="styleunit: { \'minWidth\': pageWidth, \'minHeight\': pageHeight }, trackCursor: { recalculateBounds: true, underCursor: underCursor }"> <div class="dxqb-main" data-bind="trackCursor: { recalculateBounds: true, underCursor: underCursor }, style: { \'z-index\' : $parent.dragDropStarted() ? 2 : null }"> <!-- ko if: tables().length === 0--> <div class="dxqb-placeholder dxd-empty-area-placeholder-text-color dxd-text-info" data-bind="text: placeholder()"></div> <!-- /ko --> <!-- ko foreach: relations --> <!-- ko foreach: conditions --> <!-- ko if: !isSelected()--> <!-- ko template: template --> <!-- /ko --> <!-- /ko --> <!-- /ko --> <!-- /ko --> <!-- ko foreach: tables --> <!-- ko template: template --> <!-- /ko --> <!-- /ko --> <!-- ko foreach: relations --> <!-- ko foreach: conditions --> <!-- ko if: isSelected()--> <!-- ko template: selectiontemplate --> <!-- /ko --> <!-- /ko --> <!-- /ko --> <!-- /ko --> <!-- ko with: $root.columnDragHandler.dragDropConnector --> <svg class="dxdd-connection-line-draggable" data-bind="styleunit: { top: position.top(), left: position.left() }"> <!-- ko foreach: routePoints --> <!-- ko if: $index() < ($parent.routePoints().length - 1) --> <line class="dxd-qb-relationship-line-color" fill="none" data-bind="attr: {x1 : $data.x, y1: $data.y, x2: $parent.routePoints()[$index()+1].x, y2: $parent.routePoints()[$index()+1].y }"></line> <!-- /ko --> <!-- /ko --> </svg> <!-- /ko --> </div> </div> </div> </div> </div> </div> </div>',
    'dxqb-relation': '<!-- ko foreach: conditions --> <!-- ko template: { name: isSelected() ? selectiontemplate : template } --> <!-- /ko --> <!-- /ko -->',
    'dxqb-table-field': '<div class="dx-border-inheritor dxd-border-accented"> <div class="dxqb-table-field dxd-qb-table-field-border-color dxd-qb-table-field-back-color dxd-back-highlighted dxd-qb-table-field-separator-color dxd-border-primary" data-bind="trackCursor: { recalculateBounds: true, underCursor: underCursor }, draggable: $root.columnDragHandler, css: cssClasses($root.surface(), $root.columnDragHandler, $parent), click: $root.selectItemProperties"> <div class="dxqb-table-field-background dxd-back-accented"></div> <div class="dxqb-table-field-checkbox-wrapper"> <div class="dxqb-table-field-checkbox" data-bind="dxCheckBox: { value: selectedWrapper }, click: function(surface, e) { surface.toggleSelected(); e.stopPropagation(); return true;  }"></div> </div> <div class="dxqb-table-field-content dxd-text-primary" data-bind="attr: { title: getControlModel().actualName }"> <div class="dxqb-table-field-state"> <!-- ko if:  $data.isAscending() --> <div class="dxqb-image-field-state dxqb-image-field-sorting-asc"><!-- ko template: \'dxrd-svg-queryBuilder-sorting_asc\' --><!-- /ko --></div> <!-- /ko --> <!-- ko if:  $data.isDescending() --> <div class="dxqb-image-field-state dxqb-image-field-sorting-desc"><!-- ko template: \'dxrd-svg-queryBuilder-sorting_desc\' --><!-- /ko --></div> <!-- /ko --> <!-- ko if: $data.getControlModel().groupBy --> <div class="dxqb-image-field-state dxqb-image-field-group-by"><!-- ko template: \'dxrd-svg-queryBuilder-group_by\' --><!-- /ko --></div> <!-- /ko --> <!-- ko if: $data.isAggregate() --> <div class="dxqb-image-field-state dxqb-image-field-aggregate"><!-- ko template: \'dxrd-svg-queryBuilder-aggregate\' --><!-- /ko --></div> <!-- /ko --> </div> <div class="dxqb-table-field-caption"> <div class="dxqb-table-field-text dxd-qb-table-field-text-color" data-bind="text: getControlModel().actualName"></div> </div> </div> </div> </div>',
    'dxqb-table-asterisk-field': '<div class="dx-border-inheritor dxd-border-accented"> <div class="dxqb-table-field dxd-qb-table-field-border-color dxd-qb-table-field-back-color dxd-back-highlighted dxd-border-primary" data-bind="trackCursor: underCursor, css: cssClasses(), click: $root.selectItemProperties"> <div class="dxqb-table-field-background dxd-back-accented"></div> <div class="dxqb-table-field-checkbox-wrapper"> <div class="dxqb-table-field-checkbox" data-bind="dxCheckBox: { value: selectedWrapper }, click: function(surface, e) { surface.toggleSelected(); e.stopPropagation(); return true;  }"></div> </div> <div class="dxqb-table-field-content dxd-text-primary" data-bind="attr: { title: getControlModel().name }"> <div class="dxqb-table-field-caption"> <div class="dxqb-table-field-text dxd-qb-table-field-text-color" data-bind="text: getControlModel().name"></div> </div> </div> </div> </div>',
    'dxqb-table-main': '<!-- ko if: $data.isSelected() --> <div class="dxqb-table-resize-ghost" data-bind="resizable: resizable($root.resizeHandler, $element), styleunit: position"></div> <!-- /ko --> <div class="dxrd-control" data-bind="css: {\'dxrd-selected\': selected, \'dxrd-focused\': focused }, draggable: $root.dragHandler, styleunit: position, trackCursor: underCursor, click: $root.selectItemProperties"> <div class="dxrd-control-content-main dxd-qb-table-back-color dxd-back-primary2" data-bind="styleunit: { lineHeight: position.lineHeight }, style: css"> <div class="dxqb-table-background dxd-back-accented"></div> <div class="dx-background-inheritor dxd-back-accented"> <div class="dxqb-table-border dxd-qb-table-border-color dxd-back-highlighted dxd-state-active dxd-state-no-hover"></div> </div> <div data-bind="template: contenttemplate, styleunit: { \'height\': position.lineHeight, \'width\': position.width }"> </div> </div> </div>',
    'dxqb-table': '<div class="dxqb-table dxd-qb-table-back-color dxd-back-primary2"> <div class="dx-border-inheritor dxd-border-accented"> <div class="dxqb-table-head-field dxd-qb-table-field-border-color dxd-qb-table-field-back-color dxd-back-highlighted dxd-border-primary"> <div class="dxqb-table-checkbox-all"> <div data-bind="dxCheckBox: { value: selectedWrapper }, click: function(surface, e) { $root.undoEngine().start(); surface.toggleSelected(); $root.undoEngine().end(); e.stopPropagation(); return true; }"></div> </div> <div class="dxqb-table-title dxd-text-primary" data-bind="text: getControlModel().actualName, style: { cursor: selected() ? \'move\' : \'default\' }"></div> </div> </div> <div class="dxqb-table-content"> <div class="dxqb-tableFields-wrapper"> <!-- ko ifnot: $data.isInitialized() --> <div class="dxqb-table-loading"> <div class="dxqb-table-loading-text dxd-text-primary" data-bind="text: $root.columnsLoadingMsg()"></div> </div> <!-- /ko --> <!-- ko if: $data.isInitialized() --> <!-- ko template: { name: asterisk.template, data: asterisk } --> <!-- /ko --> <!-- ko foreach: columns --> <!-- ko lazy: { template: $data.template  }--> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div> </div> </div>',
    'dxrd-masterDetail-editor': '<!-- ko if: $data --> <div> <div data-bind="dxPopup: { showTitle: true, width: \'95%\', height: \'95%\', title: title(), visible: popupVisible, wrapperAttr: { class: \'dx-filtereditor\' }, toolbarItems: buttonItems, showCloseButton: true, container: $root.getPopupContainer($element), position: { of: $root.getPopupContainer($element) }, }"> <div class="dx-filtereditor-tree dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', direction: \'both\' }" style="cursor: default"> <!-- ko foreach: masterQueries --> <div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-text dxd-filter-editor-text-color criteria-operator-item-group dxd-filter-editor-group-back-color dxd-state-no-hover stylized" data-bind="text: queryName"></div> <div data-bind="service: { name: \'createRelation\' }"></div> </div> <div class="criteria-operator-content"> <!-- ko template: { name: \'dx-masterDetail-editor-relation\', foreach: relations }--> <!-- /ko --> </div> </div> <!-- /ko --> </div> </div> <div class="dx-selectbox-popup-wrapper dx-dropdownlist-popup-wrapper dx-filtereditor-criteriaoperator-popup dx-dropdowneditor-overlay" data-bind="dxPopupWithAutoHeight: { width: \'170px\', height: \'300px\', focusStateEnabled: false, wrapperAttr: { class: \'dx-selectbox-popup-wrapper dx-dropdownlist-popup-wrapper dx-filtereditor-criteriaoperator-popup dx-dropdowneditor-overlay\' }, position: $root.rtl ? { my: \'right top\', at: \'right bottom\', of: popupService.target } : { my: \'left top\', at: \'left bottom\', of: popupService.target }, container: $root.getPopupContainer($element), target: popupService.target, showTitle: false, showCloseButton: false, animation: {}, closeOnOutsideClick: true, shading: false, visible: popupService.visible }"> <!-- ko with: popupService--> <!-- ko with: data --> <!-- ko template: template--> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div> </div> <!-- /ko -->',
    'dx-masterDetail-editor-keyColumn': '<div class="criteria-operator-text dxd-filter-editor-text-color criteria-operator-item-field dxd-filter-editor-field-back-color dxd-state-no-hover stylized" data-bind="attr: { title: $data.getTitle() }, text: queryName"></div> <div class="criteria-operator-text dxd-filter-editor-text-color">.</div> <div class="criteria-operator-text dxd-filter-editor-text-color"> <div data-bind="service: { name: \'setColumn\' }"></div> </div>',
    'dx-masterDetail-editor-relation': '<div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-action" data-bind="dxclick: function() {  $parent.remove($data); }"> <div class="criteria-operator-action-image dx-image-filtereditor-remove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> </div> <div class="criteria-operator-item" data-bind="visible: isEditable"> <div class="criteria-operator-item-editor" data-bind="dxTextBox: { value: relationName, onFocusOut: function() { isEditable(false); } }, focus: { on: isEditable }"></div> </div> <div class="criteria-operator-text dxd-filter-editor-text-color criteria-operator-item-value dxd-filter-editor-value-back-color" data-bind="visible: !isEditable()"> <div class="criteria-operator-text dxd-filter-editor-text-color clickable" data-bind="text: relationName, click: function() { isEditable(true); }"></div> </div> <div class="criteria-operator-action" data-bind="dxclick: create"> <div class="criteria-operator-action-image dx-image-filtereditor-add"><!-- ko template: \'dxrd-svg-filtereditor-add\' --><!-- /ko --></div> </div> </div> <div class="criteria-operator-content"> <!-- ko foreach: keyColumns --> <div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-action" data-bind="dxclick: function() {  $parent.remove($data); }"> <div class="criteria-operator-action-image dx-image-filtereditor-remove"><!-- ko template: \'dxrd-svg-filtereditor-remove\' --><!-- /ko --></div> </div> <!-- ko template: { name: \'dx-masterDetail-editor-keyColumn\', data: master } --> <!-- /ko --> <div class="criteria-operator-text dxd-filter-editor-text-color"> = </div> <!-- ko template: { name: \'dx-masterDetail-editor-keyColumn\', data: detail } --> <!-- /ko --> </div> </div> <!-- /ko --> </div> </div>',
    'dx-masterdetail-editor-setColumn': '<div class="criteria-operator-text dxd-filter-editor-text-color clickable criteria-operator-item-field dxd-filter-editor-field-back-color" data-bind="text: target.column() || target.selectColumnText(), dxclick: showPopup, css: { \'dxd-state-selected\': target.isSelected, \'default\': !target.column() }"></div>',
    'dxqb-data-preview': '<div style="height: 100%" data-bind="dxdTableView: $data.value"></div>',
    'dxqb-popup': '<div data-bind="dxPopup: { animation: { show: { type: \'fade\', from: 0, to: 1, duration: 700 }, hide: { type: \'fade\', from: 1, to: 0, duration: 700 } }, wrapperAttr: { class: \'dxqb-preview\' }, visible: isVisible, title: title(), showTitle: true, resizeEnabled: true, shading: true, shadingColor: \'transparent\', fullScreen: false, width: 800, height: 544, container: container($element), position: { of: container($element) }, onHidden: function() { $data.data.value(null) }, focusStateEnabled: false }"> <div class="dxqb-preview-popup-content"> <!-- ko if: data && !isLoading() --> <!-- ko template: { name: template, data: data } --> <!-- /ko --> <!-- /ko --> <!-- ko if: isLoading --> <div style="text-align: center; padding-top: 25%;"> <div data-bind="dxLoadIndicator: { visible: true }"></div> </div> <!-- /ko --> </div> <div class="dxqb-preview-popup-buttons dxd-border-secondary"> <div class="dxqb-preview-popup-button" data-bind="dxButton: { text: okButtonText(), onClick: okButtonHandler, disabled: isLoading }"></div> </div> </div>',
    'dxqb-selectstatment-preview': '<div class="dxqb-show-query-string-content dx-widget"> <!-- ko if: !aceAvailable --> <div class="dxrd-show-query-string-editor" data-bind="dxTextArea: { value: value, valueChangeEvent: \'keyup\', readOnly: true }"></div> <!-- /ko --> <!-- ko if: aceAvailable --> <div class="dxrd-show-query-string-editor"> <div class="dxrd-show-query-string-editor-content"> <div class="dx-sql_editor dx-disabled-ace dxd-back-primary2" data-bind="dxAceEditor: { value: value, options: aceOptions, additionalOptions: additionalOptions }"></div> </div> </div> <!-- /ko --> </div>',
    'dxd-tableview': '<div class="dxd-tableview"> <div class="dxd-tableview-titles"> <table> <tbody> <tr> <!-- ko foreach: rtl ? data.schema.reverse() : data.schema --> <td data-bind="attr: { class: \'dxd-tableview-title-cell dxd-border-secondary dxd-tableview-resizable\' }"> <div class="dxd-tableview-cell-text dxd-qb-data-preview-cell-text-color dxd-text-info" data-bind="text: name"></div> </td> <!-- /ko --> </tr> </tbody> </table> </div> <!-- ko if: data.values --> <div class="dxd-tableview-data" data-bind="dxScrollView: { direction: \'both\', scrollByContent: false, showScrollbar: \'always\', scrollByThumb: true, bounceEnabled: false, useNative: false, onScroll: $data.onDataScroll, onInitialized: $data.onDataScrollInitialized }"> <table> <tbody> <!-- ko foreach: data.values --> <tr> <!-- ko foreach: $parent.rtl ? $data.reverse() : $data --> <td class="dxd-tableview-cell dxd-border-secondary"> <!-- ko ifnot: $parents[1].isImage($index()) --> <div data-bind="text: $data, attr: { class: \'dxd-tableview-cell-text dxd-text-primary dxd-tableview-resizable\' + $index() }"></div> <!-- /ko --> <!-- ko if: $parents[1].isImage($index()) --> <!-- ko if: $parents[1].isImageTooLarge($data) --> <div data-bind="text: $parents[1].getImageTooLargeText($data), attr: { class: \'dxd-tableview-cell-text dxd-text-primary dxd-tableview-resizable\' + $index() }"></div> <!-- /ko --> <!-- ko ifnot: $parents[1].isImageTooLarge($data) --> <div data-bind="attr: { class: \'dxd-tableview-cell-text dxd-text-primary dxd-tableview-resizable\' + $index() }"> <img data-bind="attr: { src: \'data:image/bmp;base64,\' + $data }" /> </div> <!-- /ko --> <!-- /ko --> </td> <!-- /ko --> </tr> <!-- /ko --> <tr class="dxd-tableview-data-fakerow"> <!-- ko foreach: data.values[0] --> <td class="dxd-tableview-cell dxd-border-secondary"> <div data-bind="attr: { class: \'dxd-tableview-cell-text dxd-text-primary dxd-tableview-resizable\' + $index() }"></div> </td> <!-- /ko --> </tr> </tbody> </table> </div> <!-- /ko --> <!-- ko ifnot: data.values --> <div class="dxd-tableview-empty-message" data-bind="text: noDataText()"></div> <!-- /ko --> </div>',
    'dxqb-fieldlist-wrapper': '<div id="tree" data-bind="treelist: treeListOptions" style="width:100%; height: 100%;"></div>',
    'dxqb-properties-wrapper': '<div class="dxrd-properties-wrapper" data-bind="visible: active() && visible()"> <div style="height:100%" class="dxd-text-primary"> <!-- ko with: model --> <div class="dxrd-properties-grid dxd-border-primary" data-bind="dxScrollView: { showScrollbar: \'onHover\', useNative: false, scrollByThumb: true }" style="top: 0px;"> <div> <!-- ko foreach: groups --> <div class="dx-fieldset" data-bind="visible: visible"> <div data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dxrd-group-header dx-accordion-header" data-bind="css: { \'dxrd-group-header-collapsed dxd-border-primary\': collapsed() }"> <div class="dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }" style="display:inline-block;"></div> <span class="dxrd-group-header-text" data-bind="text: displayName()"></span> </div> <div class="dx-accordion-content dxd-back-primary"> <!-- ko ifnot: editorsCreated --> <div class="dx-accordion-content-loading-panel"> <div data-bind="dxLoadIndicator: { visible: !editorsCreated() }"></div> </div> <!-- /ko --> <!-- ko if: $data.editorsRendered() --> <div data-bind="visible: editorsCreated"> <div class="dx-editors"> <!-- ko foreach: editors --> <!-- ko template: editorTemplate --> <!-- /ko --> <!-- ko if: ($index() === $parent.editors().length - 1 && $parent.editorsCreated(true)) --> <!-- /ko --> <!-- /ko --> </div> </div> <!-- /ko --> </div> </div> </div> <!-- /ko --> </div> </div> <!-- /ko --> </div> </div>',
    'dxqb-propertygrid': '<!-- ko with: value --> <div class="dx-fieldset dxqb-selected-properties"> <!-- ko foreach: properties.getEditors() --> <!-- ko template: editorTemplate --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko -->',
    'dxqb-fieldspanel': '<!-- ko with: value --> <div data-bind="treeListSearchPanel: { controllers: $data.fieldListModel.treeListOptions().treeListController }"></div> <div class="dxqb-right-panel-fields" data-bind="dxScrollView: { showScrollbar: \'onHover\', scrollByContent: false, scrollByThumb: true, bounceEnabled: false, useNative: false }"> <!-- ko template: { name: "dxqb-fieldlist-wrapper", data: fieldListModel } --> <!-- /ko --> </div> <!-- /ko -->',
    'dxqb-parameterspanel': '<!-- ko with: value --> <div class="dxqb-right-panel-parameters" data-bind="dxScrollView: { showScrollbar: \'onHover\', scrollByContent: false, scrollByThumb: true, bounceEnabled: false, useNative: false }"> <div style="width: 100%" data-bind="dxCollectionEditor: $data"></div> </div> <!-- /ko -->',
    'dxqb-collectioneditor-template': '<div class="dxrd-accordion-collection-item" data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dxrd-group-header dx-accordion-header"> <div> <div class="propertygrid-editor-collapsed dx-collapsing-image" data-bind="css: { \'dx-image-expanded\': !collapsed() }, template: \'dxrd-svg-collapsed\'"></div> <div class="dx-group-header-font" data-bind="text: $root.getLocalization($parent.name), attr: { title: $root.getLocalization($parent.name) }"></div> </div> </div> <div class="dx-accordion-content"> <div data-bind="dxPropertyGrid: { target: value, level: 1, parentDisabled: editor.disabled }"></div> </div> </div>',
    'dxqb-toolbar': '<div class="dxrd-toolbar-wrapper dxd-toolbar-back-color" data-bind="click: $root.findControl"> <div class="dxqb-toolbar-background dxd-back-primary-invariant"></div> <div class="dxrd-toolbar" data-bind="template: {name: \'dxqb-toolbar-items\', data: actionLists.toolbarItems }"></div> </div>',
    'dxqb-toolbar-items': '<!-- ko foreach: $data --> <!-- ko if: $data.templateName --> <!-- ko template: templateName  --> <!-- /ko --> <!-- /ko --> <!-- ko if: !$data.templateName --> <div class="dxrd-toolbar-item" data-bind="visible: visible"> <div class="dxqb-toolbar-item-container"> <div class="dxqb-toolbar-item-background dxd-back-secondary"></div> <div data-bind="template: {name: ko.unwrap($data.imageTemplateName), if: !!ko.unwrap($data.imageTemplateName)}, attr: { class: \'dxrd-toolbar-item-image dxd-icon-highlighted dxd-state-normal \' + (ko.unwrap($data.imageClassName) || \'\'), title: $data.displayText && $data.displayText() || text }, dxclick: function() { if((typeof $data.disabled === \'function\') && !disabled() || !disabled) { clickAction($root.model && $root.model()); } }, css: {\'dxrd-disabled-button\': disabled, \'dxd-state-active\': $data.selected }"> </div> </div> <div class="dxrd-toolbar-item-separator dxd-toolbar-separator-color dxd-border-secondary" data-bind="visible: $data.hasSeparator"></div> </div> <!-- /ko --> <!-- /ko -->',
    'dxqb-property-editor': '<div class="dxrd-editor" data-bind="visible: visible"> <div class="dxrd-editor-header"> <div class="dx-field dxd-back-primary"> <div class="dx-field-label dxd-text-primary"> <div class="propertygrid-editor-displayName" data-bind="text: displayName, attr: { \'title\': displayName }"></div> </div> <div class="dx-field-value"> <div data-bind="service: { name: \'createEditorAddOn\' }"></div> <!-- ko lazy: { template: templateName } --> <!-- /ko --> </div> </div> </div> </div>',
    'dxqb-expressionstring': '<!-- ko if: $data.value() --> <div data-bind="dxExpressionEditor: getOptions({ options: value, fieldListProvider: $root.parametersBindingsProvider, displayNameProvider: $root.displayNameProvider && $root.displayNameProvider() })"></div> <!-- /ko -->',
    'dxqb-filtereditor-changeparameter': '<div class="criteria-operator-item" data-bind="visible: target.isEditable"> <div class="criteria-operator-item" data-bind="dxTextBox: { value: target._parameterName, onFocusOut: function() { target.createParameter(); target.isEditable(false); } }"></div> </div> <div class="criteria-operator-text dxd-filter-editor-text-color clickable " data-bind="text: target.parameterName, dxclick: showPopup, css: { \'dxd-state-selected\': target.isSelected, \'default\': target.isDefaultTextDisplayed() }, visible: $data.target.isEditable() === false"></div>',
    'dxqb-filtereditor-propertiespopup': '<div class="dx-widget" data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <!-- ko foreach: data --> <div data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dx-accordion-header"> <div class="dx-filtereditor-popup-item dxd-list-item-back-color dx-item dx-list-item dxd-back-highlighted"> <div class="dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }" style="display:inline-block;  margin-left: 5px;"></div> <span class="dx-item-content dx-list-item-content" style="padding-left: 17px" data-bind="text: name"></span> </div> </div> <div class="dx-accordion-content dxd-back-primary"> <!-- ko foreach: items --> <div class="dx-filtereditor-popup-item dx-item dx-list-item dxd-list-item-back-color dxd-back-highlighted"> <span class="dx-item-content dx-list-item-content" style="padding-left: 17px" data-bind="text: name, attr: { \'title\': name }, click: function() { $parents[1].click($data); }"></span> </div> <!--/ko --> </div> </div> <!--/ko --> </div>',
    'dxqb-filtereditor-parameterspopup': '<div class="dx-widget" data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <!-- ko if: $parent.viewModel.canCreateParameters --> <div class="dx-filtereditor-popup-item dx-item dx-list-item dxd-list-item-back-color dxd-back-highlighted"> <span class="dx-item-content dx-list-item-content" data-bind="text: $parent.viewModel.defaultDisplay(), click: function() { $parent.viewModel.isEditable(true); $parent.viewModel._parameterName(\'\'); $parent.visible(false); }"></span> </div> <!-- /ko --> <!-- ko foreach: data --> <div class="dx-filtereditor-popup-item dx-item dx-list-item dxd-list-item-back-color dxd-back-highlighted"> <span class="dx-item-content dx-list-item-content" data-bind="text: name, click: function() { $parent.click($data); } "></span> </div> <!-- /ko --> </div>',
    'dxqb-treelist-item-with-search': '<div data-bind="visible: visible"> <!-- ko template: "dxqb-treelist-header-item-with-search" --> <!-- /ko --> </div>',
    'dxqb-treelist-header-item-with-search': '<div class="dx-treelist-item dxd-list-item-back-color dxd-back-highlighted" data-bind="event: { dblclick: function() { $data.dblClickHandler ? $data.dblClickHandler($data) : $data.toggleCollapsed() } }, styleunit: padding, css: { \'dx-treelist-item-selected dxd-state-selected\': isSelected() || isMultiSelected() }"> <div class="dx-treelist-collapsedbutton"></div> <div class="dx-treelist-caption"> <div class="dx-treelist-selectedcontent" data-bind="click: toggleSelected,  draggable: isDraggable ? dragDropHandler : null"> <div class="dx-treelist-image" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: text }"> </div> <!-- ko template: { name: \'dx-treelist-item-text-content\' } --> <!-- /ko --> </div> </div> </div>',
    'dxrd-page-choose-datasource-type': '<div class="dxrd-wizard-type-page" data-bind="css: $data._extendCssClass(\'type-page\')"> <!-- ko foreach: typeItems --> <div data-bind="event: { click: $parent._itemClick, dblclick: function() { $parent._goToNextPage() } }, attr: { class: \'dxd-back-highlighted dxd-state-normal dxrd-wizard-type-item dx-fontsize-reestablished dxrd-wizard-type-item-border-color dxd-list-item-back-color \' + $parent._extendCssClass(\'type-item\')}, css: { \'dxd-border-secondary dxd-back-secondary\': $parent._IsSelected($data) } "> <div data-bind="attr: { class: \'dxrd-wizard-type-image \' + $parent._extendCssClass(\'type-image\') }, css: imageClassName, template: imageTemplateName"> </div> <div class="dxrd-wizard-type-text" data-bind="text: text, attr: { title: text }, css: $parent._extendCssClass(\'type-text\')"></div> </div> <!-- /ko --> </div>',
    'dx-wizard-fullscreen': '<!-- ko if: $data && $data.isVisible() --> <div class="dx-fullscreen-wizard dx-editors" data-bind="css: { \'dx-rtl\': $root.rtl, \'dx-ltr\': !$root.rtl }"> <div class="dxrd-wizard dxrd-report-wizard dx-editors dxd-text-primary dxd-back-primary2" data-bind="css: _extendCssClass"> <div class="dxrd-wizard-steps-container dxd-back-primary" data-bind="visible: $data.navigationPanel().isVisible"> <div class="dxrd-wizard-title dxd-border-primary" data-bind="text: _description(), attr: {\'title\': _description() }"></div> <!-- ko with: navigationPanel --> <div class="dxrd-wizard-steps" data-bind="foreach: _steps"> <div class="dxrd-wizard-steps-relative" style="position:relative" data-bind="visible: $data.visible"> <div class="dxrd-wizard-steps-content" data-bind="click: $data.clickAction, text: $data.text, attr: {\'title\': $data.text }, css: { \'dxrd-disabled\': $data.disabled, \'dxd-back-secondary\': $data.isActive() }"></div> <div class="dxrd-wizard-steps-marker dxd-back-primary2" data-bind="visible: $data.isActive"></div> </div> </div> <!-- /ko --> </div> <div class="dxrd-wizard-content" data-bind="css: { \'withoutPanel\': !$data.navigationPanel().isVisible() }"> <div class="dxrd-wizard-part-description dxd-back-contrast"> <div class="dxrd-wizard-part-description-text dxd-text-primary dxd-border-primary" data-bind="text: _pageDescription()"></div> </div> <!-- ko with: _currentPage --> <div class="dxrd-wizard-work-content"> <div class="dxrd-wizard-work-content-relative"> <div data-bind="template: { name: template, data: page } "></div> </div> </div> <!-- /ko --> <div class="dxrd-wizard-load-panel dxd-text-primary" data-bind="dxLoadPanel: _loadPanelViewModel($element)"> </div> <div class="dxrd-wizard-navigation"> <div data-bind="dxButton: cancelButton" class="dxrd-wizard-btn left"></div> <div data-bind="dxButton: finishButton" class="dxrd-wizard-btn right"></div> <div data-bind="dxButton: nextButton" class="dxrd-wizard-btn right"></div> <div data-bind="dxButton: previousButton" class="dxrd-wizard-btn right"></div> </div> </div> </div> </div> <!-- /ko -->',
    'dx-wizard-fullscreen-page': '<!-- ko if: $data._sections.length > 0 --> <div style="position:absolute;" data-bind="foreach: _sections, css: _className, styleunit: { top: _parentMarginOffset, left: _parentMarginOffset, right: _parentMarginOffset, bottom: _parentMarginOffset }"> <div class="dx-border-inheritor dxd-border-accented"> <div class="dxrd-report-page-tile dxd-border-secondary" data-bind="css: { \'dxrd-disabled\': !$data.page() }, style: $parent._pageCss[$data.pageId]"> <div class="dxrd-report-page-tile-title" data-bind="visible: $parent._showPageDescription(), text: $parent._getPageDescription($index(), $data), attr: { title: $parent._getPageDescription($index(), $data) }"></div> <!-- ko if: $data.page() !== null --> <!-- ko with: page --> <div class="dxrd-report-page-tile-content" data-bind="template: { name: $parent.metadata.template, data: page }, dxScrollView: { showScrollbar: \'onHover\'}"></div> <!-- /ko --> <!-- /ko --> <!-- ko if: $data.page() === null --> <div class="dxrd-report-page-tile-content dx-default-border-style dxd-border-secondary"> <div class="dxrd-wizard-page dxrd-wizard-disabled-content" data-bind="text: metadata.disabledText"></div> </div> <!-- /ko --> </div> </div> </div> <!-- /ko -->',
    'dxrd-jsondatasource-fields-page': '<div class="dxrd-wizard-page dx-jsonschema-page dx-frameless-style"> <div class="dx-default-border-style dxd-border-secondary dxrd-wizard-dataMember dx-fieldset" style="height:100%"> <div class="dx-field"> <div class="dx-field-label" data-bind="text: _rootElementTitle"></div> <div class="dx-field-value" data-bind="dxSelectBox: { dataSource: _rootElementList, value: _selectedRootElement, displayExpr: \'fullPath\', displayCustomValue: true, useItemTextAsTitle: true, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div> </div> <div class="dxrd-wizard-add-queries-page dxrd-wizard-page-treelist-accordion-style dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\' }"> <div data-bind="treelist: _fieldListModel" style="width:100%; height: 100%;"></div> </div> </div> </div>',
    'dxrd-page-jsonsource': '<div class="dxrd-wizard-page dx-jsonsource-page dx-frameless-style"> <div class="dx-default-border-style dxd-border-secondary dxrd-wizard-dataMember dx-fieldset" style="height: 100%" data-bind="dxScrollView: { showScrollbar: \'onHover\', useNative: false, scrollByThumb: true }, dxValidationGroup: $data._validationGroup || {}"> <div class="dx-field"> <div class="dx-property-required dx-field-label" data-bind="text: _jsonConnectionTitle, attr: { \'title\': _jsonConnectionTitle }"></div> <div class="dx-field-value" data-bind="dxTextBox: { value: _connectionName }, dxValidator: { validationRules: $data._connectionNameValidationRules || [] }"></div> </div> <div class="dx-field"> <div class="dx-field-label" data-bind="text: _jsonSourceTitle, attr: { \'title\': _jsonSourceTitle }"></div> <div class="dx-field-value" data-bind="dxLocalizedSelectBox: { dataSource: _sources, value: _selectedSource, valueExpr:\'value\', displayExpr: \'displayValue\', displayCustomValue: true, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div> </div> <!-- ko with: _selectedSource --> <div data-bind="dxValidationGroup: $data.validationGroup || {}"> <div data-bind="css: $data.cssClass"> <!-- ko template: { name: \'dx-propertieseditor\', data: grid } --> <!-- /ko --> </div> <div class="dxrd-wizard-validationsummary" data-bind="dxValidationSummary: $data.validationSummary || {}, visible: $data.validationSummary && !isValid()"></div> </div> <!-- /ko --> <div class="dxrd-wizard-validationsummary" data-bind="dxValidationSummary: $data._validationSummary || {}, visible: $data._validationSummary && _selectedSource().validationSummary && !canNext()"></div> </div> </div>',
    'dx-property-json-string-editor': '<div class="dx-field" data-bind="visible: visible"> <!-- ko template: templateName --> <!-- /ko --> </div>',
    'dxrd-page-dataSource': '<div class="dxrd-wizard-page"> <!-- ko if: isDataSourceCreationAvailable --> <div class="dxrd-wizard-datasourceoperation dxrd-radio-nowrap-ellipsis" style="margin-bottom: 15px" data-bind="dxRadioGroup: { value: selectedDataSourceOperation, items: dataSourceOperations, layout: \'vertical\' }"> <div data-options="dxTemplate : { name: \'item\' }"> <div class="dxrd-radio-nowrap-ellipsis-text" data-bind="text: text, attr: { \'title\': text }"></div> </div> </div> <!-- /ko --> <div class="dxrd-wizard-availabledatasources dx-default-border-style dxd-border-secondary"> <div class="dxrd-wizard-list" data-bind="dxList: { dataSource: availableDataSources, selectedItems: selectedDataSource, focusStateEnabled:false, editEnabled: true, height: dataSourcesListHeight, editConfig: { selectionEnabled: false }, selectionMode: \'single\', activeStateEnabled: false, disabled: createNewDataSource, noDataText: $root.dx._static.noDataText() }"> <div data-options="dxTemplate : { name: \'item\' }"> <div data-bind="text: name"></div> </div> </div> </div></div>',
    'dxrd-page-selectitems': '<div class="dxrd-wizard-page"> <!-- ko template: { name: \'dxrd-page-selectitems-radio-group\', data: $data } --> <!-- /ko --> <!-- ko template: { name: \'dxrd-page-selectitems-list\', data: $data } --> <!-- /ko --> </div>',
    'dxrd-page-selectitems-radio-group': '<!-- ko if: canCreateNew --> <div class="dxrd-wizard-datasourceoperation dxrd-radio-nowrap-ellipsis" style="margin-bottom: 15px" data-bind="dxRadioGroup: { value: selectedOperation, items: operations, layout: \'vertical\' }"> <div data-options="dxTemplate : { name: \'item\' }"> <div class="dxrd-radio-nowrap-ellipsis-text" data-bind="text: text, attr: { \'title\': text }"></div> </div> </div> <!-- /ko -->',
    'dxrd-page-selectitems-list': '<div class="dxrd-wizard-availabledatasources dx-default-border-style dxd-border-secondary" data-bind="styleunit: { top: $data.canCreateNew() ? 65 : 0 }"> <div class="dxrd-wizard-list dxd-border-primary" data-bind="dxList: { dataSource: items, onSelectionChanged: function(e) { selectedItems(e.addedItems) }, selectedItems: selectedItems.peek(), hoverStateEnabled:false, editEnabled: true, height: \'100%\', editConfig: { selectionEnabled: false }, searchExpr: \'name\', searchEnabled: true, selectionMode: \'single\', activeStateEnabled: false, disabled: _createNew, noDataText: $root.dx._static.noDataText(), searchEditorOptions: { placeholder: $root.dx._static.searchPlaceholder() } }"> <div data-options="dxTemplate : { name: \'item\' }" data-bind="event: { dblclick: function(e){ $parent.onDblClick() } }"> <div data-bind="text: $parent._displayExpr($data)"></div> </div> </div> </div>',
    'dxrd-page-specify-connection': '<div class="dxrd-wizard-page"> <!-- ko template: { name: \'dxrd-page-selectitems-radio-group\', data: $data } --> <!-- /ko --> <!-- ko if: !_createNew() --> <!-- ko template: { name: \'dxrd-page-selectitems-list\', data: $data } --> <!-- /ko --> <!-- /ko --> <!-- ko if: _createNew --> <div style="position:relative; top: 65px; height: calc(100% - 65px)"> <!-- ko template: { name: \'dxrd-page-jsonsource\', data: _specifySourceData } --> <!-- /ko --> </div> <!-- /ko --></div>',
    'dx-jsonwizard-parametercollection': '<div class="dx-field"> <!-- ko with: value --> <div class="dx-jsonwizard-parameter-left-container"> <div class="dx-jsonwizard-parameter"> <div data-bind="dxLocalizedSelectBox: { dataSource: _parameterTypes, value: itemType, valueExpr:\'value\', displayExpr: \'displayValue\', displayCustomValue: true, dropDownOptions: { container: $root.getPopupContainer($element) } }"></div> </div> </div> <div class="dx-jsonwizard-parameter-middle-container"> <div data-bind="dxTextBox: { value: name, placeholder: $data.namePlaceholder() }, dxValidator: { validationRules: $parent.editor.editorOptions.nameValidationRules || [] }"></div> </div> <div class="dx-jsonwizard-parameter-right-container"> <div class="dx-jsonwizard-parameter"> <div data-bind="dxTextBox: { value: _editingValue, placeholder: $data.valuePlaceholder() }, visible: !$data.isExpression()"></div> <div data-bind="dxExpressionEditor: { options: _expression, fieldListProvider: $parent.editor.editorOptions.itemsProvider, displayNameProvider: $root.displayNameProvider && $root.displayNameProvider() }, visible: $data.isExpression"></div> </div> </div> <!-- ko template: { name: \'dx-wizard-menu-box-editorswitch\', data: $data } --> <!-- /ko  --> <!-- /ko --> </div>',
    'dx-jsonwizard-loadfile-editor': '<div data-bind="dxFileImagePicker: { value: value, placeholderId: \'File\', accept:\'.json,.txt\' }"></div>',
    'dx-jsonwizard-jsonstring-editor': '<!-- ko if: !aceAvailable --> <div class="dxrd-jsonwizard-jsonstring-editor dxd-border-secondary dxd-back-primary2" data-bind="dxTextArea: { value: value, spellcheck: false, isValid: isValid }, dxValidator: $data.validator || { validationRules: jsonStringValidationRules || [] }"></div> <!-- /ko --> <!-- ko if: aceAvailable --> <div class="dx-texteditor dx-editor-outlined dxrd-jsonwizard-jsonstring-editor dxd-wizard-jsoneditor dxd-border-secondary dxd-back-primary2" data-bind="dxAceEditor: { value: value, editorContainer: editorContainer, options: aceOptions, additionalOptions: additionalOptions }, css: { \'dx-invalid\' : !value() || !isValid() }"></div> <!-- /ko --> <div class="dxd-upload-file"> <div class="dxd-back-primary2"></div> <div data-bind="dxButtonWithTemplate: { onClick: uploadFile, hint: $data.getUploadTitle(), icon: \'dxrd-svg-wizard-Download\' }"></div> </div>',
    'dxrd-wizard-add-queries-page': '<div class="dxrd-wizard-page dxrd-wizard-add-queries-page dxrd-wizard-page-treelist-accordion-style"> <div data-bind="treeListSearchPanel: {controllers: ko.unwrap(_fieldListModel).treeListController}"></div> <div class="dxrd-wizard-dataMember dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: _scrollViewHeight }"> <div data-bind="treelist: _fieldListModel" style="width:100%; height: 100%;"></div> </div> <!-- ko ifnot: $data.disableCustomSql --> <!-- ko template: { name: \'dxqb-popup-selectStatment\', data: _popupSelectStatement } --> <!-- /ko --> <!-- /ko --> <!-- ko template: { name: \'dxrd-querybuilder-popup\', data: _popupQueryBuilder } --> <!-- /ko --> <div class="dxrd-wizard-load-panel dxd-text-primary" data-bind="dxLoadPanel: _loadPanelViewModel($element)"> </div> </div>',
    'dxd-custom-query-treelisitem': '<div data-bind="visible: visible"> <div class="dx-background-inheritor dxd-back-highlighted dxd-state-selected"> <div class="dx-treelist-item dx-fontsize-reestablished dxd-list-item-back-color" data-bind=" styleunit: padding, css: { \'dx-treelist-item-selected dxd-state-selected dxd-back-secondary\': isSelected }"> <div class="dx-treelist-collapsedbutton" data-bind="css: nodeImageClass"></div> <div class="dx-treelist-caption"> <!-- ko if: actions && actions.length > 0 --> <div class="dx-treelist-action-container" data-bind="visible: isSelected() || isHovered()"> <!-- ko foreach: actions --> <!-- ko if: $data.templateName --> <!-- ko template: templateName  --> <!-- /ko --> <!-- /ko --> <!-- ko if: !$data.templateName --> <div class="dx-treelist-action" data-bind="dxButtonWithTemplate: { onClick: function() { clickAction($parent); }, icon: $data.imageTemplateName, iconClass: $data.imageClassName, disabled: $data.disabled && $data.disabled() }, attr: { title: text }"></div> <!-- /ko --> <!-- /ko --> </div> <!-- /ko  --> <div class="dx-treelist-selectedcontent" data-bind="click: toggleSelected"> <div class="dx-treelist-text-wrapper"> <div class="dx-add-queries-page-checkbox" data-bind="dxCheckBox: { value: data.checked }, click: function(treeNode, e) { treeNode.data.toggleChecked(); e.stopPropagation(); return true; }"></div> <div class="dx-treelist-text dx-treelist-text-with-checkbox"> <div class="dx-queryname-textbox" data-bind="dxTextBox: { value: queryName }"></div> </div> </div> </div> </div> </div> </div> </div>',
    'dxrd-configure-query-parameters-page': '<div class="dxrd-wizard-page dxrd-configure-query-parameters-page dxrd-wizard-page-treelist-accordion-style"> <div class="dxrd-wizard-dataMember dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', height: _scrollViewHeight }"> <!-- ko if: !!$data._fieldListModel() --> <div data-bind="treelist: _fieldListModel" style="width:100%; height: 100%;"></div> <!-- /ko --> </div> </div>',
    'dxrd-wizard-configure-relations-page': '<div class="dxrd-wizard-page dxrd-wizard-configure-relations-page"> <!-- ko if: $data._relationsEditor() --> <!-- ko template: { name: \'dxrd-masterDetail-editor-complete-wizard\', data: $data._relationsEditor }--> <!-- /ko --> <!-- /ko --> </div>',
    'dxrd-masterDetail-editor-complete-wizard': '<div class="dx-filtereditor dxrd-masterDetail-editor-complete-wizard dxd-border-secondary"> <!-- ko if: $data --> <div class="dx-filtereditor-tree dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', direction: \'both\' }" style="cursor: default"> <!-- ko foreach: masterQueries --> <div class="criteria-operator-group"> <div class="criteria-operator-group-item"> <div class="criteria-operator-text dxd-filter-editor-text-color criteria-operator-item-group dxd-filter-editor-group-back-color stylized" data-bind="text: queryName"></div> <div data-bind="service: { name: \'createRelation\' }"></div> </div> <div class="criteria-operator-content"> <!-- ko template: { name: \'dx-masterDetail-editor-relation\', foreach: relations }--> <!-- /ko --> </div> </div> <!-- /ko --> </div> <div class="dx-selectbox-popup-wrapper dx-dropdownlist-popup-wrapper dx-filtereditor-criteriaoperator-popup dx-dropdowneditor-overlay" data-bind="dxPopupWithAutoHeight: { width: \'170px\', height: \'235px\', focusStateEnabled: false, position: $root.rtl ? { my: \'right top\', at: \'right bottom\', of: popupService.target, collision: \'flipfit\' } : { my: \'left top\', at: \'left bottom\', of: popupService.target, collision: \'flipfit\' }, wrapperAttr: { class: \'dx-selectbox-popup-wrapper dx-dropdownlist-popup-wrapper dx-filtereditor-criteriaoperator-popup dx-dropdowneditor-overlay\' }, container: $root.getPopupContainer($element), target: popupService.target, showTitle: false, showCloseButton: false, animation: {}, closeOnOutsideClick: true, shading: false, visible: popupService.visible }"> <!-- ko with: popupService--> <!-- ko with: data --> <!-- ko template: template--> <!-- /ko --> <!-- /ko --> <!-- /ko --> </div> <!-- /ko --> </div>',
    'dxqb-popup-selectStatment': '<div data-bind="dxPopup: { animation: { show: { type: \'fade\', from: 0, to: 1, duration: 700 }, hide: { type: \'fade\', from: 1, to: 0, duration: 700 } }, wrapperAttr: { class: \'dxqb-preview\' }, visible: isVisible, title: title(), showTitle: true, resizeEnabled: true, shading: true, shadingColor: \'transparent\', fullScreen: false, width: 800, height: 544, container: closest($element, \'.dxrd-wizard\'), position: { of: closest($element, \'.dx-designer-viewport\') }, onHidden: function() { $data.data(null) }, focusStateEnabled: false }"> <div class="dxqb-preview-popup-content"> <div class="dxqb-show-query-string-content dx-widget"> <!-- ko if: !aceAvailable --> <div class="dxrd-show-query-string-editor" data-bind="dxTextArea: { value: data, valueChangeEvent: \'keyup\', disabled: false }"></div> <!-- /ko --> <!-- ko if: aceAvailable --> <div class="dxrd-show-query-string-editor"> <div class="dxrd-show-query-string-editor-content"> <div class="dx-sql_editor dxd-back-primary2" data-bind="dxAceEditor: { value: data, additionalOptions: additionalOptions, options: aceOptions }"></div> </div> </div> <!-- /ko --> </div> </div> <div class="dxqb-preview-popup-buttons dxd-border-secondary"> <div data-bind="dxButton: { text: okButtonText(), onClick: okButtonHandler }" class="dxqb-preview-popup-button"></div> </div> </div>',
    'dxrd-treelist-with-checkbox': '<div data-bind="visible: visible"> <!-- ko if: hasContent --> <!-- ko template: "dx-treelist-accordion-item-with-checkbox" --> <!-- /ko --> <!-- /ko --> <!-- ko ifnot: hasContent --> <!-- ko template: "dx-treelist-header-item-with-checkbox" --> <!-- /ko --> <!-- /ko --> </div>',
    'dx-treelist-accordion-item-with-checkbox': '<div data-bind="dxdAccordionExt: { collapsed: collapsed, lazyContentRendering: true }"> <!-- ko template: "dx-treelist-header-item-with-checkbox" --> <!-- /ko --> <div class="dx-fieldset dx-accordion-content dxd-back-primary"> <!-- ko with: data --> <!-- ko template: { name: contenttemplate } --> <!-- /ko --> <!-- /ko --> </div> </div>',
    'dx-treelist-header-item-with-checkbox': '<div class="dx-background-inheritor dxd-back-highlighted dxd-state-selected"> <div data-bind="event: { dblclick: function() { $data.dblClickHandler ? $data.dblClickHandler($data) : $data.toggleCollapsed() }, mouseenter: mouseenter, mouseleave: mouseleave }, attr: { class: \'dx-treelist-item dx-fontsize-reestablished dxd-list-item-back-color \' + ($data.hasItems ? \'dx-treelist-list-item-content \' : \'dx-treelist-field-item-content \') + ($data.isSelected() ? \'dx-treelist-item-selected dxd-state-selected dxd-back-secondary\' : \'\') }, styleunit: padding"> <!-- ko ifnot: $data.hasItems--> <!-- ko if: $data.showIcon --> <div class="dx-treelist-image" data-bind="css: $data.imageClassName, template: {name: $data.imageTemplateName, if: !!ko.unwrap($data.imageTemplateName)}, attr: { title: text }"> </div> <!-- /ko --> <!-- ko ifnot: $data.showIcon --> <div class="dx-treelist-collapsedbutton" data-bind="css: nodeImageClass"></div> <!-- /ko --> <!-- /ko --> <!-- ko if: $data.hasItems --> <div class="dx-treelist-collapsedbutton" data-bind="css: nodeImageClass, visible: hasItems, template: \'dxrd-svg-collapsed\', click: toggleCollapsed"></div> <!-- /ko --> <div class="dx-treelist-caption"> <!-- ko if: actions && actions.length > 0 --> <div class="dx-treelist-action-container" data-bind="visible: isSelected() || isHovered()"> <!-- ko foreach: actions --> <!-- ko if: $data.templateName --> <!-- ko template: templateName  --> <!-- /ko --> <!-- /ko --> <!-- ko if: !$data.templateName --> <div class="dx-treelist-action" data-bind="dxButtonWithTemplate: { onClick: function() { clickAction($parent); }, icon: $data.imageTemplateName, iconClass: $data.imageClassName, disabled: $data.disabled && $data.disabled() }, attr: { title: text }"></div> <!-- /ko --> <!-- /ko --> </div> <!-- /ko  --> <div class="dx-treelist-selectedcontent" data-bind="event: { dblclick: function() { $data.dblClickHandler && $data.dblClickHandler($data); } }, click: toggleSelected,  draggable: isDraggable ? dragDropHandler : null, css: { \'dxrd-disabled\': $data.data.disabled && $data.data.disabled() }"> <div class="dx-treelist-text-wrapper"> <div class="dx-add-queries-page-checkbox" data-bind="dxCheckBox: { value: data.checked }, click: function(treeNode, e) { treeNode.data.toggleChecked(); e.stopPropagation(); return true; }"></div> <!--ko if: treeListController.searchEnabled --> <div class="dx-treelist-text dx-highlighted-search-text dx-treelist-text-with-checkbox" data-bind="searchHighlighting: { text: text, textToSearch: treeListController.textToSearch, searchOptions: treeListController.searchOptions }, attr: { title: text }"></div> <!-- /ko  --> <!--ko ifnot: treeListController.searchEnabled --> <div class="dx-treelist-text dx-treelist-text-with-checkbox" data-bind="text: text, attr: { title: text }"></div> <!-- /ko  --> </div> </div> </div> </div></div>',
    'dx-treelist-action-with-popover': '<div class="dx-treelist-action-with-popover" style="display: inline-block"> <div class="dx-treelist-action" data-bind="dxButtonWithTemplate: { onClick: function() { clickAction($parent); }, icon: $data.imageTemplateName, iconClass: $data.imageClassName , disabled: $data.disabled && $data.disabled() }, attr: { title: text }"></div> <div data-bind="dxPopover: { width: 200, position: !$root.rtl ? \'left\' : \'right\', visible: $parent.data.popoverVisible, target: \'.dx-treelist-action-with-popover\', container: $root.getPopupContainer($element)}"> <div data-bind="dxList: { dataSource: $parent.data.popoverListItems(), onItemClick: $parent.data.itemClickAction }"> <div data-options="dxTemplate : { name: \'item\' }"> <div class="dx-text-content" data-bind="text: name, attr: { title: name }"></div> </div> </div> </div> </div>',
    'dx-treelist-accordion-contenttemplate-custom-with-actions': '<div data-bind="dxPropertyGrid: { target: $parent.data.dataSourceParameter, level: $parent.data.editor.level + 1 }"></div>',
    'dxrd-page-objectdatasource-datamembers': '<div class="dx-objectdatasource-datamembers-page"> <div data-bind="dxList: { dataSource: _chooseObjectDataMember.dataMembers, selectedItems: _chooseObjectDataMember.selectedDataMembers, selectionMode: \'single\', activeStateEnabled: false, focusStateEnabled: false, searchExpr: \'displayName\', searchEnabled: true, noDataText: $dx._static.noDataText(), searchEditorOptions: { placeholder: $root.dx._static.searchPlaceholder() } }"> <div data-options="dxTemplate : { name: \'item\' }"> <div data-bind="text: $data.displayName"></div> </div> </div> </div>',
    'dxrd-page-objectdatasource-types': '<div class="dx-objectdatasource-types-page"> <div class="dxd-border-primary" data-bind="treeListSearchPanel: {controllers: _chooseObjectType.availableTypesTreelistModel.treeListController}"></div> <div data-bind="dxScrollView: { showScrollbar: \'onHover\', height: _chooseObjectType._scrollViewHeight}"> <div data-bind="treelist: _chooseObjectType.availableTypesTreelistModel"></div> <!-- ko if: _chooseObjectType.types && !_chooseObjectType.types().length --> <div class="dxa-no-data-message" data-bind="text: $root.dx._static.noDataText()"></div> <!-- /ko--> </div> </div>',
    'dxrd-page-objectsource': '<div class="dxrd-wizard-page dx-objectsource-page dx-frameless-style" style="position: absolute; top: 45px; left: 45px; right: 45px; bottom: 45px; margin:0"> <!-- ko foreach: _sections--> <div class="dx-border-inheritor dxd-border-accented"> <div class="dxrd-report-page-tile dxd-border-secondary" data-bind="style: position, css: { \'dxrd-disabled\': $data.disabled() }"> <div class="dxrd-report-page-tile-title" data-bind="text: $parent.showDescription($index(), description), attr: { title: $parent.showDescription($index(), description) }"></div> <div class="dxrd-report-page-tile-content dx-default-border-style dxd-border-secondary"> <!-- ko if: !$data.disabled() --> <!-- ko template: { name: template, data: data } --> <!-- /ko --> <!-- /ko --> <!-- ko if: $data.disabled() --> <div class="dxrd-wizard-page dxrd-wizard-disabled-content" data-bind="text: disabledText"></div> <!-- /ko --> </div> </div> </div> <!-- /ko --> </div>',
    'dx-objectdatasource-types-section': '<div class="dx-objectdatasource-types-section"> <div data-bind="treeListSearchPanel: {controllers: availableTypesTreelistModel.treeListController}"></div> <div data-bind="dxScrollView: { showScrollbar: \'onHover\', height: _scrollViewHeight}"> <div data-bind="treelist: availableTypesTreelistModel"></div> </div> </div>',
    'dx-objectdatasource-datamembers-section': '<div class="dx-objectdatasource-parameters-datamembers-section"> <div class="dxd-border-primary" data-bind="dxList: { dataSource: dataMembers, selectedItems: selectedDataMembers, selectionMode: \'single\', activeStateEnabled: false, focusStateEnabled: false, searchExpr: \'displayName\', searchEnabled: true, noDataText: $root.dx._static.noDataText(), searchEditorOptions: { placeholder: $root.dx._static.searchPlaceholder() } }"> <div data-options="dxTemplate : { name: \'item\' }"> <div data-bind="text: $data.displayName"></div> </div> </div> </div>',
    'dx-objectdatasource-parameters-grid': '<!-- ko if: !!$data --> <div class="dx-field dxd-back-primary"> <div class="dx-field-label" data-bind="text: $data.displayName, attr: { \'title\': $data.displayName}"></div> </div> <div class="dxrd-properties-wrapper"> <!-- ko foreach: _grids --> <!-- ko template: { name: \'dx-propertieseditor\', data: $data }--> <!-- /ko --> <!-- /ko --> </div> <!-- /ko -->',
    'dx-objectdatasource-expression-popup': '<!-- ko if: $data.value() --> <div data-bind="dxExpressionEditor: getOptions({ options: value, fieldListProvider: value().itemsProvider, displayNameProvider: $root.displayNameProvider && $root.displayNameProvider() })"></div> <!-- /ko -->',
    'dx-objectdatasource-parameters-section': '<div class="dx-objectdatasource-parameters-section"> <div class="dx-fieldset" data-bind="dxScrollView: { showScrollbar: \'onHover\'}"> <!-- ko template: { name: \'dx-objectdatasource-parameters-grid\', data: _ctorParametersObject }--> <!-- /ko --> <!-- ko template: { name: \'dx-objectdatasource-parameters-grid\', data: _dataMemberParametersObject }--> <!-- /ko --> </div> </div>',
    'dx-objectdatasource-configureparameters-page': '<div class="dxrd-report-page-tile-content dx-default-border-style dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\'}"> <!-- ko template: { name: \'dx-objectdatasource-parameters-section\', data: _chooseObjectParameters } --> <!-- /ko  --> </div>',
    'dxrd-page-configure-parameters': '<div class="dxrd-wizard-page"> <div class="dxrd-datasource-parameters" data-bind="dxCollectionEditor: parametersEditorOptions"></div> </div>',
    'dxrd-parameter-collection-item': '<div data-bind="dxdAccordion: { collapsed: collapsed }"> <div class="dxrd-group-header dx-accordion-header dxd-text-primary" style="border-bottom: 0" data-bind="styleunit: { \'marginLeft\' : editor.padding }, css: { \'dxrd-group-header-collapsed dxd-border-primary\': collapsed() }"> <div class="dx-collapsing-image" data-bind="template: \'dxrd-svg-collapsed\', css: { \'dx-image-expanded\': !collapsed() }" style="display:inline-block;"></div> <span class="dxrd-group-header-text dxd-text-primary" data-bind="text: value().name"></span> </div> <div class="dx-accordion-content"> <div data-bind="dxPropertyGrid: { target: value, level: editor.level + 1 }"></div> </div> </div>',
    'dxrd-wizard-datasource-parameters': '<div class="dx-fieldset" style="height:100%"> <div class="dx-collectioneditor" style="height:100%"> <div class="dxrd-datasource-parameters-collection"> <div class="dxrd-datasource-parameters-container dxd-border-secondary" data-bind="dxScrollView: { showScrollbar: \'onHover\', useNative: false, scrollByThumb: true  }"> <!-- ko if: values().length === 0 --> <div class="dx-collectioneditor-empty dxd-empty-area-placeholder-text-color dxd-text-info"> <span class="dxrd-datasource-parameters-empty-text" data-bind="text: getDisplayTextEmptyArray()"></span> </div> <!-- /ko --> <!-- ko if: values().length !== 0 --> <div class="dx-collectioneditor-items" data-bind="foreach: values"> <div class="dx-background-inheritor dxd-back-highlighted dxd-state-selected" data-bind="with: $parent.createCollectionItemWrapper($parents[1], $index, $element)"> <div class="dx-collectioneditor-item-container dx-fontsize-reestablished dxd-list-item-back-color" data-bind="dxclick: $parents[1].select, css: { \'dxd-state-selected dxd-back-secondary\' : $parents[1].selectedIndex() === $index() }"> <div class="dx-collection-item"></div> </div> </div> </div> <!-- /ko --> </div> </div> <div class="dxrd-collectioneditor-wizard-buttons" data-bind="visible: showButtons"> <div class="dxrd-collectioneditor-action" data-bind="dxButton: { onClick: add, text: getDisplayTextButton(\'add\') }, attr: { title: getDisplayTextButton(\'add\') }"></div> <div class="dxrd-collectioneditor-action" data-bind="dxButton: { onClick: remove, disabled: selectedIndex() === null, text: $parent.removeButtonTitle }, attr: { title: $parent.removeButtonTitle }"></div> </div> </div> </div>',
    'dxrd-page-connectionstring': '<div class="dxrd-wizard-page"> <div class="dx-wizard-connections dx-default-border-style dxd-border-secondary"> <div class="dxrd-wizard-list dxd-border-primary" data-bind="dxList: { dataSource: _connectionStrings, onSelectionChanged: function(e) { _selectedConnectionString(e.addedItems) },  selectedItems: _selectedConnectionString.peek(), focusStateEnabled: false, searchEnabled: true, searchExpr: \'description\', editEnabled: true, editConfig: { selectionEnabled: true }, selectionMode: \'single\', activeStateEnabled: false, noDataText: $root.dx._static.noDataText(), searchEditorOptions: { placeholder: $root.dx._static.searchPlaceholder() } }"> <div data-options="dxTemplate : { name: \'item\' }"> <div data-bind="text: $data[\'description\'] || $data[\'name\']"></div> </div> </div> </div> </div>',
    'dxrd-select-control': '<div class="dxrd-create-query-page-query-header"> <div class="dx-editquery-editor" data-bind="text: caption()"></div> <div class="dxd-hyperlink-color dxd-text-accented" data-bind="visible: !runQueryBuilderDisabled, text: $parent.runQueryBuilderBtnText, click: function() { $parent.runQueryBuilder() }"></div> </div> <!-- ko if: !aceAvailable --> <div class="dxrd-wizard-list dxrd-create-query-page-editor dx-default-border-style dxd-border-secondary dx-editquery-editor" data-bind="dxTextArea: { value: sqlString, valueChangeEvent: \'keyup input blur\', readOnly: disableCustomSql() }"></div> <!-- /ko --> <!-- ko if: aceAvailable --> <div class="dxrd-create-query-page-editor dxrd-create-query-page-editor-border dxd-border-secondary dx-editquery-editor"> <div class="dxrd-create-query-page-editor-content"> <div class="dx-sql_editor dxd-back-primary2" data-bind="dxAceEditor: { value: sqlString, additionalOptions: additionalOptions, options: aceOptions }, css: { \'dx-disabled-ace\': disableCustomSql() }"></div> </div> </div> <!-- /ko -->',
    'dxrd-procedures-control': '<div style="margin-top: 20px" class="dx-editquery-editor" data-bind="text: caption()"></div> <div class="dx-editquery-editor dx-default-border-style dxd-border-secondary"> <div class="dxrd-wizard-list dxrd-create-query-page-editor" data-bind="dxList: { dataSource: storedProcedures, searchEnabled: true, searchExpr: \'name\', onContentReady: scrollActiveItem, selectedItems: selectedProcedure, editEnabled: true, editConfig: { selectionEnabled: true }, selectionMode: \'single\', activeStateEnabled: false, noDataText: $root.dx._static.noDataText() }"> <div data-options="dxTemplate : { name: \'item\' }"> <div data-bind="text: $parent.generateStoredProcedureDisplayName($data)"></div> </div> </div> </div>',
    'dxrd-wizard-create-query-page': '<div class="dxrd-wizard-page dxrd-wizard-create-query-page"> <div class="dxrd-create-query-page-content"> <div data-bind="text: queryNameCaption()"></div> <div class="dx-editquery-editor" data-bind="dxTextBox: { value: queryName, placeholder: $data.placeholder() }"></div> <div class="dxrd-radio-nowrap-ellipsis" data-bind="dxRadioGroup: { value: selectedQueryType, layout: \'horizontal\', items: queryTypeItems }"> <div data-options="dxTemplate : { name: \'item\' }"> <div class="dxrd-radio-nowrap-ellipsis-text" data-bind="text: $parent.localizeQueryType($data), attr: { \'title\': $parent.localizeQueryType($data) }"></div> </div> </div> <!-- ko template: { name: queryControl().template, data: queryControl() } --> <!-- /ko --> </div> <!-- ko template: { name: \'dxrd-querybuilder-popup\', data: popupQueryBuilder } --> <!-- /ko --> </div>',
    'dxrd-querybuilder-popup': '<div data-bind="dxPopup: popupViewModel($element)"> <!-- ko if: qbOptions --> <!-- ko if: isVisible --> <div class="dxrd-querybuilder-popup-content"> <div style="height:100%;" data-bind="dxQueryBuilder: qbOptions"></div> </div> <!-- /ko --> <div class="dxrd-querybuilder-popup-buttons dxd-border-secondary"> <div data-bind="dxButton: { text: getDisplayText(\'previewResults\'), onClick: previewHandler, disabled: okButtonDisabled }" class="dxrd-querybuilder-popup-button-left"></div> <div data-bind="dxButton: { text: getDisplayText(\'cancel\'), onClick: cancelHandler }" class="dxrd-querybuilder-popup-button"></div> <div data-bind="dxButton: { text: getDisplayText(\'ok\'), onClick: okHandler, disabled: okButtonDisabled }" class="dxrd-querybuilder-popup-button"></div> </div> <div class="dxrd-wizard-load-panel dxd-text-primary" data-bind="dxLoadPanel:{ animation: { show: { type: \'fade\', from: 0, to: 1, duration: 700 }, hide: { type: \'fade\', from: 1, to: 0, duration: 700 } }, deferRendering: false, message: getDisplayText(\'loading\'), visible: showLoadIndicator, shading: true, shadingColor: \'transparent\'}"> </div> <!-- /ko --> </div>',
    'dxrd-querybuilder': '<div class="dx-designer dx-querybuilder" data-bind="template: \'dxrd-designer\'"> </div>',
    'dx-wizard-menu-box-editorswitch': '<div class="dxrd-editormenu-box dxd-property-grid-menu-box-color dxd-back-highlighted" data-bind="css: { \'dxd-state-active\': $data.isExpression() }, dxButtonWithTemplate: { onClick: switchEditors, icon: \'dxrd-svg-wizard-expressions\' }"> </div>',
    'dx-wizard-headerNew': '<div class="dxrd-wizard-header-custom"> <!-- ko with: _currentPage --> <div class="dxrd-span-title" data-bind="text: $data.title || $parent.title"></div> <div class="dxrd-span-description" data-bind="text: description, attr: { title: description }"></div> <!-- /ko --> </div>',
    'dx-wizard-newlayout': '<div class="dxrd-wizard dx-editors dxd-text-primary" data-bind="dxPopup: { visible: isVisible, wrapperAttr: { class: \'dxrd-wizard dx-editors dxd-text-primary\' }, title: isVisible() ? title : \'\', showTitle: true, fullScreen: false, width: width, height: height, container: _container($element), titleTemplate: _titleTemplate, position: _wizardPopupPosition($element) }, cssArray: [ $data._extendCssClass, { \'dx-rtl\': $root.rtl, \'dx-ltr\': !$root.rtl }]"> <div class="dxrd-wizard-content"> <!-- ko with: _currentPage --> <div style="height: 100%" data-bind="template: { name: template, data: page } "></div> <!-- /ko --> <div class="dxrd-wizard-load-panel dxd-text-primary" data-bind="dxLoadPanel: _loadPanelViewModel($element)"></div> </div> <div class="dxrd-wizard-navigation"> <div data-bind="dxButton: cancelButton" class="dxrd-wizard-btn left"></div> <div data-bind="dxButton: finishButton" class="dxrd-wizard-btn right"></div> <div data-bind="dxButton: nextButton" class="dxrd-wizard-btn right"></div> <div data-bind="dxButton: previousButton" class="dxrd-wizard-btn right"></div> </div> </div>',
});


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(28);
__webpack_require__(153);
__webpack_require__(164);
__webpack_require__(91);
__webpack_require__(60);
__webpack_require__(62);
__webpack_require__(94);
__webpack_require__(161);
__webpack_require__(57);
__webpack_require__(163);
__webpack_require__(58);
__webpack_require__(97);
__webpack_require__(93);
__webpack_require__(159);
__webpack_require__(59);
__webpack_require__(162);
__export(__webpack_require__(28));
__export(__webpack_require__(153));
__export(__webpack_require__(164));
__export(__webpack_require__(91));
__export(__webpack_require__(60));
__export(__webpack_require__(62));
__export(__webpack_require__(94));
__export(__webpack_require__(161));
__export(__webpack_require__(57));
__export(__webpack_require__(163));
__export(__webpack_require__(58));
__export(__webpack_require__(97));
__export(__webpack_require__(93));
__export(__webpack_require__(159));
__export(__webpack_require__(59));
__export(__webpack_require__(162));


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(154);
__webpack_require__(26);
__webpack_require__(61);
__webpack_require__(160);
__webpack_require__(46);
__webpack_require__(96);
__webpack_require__(95);
__webpack_require__(92);
__export(__webpack_require__(154));
__export(__webpack_require__(26));
__export(__webpack_require__(61));
__export(__webpack_require__(160));
__export(__webpack_require__(46));
__export(__webpack_require__(96));
__export(__webpack_require__(95));
__export(__webpack_require__(92));


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(165);
__webpack_require__(173);
__webpack_require__(207);
__webpack_require__(166);
__export(__webpack_require__(165));
__export(__webpack_require__(173));
__export(__webpack_require__(166));


/***/ }),
/* 205 */
/***/ (function(module, exports) {

module.exports = DevExpress.localization;

/***/ }),
/* 206 */
/***/ (function(module, exports) {

module.exports = DevExpress.Analytics.Localization;

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ })
/******/ ]);